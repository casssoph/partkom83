
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	лКлючАлгоритма = "ОбщаяФорма_МодульФормы_ПриСозданииНаСервере";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////	
	
	ОбъектСсылка = Параметры.ОбъектСсылка;	
	Если ЗначениеЗаполнено(ОбъектСсылка) тогда
		Попытка		
			ОбъектМетаданные =  ОбъектСсылка.Метаданные();
			ИмяМетаданных =ОбъектМетаданные.ПолноеИмя();
			ПВХ  = ПредопределенноеЗначение("ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов."+СтрЗаменить(ИмяМетаданных,".","_"));
			СоздатьЭлемементыФормы(ПВХ,ОбъектМетаданные)
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере 
Процедура СоздатьЭлемементыФормы(ПВХ,ОбъектМетаданные)
	лКлючАлгоритма = "ОбщаяФорма_МодульФормы_СоздатьЭлемементыФормы";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////	
	
	
	
	
	Если не ЗначениеЗаполнено(ПВХ.ОбщедоступныеРеквизиты) тогда
		возврат
	КонецЕсли;	
	
	СписокРеквизитов.ЗагрузитьЗначения(СтрРазделить(ПВХ.ОбщедоступныеРеквизиты,","));
	
	СоздатьРекцизитыФормы(ОбъектМетаданные);
	
	Для Каждого Реквизит из СписокРеквизитов цикл 
		ИмяРеквизита = ИмяРеквизита(Реквизит);
		Если ЭтоТабличнаяЧасть(ОбъектМетаданные,ИмяРеквизита) тогда 
			
			ПолеТаблицы = Элементы.Добавить(
			ИмяРеквизита,   
			Тип("ТаблицаФормы"),
			ЭтаФорма);	
			
			ПолеТаблицы.ПутьКДанным = ИмяРеквизита;
			
			ТаблицаДокумента  = ОбъектСсылка[ИмяРеквизита].Выгрузить() ;
			
			ЗначениеВРеквизитФормы(ТаблицаДокумента,ИмяРеквизита);
			
			Для Каждого Колонка из ОбъектМетаданные.ТабличныеЧасти[ИмяРеквизита].Реквизиты цикл 
				НоваяКолонка = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ПолеТаблицы);       
				НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
				НоваяКолонка.ПутьКДанным = ИмяРеквизита+"."+Колонка.Имя;
				НоваяКолонка.Заголовок = Колонка.Имя;	
				НоваяКолонка.Видимость = Истина;				
			КонецЦикла;	
			
			
			
		Иначе 	
			
			ПолеВвода = Элементы.Добавить(
			Реквизит,   
			Тип("ПолеФормы"),
			ЭтаФорма);	      		
			ПолеВвода.Заголовок = Реквизит;
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			
			ПолеВвода.ПутьКДанным = ИмяРеквизита;	
			
			Этаформа[СокрЛП(Реквизит)]  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСсылка,ИмяРеквизита);
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	
КонецПроцедуры	



&НаСервере 
Процедура СоздатьРекцизитыФормы(ОбъектМетаданные)
	лКлючАлгоритма = "ОбщаяФорма_МодульФормы_СоздатьРекцизитыФормы";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////	
	
	
	
	
	// Массив для новых реквизитов
	ДобавляемыеРеквизиты	= Новый Массив;
	
	Для Каждого Реквизит из СписокРеквизитов цикл 
		
		ИмяРеквизита = ИмяРеквизита(Реквизит);
		
		Если ЭтоТабличнаяЧасть(ОбъектМетаданные,ИмяРеквизита) тогда 
			Если не ДобавляемыеРеквизиты.Найти(ИмяРеквизита) = Неопределено	тогда 
				Продолжить;
			КонецЕсли;
			
			МассивТипов = новый Массив;
			МассивТипов.Добавить(Тип("ТаблицаЗначений"));
			
			
			Для Каждого Колонка из ОбъектМетаданные.ТабличныеЧасти[ИмяРеквизита].Реквизиты цикл 
				ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя,
				Колонка.Тип,
				ИмяРеквизита));			
			КонецЦикла;	
			
			
		иначе 
			МассивТипов = новый Массив;
			МассивТипов.Добавить(ТипЗнч(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСсылка,ИмяРеквизита)));
		КонецЕсли;
		
		НовыйРеквизит  =  Новый РеквизитФормы(ИмяРеквизита,	Новый ОписаниеТипов(МассивТипов),,ИмяРеквизита);
		
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);	
	КонецЦикла;	
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Функция ЭтоТабличнаяЧасть(ОбъектМетаданные,ИмяРеквизита)
	Возврат Не ОбъектМетаданные.ТабличныеЧасти.Найти(ИмяРеквизита) = Неопределено ;		
КонецФункции	

&НаСервере
Функция ИмяРеквизита(ЭлеменСписка)
	//ЕСли Не СтрНайти(ЭлеменСписка.Значение,".") = 0 тогда 
	//	ИмяРеквизита = Сред(ЭлеменСписка.Значение,СтрНайти(ЭлеменСписка.Значение,"."));
	//Иначе 
	ИмяРеквизита =ЭлеменСписка.Значение; 
	//КонецЕсли;
	
	Возврат ИмяРеквизита;	
КонецФункции	



&НаСервере
Процедура СохранитьИзмененияНаСервере(СтруктураРеквизитов)
	лКлючАлгоритма = "ОбщаяФорма_МодульФормы_СохранитьИзмененияНаСервере";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////	
	
	
	Если СтруктураРеквизитов.Количество() тогда 	
		УстановитьПривилегированныйРежим(Истина);
		
		Объект = ОбъектСсылка.ПолучитьОбъект();
		Для каждого РеквизитСтруктуры из СтруктураРеквизитов цикл
			Если ТипЗнч(РеквизитСтруктуры.Значение) = тип("ДанныеФормыКоллекция") тогда 
				Объект[РеквизитСтруктуры.Ключ].Загрузить(ДанныеФормыВЗначение(РеквизитСтруктуры.Значение,Тип("ТаблицаЗначений")));
			иначе 
				Объект[РеквизитСтруктуры.Ключ] = РеквизитСтруктуры.Значение;
			КонецЕсли;	
		КонецЦикла;	
		ЗаполнитьЗначенияСвойств(Объект,СтруктураРеквизитов);
		Объект.ДополнительныеСвойства.Вставить("СнятьОграничениеПоДатеЗапрета",Истина);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект,Истина);
	Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	СтруктураРеквизитов = новый Структура;
	Для каждого ЭлементСписка из СписокРеквизитов цикл
		СтруктураРеквизитов.Вставить(СокрЛП(ЭлементСписка), Этаформа[СокрЛП(ЭлементСписка)]); 
	КонецЦикла;
	
	СохранитьИзмененияНаСервере(СтруктураРеквизитов);
	ЭтаФорма.Закрыть();
КонецПроцедуры
