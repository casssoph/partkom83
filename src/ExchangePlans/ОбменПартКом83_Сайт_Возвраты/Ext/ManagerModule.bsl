Функция ПолучитьМетаданные()
	Возврат Метаданные.ПланыОбмена.ОбменПартКом83_Сайт_Возвраты;
КонецФункции

Функция URIПространстваИмен() 
	Возврат "http://ws-02.part-kom.ru/partkom83/hs/SiteExchange/XMLSchema";	
КонецФункции

Функция ТипПоТипуСообщения(ТипСообщения) Экспорт
	
	Результат = Неопределено;
	лИмяТипа = ИмяТипаПоТипуСообщения(ТипСообщения);
	Если НЕ ПустаяСтрока(лИмяТипа) тогда
		Результат = ФабрикаXDTO.Тип(URIПространстваИмен(), лИмяТипа);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяТипаПоТипуСообщения(ТипСообщения) 
	Возврат	"ВозвратыОтПокупателя."+ТипСообщения.Метаданные().ЗначенияПеречисления.Получить(Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.Индекс(ТипСообщения)).Имя;
КонецФункции

Функция Узел(Входящий = Истина) Экспорт
	
	лКлючАлгоритма = "ПланОбмена_ОбменПартКом83_ОбменПартКом83_Сайт_Возвраты_МодульМенеджера_Узел";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ОбменПартКом83_Сайт_Возвраты.Ссылка
	                      |ИЗ
	                      |	ПланОбмена.ОбменПартКом83_Сайт_Возвраты КАК ОбменПартКом83_Сайт_Возвраты
	                      |ГДЕ
	                      |	НЕ ОбменПартКом83_Сайт_Возвраты.ЭтотУзел
	                      |	И (&Входящий
	                      |				И ОбменПартКом83_Сайт_Возвраты.Входящий
	                      |			ИЛИ НЕ &Входящий
	                      |				И ОбменПартКом83_Сайт_Возвраты.Исходящий)");
	Запрос.УстановитьПараметр("Входящий", Входящий);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.ПустаяСсылка());
	
КонецФункции

//Выгрузка

Функция ВыгрузитьСообщениеОбмена_СообщенияПроцессаВозвратаОтПокупателя(вхИдентификаторУзлаОбмена, НомерПринятого, НеСжиматьСообщение = Ложь) Экспорт
	
	лКлючАлгоритма = "ПланОбмена_ОбменПартКом83_Сайт_Возвраты_МодульМенеджера_ВыгрузитьСообщениеОбмена_СообщенияПроцессаВозвратаОтПокупателя";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////

	Отправитель = ЭтотУзел();
	Исходящий = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(ПолучитьМетаданные(), вхИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(Исходящий) тогда
		//Семенов И.П. 04.02.2019 XX-1768(
		ОбменДаннымиКлиентСервер.ЗафиксироватьСообщениеВИсторииОбмена(0,ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.ПустаяСсылка(),"",Истина,Истина,"[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.");
		//)Семенов И.П.
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	
	Входящий = ОбменДаннымиКлиентСервер.ПолучитьВходящийУзелОбмена(ПолучитьМетаданные(), вхИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(Входящий) тогда
		//Семенов И.П. 04.02.2019 XX-1768(
		ОбменДаннымиКлиентСервер.ЗафиксироватьСообщениеВИсторииОбмена(0,ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.ПустаяСсылка(),"",Истина,Истина,"[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.");
		//)Семенов И.П.
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	НомерПринятого = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Входящий, "НомерПринятого");
	
	РегистрироватьВыгрузкуОбъектов = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен 1С-Сайт","Регистрировать выгрузку объектов", Ложь);
	
	ТипОбъекты = ФабрикаXDTO.Тип(URIПространстваИмен(), "Объекты");
	ТипСообщениеОбмена = ФабрикаXDTO.Тип(URIПространстваИмен(), "СообщениеОбмена");
	
	Пустышка = Новый ЗаписьXML;
	Пустышка.УстановитьСтроку("utf-8");
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(Пустышка, Исходящий);
	ЕстьОбъектыОбмена = Ложь;
	//Семенов И.П. 04.02.2019 XX-1768(
	ОбменДаннымиКлиентСервер.НачатьЗаписьВИсториюОбменовПоОбъектам();
	//)Семенов И.П.
	Попытка
		
		СообщениеОбмена = ФабрикаXDTO.Создать(ТипСообщениеОбмена);
		СообщениеОбмена.ПланОбмена = "ОбменПартКом83_Сайт_Возвраты";
		СообщениеОбмена.Отправитель = Отправитель.ИдентификаторУзла;
		СообщениеОбмена.Получатель = вхИдентификаторУзлаОбмена;
		СообщениеОбмена.НомерСообщения = ЗаписьСообщения.НомерСообщения;
		СообщениеОбмена.НомерПринятого = НомерПринятого;
				
		Объекты = ФабрикаXDTO.Создать(ТипОбъекты);
		СписокОбъектов = Объекты.ПолучитьСписок("Объект");
		ОбъектыРегистрации = Новый Массив;
		
		ВыгружаемыеОбъекты = ОбменДаннымиКлиентСервер.ВыбратьПакетИзмененийДляУзлаОбмена(Исходящий, СообщениеОбмена.НомерСообщения, 1000);
		Для Каждого ЭлементСоответствия Из ВыгружаемыеОбъекты цикл
			
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоМетаданным(ЭлементСоответствия.Ключ);
			ВыгруженныеОбъекты = МенеджерОбъекта.ВыгрузитьЭлементы(ЭлементСоответствия.Значение, ПолучитьМетаданные());
			
			Для Каждого ВыгруженныйОбъект Из ВыгруженныеОбъекты цикл
				СписокОбъектов.Добавить(ВыгруженныйОбъект);
			КонецЦикла;
			
			Если РегистрироватьВыгрузкуОбъектов Тогда
				ДобавитьЗарегистрированныеОбъекты(ОбъектыРегистрации, ЭлементСоответствия.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если РегистрироватьВыгрузкуОбъектов Тогда
			DataExchangeModule.ОтметитьОтправкуОбъектов(ОбъектыРегистрации, Перечисления.ВидыОбменов.Обмен1С_Сайт_ВозвратыОтПокупателя, ЗаписьСообщения.НомерСообщения);
		КонецЕсли;
		
		ЕстьОбъектыОбмена = СписокОбъектов.Количество() > 0;
		
		СообщениеОбмена.Объекты = Объекты;
		ЗаписьСообщения.ЗакончитьЗапись();
		
	Исключение
		ЗаписьСообщения.ПрерватьЗапись();
		//Семенов И.П. 04.02.2019 XX-1768(
		ОбменДаннымиКлиентСервер.ЗафиксироватьСообщениеВИсторииОбмена(ЗаписьСообщения.НомерСообщения,Исходящий,"",Истина,Истина,ОписаниеОшибки());
		//)Семенов И.П.
		ВызватьИсключение ;
	КонецПопытки;
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("utf-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьХМЛ, СообщениеОбмена);
	
	НесжатоеСообщение = ЗаписьХМЛ.Закрыть();
	УпакованноеСообщение = ОбщегоНазначенияВызовСервера.ЗапаковатьСообщение(НесжатоеСообщение);
	Если ЕстьОбъектыОбмена Тогда
		ОбменДаннымиВызовСервера.ЗарегистрироватьСообщениеВИсторииОбменаССайтом(ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.ЭтотУзел().ИдентификаторУзла, вхИдентификаторУзлаОбмена, УпакованноеСообщение, НомерПринятого); 
	КонецЕсли;
	
	//Семенов И.П. 04.02.2019 XX-1768(
	ОбменДаннымиКлиентСервер.ЗафиксироватьСообщениеВИсторииОбмена(СообщениеОбмена.НомерСообщения,Исходящий,НесжатоеСообщение,Истина);
	//)Семенов И.П.
	
	Возврат ?(НеСжиматьСообщение, НесжатоеСообщение, УпакованноеСообщение);

	
КонецФункции

Процедура ДобавитьЗарегистрированныеОбъекты(Массив, ТаблицаОбъектов)
	
	Если ТаблицаОбъектов.Количество() > 0 И ТаблицаОбъектов.Колонки.Найти("Ссылка") <> Неопределено Тогда
		Для Каждого Строка Из ТаблицаОбъектов Цикл
			Массив.Добавить(Строка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Загрузка

Процедура ЗагрузитьСообщениеОбмена() Экспорт
	ОбменССайтомСервер.ПолучитьДанныеССайта(ЭтотУзел(),"ОбменПартКом83_Сайт_Возвраты");	
КонецПроцедуры



