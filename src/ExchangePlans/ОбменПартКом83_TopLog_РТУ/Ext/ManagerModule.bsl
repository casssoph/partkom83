
Функция ПолучитьМетаданные() Экспорт	
	Возврат Метаданные.ПланыОбмена.ОбменПартКом83_TopLog_РТУ;
КонецФункции

Функция URIПространстваИмен() Экспорт 
	Возврат ПланыОбмена.ОбменПартКом83_TopLog.URIПространстваИмен();
КонецФункции

Функция ВыгрузитьСообщениеОбмена(вхИдентификаторУзлаОбмена, вхНомерПринятого) Экспорт

	лОтправитель = ЭтотУзел();
	лИсходящий = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(ПолучитьМетаданные(), вхИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(лИсходящий) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	
	лВходящий = ОбменДаннымиКлиентСервер.ПолучитьВходящийУзелОбмена(ПолучитьМетаданные(), вхИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(лВходящий) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	лНомерПринятого = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(лВходящий, "НомерПринятого");
	
	лНомерОтправленного = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(лИсходящий, "НомерОтправленного");		
	Если вхНомерПринятого > лНомерОтправленного Тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильное значение элемента ""НомерПринятого"": сообщение с таким номером не отправлялось.";
	КонецЕсли;
	
	// фиксируем номер принятого
	ПланыОбмена.УдалитьРегистрациюИзменений(лИсходящий, вхНомерПринятого);
	// возвращаем сообщение обмена
	
	//Перерегистрируем объекты у которых номер сообщения не NULL. Если их регистрация не затерлась выше, значит до ТопЛога данные объекты не доходили и у них нужно сбросить номер сообщения
	ПланыОбмена.ОбменПартКом83_TopLog.ПеререгистрироватьОбъектыВОбменеТопЛог(лИсходящий);
	
	лТипОбъекты = ФабрикаXDTO.Тип(URIПространстваИмен(), "Объекты");
	лТипСообщениеОбмена = ФабрикаXDTO.Тип(URIПространстваИмен(), "СообщениеОбмена");
	
	лПустышка = Новый ЗаписьXML;
	лПустышка.УстановитьСтроку("utf-8");
	лЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	лЗаписьСообщения.НачатьЗапись(лПустышка, лИсходящий);
	Попытка
		
		лСообщениеОбмена = ФабрикаXDTO.Создать(лТипСообщениеОбмена);
		лСообщениеОбмена.ПланОбмена = "ОбменПартКом83_TopLog_РТУ";
		лСообщениеОбмена.Отправитель = лОтправитель.ИдентификаторУзла;
		лСообщениеОбмена.Получатель = вхИдентификаторУзлаОбмена;
		лСообщениеОбмена.НомерСообщения = лЗаписьСообщения.НомерСообщения;
		лСообщениеОбмена.НомерПринятого = лНомерПринятого;
		
		лОбъекты = ФабрикаXDTO.Создать(лТипОбъекты);
		лСписокОбъектов = лОбъекты.ПолучитьСписок("Объект");
		
		Если ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() Тогда 
			КоличествоВыбираемыхОбъектов = Справочники.НастройкиРеквизитовДляОбменов.КоличествоВыбираемыхОбъектовТопЛог.ЧислоДляРабочейБазы;
		Иначе
			КоличествоВыбираемыхОбъектов = Справочники.НастройкиРеквизитовДляОбменов.КоличествоВыбираемыхОбъектовТопЛог.ЧислоДляТестовойБазы;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(КоличествоВыбираемыхОбъектов) Тогда 
			КоличествоВыбираемыхОбъектов = 1000;
		КонецЕсли;
		
		лВыгружаемыеОбъекты = ОбменДаннымиКлиентСервер.ВыбратьПакетИзмененийДляУзлаОбменаНовое(лИсходящий, лСообщениеОбмена.НомерСообщения, КоличествоВыбираемыхОбъектов);
		Для Каждого лЭлементСоответствия Из лВыгружаемыеОбъекты цикл
			лМенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоМетаданным(лЭлементСоответствия.Ключ);
			лВыгруженныеОбъекты = лМенеджерОбъекта.ВыгрузитьЭлементы(лЭлементСоответствия.Значение, ПолучитьМетаданные());
			Для Каждого лВыгруженныйОбъект Из лВыгруженныеОбъекты цикл
				лСписокОбъектов.Добавить(лВыгруженныйОбъект);
			КонецЦикла;
		КонецЦикла;
		
		лСообщениеОбмена.Объекты = лОбъекты;
		лЗаписьСообщения.ЗакончитьЗапись();
		
	Исключение
		лЗаписьСообщения.ПрерватьЗапись();
		
		//Запись об ошибке выгрузки в историю обмена по объектам
		ТекстОшибки = "Ошибка при создании сообщения обмена: "+ОписаниеОшибки();
		ЗаписатьИсториюОбменаПоОбъектам(лВыгружаемыеОбъекты, лЗаписьСообщения.НомерСообщения, Истина, ТекстОшибки);

		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;
	
	//Добавлено Валиахметов А.А. 19.04.2018
	Попытка
		лСообщениеОбмена.Проверить();	
	Исключение
		РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаСТопЛог, ОписаниеОшибки(), "8.3 -> ТопЛог. Сообщение обмена не соответствует схеме XDTO. База: " + СтрокаСоединенияИнформационнойБазы());
	КонецПопытки;
	//Конец Добавлено Валиахметов А.А. 19.04.2018
	
	лЗаписьХМЛ = Новый ЗаписьXML;
	лЗаписьХМЛ.УстановитьСтроку("utf-8");
	лЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(лЗаписьХМЛ, лСообщениеОбмена);
	ТекстСообщения = лЗаписьХМЛ.Закрыть();	
	
	Если лСписокОбъектов.Количество() > 0 Тогда 	
		НаборЗаписей = РегистрыСведений.ИсторияОбменаСТопЛог.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерСообщения.Установить(лСообщениеОбмена.НомерСообщения);
		НаборЗаписей.Отбор.Исходящее.Установить(Истина);
		НаборЗаписей.Отбор.НомерПотока.Установить(1);
		
		Стр = НаборЗаписей.Добавить();
		Стр.НомерСообщения = лСообщениеОбмена.НомерСообщения;
		Стр.Сообщение = ТекстСообщения;
		Стр.ДатаЗагрузкиСообщения = ТекущаяДата();
		Стр.Исходящее = Истина;
		Стр.НомерПотока = 1;
		
		НаборЗаписей.Записать(Истина);
		
		//Запись об успешной выгрузке в историю обмена по объектам
		ЗаписатьИсториюОбменаПоОбъектам(лВыгружаемыеОбъекты, лСообщениеОбмена.НомерСообщения);
		
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

Процедура ЗаписатьИсториюОбменаПоОбъектам(лВыгружаемыеОбъекты, НомерСообщения, ЕстьОшибки = Ложь, ТекстОшибки = "", Период = Неопределено, Исходящее = Истина)
	
	Если НЕ ТипЗнч(лВыгружаемыеОбъекты) = Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого лЭлементСоответствия Из лВыгружаемыеОбъекты Цикл
		
		ПолноеИмяМД = лЭлементСоответствия.Ключ.ПолноеИмя();
		
		Если СтрНайти(ПолноеИмяМД, "ПоступлениеТоваровУслуг") > 0 
			ИЛИ СтрНайти(ПолноеИмяМД, "РеализацияТоваровУслуг") > 0 
			Или СтрНайти(ПолноеИмяМД, "ПеремещениеТоваров") > 0 Тогда
			
			// "ВыгружаемыйОбъект" это ТЗ с колонкой "Ссылка"
			Для каждого ВыгружаемыйОбъект Из лЭлементСоответствия.Значение Цикл
				РегистрыСведений.ИсторияОбменаСТопЛогПоОбъектам.Добавить(ВыгружаемыйОбъект.Ссылка, НомерСообщения, ЕстьОшибки, ТекстОшибки, Период, Исходящее, 1);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

