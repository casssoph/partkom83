
Функция ПолучитьМетаданные()
	Возврат Метаданные.ПланыОбмена.ОбменПартКом83_Сайт_состояние_заявок;
КонецФункции
Функция URIПространстваИмен() 
	
	Возврат "http://ws-02.part-kom.ru/partkom83/hs/SiteExchange/XMLSchema";
	
КонецФункции
Функция ТипПоОбъектуМетаданных(вхОбъектМетаданных) Экспорт
	
	Результат = Неопределено;
	лИмяТипа = ИмяТипаПоОбъектуМетаданных(вхОбъектМетаданных);
	Если НЕ ПустаяСтрока(лИмяТипа) тогда
		Результат = ФабрикаXDTO.Тип(URIПространстваИмен(), лИмяТипа);
	КонецЕсли;
	Возврат Результат;
	
КонецФункции
Функция ИмяТипаПоОбъектуМетаданных(вхОбъектМетаданных) 
	Возврат	ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(вхОбъектМетаданных) + "." + вхОбъектМетаданных.Имя;
КонецФункции

Функция ВыгрузитьСообщениеОбмена_ИсторияЗаявок(ИдентификаторУзлаОбмена, НомерПринятого) Экспорт
	
	Узел1С = ОбменДаннымиКлиентСервер.ПолучитьВходящийУзелОбмена(ПолучитьМетаданные(), ИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(Узел1С) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена_ИсторияЗаявок]: неправильный параметр номер 1(Узел 1С)";
	КонецЕсли;
	
	УзелСайт = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(ПолучитьМетаданные(), ИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(УзелСайт) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена_ИсторияЗаявок]: неправильный параметр номер 1.(Узел Сайт)";
	КонецЕсли;
	
	НомерОтправленного = УзелСайт.НомерПринятого;
	Если НомерПринятого > НомерОтправленного Тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена_ИсторияЗаявок]: Сообщение №"+ НомерПринятого + " ещё не отправлялось(последнее №" + НомерОтправленного + ")";
	КонецЕсли;
		
	ФиксацияПринятогоСообщения(УзелСайт, НомерПринятого);
	
	ТипОбъекты = ФабрикаXDTO.Тип(URIПространстваИмен(), "Объекты");
	ТипСообщениеОбмена = ФабрикаXDTO.Тип(URIПространстваИмен(), "СообщениеОбмена");
	
	НомерСообщения = НомерОтправленного + 1;
	
	СообщениеОбмена = ФабрикаXDTO.Создать(ТипСообщениеОбмена);
	СообщениеОбмена.ПланОбмена = "orders_nn";
	СообщениеОбмена.Отправитель = ЭтотУзел().ИдентификаторУзла;
	СообщениеОбмена.Получатель = ИдентификаторУзлаОбмена;
	СообщениеОбмена.НомерСообщения = НомерСообщения;
	СообщениеОбмена.НомерПринятого = Узел1С.НомерОтправленного;
	
	Объекты = ФабрикаXDTO.Создать(ТипОбъекты);
	СписокОбъектов = Объекты.ПолучитьСписок("Объект");
	
	РегистрыСведений._ИсторияСтрокЗаявок.ДобавитьДанныеИсторииСтрокЗаявок(СписокОбъектов, НомерСообщения);
	ДобавитьДанныеПодтверждений(СписокОбъектов, НомерСообщения);
	
	СообщениеОбмена.Объекты = Объекты;
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("utf-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьХМЛ, СообщениеОбмена);
	
	Узел = УзелСайт.ПолучитьОбъект();
	Узел.НомерПринятого = НомерСообщения;
	Узел.Записать();
	
	Возврат ЗаписьХМЛ.Закрыть();
	
КонецФункции
Процедура ФиксацияПринятогоСообщения(ИсходящийУзел, НомерПринятогоСообщения)
	
	ПланыОбмена.УдалитьРегистрациюИзменений(ИсходящийУзел, НомерПринятогоСообщения);
	
	// зафиксируем факт получения подтверждения на ранее отправленную посылку
	ТекущаяДата = ТекущаяДата();
	НаборЗаписи  = РегистрыСведений.ИсторияЗаявокДляПланаОбменаССайтом.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.ReceivedNo.Установить(НомерПринятогоСообщения);
	НаборЗаписи.Прочитать();
	Для каждого Запись Из НаборЗаписи Цикл
		Запись.Подтвержден = Истина;
		Запись.ДтВрм_Подтверждения = ТекущаяДата;	
	КонецЦикла;		
	НаборЗаписи.Записать();
	
	//Зафиксируем принятые сообщения о логе загрузки
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЛогОбменовССайтом.ПланОбмена,
	                      |	ЛогОбменовССайтом.Ссылка,
	                      |	ЛогОбменовССайтом.SiteID
	                      |ИЗ
	                      |	РегистрСведений.ЛогОбменовССайтом КАК ЛогОбменовССайтом
	                      |ГДЕ
	                      |	ЛогОбменовССайтом.ПланОбмена В (ЗНАЧЕНИЕ(Перечисление.ПланыОбменаССайтом.ПодтвержениеПолученияЗаявок), ЗНАЧЕНИЕ(Перечисление.ПланыОбменаССайтом.ПодтверждениеОтменыЗаявок))
	                      |	И ЛогОбменовССайтом.НомерСообщенияИсходящий <= &НомерПринятогоСообщения
	                      |	И ЛогОбменовССайтом.НомерСообщенияИсходящий > 0
	                      |	И НЕ ЛогОбменовССайтом.СайтСообщениеОбработал");
	Запрос.УстановитьПараметр("НомерПринятогоСообщения", НомерПринятогоСообщения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.ЛогОбменовССайтом.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка, "Ссылка,ПланОбмена,SiteID");
		Запись.Прочитать();
		Запись.ДатаОбработкиСайтом = ТекущаяДата;
		Запись.СайтСообщениеОбработал = Истина;
		Запись.Записать();
	КонецЦикла;
	
	РегистрыСведений._ИсторияСтрокЗаявок.ФиксацияПринятогоСообщения(НомерПринятогоСообщения);
	
	// запомним номер последнего принятого на сайте сообщения
	ОбъектУзла = ИсходящийУзел.ПолучитьОбъект();
	ОбъектУзла.НомерПринятого = НомерПринятогоСообщения;
	ОбъектУзла.Записать();
	
КонецПроцедуры
Процедура ДобавитьДанныеПодтверждений(СписокОбъектов, НомерСообщения)
	
	КоличествоОбъектов = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Количество объектов в обмене", 1000);
	ПодтвержениеПолученияЗаявок = ФабрикаXDTO.Тип(URIПространстваИмен(), "Документы.ЗаявкаПокупателя.Загрузка");
	ПодтверждениеОтменыЗаявок = ФабрикаXDTO.Тип(URIПространстваИмен(), "Документы.ЗаявкаПокупателяОтмена.Загрузка");
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1234
	                      |	ЛогОбменовССайтом.Ссылка,
	                      |	ЛогОбменовССайтом.ПланОбмена,
	                      |	ЛогОбменовССайтом.SiteID,
	                      |	ЛогОбменовССайтом.Ошибка,
	                      |	ЛогОбменовССайтом.ТекстОшибки
	                      |ИЗ
	                      |	РегистрСведений.ЛогОбменовССайтом КАК ЛогОбменовССайтом
	                      |ГДЕ
	                      |	ЛогОбменовССайтом.ПланОбмена В (ЗНАЧЕНИЕ(Перечисление.ПланыОбменаССайтом.ПодтвержениеПолученияЗаявок), ЗНАЧЕНИЕ(Перечисление.ПланыОбменаССайтом.ПодтверждениеОтменыЗаявок))
	                      |	И НЕ ЛогОбменовССайтом.СайтСообщениеОбработал");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "1234", Формат(КоличествоОбъектов, "ЧГ="));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТипОбъектаXDTO = ?(Выборка.ПланОбмена = Перечисления.ПланыОбменаССайтом.ПодтвержениеПолученияЗаявок, ПодтвержениеПолученияЗаявок, ПодтверждениеОтменыЗаявок);
		
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, Выборка,, "Ссылка");
		ОбъектXDTO.Ссылка = Выборка.Ссылка;
		Если Выборка.ПланОбмена = Перечисления.ПланыОбменаССайтом.ПодтверждениеОтменыЗаявок Тогда
			ОбъектXDTO.IDSite = Выборка.SiteID;
		КонецЕсли;
		
		СписокОбъектов.Добавить(ОбъектXDTO);
		
		Запись = РегистрыСведений.ЛогОбменовССайтом.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка, "Ссылка,ПланОбмена,SiteID");
		Запись.Прочитать();
		Запись.НомерСообщенияИсходящий = НомерСообщения;
		Запись.Записать();
	КонецЦикла;
	
КонецПроцедуры
