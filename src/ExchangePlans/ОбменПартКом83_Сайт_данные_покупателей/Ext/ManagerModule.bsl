
Функция URIПространстваИмен() 
	//Возврат "http://ws-02.part-kom.ru/partkom83/hs/SiteExchange/XMLSchema";	
	Возврат ПланыОбмена.ОбменПартКом83_Сайт.URIПространстваИмен();
КонецФункции

Функция ВыгрузитьСообщениеОбмена_Взаиморасчеты(ИдентификаторУзлаОбмена, НомерПринятого, ТолькоИзменения) Экспорт
	
	Исходящий = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(Метаданные.ПланыОбмена.ОбменПартКом83_Сайт_данные_покупателей, ИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(Исходящий) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	
	ЗафиксироватьНомерПринятого(Исходящий, НомерПринятого);
	
	// сформируем посылку
	URI = URIПространстваИмен();
	Договор77 = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен 1С-Сайт", "Договоры 1С77", Истина);
	ТипОбъектаXDTO = ФабрикаXDTO.Тип(URI, "РегистрыНакопления.Взаиморасчеты");
	ТипОбъекты = ФабрикаXDTO.Тип(URI, "Объекты");
	ТипСообщениеОбмена = ФабрикаXDTO.Тип(URI, "СообщениеОбмена");
	                                                                                          
	лПустышка = Новый ЗаписьXML;
	лПустышка.УстановитьСтроку("utf-8");
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(лПустышка, Исходящий);
	НомерСообщения = ЗаписьСообщения.НомерСообщения;
	
	лСообщениеОбмена = ФабрикаXDTO.Создать(ТипСообщениеОбмена);
	лСообщениеОбмена.ПланОбмена = "credit";
	лСообщениеОбмена.Отправитель = ЭтотУзел().ИдентификаторУзла;
	лСообщениеОбмена.Получатель = ИдентификаторУзлаОбмена;
	лСообщениеОбмена.НомерСообщения = НомерСообщения;
	лСообщениеОбмена.НомерПринятого = 0;//В сторону сайта обмен взаиморасчетами не работает//
	
	лОбъекты = ФабрикаXDTO.Создать(ТипОбъекты);
	лСписокОбъектов = лОбъекты.ПолучитьСписок("Объект");
	
	ДанныеОстатков = РассчитатьПакетИзмененийДляУзлаОбмена_Взаиморасчеты(НомерПринятого, Договор77, ТолькоИзменения);

	ОбработатьВыборкуОстатков(ДанныеОстатков["Остатки"], НомерСообщения, лСписокОбъектов, ТипОбъектаXDTO, Договор77);
	УдалитьЗаписиПрошлыхПосылок(ДанныеОстатков["ЗаписиНаУдаление"], Договор77);
	
	//Обработка ошибок
	ТекстОшибки = "";
	ПроверитьОшибкиUUID(ДанныеОстатков["ОшибкиUUID"], ТекстОшибки);
	ПроверитьОшибкиСМагазинами(ДанныеОстатков["Магазины"], НомерСообщения, ТекстОшибки);
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом_ВыгрузкаБалансов, ТекстОшибки, "Ошибки обмена с сайтом");
	КонецЕсли;
				
	лСообщениеОбмена.Объекты = лОбъекты;
	ЗаписьСообщения.ЗакончитьЗапись();
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("utf-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьХМЛ, лСообщениеОбмена);
	
	Возврат ЗаписьХМЛ.Закрыть();	
	
КонецФункции
Функция РассчитатьПакетИзмененийДляУзлаОбмена_Взаиморасчеты(лНомерПринятого, Договор77, ТолькоИзменения)
	
	ДанныеОстатков = Новый Соответствие;
	
	Запрос = Новый Запрос(ТекстЗапросаВзаиморасчетов(Договор77));
	Если НЕ ТолькоИзменения Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ ЕСТЬNULL(Изм.Сумма, 0) <> ЕСТЬNULL(Сайт.Сумма, 0)", "");
	КонецЕсли;
	Запрос.УстановитьПараметр("ReceivedNo", лНомерПринятого);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("ДтВрм", ТекущаяДата());
	Запрос.УстановитьПараметр("ЮрЛицо", Перечисления.ЮрФизЛицо.ЮрЛицо);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый); // read committed
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ЗафиксироватьТранзакцию();
	
	КоличествоПакетов = РезультатЗапроса.Количество();
	ДанныеОстатков.Вставить("Остатки",			?(Договор77, РезультатЗапроса[КоличествоПакетов - 4].Выбрать(), РезультатЗапроса[КоличествоПакетов - 3].Выбрать()));
	ДанныеОстатков.Вставить("ОшибкиUUID",		?(Договор77, РезультатЗапроса[КоличествоПакетов - 3].Выбрать(), Неопределено));
	ДанныеОстатков.Вставить("ЗаписиНаУдаление", ?(Договор77, РезультатЗапроса[КоличествоПакетов - 2].Выбрать(), РезультатЗапроса[КоличествоПакетов - 2].Выбрать()));
	ДанныеОстатков.Вставить("Магазины",			?(Договор77, РезультатЗапроса[КоличествоПакетов - 1].Выбрать(), РезультатЗапроса[КоличествоПакетов - 1].Выбрать()));
	
	Возврат ДанныеОстатков;
	
КонецФункции
Функция ТекстЗапросаВзаиморасчетов(Договор77)
	
	Если Договор77 Тогда
		ТекстЗапроса = 	"ВЫБРАТЬ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.УИДдоговора КАК УИДдоговора,
		               	|	МАКСИМУМ(ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo) КАК ReceivedNo
		               	|ПОМЕСТИТЬ СрезПоследнихПоНомеруПосылки
		               	|ИЗ
		               	|	РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК ВзаиморасчетыДляПланаОбменаССайтом
		               	|ГДЕ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo <= &ReceivedNo
		               	|	И ВзаиморасчетыДляПланаОбменаССайтом.Подтвержден = ИСТИНА
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.УИДдоговора
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	СрезПоследнихПоНомеруПосылки.УИДдоговора КАК УИДдоговора,
		               	|	СрезПоследнихПоНомеруПосылки.ReceivedNo,
		               	|	СрезПоследнихПоНомеруПосылки2.Сумма
		               	|ПОМЕСТИТЬ ДанныеСайта
		               	|ИЗ
		               	|	СрезПоследнихПоНомеруПосылки КАК СрезПоследнихПоНомеруПосылки
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК СрезПоследнихПоНомеруПосылки2
		               	|		ПО СрезПоследнихПоНомеруПосылки.ReceivedNo = СрезПоследнихПоНомеруПосылки2.ReceivedNo
		               	|			И СрезПоследнихПоНомеруПосылки.УИДдоговора = СрезПоследнихПоНомеруПосылки2.УИДдоговора
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента.Владелец КАК КА,
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента КАК Договор,
		               	|	СУММА(ВзаиморасчетыОстатки.СуммаРеглОстаток) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору1
		               	|ИЗ
		               	|	РегистрНакопления.Взаиморасчеты.Остатки(
		               	|			&ДтВрм,
		               	|			ДоговорКонтрагента.ВидДоговора = &ВидДоговора
		               	|				И ДоговорКонтрагента.Владелец.ЮрФизЛицо = &ЮрЛицо
		               	|				И ДоговорКонтрагента.ДоговорПриостановлен = ЛОЖЬ
		               	|				И ДоговорКонтрагента.Владелец.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ВзаиморасчетыОстатки
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента.Владелец,
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(ВзаиморасчетыОстатки.СуммаРеглОстаток) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента.Владелец КАК КА,
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента КАК Договор,
		               	|	СУММА(ДепозитыКонтрагентовОстатки.СуммаУпрОстаток) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору2
		               	|ИЗ
		               	|	РегистрНакопления.ДепозитыКонтрагентов.Остатки(
		               	|			&ДтВрм,
		               	|			ДоговорКонтрагента.ВидДоговора = &ВидДоговора
		               	|				И ДоговорКонтрагента.Владелец.ЮрФизЛицо = &ЮрЛицо
		               	|				И ДоговорКонтрагента.ДоговорПриостановлен = ЛОЖЬ
		               	|				И ДоговорКонтрагента.Владелец.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ДепозитыКонтрагентовОстатки
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента.Владелец,
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(ДепозитыКонтрагентовОстатки.СуммаУпрОстаток) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Ост.КА,
		               	|	Ост.Договор,
		               	|	СУММА(Ост.Сумма) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору
		               	|ИЗ
		               	|	(ВЫБРАТЬ
		               	|		СводныйОстПоДоговору1.КА КАК КА,
		               	|		СводныйОстПоДоговору1.Договор КАК Договор,
		               	|		СводныйОстПоДоговору1.Сумма КАК Сумма
		               	|	ИЗ
		               	|		СводныйОстПоДоговору1 КАК СводныйОстПоДоговору1
		               	|	
		               	|	ОБЪЕДИНИТЬ
		               	|	
		               	|	ВЫБРАТЬ
		               	|		СводныйОстПоДоговору2.КА,
		               	|		СводныйОстПоДоговору2.Договор,
		               	|		СводныйОстПоДоговору2.Сумма
		               	|	ИЗ
		               	|		СводныйОстПоДоговору2 КАК СводныйОстПоДоговору2) КАК Ост
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	Ост.КА,
		               	|	Ост.Договор
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(Ост.Сумма) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ РАЗЛИЧНЫЕ
		               	|	МАКСИМУМ(УчетныеЗаписиСайта.Код) КАК Логин,
		               	|	УчетныеЗаписиСайта.Владелец.Владелец КАК КА
		               	|ПОМЕСТИТЬ Логины
		               	|ИЗ
		               	|	Справочник.УчетныеЗаписиСайта КАК УчетныеЗаписиСайта
		               	|ГДЕ
		               	|	УчетныеЗаписиСайта.Владелец.Владелец В
		               	|			(ВЫБРАТЬ
		               	|				СводныйОстПоДоговору.КА
		               	|			ИЗ
		               	|				СводныйОстПоДоговору)
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	УчетныеЗаписиСайта.Владелец.Владелец
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ОстПоДоговорам.КА,
		               	|	ОстПоДоговорам.Договор,
		               	|	ОстПоДоговорам.Сумма,
		               	|	Логины.Логин,
		               	|	ВЫБОР
		               	|		КОГДА ОстПоДоговорам.КА <> ОстПоДоговорам.КА.ГоловнойКонтрагент
		               	|				И ОстПоДоговорам.КА.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		               	|			ТОГДА ИСТИНА
		               	|		ИНАЧЕ ЛОЖЬ
		               	|	КОНЕЦ КАК ЭтоМагазин
		               	|ПОМЕСТИТЬ ПроверенныеДоговоры
		               	|ИЗ
		               	|	СводныйОстПоДоговору КАК ОстПоДоговорам
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ Логины КАК Логины
		               	|		ПО ОстПоДоговорам.КА = Логины.КА
		               	|ГДЕ
		               	|	НЕ Логины.Логин ЕСТЬ NULL
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Долги.Договор,
		               	|	Долги.Сумма,
		               	|	_ДляПереносаДанных.Строка77 КАК УИД
		               	|ПОМЕСТИТЬ Посылка
		               	|ИЗ
		               	|	ПроверенныеДоговоры КАК Долги
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ДляПереносаДанных КАК _ДляПереносаДанных
		               	|		ПО Долги.Договор = _ДляПереносаДанных.Объект
		               	|ГДЕ
		               	|	Долги.ЭтоМагазин = ЛОЖЬ
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Посылка.УИД КАК УИДдоговора,
		               	|	СУММА(Посылка.Сумма) КАК Сумма
		               	|ПОМЕСТИТЬ ПосылкаПроверено
		               	|ИЗ
		               	|	Посылка КАК Посылка
		               	|ГДЕ
		               	|	НЕ Посылка.УИД ЕСТЬ NULL
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	Посылка.УИД
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ЕСТЬNULL(Изм.УИДдоговора, Сайт.УИДдоговора) КАК УИДдоговора,
		               	|	ЕСТЬNULL(Изм.Сумма, 0) КАК Сумма
		               	|ИЗ
		               	|	ПосылкаПроверено КАК Изм
		               	|		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеСайта КАК Сайт
		               	|		ПО Изм.УИДдоговора = Сайт.УИДдоговора
		               	|ГДЕ
		               	|	ЕСТЬNULL(Изм.Сумма, 0) <> ЕСТЬNULL(Сайт.Сумма, 0)
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Посылка.Договор,
		               	|	Посылка.Сумма
		               	|ИЗ
		               	|	Посылка КАК Посылка
		               	|ГДЕ
		               	|	Посылка.УИД ЕСТЬ NULL
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo,
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.УИДдоговора КАК УИДдоговора
		               	|ИЗ
		               	|	РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК ВзаиморасчетыДляПланаОбменаССайтом
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеСайта КАК ДанныеСайта
		               	|		ПО ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo = ДанныеСайта.ReceivedNo
		               	|			И ВзаиморасчетыДляПланаОбменаССайтом.УИДдоговора = ДанныеСайта.УИДдоговора
		               	|ГДЕ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo < &ReceivedNo
		               	|	И ДанныеСайта.ReceivedNo ЕСТЬ NULL
		               	|	И ДанныеСайта.УИДдоговора ЕСТЬ NULL
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ПроверенныеДоговоры.КА,
		               	|	ПроверенныеДоговоры.Договор,
		               	|	ПроверенныеДоговоры.Сумма,
		               	|	ПроверенныеДоговоры.Логин,
		               	|	ПроверенныеДоговоры.ЭтоМагазин
		               	|ИЗ
		               	|	ПроверенныеДоговоры КАК ПроверенныеДоговоры
		               	|ГДЕ
		               	|	ПроверенныеДоговоры.ЭтоМагазин = ИСТИНА";
	Иначе
		//Договора 1С8
		ТекстЗапроса = 	"ВЫБРАТЬ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.Договор,
		               	|	МАКСИМУМ(ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo) КАК ReceivedNo
		               	|ПОМЕСТИТЬ СрезПоследнихПоНомеруПосылки
		               	|ИЗ
		               	|	РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК ВзаиморасчетыДляПланаОбменаССайтом
		               	|ГДЕ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo <= &ReceivedNo
		               	|	И ВзаиморасчетыДляПланаОбменаССайтом.Подтвержден = ИСТИНА
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.Договор
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	СрезПоследнихПоНомеруПосылки.Договор,
		               	|	СрезПоследнихПоНомеруПосылки.ReceivedNo,
		               	|	СрезПоследнихПоНомеруПосылки2.Сумма
		               	|ПОМЕСТИТЬ ДанныеСайта
		               	|ИЗ
		               	|	СрезПоследнихПоНомеруПосылки КАК СрезПоследнихПоНомеруПосылки
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК СрезПоследнихПоНомеруПосылки2
		               	|		ПО СрезПоследнихПоНомеруПосылки.ReceivedNo = СрезПоследнихПоНомеруПосылки2.ReceivedNo
		               	|			И СрезПоследнихПоНомеруПосылки.Договор = СрезПоследнихПоНомеруПосылки2.Договор
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента.Владелец КАК КА,
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента КАК Договор,
		               	|	СУММА(ВзаиморасчетыОстатки.СуммаРеглОстаток) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору1
		               	|ИЗ
		               	|	РегистрНакопления.Взаиморасчеты.Остатки(
		               	|			&ДтВрм,
		               	|			ДоговорКонтрагента.ВидДоговора = &ВидДоговора
		               	|				И ДоговорКонтрагента.Владелец.ЮрФизЛицо = &ЮрЛицо
		               	|				И ДоговорКонтрагента.ДоговорПриостановлен = ЛОЖЬ
		               	|				И ДоговорКонтрагента.Владелец.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ВзаиморасчетыОстатки
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента.Владелец,
		               	|	ВзаиморасчетыОстатки.ДоговорКонтрагента
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(ВзаиморасчетыОстатки.СуммаРеглОстаток) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента.Владелец КАК КА,
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента КАК Договор,
		               	|	СУММА(ДепозитыКонтрагентовОстатки.СуммаУпрОстаток) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору2
		               	|ИЗ
		               	|	РегистрНакопления.ДепозитыКонтрагентов.Остатки(
		               	|			&ДтВрм,
		               	|			ДоговорКонтрагента.ВидДоговора = &ВидДоговора
		               	|				И ДоговорКонтрагента.Владелец.ЮрФизЛицо = &ЮрЛицо
		               	|				И ДоговорКонтрагента.ДоговорПриостановлен = ЛОЖЬ
		               	|				И ДоговорКонтрагента.Владелец.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ДепозитыКонтрагентовОстатки
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента.Владелец,
		               	|	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(ДепозитыКонтрагентовОстатки.СуммаУпрОстаток) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Ост.КА,
		               	|	Ост.Договор,
		               	|	СУММА(Ост.Сумма) КАК Сумма
		               	|ПОМЕСТИТЬ СводныйОстПоДоговору
		               	|ИЗ
		               	|	(ВЫБРАТЬ
		               	|		СводныйОстПоДоговору1.КА КАК КА,
		               	|		СводныйОстПоДоговору1.Договор КАК Договор,
		               	|		СводныйОстПоДоговору1.Сумма КАК Сумма
		               	|	ИЗ
		               	|		СводныйОстПоДоговору1 КАК СводныйОстПоДоговору1
		               	|	
		               	|	ОБЪЕДИНИТЬ
		               	|	
		               	|	ВЫБРАТЬ
		               	|		СводныйОстПоДоговору2.КА,
		               	|		СводныйОстПоДоговору2.Договор,
		               	|		СводныйОстПоДоговору2.Сумма
		               	|	ИЗ
		               	|		СводныйОстПоДоговору2 КАК СводныйОстПоДоговору2) КАК Ост
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	Ост.КА,
		               	|	Ост.Договор
		               	|
		               	|ИМЕЮЩИЕ
		               	|	НЕ СУММА(Ост.Сумма) = 0
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ РАЗЛИЧНЫЕ
		               	|	МАКСИМУМ(УчетныеЗаписиСайта.Код) КАК Логин,
		               	|	УчетныеЗаписиСайта.Владелец.Владелец КАК КА
		               	|ПОМЕСТИТЬ Логины
		               	|ИЗ
		               	|	Справочник.УчетныеЗаписиСайта КАК УчетныеЗаписиСайта
		               	|ГДЕ
		               	|	УчетныеЗаписиСайта.Владелец.Владелец В
		               	|			(ВЫБРАТЬ
		               	|				СводныйОстПоДоговору.КА
		               	|			ИЗ
		               	|				СводныйОстПоДоговору)
		               	|
		               	|СГРУППИРОВАТЬ ПО
		               	|	УчетныеЗаписиСайта.Владелец.Владелец
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ОстПоДоговорам.КА,
		               	|	ОстПоДоговорам.Договор,
		               	|	ОстПоДоговорам.Сумма,
		               	|	Логины.Логин,
		               	|	ВЫБОР
		               	|		КОГДА ОстПоДоговорам.КА <> ОстПоДоговорам.КА.ГоловнойКонтрагент
		               	|				И ОстПоДоговорам.КА.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		               	|			ТОГДА ИСТИНА
		               	|		ИНАЧЕ ЛОЖЬ
		               	|	КОНЕЦ КАК ЭтоМагазин
		               	|ПОМЕСТИТЬ ПроверенныеДоговоры
		               	|ИЗ
		               	|	СводныйОстПоДоговору КАК ОстПоДоговорам
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ Логины КАК Логины
		               	|		ПО ОстПоДоговорам.КА = Логины.КА
		               	|ГДЕ
		               	|	НЕ Логины.Логин ЕСТЬ NULL
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	Долги.Договор КАК Договор,
		               	|	Долги.Сумма
		               	|ПОМЕСТИТЬ ПосылкаПроверено
		               	|ИЗ
		               	|	ПроверенныеДоговоры КАК Долги
		               	|ГДЕ
		               	|	Долги.ЭтоМагазин = ЛОЖЬ
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ЕСТЬNULL(Изм.Договор, Сайт.Договор) КАК Договор,
		               	|	ЕСТЬNULL(Изм.Сумма, 0) КАК Сумма
		               	|ИЗ
		               	|	ПосылкаПроверено КАК Изм
		               	|		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеСайта КАК Сайт
		               	|		ПО Изм.Договор = Сайт.Договор
		               	|ГДЕ
		               	|	ЕСТЬNULL(Изм.Сумма, 0) <> ЕСТЬNULL(Сайт.Сумма, 0)
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.Договор,
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo
		               	|ИЗ
		               	|	РегистрСведений.ВзаиморасчетыДляПланаОбменаССайтом КАК ВзаиморасчетыДляПланаОбменаССайтом
		               	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеСайта КАК ДанныеСайта
		               	|		ПО ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo = ДанныеСайта.ReceivedNo
		               	|			И ВзаиморасчетыДляПланаОбменаССайтом.Договор = ДанныеСайта.Договор
		               	|ГДЕ
		               	|	ВзаиморасчетыДляПланаОбменаССайтом.ReceivedNo < &ReceivedNo
		               	|	И ДанныеСайта.ReceivedNo ЕСТЬ NULL
		               	|	И ДанныеСайта.Договор ЕСТЬ NULL
		               	|;
		               	|
		               	|////////////////////////////////////////////////////////////////////////////////
		               	|ВЫБРАТЬ
		               	|	ПроверенныеДоговоры.КА,
		               	|	ПроверенныеДоговоры.Договор,
		               	|	ПроверенныеДоговоры.Сумма,
		               	|	ПроверенныеДоговоры.Логин,
		               	|	ПроверенныеДоговоры.ЭтоМагазин
		               	|ИЗ
		               	|	ПроверенныеДоговоры КАК ПроверенныеДоговоры
		               	|ГДЕ
		               	|	ПроверенныеДоговоры.ЭтоМагазин = ИСТИНА";

	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ЗафиксироватьНомерПринятого(Узел, НомерПринятого)
	
	Если Узел.НомерПринятого <> НомерПринятого Тогда
		ОбъектУзла = Узел.ПолучитьОбъект();
		ОбъектУзла.НомерПринятого = НомерПринятого;
		ОбъектУзла.Записать();
		
		НаборЗаписей  = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ReceivedNo.Установить(НомерПринятого);
		НаборЗаписей.Прочитать();
		Для каждого Запись Из НаборЗаписей Цикл
			Запись.Подтвержден = Истина;
			Запись.ДтВрм_Подтверждения = ТекущаяДата();	
		КонецЦикла;		
		НаборЗаписей.Записать();
	КонецЕсли;

КонецПроцедуры
Процедура ОбработатьВыборкуОстатков(Выборка, НомерСообщения, СписокОбъектов, ТипОбъектаXDTO, Договор77)
	
	НаборЗаписей  = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ReceivedNo.Установить(НомерСообщения);
	
	Пока Выборка.Следующий() Цикл
		
		UUID = ?(Договор77, Выборка.УИДдоговора, Выборка.Договор.УникальныйИдентификатор());
		
		//уложим результат запроса согласно структуре пакета
		Объект = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		Объект.Договор = UUID;
		Объект.ЭтоДоговор1С77 = Договор77;
		Объект.Сумма = Выборка.Сумма;
		
		СписокОбъектов.Добавить(Объект);
		
		// запомним содержимое посылки
		Запись = НаборЗаписей.Добавить();
		Запись.ReceivedNo = НомерСообщения;
		Если Договор77 Тогда
			Запись.УИДдоговора = UUID;
		Иначе
			Запись.Договор = Выборка.Договор;
		КонецЕсли;
		Запись.Сумма = Выборка.Сумма;
		Запись.ДтВрм_Посылки = ТекущаяДата();
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры
Процедура УдалитьЗаписиПрошлыхПосылок(Выборка, Договор77)
	
	Записи = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
	Пока Выборка.Следующий() Цикл
		Записи.Отбор.ReceivedNo.Установить(Выборка.ReceivedNo);
		Если Договор77 Тогда
			Записи.Отбор.УИДдоговора.Установить(Выборка.УИДдоговора);
		Иначе
			Записи.Отбор.Договор.Установить(Выборка.Договор);
		КонецЕсли;
		Записи.Записать();
	КонецЦикла;
	
КонецПроцедуры
Процедура ПроверитьОшибкиUUID(Выборка, ТекстОшибки)
	
	Если Выборка <> Неопределено Тогда
		Пока Выборка.Следующий() Цикл
			ТекстОшибкиUUID =	ТекстОшибкиUUID + Символы.ПС +
								"При выгрузке данных взаиморасчетов(по договорам 1С77) не найдено соответствие договора:" + Символы.ПС +
								", Договор: ["  + СокрЛП(Выборка.Договор.Код) + "] " + СокрЛП(Выборка.Договор.Наименование) + Символы.ПС +
								", Ссылка: ["  + СокрЛП(Выборка.Договор.УникальныйИдентификатор()) + "] " + Символы.ПС +
								", Владелец: [" + СокрЛП(Выборка.Договор.Владелец.Код) + "] " + СокрЛП(Выборка.Договор.Владелец.Наименование) + Символы.ПС +
								", Сумма взаиморасчетов: [" + СокрЛП(Выборка.КоличествоОстаток) + "] " + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПроверитьОшибкиСМагазинами(Выборка, НомерСообщения, ТекстОшибки)
	
	//Ошибки по магазинам сыпятся слишком часто//
	//Проверяем каждый 100й пакет			//
	Если НомерСообщения%100 = 0 Тогда
		Пока Выборка.Следующий() Цикл
			ТекстОшибки =	ТекстОшибки + Символы.ПС +
							"Договор контрагента, являющийся 'магазином'" +
							". Договор: ["  + СокрЛП(Выборка.Договор.Код) + "] " + СокрЛП(Выборка.Договор.Наименование) + Символы.ПС +
							", Ссылка: ["  + СокрЛП(Выборка.Договор.УникальныйИдентификатор()) + "] "  + Символы.ПС +
							", Владелец: [" + СокрЛП(Выборка.Договор.Владелец.Код) + "] " + СокрЛП(Выборка.Договор.Владелец.Наименование) + Символы.ПС +
							", Логин: [" + СокрЛП(Выборка.Логин) + "] " + Символы.ПС +
							", Сумма взаиморасчетов: [" + СокрЛП(Выборка.Сумма) + "] " + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Удалить//
Функция ВыгрузитьСообщениеОбмена_Взаиморасчеты_OLD(вхИдентификаторУзлаОбмена, вхНомерПринятого, вхТолькоИзменения) Экспорт
	
	лОтправитель = ЭтотУзел();
	лИсходящий = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(Метаданные.ПланыОбмена.ОбменПартКом83_Сайт_данные_покупателей, вхИдентификаторУзлаОбмена);
	Если НЕ ЗначениеЗаполнено(лИсходящий) тогда
		ВызватьИсключение "[ВыгрузитьСообщениеОбмена]: неправильный параметр номер 1.";	
	КонецЕсли;
	
	// фиксируем номер принятого
	Если НЕ лИсходящий.НомерПринятого = вхНомерПринятого Тогда
		Попытка
			ОбъектУзла = лИсходящий.ПолучитьОбъект();
			ОбъектУзла.НомерПринятого = вхНомерПринятого;
			ОбъектУзла.Записать();
			
			ДтВрмПодтверждения = ТекущаяДата();
			
			НаборЗаписи  = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
			НаборЗаписи.Отбор.ReceivedNo.Установить(вхНомерПринятого);
			НаборЗаписи.Прочитать();
			Для каждого Запись Из НаборЗаписи Цикл
				Запись.Подтвержден = Истина;
				Запись.ДтВрм_Подтверждения = ДтВрмПодтверждения;	
			КонецЦикла;		
			НаборЗаписи.Записать();
			
		Исключение
			ВызватьИсключение "Возникла ошибка при изменении номеров сообщений обмена: ";
		Конецпопытки;
	КонецЕсли;
	
	
	// сформируем посылку
	лТипОбъектаXDTO = ФабрикаXDTO.Тип(URIПространстваИмен(), "РегистрыНакопления.Взаиморасчеты");
	лТипОбъекты = ФабрикаXDTO.Тип(URIПространстваИмен(), "Объекты");
	лТипСообщениеОбмена = ФабрикаXDTO.Тип(URIПространстваИмен(), "СообщениеОбмена");
	
	лПустышка = Новый ЗаписьXML;
	лПустышка.УстановитьСтроку("utf-8");
	лЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	лЗаписьСообщения.НачатьЗапись(лПустышка, лИсходящий);
	лНомерСообщения = лЗаписьСообщения.НомерСообщения;
	
	Попытка
		
		лСообщениеОбмена = ФабрикаXDTO.Создать(лТипСообщениеОбмена);
		лСообщениеОбмена.ПланОбмена = "credit";
		лСообщениеОбмена.Отправитель = лОтправитель.ИдентификаторУзла;
		лСообщениеОбмена.Получатель = вхИдентификаторУзлаОбмена;
		лСообщениеОбмена.НомерСообщения = лНомерСообщения;
		лСообщениеОбмена.НомерПринятого = вхНомерПринятого;
		
		лОбъекты = ФабрикаXDTO.Создать(лТипОбъекты);
		лСписокОбъектов = лОбъекты.ПолучитьСписок("Объект");
		
		// передадим расчетные данные, в данным случае изменения по взаиморачетам
		ДтВрм = ТекущаяДата();
		РезультатАнализа = РассчитатьПакетИзмененийДляУзлаОбмена_Взаиморасчеты(вхНомерПринятого, Истина, вхТолькоИзменения);
		КоличествоПакетов = РезультатАнализа.Количество();
		ТаблицаОстатков = РезультатАнализа[КоличествоПакетов - 4 ].Выгрузить();
		ТаблицаОшибокУИД = РезультатАнализа[КоличествоПакетов - 3 ].Выгрузить();
		ТаблицаЗаписейНаУдаление = РезультатАнализа[КоличествоПакетов - 2 ].Выгрузить();
		ТаблицаМагазинов = РезультатАнализа[КоличествоПакетов - 1 ].Выгрузить();

		Если ТаблицаОстатков.Количество() > 0 тогда
			
			НаборЗаписи  = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
			НаборЗаписи.Отбор.ReceivedNo.Установить(лНомерСообщения);
			
			Для Каждого лЭлементСоответствия Из ТаблицаОстатков цикл
				
				// уложим результат запроса согласно структуре пакета
				лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
				лОбъект.Договор77 = лЭлементСоответствия.УИДдоговора;
				лОбъект.Сумма = лЭлементСоответствия.Сумма;
				
				лСписокОбъектов.Добавить(лОбъект);
				
				// запомним содержимое посылки
				Наб = НаборЗаписи.Добавить();
				Наб.ReceivedNo = лНомерСообщения;
				Наб.УИДдоговора = лЭлементСоответствия.УИДдоговора;
				Наб.Сумма = лЭлементСоответствия.Сумма;
				Наб.ДтВрм_Расчета = ДтВрм;
				Наб.ДтВрм_Посылки = ТекущаяДата();
				
			КонецЦикла;
			
			НаборЗаписи.Записать();
		КонецЕсли;
		
		// очистим историю по содержимому предыдущих посылок
		Если ТаблицаЗаписейНаУдаление.Количество() > 0 тогда
			Рег = РегистрыСведений.ВзаиморасчетыДляПланаОбменаССайтом;
			НЗ = Рег.СоздатьНаборЗаписей();
			Для каждого стрт из ТаблицаЗаписейНаУдаление цикл
				НЗ.Отбор.ReceivedNo.Установить(стрт.ReceivedNo);
				НЗ.Отбор.УИДдоговора.Установить(стрт.УИДдоговора);
				НЗ.Записать();
			КонецЦикла;
		КонецЕсли;

		Если (ТаблицаОшибокУИД.Количество() > 0)  тогда
			ТекстОшибокУИД = "";
			
			cxcxcxcx = 0;
			Для каждого стро из ТаблицаОшибокУИД цикл
				cxcxcxcx = cxcxcxcx + 1;
				
				ТекстОшибокУИД = ТекстОшибокУИД + Символы.ПС  
				+ СокрлП(cxcxcxcx)
				+ ", Договор: ["  + СокрЛП(стро.Договор.Код) + "] " + СокрЛП(стро.Договор.Наименование) + Символы.ПС
				+ ", Ссылка: ["  + СокрЛП(стро.Договор.УникальныйИдентификатор()) + "] " + Символы.ПС 
				+ ", Владелец: [" + СокрЛП(стро.Договор.Владелец.Код) + "] " + СокрЛП(стро.Договор.Владелец.Наименование) + Символы.ПС
				+ ", Сумма взаиморасчетов: [" + СокрЛП(стро.КоличествоОстаток) + "] " + Символы.ПС
				;
			КонецЦикла;
			
			Если НЕ ПустаяСтрока(ТекстОшибокУИД) Тогда
				ТекстОшибокУИД = "Описание: при выгрузке данных по взаиморасчетам с покупателями не найдена ссылка 1С77 по объекту вида Договор в регистре _ДляПереносаДанных:"  
							   + Символы.ПС 
							   + Символы.ПС 
							   + ТекстОшибокУИД;
				РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом,ТекстОшибокУИД, "Ошибки обмена с сайтом");
			КонецЕсли;
		КонецЕсли;
		
		Если (ТаблицаМагазинов.Количество() > 0) И (лНомерСообщения/100 = Цел(лНомерСообщения/100)) тогда
			
			ТекстОшибокМ = "";
			
			cxcxcxcx = 0;
			Для каждого стро из ТаблицаМагазинов цикл
				cxcxcxcx = cxcxcxcx + 1;
				
				ТекстОшибокМ = ТекстОшибокМ + Символы.ПС  
				+ СокрлП(cxcxcxcx)
				+ ". Договор: ["  + СокрЛП(стро.Договор.Код) + "] " + СокрЛП(стро.Договор.Наименование) + Символы.ПС
				+ ", Ссылка: ["  + СокрЛП(стро.Договор.УникальныйИдентификатор()) + "] "  + Символы.ПС
				+ ", Владелец: [" + СокрЛП(стро.Договор.Владелец.Код) + "] " + СокрЛП(стро.Договор.Владелец.Наименование) + Символы.ПС
				+ ", Логин: [" + СокрЛП(стро.Логин) + "] " + Символы.ПС
				+ ", Сумма взаиморасчетов: [" + СокрЛП(стро.Сумма) + "] " + Символы.ПС
				;
			КонецЦикла;
			
			Если НЕ ПустаяСтрока(ТекстОшибокМ) Тогда
				ТекстОшибокМ =   "Описание: при выгрузке данных по взаиморасчетам с покупателями в выборку попал договор с КА, являющимся 'магазином':"  
							   + Символы.ПС 
							   + Символы.ПС 
							   + ТекстОшибокМ;
				РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом_ВыгрузкаБалансов,ТекстОшибокМ, "Ошибки обмена с сайтом [ выгрузка балансов КА ]");
			КонецЕсли;
			
		КонецЕсли;
			
	// все объекты добавлены, заканчиваем формировать сообщение
	лСообщениеОбмена.Объекты = лОбъекты;
	лЗаписьСообщения.ЗакончитьЗапись();
		
	Исключение
		лЗаписьСообщения.ПрерватьЗапись();
		ВызватьИсключение ;
	КонецПопытки;
	
	// уложим данные в хml
	Тест = Ложь;
	лЗаписьХМЛ = Новый ЗаписьXML;
	Если Тест тогда
		Файл = ПолучитьИмяВременногоФайла("xml"); 
		лЗаписьХМЛ.ОткрытьФайл(Файл);
		ФабрикаXDTO.ЗаписатьXML(лЗаписьХМЛ, лСообщениеОбмена, "ost");
		Сообщить(Файл);
	Иначе
		лЗаписьХМЛ.УстановитьСтроку("utf-8");
		лЗаписьХМЛ.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(лЗаписьХМЛ, лСообщениеОбмена);
	КонецЕсли;
	
	Возврат лЗаписьХМЛ.Закрыть();	
	
КонецФункции
