

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем Таблица;
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ПриСозданииНаСервере";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	
	Параметры.Свойство("Контрагент", Контрагент);
	Параметры.Свойство("ЗаказПоставщику", ЗаказПоставщику);
	Параметры.Свойство("Таблица", Таблица);
	Параметры.Свойство("ДопустимыйПроцентОтклонения", ДопустимыйПроцентОтклонения);
	Параметры.Свойство("ЦенаВключаетНДС", ЦенаВключаетНДС);
	Параметры.Свойство("ЕстьКомментарий", ЕстьКомментарий);	
	
	ТолькоРазличия = Истина;
		
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда 
		Товары.Загрузить(Таблица);
		//ПолныеТовары = Таблица.Скопировать();
	КонецЕсли;
		
	Для Каждого СтрокаТЧ Из Товары Цикл 
		СтрокаТЧ.Различие = СтрокаТЧ.Количество - СтрокаТЧ.КоличествоПлан;
		Если СтрокаТЧ.Различие < 0 Тогда 
			СтрокаТЧ.ПричинаОтказа = Справочники.СостоянияСтрокДокументов.НетНаСкладе;
		КонецЕсли;	
		СтрокаТЧ.ЦенаРазличие = ? (СтрокаТЧ.ЦенаПлан = 0, 999999, 100*(СтрокаТЧ.Цена - СтрокаТЧ.ЦенаПлан)/СтрокаТЧ.ЦенаПлан);
		СтрокаТЧ.ЦенаНачальная = СтрокаТЧ.Цена;
		Если СтрокаТЧ.ЦенаРазличие <> 0 Или СтрокаТЧ.Различие <> 0 Тогда 
			СтрокаТЧ.ЕстьРазличие = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СостоянияСтрокДокументов.Ссылка
	                |ИЗ
	                |	Справочник.СостоянияСтрокДокументов КАК СостоянияСтрокДокументов
	                |ГДЕ
	                |	СостоянияСтрокДокументов.ИспользуетсяВЗаказах";
	Элементы.ТоварыПричинаОтказа.СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
	Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРазличие", Истина);
	Элементы.ТоварыКомментарий.Видимость = ЕстьКомментарий;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ПеренестиВДокумент";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	Отказ = Ложь;
	Для Каждого СтрокаТЧ Из Товары Цикл 
		Если СтрокаТЧ.Различие < 0 И Не ЗначениеЗаполнено(СтрокаТЧ.ПричинаОтказа) Тогда 
			Отказ = Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не заполнена причина отказа в строке №" + СтрокаТЧ.НомерСтроки;
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ПоместитьТЧВоВременноеХранилище());
КонецПроцедуры

&НаСервере 
Функция ПоместитьТЧВоВременноеХранилище()
	Возврат ПоместитьВоВременноеХранилище(Товары.Выгрузить());
КонецФункции

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ЦенаВключаетНДСПриИзменении";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	ЦенаВключаетНДСПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере 
Процедура ЦенаВключаетНДСПриИзмененииНаСервере()
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ЦенаВключаетНДСПриИзмененииНаСервере";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	Для Каждого СтрокаТЧ Из Товары Цикл 
		Если ЦенаВключаетНДС Тогда 
			СтрокаТЧ.Цена = СтрокаТЧ.ЦенаНачальная;
		Иначе
			СтрокаТЧ.Цена = СтрокаТЧ.ЦенаНачальная + УчетНДС.РассчитатьСуммуНДС(СтрокаТЧ.ЦенаНачальная, Истина, Истина, СтрокаТЧ.Номенклатура.СтавкаНДС)
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ТоварыВыбор";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	
	Если Поле.Имя = "ТоварыПричинаОтказа" Тогда 
		Возврат;
	КонецЕсли;
	
	СоответствиеПолейИДанных = Новый Соответствие;
	СоответствиеПолейИДанных.Вставить("ТоварыНоменклатура", "Номенклатура");
	СоответствиеПолейИДанных.Вставить("ТоварыСтрокаЗаявкиЗаявкаНомер", "СтрокаЗаявки.Заявка");
	СоответствиеПолейИДанных.Вставить("ТоварыНоменклатураИзготовитель", "Номенклатура.Изготовитель");
	
	ПутьКДанным = СоответствиеПолейИДанных[Поле.Имя];
	Если ПутьКДанным <> Неопределено Тогда 
		СтрокаТовары = Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Данные = Вычислить("СтрокаТовары." + ПутьКДанным);
		Если ПутьКДанным = "СтрокаЗаявки.Заявка" Тогда 
			ОткрытьЗначение(ПолучитьПоследнийДокументКорректировки(Данные));
		Иначе	
			ОткрытьЗначение(Данные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьПоследнийДокументКорректировки(Заявка)
	лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ПолучитьПоследнийДокументКорректировки";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	////////////////////////////////////////////////
	Возврат Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(Заявка);
КонецФункции

&НаКлиенте
Процедура ТолькоРазличияПриИзменении(Элемент)
	 лКлючАлгоритма = "Документ_ЗаказПоставщику_ФормаЗагрузкиУправляемая_ТолькоРазличияПриИзменении";
	 лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	 Если Не лЗамена = Неопределено Тогда
	 	Выполнить(лЗамена);
	 	Возврат;
	 КонецЕсли;
	 //////////////////////////////////////////////////////////////////////////
	Если ТолькоРазличия Тогда 
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРазличие", Истина);
	Иначе
		Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;
КонецПроцедуры
