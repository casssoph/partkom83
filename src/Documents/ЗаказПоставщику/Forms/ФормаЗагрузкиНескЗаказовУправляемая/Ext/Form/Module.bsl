&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем Таблица;
	
	Параметры.Свойство("Контрагент", Контрагент);
	//Параметры.Свойство("ЗаказПоставщику", ЗаказПоставщику);
	Параметры.Свойство("Таблица", Таблица);
	Параметры.Свойство("ДопустимыйПроцентОтклонения", ДопустимыйПроцентОтклонения);
	Параметры.Свойство("ЦенаВключаетНДС", ЦенаВключаетНДС);
	Параметры.Свойство("ЕстьКомментарий", ЕстьКомментарий);	
	
	ТолькоРазличия = Истина;
	
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда 
		АдресХранилища = ПоместитьВоВременноеХранилище(Таблица);
		
		ЗаполнитьИзТаблицыНаСервере();
		//Товары.Загрузить(Таблица);
		//ПолныеТовары = Таблица.Скопировать();
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СостоянияСтрокДокументов.Ссылка
	                |ИЗ
	                |	Справочник.СостоянияСтрокДокументов КАК СостоянияСтрокДокументов
	                |ГДЕ
	                |	СостоянияСтрокДокументов.ИспользуетсяВЗаказах";
	Элементы.ТоварыПричинаОтказа.СписокВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
	//Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ЕстьРазличие", Истина);
	
	Элементы.ТоварыКомментарий.Видимость = ЕстьКомментарий;
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	Отказ = Ложь;
	Для Каждого СтрокаТЧ Из Товары Цикл 
		Если СтрокаТЧ.Различие < 0 И Не ЗначениеЗаполнено(СтрокаТЧ.ПричинаОтказа) Тогда 
			Отказ = Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не заполнена причина отказа в строке №" + СтрокаТЧ.НомерСтроки;
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(ПоместитьТЧВоВременноеХранилище());
КонецПроцедуры

&НаСервере 
Функция ПоместитьТЧВоВременноеХранилище()
	Возврат ПоместитьВоВременноеХранилище(Товары.Выгрузить());
КонецФункции

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТоварыПричинаОтказа" Или Поле.Имя = "ТоварыКоличество" Тогда 
		Возврат;	
	ИначеЕсли Поле.Имя = "ТоварыНомерСтроки" Тогда 
		СтрокаТЧ = Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ТипЗнч(СтрокаТЧ.НомерСтроки) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 
			СтандартнаяОбработка = Ложь;
			ОткрытьЗначение(СтрокаТЧ.НомерСтроки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	СоответствиеПолейИДанных = Новый Соответствие;
	СоответствиеПолейИДанных.Вставить("ТоварыНоменклатура", "Номенклатура");
	СоответствиеПолейИДанных.Вставить("ТоварыСтрокаЗаявкиЗаявкаНомер", "СтрокаЗаявки.Заявка");
	СоответствиеПолейИДанных.Вставить("ТоварыНоменклатураИзготовитель", "Номенклатура.Изготовитель");
	
	ПутьКДанным = СоответствиеПолейИДанных[Поле.Имя];
	Если ПутьКДанным <> Неопределено Тогда 
		СтрокаТовары = Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Данные = Вычислить("СтрокаТовары." + ПутьКДанным);
		Если ПутьКДанным = "СтрокаЗаявки.Заявка" Тогда 
			ОткрытьЗначение(ПолучитьПоследнийДокументКорректировки(Данные));
		Иначе	
			ОткрытьЗначение(Данные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьПоследнийДокументКорректировки(Заявка)
	Возврат Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(Заявка);
КонецФункции

&НаКлиенте
Процедура ТолькоРазличияПриИзменении(Элемент)
	ЗаполнитьИзТаблицыНаСервере();		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзТаблицыНаСервере()
	ЕдинаяТаблица = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Товары.ПолучитьЭлементы().Очистить();
	Дерево = РеквизитФормыВЗначение("Товары");
	
	Для Каждого СтрокаТЧ Из ЕдинаяТаблица Цикл 
		КоличествоПлан = ?(СтрокаТЧ.КоличествоПлан = Неопределено, 0, СтрокаТЧ.КоличествоПлан);
		ЦенаПлан = ?(СтрокаТЧ.ЦенаПлан = Неопределено, 0, СтрокаТЧ.ЦенаПлан);
		
		Если Не (СтрокаТЧ.Количество - КоличествоПлан <> 0 Или ?(ЦенаПлан = 0, 999999, 100*(СтрокаТЧ.Цена - ЦенаПлан)/ЦенаПлан)) И ТолькоРазличия Тогда 
			Продолжить;			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда 
			СтрокаРодитель = Дерево.Строки.Найти(СтрокаТЧ.Ссылка, "НомерСтроки");
		Иначе
			СтрокаРодитель = Дерево.Строки.Найти("<Не найден заказ>", "НомерСтроки"); 
		КонецЕсли;
		
		Если СтрокаРодитель = Неопределено Тогда 
			СтрокаРодитель = Дерево.Строки.Добавить();
			Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда 
				СтрокаРодитель.НомерСтроки = СтрокаТЧ.Ссылка;
			Иначе
				СтрокаРодитель.НомерСтроки = "<Не найден заказ>";
			КонецЕсли;
		КонецЕсли;
		
		Строка = СтрокаРодитель.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЧ);
		
		Строка.Различие = Строка.Количество - Строка.КоличествоПлан;
		Если Строка.Различие < 0 Тогда 
			Строка.ПричинаОтказа = Справочники.СостоянияСтрокДокументов.НетНаСкладе;
		КонецЕсли;	
		Строка.ЦенаРазличие = ?(Строка.ЦенаПлан = 0, 999999, 100*(Строка.Цена - Строка.ЦенаПлан)/Строка.ЦенаПлан);
		Строка.ЦенаНачальная = Строка.Цена;
		Если Строка.ЦенаРазличие <> 0 Или Строка.Различие <> 0 Тогда 
			Строка.ЕстьРазличие = Истина;
		КонецЕсли;
	КонецЦикла;
	АдресХранилища = ПоместитьВоВременноеХранилище(ЕдинаяТаблица);
	
	ЗначениеВРеквизитФормы(Дерево, "Товары");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	Строка = Элементы.Товары.ТекущиеДанные;
	Если ТипЗнч(Строка.НомерСтроки) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 
		Строка.Количество = 0;
		Возврат;
	КонецЕсли;
	
	Строка.Различие = Строка.Количество - Строка.КоличествоПлан;
	Если Строка.Различие < 0 Тогда 
		Строка.ПричинаОтказа = Справочники.СостоянияСтрокДокументов.НетНаСкладе;
	КонецЕсли;
	
	Если Строка.ЦенаРазличие <> 0 Или Строка.Различие <> 0 Тогда 
		Строка.ЕстьРазличие = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ТоварыПриОкончанииРедактированияНаСервере(ИдентфикаторСтроки)
	
	ЕдинаяТаблица = ПолучитьИзВременногоХранилища(АдресХранилища);

	СтрокаДерева = Товары.НайтиПоИдентификатору(ИдентфикаторСтроки);
	Если ТипЗнч(СтрокаДерева.НомерСтроки) = Тип("Число") Тогда 
		Заказ = СтрокаДерева.ПолучитьРодителя().НомерСтроки;
		Строки = ЕдинаяТаблица.НайтиСтроки(Новый Структура("Ссылка,НомерСтроки", Заказ, СтрокаДерева.НомерСтроки));
		ЗаполнитьЗначенияСвойств(Строки.Получить(0), СтрокаДерева);
	КонецЕсли;
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ЕдинаяТаблица);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТоварыПриОкончанииРедактированияНаСервере(Элемент.ТекущаяСтрока);
КонецПроцедуры
