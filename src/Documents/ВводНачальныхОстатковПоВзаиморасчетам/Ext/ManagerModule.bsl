
Функция ПолучитьМетаданные()
	Возврат Метаданные.Документы.ВводНачальныхОстатковПоВзаиморасчетам;	
КонецФункции

Функция ПроведениеПоВзаиморасчетам(вхСсылкаНаДокумент, вхПараметры)
	
	лДоговорКонтрагента = Неопределено;
	лЕстьФильтр = ПроведениеДокументовКлиентСервер.ПрочитатьЗначение(вхПараметры, "Фильтр.ДоговорКонтрагента", лДоговорКонтрагента);
	лДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Движения", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ДатаДокумента", лДатаДокумента);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", лДоговорКонтрагента);
	Запрос.УстановитьПараметр("ЕстьФильтр", лЕстьФильтр);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ВидДвижения,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка КАК Регистратор,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка.Дата КАК Период,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.СуммаВзаиморасчетов КАК СуммаУпр,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.КурсВзаиморасчетов * ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.СуммаВзаиморасчетов / ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.КратностьВзаиморасчетов КАК СуммаРегл,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.КратностьВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.КурсВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.ДоговорКонтрагента,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.ВалютаВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Документ КАК ДокументРасчетов
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоВзаиморасчетам.РасчетыСКонтрагентами КАК ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами
	|ГДЕ
	|	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка = &Ссылка
	|	И (ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.ДоговорКонтрагента = &ДоговорКонтрагента ИЛИ &ЕстьФильтр = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Движения,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка.Ссылка,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка.Дата,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.СуммаВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.КурсВзаиморасчетов * ВводНачальныхОстатковПоВзаиморасчетамАвансы.СуммаВзаиморасчетов / ВводНачальныхОстатковПоВзаиморасчетамАвансы.КратностьВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.КратностьВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.КурсВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.ДоговорКонтрагента,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.ВалютаВзаиморасчетов,
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.ДокументОплаты
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоВзаиморасчетам.Авансы КАК ВводНачальныхОстатковПоВзаиморасчетамАвансы
	|ГДЕ
	|	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка = &Ссылка
	|	И (ВводНачальныхОстатковПоВзаиморасчетамАвансы.ДоговорКонтрагента = &ДоговорКонтрагента ИЛИ &ЕстьФильтр = ЛОЖЬ)";
	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(вхПараметр = Неопределено) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Шапка", "Дата,Проведен");
	Возврат Результат;
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхПараметр = Неопределено) Экспорт
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхПараметр);
КонецФункции

Функция ПолучитьДанныеГраницПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, вхФильтр = Неопределено) Экспорт
	
	Результат = Неопределено;
	лМетаданныеПоследовательности = Неопределено;
	Если (ТипЗнч(вхПоследовательность) = Тип("Строка")) тогда
		лМетаданныеПоследовательности = Метаданные.Последовательности.Найти(вхПоследовательность);
	ИначеЕсли (ТипЗнч(вхПоследовательность) = Тип("ОбъектМетаданных")) И Метаданные.Последовательности.Содержит(вхПоследовательность) тогда
		лМетаданныеПоследовательности = вхПоследовательность;
	КонецЕсли;
	
	Если (лМетаданныеПоследовательности = Неопределено) тогда
		ВызватьИсключение "[ПолучитьДанныеГраницПоследовательности]: неправильный параметр номер 2.";	
	КонецЕсли;
	
	Если (лМетаданныеПоследовательности = Метаданные.Последовательности.ПоРасчетамСКонтрагентами) тогда
		Результат = ПроведениеДокументовКлиентСервер.ЗначенияДвиженийДокумента(вхСсылкаНаДокумент,
		Метаданные.РегистрыНакопления.Взаиморасчеты, вхФильтр);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура НачатьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, вхПараметры = Неопределено)
	РаботаСПоследовательностямиКлиентСервер.НачатьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, вхПараметры);	
КонецПроцедуры

Процедура ЗакончитьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, вхПараметры = Неопределено)
	РаботаСПоследовательностямиКлиентСервер.ЗакончитьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, вхПараметры);	
КонецПроцедуры

Процедура ВыполнитьПроведение(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	лКонтроль = Неопределено;
	лФильтр = Неопределено;
	ПроведениеДокументовКлиентСервер.ПрочитатьЗначение(вхПараметры, "ДанныеОбъекта.Контроль", лКонтроль);
	ПроведениеДокументовКлиентСервер.ПрочитатьЗначение(вхПараметры, "Фильтр", лФильтр);
	
	НовоеПроведениеПоВзаиморасчетам = глЗначениеПеременной("НовоеПроведениеПоВзаиморасчетам");

	// регистр накопления "Взаиморасчеты"
	лОчищать = Ложь;
	Если НовоеПроведениеПоВзаиморасчетам Тогда 
		лОчищать = ПроведениеДокументовКлиентСервер.НеобходимоОчиститьДвиженияВзаиморасчеты(вхСсылкаНаДокумент);
	Иначе
		лОчищать = ПроведениеДокументовКлиентСервер.НеобходимоОчиститьДвиженияВзаиморасчеты(вхСсылкаНаДокумент);
		Если (лКонтроль <> Неопределено) И лКонтроль.Свойство("СтарыеЗначения") И лКонтроль.Свойство("НовыеЗначения") тогда
			лОчищать = (лКонтроль.СтарыеЗначения.Шапка.Дата < лКонтроль.НовыеЗначения.Шапка.Дата)
			И лКонтроль.СтарыеЗначения.Шапка.Проведен;
		КонецЕсли;
	КонецЕсли;
	
	НачатьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, Метаданные.Последовательности.ПоРасчетамСКонтрагентами, вхПараметры);
	
	Если лОчищать тогда
		ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(вхСсылкаНаДокумент, Метаданные.РегистрыНакопления.Взаиморасчеты);
		лБазовая = Неопределено;
		ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("Взаиморасчеты", лБазовая);
	Иначе
		лБазовая = ПроведениеДокументовКлиентСервер.ЗначенияДвиженийДокумента(вхСсылкаНаДокумент, Метаданные.РегистрыНакопления.Взаиморасчеты);	
	КонецЕсли;
	
	лРазделенныеБазовая = РаботаСПоследовательностямиКлиентСервер.РазделенныеДанные(лБазовая, лФильтр);
	лИсходная = лРазделенныеБазовая.Включенные;
	лТребуемая = ПроведениеПоВзаиморасчетам(вхСсылкаНаДокумент, вхПараметры);
	лРазностныеДанные = РаботаСПоследовательностямиКлиентСервер.РазностныеДанные(лИсходная, лТребуемая); 
	ПроведениеДокументовКлиентСервер.ЗаписатьДвижения(вхСсылкаНаДокумент, Метаданные.РегистрыНакопления.Взаиморасчеты,
	лРазностныеДанные, лРазделенныеБазовая.Исключенные);
	
	ЗакончитьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, Метаданные.Последовательности.ПоРасчетамСКонтрагентами, вхПараметры);
	
	Если НовоеПроведениеПоВзаиморасчетам И лФильтр = Неопределено Тогда 
		РаботаСПоследовательностямиКлиентСервер.ЗарегистрироватьОбъектПоСсылке(вхСсылкаНаДокумент, "ПоРасчетамСКонтрагентами", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	НачатьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, Метаданные.Последовательности.ПоРасчетамСКонтрагентами, вхПараметры);
	ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(вхСсылкаНаДокумент);
	ЗакончитьКорректировкуГраницПоследовательности(вхСсылкаНаДокумент, Метаданные.Последовательности.ПоРасчетамСКонтрагентами, вхПараметры);
	
	Если глЗначениеПеременной("НовоеПроведениеПоВзаиморасчетам") Тогда 
		РаботаСПоследовательностямиКлиентСервер.ЗарегистрироватьОбъектПоСсылке(вхСсылкаНаДокумент, "ПоРасчетамСКонтрагентами", Ложь);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьЗаписиПоследовательности(вхСсылкаНаДокумент, вхПоследовательность, Проведение) Экспорт 
	
	лМетаданныеПоследовательности = Неопределено;	
	Если (ТипЗнч(вхПоследовательность) = Тип("Строка")) тогда
		лМетаданныеПоследовательности = Метаданные.Последовательности.Найти(вхПоследовательность);
	ИначеЕсли (ТипЗнч(вхПоследовательность) = Тип("ОбъектМетаданных")) И Метаданные.Последовательности.Содержит(вхПоследовательность) тогда
		лМетаданныеПоследовательности = вхПоследовательность;
	КонецЕсли;
	
	Если (лМетаданныеПоследовательности = Неопределено) тогда
		ВызватьИсключение "[ПолучитьДанныеДляПоследовательности]: неправильный параметр номер 1.";
	КонецЕсли;
	
	лМетаданныеДокумента = вхСсылкаНаДокумент.Метаданные();
	Если НЕ лМетаданныеПоследовательности.Документы.Содержит(лМетаданныеДокумента) тогда
		ВызватьИсключение "[ПолучитьДанныеДляПоследовательности]: неправильный параметр номер 1.";
	КонецЕсли;
	
	лРезультат = ОбщегоНазначения.СоздатьСтруктуруПоследовательности(лМетаданныеПоследовательности);
	
	Если (лМетаданныеПоследовательности = Метаданные.Последовательности.ПоРасчетамСКонтрагентами) Тогда
		Если Проведение Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка.Дата КАК Период,
			               |	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка КАК Регистратор,
			               |	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.ДоговорКонтрагента
			               |ИЗ
			               |	Документ.ВводНачальныхОстатковПоВзаиморасчетам.РасчетыСКонтрагентами КАК ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами
			               |ГДЕ
			               |	ВводНачальныхОстатковПоВзаиморасчетамРасчетыСКонтрагентами.Ссылка = &Ссылка
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка.Дата,
			               |	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка,
			               |	ВводНачальныхОстатковПоВзаиморасчетамАвансы.ДоговорКонтрагента
			               |ИЗ
			               |	Документ.ВводНачальныхОстатковПоВзаиморасчетам.Авансы КАК ВводНачальныхОстатковПоВзаиморасчетамАвансы
			               |ГДЕ
			               |	ВводНачальныхОстатковПоВзаиморасчетамАвансы.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл 
				ЗаполнитьЗначенияСвойств(лРезультат.Добавить(), Выборка); 
			КонецЦикла;
		КонецЕсли;
	Иначе 		
		
		ВызватьИсключение "[ПолучитьЗаписиПоследовательности]: неправильный параметр номер 1.";
		
	КонецЕсли;
	
	Результат = ПроведениеДокументовКлиентСервер.ПолучитьМоментыВремени(лМетаданныеПоследовательности, лРезультат);
	Возврат Результат;

КонецФункции