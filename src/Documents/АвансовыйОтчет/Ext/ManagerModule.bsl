Процедура ВыполнитьПроведение(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ВидДвижения,
		|	АвансовыйОтчетВыданныеАвансы.Ссылка.Дата КАК Период,
		|	АвансовыйОтчетВыданныеАвансы.ДокументАванса КАК РасчетныйДокумент,
		|	АвансовыйОтчетВыданныеАвансы.Сумма КАК СуммаВзаиморасчетов,
		|	АвансовыйОтчетВыданныеАвансы.Ссылка.ФизЛицо,
		|	АвансовыйОтчетВыданныеАвансы.Ссылка.ВалютаДокумента КАК Валюта,
		|	АвансовыйОтчетВыданныеАвансы.Ссылка.Организация,
		|	АвансовыйОтчетВыданныеАвансы.Сумма * АвансовыйОтчетВыданныеАвансы.Ссылка.КурсДокумента / АвансовыйОтчетВыданныеАвансы.Ссылка.КратностьДокумента КАК СуммаУпр
		|ИЗ
		|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК АвансовыйОтчетВыданныеАвансы
		|ГДЕ
		|	АвансовыйОтчетВыданныеАвансы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ДатаДокумента", вхСсылкаНаДокумент.Дата);
	
	
	Выборка = запрос.Выполнить().Выгрузить();
	
	Движения = РегистрыНакопления.ВзаиморасчетыСПодотчетнымиЛицами.СоздатьНаборЗаписей();
	Движения.Отбор.Регистратор.Установить(вхСсылкаНаДокумент);
	Движения.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.Записать(Истина);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
КонецПроцедуры