
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	УстановитьСтатусПроверкиБухгалтерией();
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьСтатусПроверкиБухгалтерией()
	
	Если Не ЗначениеЗаполнено(СтатусПроверкиДокументовПокупателя)
		И Не ЗначениеЗаполнено(СтатусПроверкиДокументовПоставщика) Тогда
		
		СтатусПроверкиБухгалтерией = Перечисления.АРВ_СтатусыПроверкиБухгалтерией.ПроверкаНеЗапущена;
		
	ИначеЕсли СтатусПроверкиДокументовПокупателя = Перечисления.АРВ_СтатусыПроверкиДокументовПокупателя.НеПроверены Тогда
		
		СтатусПроверкиБухгалтерией = Перечисления.АРВ_СтатусыПроверкиБухгалтерией.НеобходимоПроверить;
		
	ИначеЕсли СтатусПроверкиДокументовПокупателя = Перечисления.АРВ_СтатусыПроверкиДокументовПокупателя.Запрос
		ИЛИ  СтатусПроверкиДокументовПоставщика = Перечисления.АРВ_СтатусыПроверкиДокументовПоставщика.Запрос Тогда
		
		СтатусПроверкиБухгалтерией = Перечисления.АРВ_СтатусыПроверкиБухгалтерией.ПроисходитПроверка;
		
	ИначеЕсли СтатусПроверкиДокументовПокупателя = Перечисления.АРВ_СтатусыПроверкиДокументовПокупателя.Проверены
		ИЛИ  (СтатусПроверкиДокументовПоставщика = Перечисления.АРВ_СтатусыПроверкиДокументовПоставщика.Проверены
		ИЛИ  СтатусПроверкиДокументовПоставщика = Перечисления.АРВ_СтатусыПроверкиДокументовПоставщика.ПроверкаНеНужна) Тогда
		
		СтатусПроверкиБухгалтерией = Перечисления.АРВ_СтатусыПроверкиБухгалтерией.ПроисходитПроверка;
		
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("СохранитьВИсториюИзменения") Тогда
		
		ПараметрыСобытия = РегистрыСведений.СобытияАктовРассмотренияВозврата.ИнициализироватьСтруктуруПараметровСобытия();
		ПараметрыСобытия.Описание = "Изменен реквизит документа";
		ЗаполнитьЗначенияСвойств(ПараметрыСобытия, Ссылка);
		РегистрыСведений.СобытияАктовРассмотренияВозврата.ДобавитьСобытие(Ссылка, ПараметрыСобытия);
		
	КонецЕсли;

КонецПроцедуры
