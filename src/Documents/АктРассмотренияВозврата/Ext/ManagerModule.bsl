#Область ФормированиеПечатныхФормаДляСайта

Процедура ВыгрузитьПечатныеФормыНаСайт(АктСсылка) Экспорт
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	КаталогОбменаССайтом = ВозвратыОтПокупателяСервер.КаталогОбменаССайтом(Ложь, Истина);
	
	РеквизитыАРВ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(АктСсылка, "Штрихкод, Контрагент.Код, ДокументПродажи.ДоговорКонтрагента.ВидОплаты, Контрагент.РаботаетСНДС");
	
	КаталогСохранения = КаталогОбменаССайтом +"docs\"+ РеквизитыАРВ.Штрихкод +"\";
	СоздатьКаталог(КаталогСохранения);
	
	Если  РеквизитыАРВ.ДокументПродажиДоговорКонтрагентаВидОплаты = Перечисления.ВидыДенежныхСредств.Наличные Тогда
		Возврат;		
	КонецЕсли;
	
	МассивИменФайлов = Новый Массив; 
	
	//Торг-12
	ИмяФайлаТорг12 	= КаталогВременныхФайлов + "" + РеквизитыАРВ.КонтрагентКод + "_ТОРГ12.xls";
	Торг12 			= ПечатьТОРГ12(АктСсылка);
	Торг12.Записать(ИмяФайлаТорг12, ТипФайлаТабличногоДокумента.XLS);
	МассивИменФайлов.Добавить(ИмяФайлаТорг12);
	
	//СФ
	Если РеквизитыАРВ.КонтрагентРаботаетСНДС Тогда
		ИмяФайлаСФ 		= КаталогВременныхФайлов + "" + РеквизитыАРВ.КонтрагентКод + "_СФ.xls";
		СФ 				= ПечатьСчетаФактуры(АктСсылка);
		СФ.Записать(ИмяФайлаСФ, ТипФайлаТабличногоДокумента.XLS);
		МассивИменФайлов.Добавить(ИмяФайлаСФ);
	КонецЕсли;
	
	ИмяАрхива	= КаталогСохранения+"arc.zip";
	ЗапаковатьВZipФайл(ИмяАрхива, МассивИменФайлов);
	
	УдалитьФайлы(ИмяФайлаТорг12);
	Если РеквизитыАРВ.КонтрагентРаботаетСНДС Тогда
		УдалитьФайлы(ИмяФайлаСФ);
	КонецЕсли;
	
КонецПроцедуры

// Запаковывает указанный каталог в файл архива ZIP
//
// Параметры:
//  ПолноеИмяФайлаАрхива  - Строка - имя файла архива, в который необходимо запаковать
//  МаскаУпаковкиФайлов    - Строка - имя файла, помещаемого в архив, или маска.
//			Недопустимо использование в именах файлов и папок букв национальных алфавитов, которые при 
//			преобразовании из символов UNICODE в узкие символы могут быть преобразованы с потерей информации. 
//			Рекомендуется использовать в именах файлов и папок символы латинского алфавита. 
//  ПарольАрхива          - Строка - пароль для архива. По умолчанию пустая строка
// 
// Возвращаемое значение:
//  Результат - Булево - Истина, если успешно, Ложь, если нет.
//
Функция ЗапаковатьВZipФайл(Знач ПолноеИмяФайлаАрхива, Знач МассивИменФайлов, Знач ПарольАрхива = "") Экспорт
	
	Архиватор = Новый ЗаписьZipФайла(ПолноеИмяФайлаАрхива, ПарольАрхива);
	
	Для каждого ИмяФайла Из МассивИменФайлов Цикл
		Архиватор.Добавить(ИмяФайла, РежимСохраненияПутейZIP.НеСохранятьПути);
	КонецЦикла;	
	Архиватор.Записать();
	
КонецФункции  

#КонецОбласти

#Область ФормированиеБланкаВозврата

Функция ВыгрузитьБланкВозвратаНаСайт(АктСсылка) Экспорт
	
	ТекстСообщенияДляСайта = ТекстСообщенияДляСайта(АктСсылка);
	
	КаталогОбменаССайтом = ВозвратыОтПокупателяСервер.КаталогОбменаССайтом(Ложь, Истина);
	
	Штрихкод = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АктСсылка, "Штрихкод");
	
	ИмяФайла = "send_"+Штрихкод+".txt";

	ЗаписьТекста = Новый ЗаписьТекста(КаталогОбменаССайтом + ИмяФайла, КодировкаТекста.ANSI);
	ЗаписьТекста.ЗаписатьСтроку(ТекстСообщенияДляСайта);
	ЗаписьТекста.Закрыть();	
	
КонецФункции

Функция ТекстСообщенияДляСайта(АктСсылка) Экспорт
	
	ТаблицаОписание = ОписаниеТоваровАкта(АктСсылка);
	
	ЧастьСообщения1 = ЧастьСообщения1(АктСсылка);
	
	ЧастьСообщения2 = ЧастьСообщения2(АктСсылка, ТаблицаОписание);
	
	ЧастьСообщения3 = БланкВозврата(АктСсылка, ТаблицаОписание);
	
	ИтоговоеСообщение = ЧастьСообщения1 + ЧастьСообщения2 + ЧастьСообщения3;
	
	Возврат ИтоговоеСообщение;
	
КонецФункции

Функция ЧастьСообщения1(АктСсылка)

	ЧастьСообщения1 = ""+АктСсылка.Штрихкод+"
	|"+ПараметрыСеанса.ТекущийПользователь+"
	|1 //решение: принять = 1, отказать = 2 (??)
	|0 //Открыть повторный запрос: Да = 1, нет = 0 (??)
	|---
	|";
	
	Возврат ЧастьСообщения1;

КонецФункции

Функция ЧастьСообщения2(АктСсылка, ТаблицаОписание)
	
	ТекстСообщения = "Здравствуйте!
	|
	| В ответ на Ваш запрос сообщаем:
	|
	| %Префикс%
	| %ИнформацияОТоварах%
	|
	| Для осуществления возврата перейдите по ссылке и следуйте инструкции.
	|
	|
	|---
	|";
	
	Если АктСсылка.КодВозврата = Справочники.КодыВозврата.НаЭкспертизу Тогда
		Префикс = "Мы готовы принять на ЭКСПЕРТИЗУ (осмотр): ";
	Иначе
		Префикс = "Мы готовы принять к возврату: ";
	КонецЕсли;
	
	ИнформацияОТоварах = "";
	Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
		ИнформацияОТоварах = ИнформацияОТоварах + Символы.ПС + СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул + " в кол-ве " + СтрокаТаблицы.Количество + " шт."
	КонецЦикла;
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Префикс%", Префикс);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИнформацияОТоварах%", ИнформацияОТоварах);
	
	Возврат ТекстСообщения;

КонецФункции

//ЧастьСообщения3
Функция БланкВозврата(АктСсылка, ТаблицаОписание)
	
	БланкВозврата = "
	| Решение по запросу %Контрагент% № %Штрихкод% от %Дата%:
	|
	| %Префикс%
	| %ИнформацияОТоварах%
	|
	| Описание в запросе покупателя: %Описание%
	| Служебные данные: %Логин%
	| ===================================================================================
	| \n
	| Уважаемый Партнер!
	|
	| %ПринятоРешение%
	|
	| Просим Вас:
	| <b>1. Распечатать данный бланк возврата - 1 экз., подписать и поставить печать Вашей организации.</b>
	| %ИнформацияОДокументе%
	| В документах должен быть указан товар:
	| %ИнформацияОТоваре%
	|
	| <b>Внимание!</b>
	| Для исключения ошибок при оформлении документов, предлагаем получить на почту готовые документы на возврат. Для этого перейдите в раздел ""Сообщения"" к запросу о возврате товара и нажмите «Получить».
	| <big><b>3. Привезти товар на %Склад% склад с пакетом документов (п. 2) и бланком возврата в срок до %СрокВозвратаКлиента%.</b></big>
	| 4. Предоставить товар в том виде, который был указан при формировании Вами запроса на нашем сайте
	| -
	| %УпаковкаСледыУстановки%
	| \n
	| Обращаем Ваше внимание!
	| Мы не сможем принять товар к возврату без соблюдения условий, указанных в данном бланке.
	| Выражаем надежду на дальнейшее продуктивное сотрудничество!
	| ===================================================================================
	| <b>Комментарий сотрудника компании ""ПартКом"":
	| Срок возврата товара на склад Компании до: %СрокВозвратаКлиента%.
	| Ваш запрос одобрен.
	| Пожалуйста, изучите информацию, содержащуюся в бланке возврата.
	| При соблюдении всех условий, мы гарантируем успешный возврат детали.
	| Спасибо!
	|
	| ВНИМАНИЕ!!!
	| Деталь принимается только при условии сохранности товарного вида и целостности упаковки.
	| </b>
	|
	| По всем вопросам, связанным с данным ответом, просим обращаться в Группу поддержки Клиентов по телефону:
	|(831) 233-22-07 — многоканальный (10 линий).
	|---
	| %КодВозврата%
	|---
	| %СуммаДокумента%";

	
	НомерРТУ = АктСсылка.ДокументПродажи.Номер;
	ДатаРТУ  = АктСсылка.ДокументПродажи.Дата;
	УчетнаяЗапись = Справочники.УчетныеЗаписиСайта.ДанныеУчетнойЗаписиКонтрагента(АктСсылка.Контрагент);
	
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Контрагент%",  		АктСсылка.Контрагент);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Штрихкод%",  			АктСсылка.Штрихкод);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Дата%",  				АктСсылка.Дата);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Описание%",  			АктСсылка.КомментарийСайт);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Логин%",  				УчетнаяЗапись.Логин);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%КодВозврата%",			АктСсылка.КодВозврата.Код);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%СуммаДокумента%",		АктСсылка.СуммаДокумента);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Склад%", 				АктСсылка.Склад);
	БланкВозврата = СтрЗаменить(БланкВозврата, "%СрокВозвратаКлиента%", Формат(АктСсылка.СрокВозвратаКлиента, "ДФ=dd.MM.yyyy"));
	
	ИнформацияОДокументе = "";	
	Если Не АктСсылка.ДоговорКонтрагента.ВидОплаты = Перечисления.ВидыДенежныхСредств.Наличные Тогда
		ИнформацияОДокументе = "Оформить пакет документов: накладная ТОРГ-12, счет-фактура с НДС 18%, оформленные в 2-х экземплярах на " + АктСсылка.Организация + ".";
		СтрокиСБраком = ТаблицаОписание.НайтиСтроки(Новый Структура("ПричинаВозврата", Перечисления.ПричиныВозврата.Брак));
		Если СтрокиСБраком.Количество() > 0 Тогда //"«Причина возврата» = «брак, СТО»"
			ИнформацияОДокументе = ИнформацияОДокументе + " Акт рекламации СТО, Заказ-наряд СТО с подтверждением оплаты работ.";
		КонецЕсли;
	КонецЕсли;
	БланкВозврата = СтрЗаменить(БланкВозврата, "%ИнформацияОДокументе%", "2." + ИнформацияОДокументе);
	
	Если АктСсылка.КодВозврата = Справочники.КодыВозврата.НаЭкспертизу Тогда
		Префикс = "Принять на экспертизу (осмотр): ";
	Иначе
		Префикс = "Принять к возврату товар: ";
	КонецЕсли;
	БланкВозврата = СтрЗаменить(БланкВозврата, "%Префикс%",  			Префикс);
	
	ИнформацияОТоварах = "";
	Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
		ИнформацияОТоварах = ИнформацияОТоварах + Символы.ПС + СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул + " в количестве " + СтрокаТаблицы.Количество + " шт."+ ", отгруженный со склада по накладной № " + НомерРТУ + " от " + ДатаРТУ + ".";
		ИнформацияОТоварах = ИнформацияОТоварах + Символы.ПС + "Причина возврата: "+СтрокаТаблицы.ПричинаВозврата;
	КонецЦикла; 
	БланкВозврата = СтрЗаменить(БланкВозврата, "%ИнформацияОТоварах%",  ИнформацияОТоварах);
	
	ПринятоРешение = "Принято решение удовлетворить Ваш запрос о возврате товара:";
	Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
		
		СтрокаУценки = "";
		Если СтрокаТаблицы.ПроцентУценки > 0 Тогда
			СтрокаУценки = ", с уценкой " + СтрокаТаблицы.ПроцентУценки + "%";
		КонецЕсли;
		СтрокаКомпенсации = "";
		Если СтрокаТаблицы.СуммаКомпенсации > 0 Тогда
			СтрокаКомпенсации = ", с компенсацией работ за проведённую установку " + СтрокаТаблицы.СуммаКомпенсации + " руб.";
		КонецЕсли;
		
		Стр = СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул + СтрокаУценки + СтрокаКомпенсации;
		ПринятоРешение = ПринятоРешение + Символы.ПС + Стр;
		
	КонецЦикла;
	БланкВозврата = СтрЗаменить(БланкВозврата, "%ПринятоРешение%", ПринятоРешение);
	
	//ИнформацияОДокументе = "";
	//Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
	//	ИнформацияОДокументе = ИнформацияОДокументе + ?(ЗначениеЗаполнено(ИнформацияОДокументе), Символы.ПС, "") + СтрокаТаблицы.ИнформацияОДокументе;
	//КонецЦикла;
	//БланкВозврата = СтрЗаменить(БланкВозврата, "%ИнформацияОДокументе%", ИнформацияОДокументе);
	
	ИнформацияОТоваре = "";
	Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
		ИнформацияОТоваре = ИнформацияОТоваре + ?(ЗначениеЗаполнено(ИнформацияОТоваре), Символы.ПС, "") + СтрокаТаблицы.ИнформацияОТоваре;
		ИнформацияОТоваре = ИнформацияОТоваре + ?(ЗначениеЗаполнено(ИнформацияОТоваре), Символы.ПС, "") + СтрокаТаблицы.ИнформацияСчетФактура;
	КонецЦикла;
	БланкВозврата = СтрЗаменить(БланкВозврата, "%ИнформацияОТоваре%", ИнформацияОТоваре);
	
	//Упаковка = "";
	//Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
	//	Упаковка = Упаковка + ?(ЗначениеЗаполнено(Упаковка), Символы.ПС, "") + СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул + " " + СтрокаТаблицы.ИнформацияОбУпаковке;
	//КонецЦикла;
	//БланкВозврата = СтрЗаменить(БланкВозврата, "%Упаковка%", Упаковка);
	//
	//СледыУстановки = "";
	//Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
	//	СледыУстановки = СледыУстановки + ?(ЗначениеЗаполнено(СледыУстановки), Символы.ПС, "") + СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул + " " + СтрокаТаблицы.ИнформацияОСледахУстановки;
	//КонецЦикла;
	//БланкВозврата = СтрЗаменить(БланкВозврата, "%СледыУстановки%", СледыУстановки);
	
	УпаковкаСледыУстановки = "";
	Для каждого СтрокаТаблицы Из ТаблицаОписание Цикл
		УпаковкаСледыУстановки = УпаковкаСледыУстановки + ?(ЗначениеЗаполнено(УпаковкаСледыУстановки), Символы.ПС, "") + СтрокаТаблицы.НоменклатураНаименование + ", " + СтрокаТаблицы.Изготовитель + " " + СтрокаТаблицы.Артикул+ " " + СтрокаТаблицы.ИнформацияОбУпаковке + " " + СтрокаТаблицы.ИнформацияОСледахУстановки;
	КонецЦикла;
	БланкВозврата = СтрЗаменить(БланкВозврата, "%УпаковкаСледыУстановки%", УпаковкаСледыУстановки);
	
	
	Возврат БланкВозврата;

Конецфункции

Функция ОписаниеТоваровАкта(АктСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктРассмотренияВозвратаТовары.Номенклатура,
	|	АктРассмотренияВозвратаТовары.Номенклатура.Наименование,
	|	АктРассмотренияВозвратаТовары.Номенклатура.Изготовитель КАК Изготовитель,
	|	АктРассмотренияВозвратаТовары.Номенклатура.Артикул КАК Артикул,
	|	АктРассмотренияВозвратаТовары.ЕдиницаИзмерения,
	|	АктРассмотренияВозвратаТовары.Количество,
	|	АктРассмотренияВозвратаТовары.Цена,
	|	АктРассмотренияВозвратаТовары.СтавкаНДС,
	|	АктРассмотренияВозвратаТовары.СуммаНДС,
	|	АктРассмотренияВозвратаТовары.Сумма,
	|	АктРассмотренияВозвратаТовары.ПроцентУценки,
	|	АктРассмотренияВозвратаТовары.ЦенаПослеУценки,
	|	АктРассмотренияВозвратаТовары.ВидУценки,
	|	АктРассмотренияВозвратаТовары.СуммаКомпенсации,
	|	АктРассмотренияВозвратаТовары.Ссылка.ПричинаВозврата КАК ПричинаВозврата,
	|	АктРассмотренияВозвратаТовары.ЦелостностьУпаковки,
	|	АктРассмотренияВозвратаТовары.ОтсутствуютСледыУстановки,
	|	АктРассмотренияВозвратаТовары.СтрокаПрихода.НомерГТД КАК НомерГТД,
	|	АктРассмотренияВозвратаТовары.СтрокаПрихода.СтранаПроисхождения КАК СтранаПроисхождения,
	|	АктРассмотренияВозвратаТовары.СтавкаНДС
	|ИЗ
	|	Документ.АктРассмотренияВозврата.Товары КАК АктРассмотренияВозвратаТовары
	|ГДЕ
	|	АктРассмотренияВозвратаТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", АктСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаОписание = РезультатЗапроса.Выгрузить();
	ТаблицаОписание.Колонки.Добавить("ИнформацияОТоваре");
	ТаблицаОписание.Колонки.Добавить("ИнформацияОДокументе");
	ТаблицаОписание.Колонки.Добавить("ИнформацияОбУпаковке");
	ТаблицаОписание.Колонки.Добавить("ИнформацияОСледахУстановки");
	ТаблицаОписание.Колонки.Добавить("ИнформацияСчетФактура");
	
	Наличные = АктСсылка.ДоговорКонтрагента.ВидОплаты = Перечисления.ВидыДенежныхСредств.Наличные;	
	
	Для Каждого Выборка ИЗ  ТаблицаОписание Цикл
		
		//ИнфТовар
		Сумма = Выборка.Сумма + Выборка.СуммаКомпенсации;
		СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Сумма,
		АктСсылка.УчитыватьНДС, АктСсылка.СуммаВключаетНДС,
		УчетНДС.ПолучитьСтавкуНДС(Выборка.СтавкаНДС));
		
		СтрокаУценки = "по цене - ";
		Если  Выборка.ПроцентУценки > 0 Тогда
			СтрокаУценки = "по цене с учётом уценки " + Выборка.ПроцентУценки + "% - ";
		КонецЕсли;
		
		СтрокаНДС = 0;
		Если Не Наличные Тогда
			СтрокаНДС = " в том числе НДС - " + СуммаНДС + " руб. ";
		КонецЕсли;
		
		ИнфТовар = Выборка.НоменклатураНаименование + ", "+Выборка.Изготовитель+", "+Выборка.Артикул+", в кол-ве " + Выборка.Количество + "шт., " + СтрокаУценки + Выборка.ЦенаПослеУценки+ " руб. на общую сумму- " + Выборка.Сумма + " руб." + СтрокаНДС;
		
		Если Выборка.ВидУценки = Перечисления.ВидыУценки.ОбработкаОднойДетали И Выборка.ПроцентУценки > 0 Тогда //«Вид уценки» = "Обработка одной детали"
			ИнфТовар = ИнфТовар + " Стоимость обработки 1 детали составила " + "Что тут(??)" + " руб.";
		КонецЕсли;
		
		//ИнфДок
		//Если Не Наличные Тогда
		//	ИнфДок = "Оформить пакет документов: накладная ТОРГ-12, счет-фактура с НДС 18%, оформленные в 2-х экземплярах на " + АктСсылка.Организация + ".";
		//КонецЕсли;
		//
		//Если Выборка.ПричинаВозврата = Перечисления.ПричиныВозврата.Брак Тогда //"«Причина возврата» = «брак, СТО»"
		//	ИнфДок = ИнфДок + ", акт рекламации СТО, Заказ-наряд СТО с подтверждением оплаты работ";
		//КонецЕсли;
		
		//Упаковка
		Если Выборка.ЦелостностьУпаковки Тогда
			Упаковка = "- Сохранена упаковка и её товарный вид.";
		Иначе
			Упаковка = "- Упаковка отсутствует или потерян её товарный вид.";
		КонецЕсли;
		
		//СледыУст
		Если Выборка.ОтсутствуютСледыУстановки Тогда
			СледыУст = "- Товар не имеет признаков использования, отсутствуют следы установки, сохранен товарный вид.";
		Иначе
			СледыУст = "- Товар имеет следы установки.";
		КонецЕсли;
		
		ГТД = Выборка.НомерГТД;
		Страна = Выборка.СтранаПроисхождения;
		СчетФактура = "";
		Если НЕ Наличные Тогда
			СчетФактура = "Счет-фактура должна содержать данные о ГТД и стране происхождения: номер ГТД: " + ГТД + ", страна происхождения: " + Страна + "."
		КонецЕсли;
		
		Выборка.ИнформацияОТоваре 			= ИнфТовар;
		//Выборка.ИнформацияОДокументе 		= ИнфДок;
		Выборка.ИнформацияОбУпаковке 		= Упаковка;
		Выборка.ИнформацияОСледахУстановки 	= СледыУст;
		Выборка.ИнформацияСчетФактура 		= СчетФактура;
		
	КонецЦикла;
	
	Возврат ТаблицаОписание;
	
КонецФункции

#КонецОбласти

#Область Прочее

//Контроль ручного изменения реквизитов
Функция ИменаРеквизитовДляКонтроляИстории() Экспорт
	
	ИменаРеквизитов = Новый СписокЗначений;	
	ИменаРеквизитов.Добавить("КодВозврата", "Код возврата"); 
	ИменаРеквизитов.Добавить("Организация", "Организация"); 
	ИменаРеквизитов.Добавить("Контрагент", "Контрагент"); 
	ИменаРеквизитов.Добавить("ДоговорКонтрагента", "Договор контрагента"); 
	ИменаРеквизитов.Добавить("БезоговорочныйВозврат", "Безоговорочный возврат"); 
	ИменаРеквизитов.Добавить("СуммаДокумента", "Сумма документа"); 
	ИменаРеквизитов.Добавить("СтатусДокумента", "Статус документа"); 
	ИменаРеквизитов.Добавить("Ответственный", "Ответственный"); 
	
	Возврат ИменаРеквизитов;
	
КонецФункции

Функция СтруктураРеквизитовДляКонтроляИстории() Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	ИменаРеквизитов = ИменаРеквизитовДляКонтроляИстории();
	Для каждого ЭлСписка Из ИменаРеквизитов цикл
		СтруктураРеквизитов.Вставить(ЭлСписка.Значение, Неопределено);
	КонецЦикла;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

//Проверка уникальности 
Функция АРВУникаленПоШтрихкоду(СсылкаНаДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктРассмотренияВозврата.Ссылка
		|ИЗ
		|	Документ.АктРассмотренияВозврата КАК АктРассмотренияВозврата
		|ГДЕ
		|	НЕ АктРассмотренияВозврата.Ссылка = &Ссылка
		|	И АктРассмотренияВозврата.Штрихкод = &Штрихкод
		|	И АктРассмотренияВозврата.Проведен";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("Штрихкод", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаДокумент, "Штрихкод"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти




#Область Печать

Функция ПечатьТОРГ12(вхСсылкаНаДокумент, Макет = Неопределено) Экспорт
	
	мВалютаРегламентированногоУчета = константы.ВалютаРегламентированногоУчета.Получить();	
	
	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          вхСсылкаНаДокумент.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", вхСсылкаНаДокумент.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",    вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктРассмотренияВозврата.НомерНакладнойКлиента КАК Номер,
	|	АктРассмотренияВозврата.ДатаНакладнойКлиента КАК ДатаДокумента,
	|	АктРассмотренияВозврата.Организация,
	|	АктРассмотренияВозврата.Контрагент КАК ЮрФизЛицо,
	|	АктРассмотренияВозврата.Контрагент КАК Поставщик,
	|	АктРассмотренияВозврата.Контрагент КАК Контрагент,
	|	АктРассмотренияВозврата.Контрагент КАК Руководители,
	|	АктРассмотренияВозврата.Контрагент КАК Грузоотправитель,
	|	АктРассмотренияВозврата.Организация КАК Грузополучатель,
	|	АктРассмотренияВозврата.Контрагент.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	АктРассмотренияВозврата.Организация КАК Покупатель,
	|	АктРассмотренияВозврата.Контрагент.Код КАК КодКлиента,
	|	АктРассмотренияВозврата.Организация КАК Плательщик,
	|	NULL КАК Сделка,
	|	NULL КАК СделкаНомер,
	|	NULL КАК СделкаДата,
	|	АктРассмотренияВозврата.ДокументПродажи КАК Основание,
	|	АктРассмотренияВозврата.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом КАК ВедениеВзаиморасчетовПоДокументам,
	|	АктРассмотренияВозврата.ДокументПродажи.Номер КАК ОснованиеНомер,
	|	АктРассмотренияВозврата.ДокументПродажи.Дата КАК ОснованиеДата,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	АктРассмотренияВозврата.Склад.Подразделение КАК Подразделение,
	|	"""" КАК ВалютаДокумента,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	АктРассмотренияВозврата.УчитыватьНДС,
	|	АктРассмотренияВозврата.СуммаВключаетНДС,
	|	"""" КАК ОтпускРазрешил,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК АдресДоставки,
	|	АктРассмотренияВозврата.Контрагент.РаботаетСНДС КАК ОрганизацияУчитыватьНДС
	|ИЗ
	|	Документ.АктРассмотренияВозврата КАК АктРассмотренияВозврата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|		ПО (ОтветственныеЛица.СтруктурнаяЕдиница = АктРассмотренияВозврата.Склад)
	|ГДЕ
	|	АктРассмотренияВозврата.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , Шапка.ОрганизацияУчитыватьНДС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Наименование КАК ТоварНаименованиеКраткое,
	|	"""" КАК ТоварКод,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК ТоварАртикул,
	|	ВложенныйЗапрос.Номенклатура.Изготовитель.Наименование КАК ТоварПроизводительНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	1 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0
	|			ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.Комм_с_Сайта КАК Комм_с_Сайта,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ЛОЖЬ КАК ЕстьСкидкиПоСтроке,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка КАК Метка,
	|	ВложенныйЗапрос.ПроцентСкидкиНаценки + ВложенныйЗапрос.ПроцентАвтоматическихСкидок КАК Скидка
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктРассмотренияВозврата.Номенклатура КАК Номенклатура,
	|		АктРассмотренияВозврата.Коэффициент КАК Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения.Коэффициент КАК КоэффициентМест,
	|		NULL КАК Характеристика,
	|		NULL КАК Серия,
	|		ЕСТЬNULL(ЗаявкаПокупателя.КомментарийИзСайта, """") КАК Комм_с_Сайта,
	|		ВЫБОР
	|			КОГДА &УчитыватьНДС
	|				ТОГДА АктРассмотренияВозврата.СтавкаНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		КОНЕЦ КАК СтавкаНДС,
	|		АктРассмотренияВозврата.Цена КАК Цена,
	|		0 КАК ПроцентСкидкиНаценки,
	|		0 КАК ПроцентАвтоматическихСкидок,
	|		СУММА(АктРассмотренияВозврата.Количество) КАК Количество,
	|		СУММА(АктРассмотренияВозврата.Количество) КАК КоличествоМест,
	|		СУММА(АктРассмотренияВозврата.Сумма) КАК Сумма,
	|		СУММА(ВЫБОР
	|				КОГДА &УчитыватьНДС
	|					ТОГДА АктРассмотренияВозврата.СуммаНДС
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаНДС,
	|		МИНИМУМ(АктРассмотренияВозврата.НомерСтроки) КАК НомерСтроки,
	|		0 КАК Метка
	|	ИЗ
	|		Документ.АктРассмотренияВозврата.Товары КАК АктРассмотренияВозврата
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателя
	|			ПО АктРассмотренияВозврата.СтрокаЗаявки = ЗаявкаПокупателя.СтрокаЗаявки
	|				И (НЕ АктРассмотренияВозврата.СтрокаЗаявки = ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка))
	|	ГДЕ
	|		АктРассмотренияВозврата.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктРассмотренияВозврата.Номенклатура,
	|		АктРассмотренияВозврата.Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения,
	|		ЕСТЬNULL(ЗаявкаПокупателя.КомментарийИзСайта, """"),
	|		АктРассмотренияВозврата.СтавкаНДС,
	|		АктРассмотренияВозврата.Цена,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения.Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения) КАК ВложенныйЗапрос";
	
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	ТабДокумент  = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабДокумент.ТолькоПросмотр          = Истина;
	ТабДокумент.КоличествоЭкземпляров   = 2;
	
	Макет = ПолучитьОбщийМакет("ТОРГ12");
	ОбластьМакета = Макет.ПолучитьОбласть("КодКлиента");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Попытка
		ОбластьМакета = Макет.ПолучитьОбласть("ШК");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
	Исключение
	КонецПопытки;
	
	Попытка
		ОбластьМакета = Макет.ПолучитьОбласть("НомерДок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
	Исключение
	КонецПопытки;	
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	СведенияОПокупателе       = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	
	Если СокрЛП(Шапка.АдресДоставки) <> "" Тогда
		ОбластьМакета.Параметры.АдресДоставки = СокрЛП(Шапка.АдресДоставки);
	Иначе
		ОбластьМакета.Параметры.АдресДоставки = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ФактическийАдрес");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	
	ОснованиеДатаПечать = Формат(Шапка.ОснованиеДата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Основание 		=  "возврат по накладной № "+Шапка.ОснованиеНомер + " от " + ОснованиеДатаПечать;
	ОбластьМакета.Параметры.ОснованиеНомер = Шапка.ОснованиеНомер;
	ОбластьМакета.Параметры.ОснованиеДата  = ОснованиеДатаПечать;
	
	// Выводим всевозможные коды
	ОбластьМакета.Параметры.ОрганизацияПоОКПО     = СведенияОГрузоотправитель.КодПоОКПО;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ГрузополучательПоОКПО = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПоставщикПоОКПО       = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО      = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	НомерСтраницы   = 1;
	
	КоличествоСтрок = ЗапросТовары.Количество();
	
	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;
	
	// инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
	ИтогоСуммаСНДС   = 0;
	ИтогоСумма       = 0;
	ИтогоНДС         = 0;
	Ном              = 0;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		Ном           = Ном + 1;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.Номер             = ЗапросТовары.Индекс(ВыборкаСтрок) + 1;
		
		Если НЕ ПустаяСтрока(СокрЛП(ВыборкаСтрок.ТоварНаименование)) Тогда
			ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		Иначе
			ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименованиеКраткое);
		КонецЕсли;	
		Если ВыборкаСтрок.Номенклатура.Услуга Тогда 
			ВыборкаСтрок.ТоварНаименование = ВыборкаСтрок.Номенклатура.Наименование;
			ВыборкаСтрок.ТоварНаименованиеКраткое = ВыборкаСтрок.Номенклатура.Наименование;
			ВыборкаСтрок.БазоваяЕдиницаКодПоОКЕИ = "--";
			ВыборкаСтрок.ЕдиницаИзмерения = "--";
			ВыборкаСтрок.БазоваяЕдиницаНаименование = "--";
			ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.Номенклатура.Наименование; 
		Иначе 	
			ОбластьМакета.Параметры.ТоварНаименование = ?(ПустаяСтрока(ВыборкаСтрок.ТоварАртикул), "", ВыборкаСтрок.ТоварАртикул + " || ") + ТоварНаименование + ?(ПустаяСтрока(ВыборкаСтрок.ТоварПроизводительНаименование), "", " || " + ВыборкаСтрок.ТоварПроизводительНаименование);
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			МассаБрутто = 0;
		Иначе
			МассаБрутто = ВыборкаСтрок.МассаБрутто;
			МассаБрутто = ?(МассаБрутто <> Неопределено И МассаБрутто <> NULL, МассаБрутто, 0);
		КонецЕсли;
		
		Мест        = ВыборкаСтрок.КоличествоМест;
		Мест        = ?(Мест <> Неопределено И Мест <> NULL, Мест, 0);
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		СуммаНДС    = Окр(ВыборкаСтрок.СуммаНДС, 2);
		СуммаБезНДС = СуммаСНДС  - СуммаНДС;
		
		ОбластьМакета.Параметры.МассаБрутто = МассаБрутто;
		ОбластьМакета.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакета.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакета.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
		ОбластьМакета.Параметры.СуммаБезНДС = СуммаБезНДС;
		
		Если Шапка.СуммаВключаетНДС
			Или ВыборкаСтрок.ЕстьСкидкиПоСтроке Тогда
			ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаБезНДС / Количество);
		Иначе
			ОбластьМакета.Параметры.Цена = ВыборкаСтрок.Цена;
		КонецЕсли;
		
		Если Ном = 1 Тогда // первая срока
			
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
			
		Иначе
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьВсего);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;		
			
			Если Ном <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
				ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
				
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				// очистим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = 0;
				ИтогоКоличествоНаСтранице  = 0;
				ИтогоСуммаНаСтранице       = 0;
				ИтогоНДСНаСтранице         = 0;
				ИтогоСуммаСНДСНаСтранице   = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			КонецЕсли;
			
		КонецЕсли;		
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по странице
		ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБрутто;
		ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + Мест;
		ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + Количество;
		ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + СуммаБезНДС;
		ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + СуммаСНДС;
		
		// увеличим итоги по дукументу
		ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
		ИтогоМест        = ИтогоМест        + Мест;
		ИтогоКоличество  = ИтогоКоличество  + Количество;
		ИтогоСумма       = ИтогоСумма       + СуммаБезНДС;
		ИтогоНДС         = ИтогоНДС         + СуммаНДС;
		ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогМест        = ИтогоМест;
	ОбластьМакета.Параметры.ИтогКоличество  = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогСуммы       = ИтогоСумма;
	ОбластьМакета.Параметры.ИтогНДС         = ИтогоНДС;
	ОбластьМакета.Параметры.ИтогСуммыСНДС   = ИтогоСуммаСНДС;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ПолнаяДатаДокумента = Формат(Шапка.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки-ПервыйРазделитель)," ")+ПервыйРазделитель;
	ОбластьМакета.Параметры.ДатаДокументаДень     = """"+Лев(ПолнаяДатаДокумента,ПервыйРазделитель-1)+"""";
	ОбластьМакета.Параметры.ДатаДокументаМесяц    = Сред(ПолнаяДатаДокумента,ПервыйРазделитель+1,ВторойРазделитель-ПервыйРазделитель-1);
	ОбластьМакета.Параметры.ДатаДокументаГод      = Прав(ПолнаяДатаДокумента,ДлинаСтроки-ВторойРазделитель);	
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	// Главный бухгалтер
	ОбластьМакета.Параметры.ФИОГлавБухгалтера = Бухгалтер;
	
	// Отпуск товара разрешил
	Если НЕ ЗначениеЗаполнено(Шапка.ОтпускРазрешил) Тогда
		ФИООтпускРазрешил       = Руководитель;
		ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	Иначе
		ФамилияИмяОтчествоФизЛица        = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Шапка.ОтпускРазрешил, Шапка.ДатаДокумента);
		ПодразделениеДолжностьФизЛица    = ФормированиеПечатныхФорм.ДолжностьОтветственногоЛицаОрганизации(Шапка.ОтпускРазрешил, Шапка.ДатаДокумента, вхСсылкаНаДокумент.Организация);
		ФамилияИмяОтчествоОтпускРазрешил = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
		ФИООтпускРазрешил                = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтпускРазрешил);
		ДолжностьОтпускРазрешил          = ПодразделениеДолжностьФизЛица.Должность;
	КонецЕсли;
	
	ОбластьМакета.Параметры.ФИОРуководителя       = ФИООтпускРазрешил;
	ОбластьМакета.Параметры.ДолжностьРуководителя = ДолжностьОтпускРазрешил;
	
	// Отпуск товара произвел
	Если НЕ ЗначениеЗаполнено(Шапка.ОтпускПроизвел) Тогда
		ФамилияИмяОтчествоФизЛица     = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Шапка.ОтветственноеЛицо, Шапка.ДатаДокумента);
		ПодразделениеДолжностьФизЛица = ФормированиеПечатныхФорм.ДолжностьОтветственногоЛицаОрганизации(Шапка.ОтветственноеЛицо, Шапка.ДатаДокумента, вхСсылкаНаДокумент.Организация);
	Иначе
		ФамилияИмяОтчествоФизЛица     = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Шапка.ОтпускПроизвел, Шапка.ДатаДокумента);
		ПодразделениеДолжностьФизЛица = ФормированиеПечатныхФорм.ДолжностьОтветственногоЛицаОрганизации(Шапка.ОтпускПроизвел, Шапка.ДатаДокумента, вхСсылкаНаДокумент.Организация);
	КонецЕсли;
	
	ФамилияИмяОтчествоОтпускПроизвел = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
	ФИООтпускПроизвел                = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтпускПроизвел);
	ДолжностьОтпускПроизвел          = ПодразделениеДолжностьФизЛица.Должность;
	
	ОбластьМакета.Параметры.ФИОКладовщика       = ФИООтпускПроизвел;
	ОбластьМакета.Параметры.ДолжностьКладовщика = ДолжностьОтпускПроизвел;
	
	// Доверенность
	ОбластьМакета.Параметры.ДоверенностьНомер     = Шапка.ДоверенностьНомер;
	ОбластьМакета.Параметры.ДоверенностьДата      = Формат(Шапка.ДоверенностьДата, "ДФ='дд ММММ гггг'");
	ОбластьМакета.Параметры.ДоверенностьВыдана    = Шапка.ДоверенностьВыдана;
	ОбластьМакета.Параметры.ДоверенностьЧерезКого = Шапка.ДоверенностьЧерезКого;
	
	Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтогоМассаБрутто > 0 Тогда
		ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
	КонецЕсли;
	
	Если ИтогоМест > 0 Тогда
		ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	КонецЕсли;
	
	ПоследняяЦифра = Прав(Строка(НомерСтраницы), 1);
	Суффикс = ?(ПоследняяЦифра = "1", " листе", " листах"); 
	ОбластьМакета.Параметры.КоличествоЛистовВПриложении = Строка(НомерСтраницы) + Суффикс;
	
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаСНДС, мВалютаРегламентированногоУчета);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьСчетаФактуры(вхСсылкаНаДокумент, Макет = Неопределено) Экспорт

	мВалютаРегламентированногоУчета = константы.ВалютаРегламентированногоУчета.Получить();	
	
	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          вхСсылкаНаДокумент.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", вхСсылкаНаДокумент.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",    вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВалютаДокумента"   , ПараметрыСеанса.ВалютаРубль);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктРассмотренияВозврата.ДатаНакладнойКлиента КАК Дата,
	|	АктРассмотренияВозврата.НомерНакладнойКлиента КАК Номер,
	|	АктРассмотренияВозврата.ДатаНакладнойКлиента КАК ДатаДокумента,
	|	АктРассмотренияВозврата.Организация,
	|	АктРассмотренияВозврата.Организация.КПП КАК ОрганизацияКПП,
	|	АктРассмотренияВозврата.Контрагент КАК ЮрФизЛицо,
	|	АктРассмотренияВозврата.Контрагент КАК Поставщик,
	|	АктРассмотренияВозврата.Контрагент КАК Контрагент,
	|	АктРассмотренияВозврата.Контрагент КАК Руководители,
	|	АктРассмотренияВозврата.Контрагент КАК Грузоотправитель,
	|	АктРассмотренияВозврата.Организация КАК Грузополучатель,
	|	АктРассмотренияВозврата.Контрагент.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	АктРассмотренияВозврата.Организация КАК Покупатель,
	|	АктРассмотренияВозврата.Контрагент.Код КАК КодКлиента,
	|	АктРассмотренияВозврата.Организация КАК Плательщик,
	|	NULL КАК Сделка,
	|	NULL КАК СделкаНомер,
	|	NULL КАК СделкаДата,
	|	АктРассмотренияВозврата.ДокументПродажи КАК Основание,
	|	АктРассмотренияВозврата.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом КАК ВедениеВзаиморасчетовПоДокументам,
	|	АктРассмотренияВозврата.ДокументПродажи.Номер КАК ОснованиеНомер,
	|	АктРассмотренияВозврата.ДокументПродажи.Дата КАК ОснованиеДата,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	АктРассмотренияВозврата.Склад.Подразделение КАК Подразделение,
	|	&ВалютаДокумента КАК ВалютаДокумента,
	|	&ВалютаДокумента КАК Валюта,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	АктРассмотренияВозврата.УчитыватьНДС,
	|	АктРассмотренияВозврата.СуммаВключаетНДС,
	|	"""" КАК ОтпускРазрешил,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК АдресДоставки,
	|	АктРассмотренияВозврата.Контрагент.РаботаетСНДС КАК ОрганизацияУчитыватьНДС
	|ИЗ
	|	Документ.АктРассмотренияВозврата КАК АктРассмотренияВозврата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|		ПО (ОтветственныеЛица.СтруктурнаяЕдиница = АктРассмотренияВозврата.Склад)
	|ГДЕ
	|	АктРассмотренияВозврата.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , Шапка.ОрганизацияУчитыватьНДС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Наименование КАК ТоварНаименованиеКраткое,
	|	"""" КАК ТоварКод,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК ТоварАртикул,
	|	ВложенныйЗапрос.Номенклатура.Изготовитель.Наименование КАК ТоварПроизводительНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	1 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоМест > 0
	|			ТОГДА ВложенныйЗапрос.КоличествоМест * ВложенныйЗапрос.ЕдиницаИзмеренияМест.Вес
	|		ИНАЧЕ ВложенныйЗапрос.Количество * ВложенныйЗапрос.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВложенныйЗапрос.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	Представление(ВложенныйЗапрос.НомерГТД) КАК ПредставлениеГТД,
	|	ВложенныйЗапрос.СтранаПроисхождения.Наименование КАК ПредставлениеСтраны,
	|	ВложенныйЗапрос.Комм_с_Сайта КАК Комм_с_Сайта,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ЛОЖЬ КАК ЕстьСкидкиПоСтроке,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.КоличествоМест КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка КАК Метка,
	|	ВложенныйЗапрос.ПроцентСкидкиНаценки + ВложенныйЗапрос.ПроцентАвтоматическихСкидок КАК Скидка
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктРассмотренияВозврата.Номенклатура КАК Номенклатура,
	|		АктРассмотренияВозврата.Коэффициент КАК Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения.Коэффициент КАК КоэффициентМест,
	|		NULL КАК Характеристика,
	|		NULL КАК Серия,
	|		АктРассмотренияВозврата.СтрокаПрихода.СтранаПроисхождения КАК СтранаПроисхождения,
	|		АктРассмотренияВозврата.СтрокаПрихода.НомерГТД КАК НомерГТД,
	|		ЕСТЬNULL(ЗаявкаПокупателя.КомментарийИзСайта, """") КАК Комм_с_Сайта,
	|		ВЫБОР
	|			КОГДА &УчитыватьНДС
	|				ТОГДА АктРассмотренияВозврата.СтавкаНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		КОНЕЦ КАК СтавкаНДС,
	|		АктРассмотренияВозврата.Цена КАК Цена,
	|		0 КАК ПроцентСкидкиНаценки,
	|		0 КАК ПроцентАвтоматическихСкидок,
	|		СУММА(АктРассмотренияВозврата.Количество) КАК Количество,
	|		СУММА(АктРассмотренияВозврата.Количество) КАК КоличествоМест,
	|		СУММА(АктРассмотренияВозврата.Сумма) КАК Сумма,
	|		СУММА(ВЫБОР
	|				КОГДА &УчитыватьНДС
	|					ТОГДА АктРассмотренияВозврата.СуммаНДС
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаНДС,
	|		МИНИМУМ(АктРассмотренияВозврата.НомерСтроки) КАК НомерСтроки,
	|		0 КАК Метка
	|	ИЗ
	|		Документ.АктРассмотренияВозврата.Товары КАК АктРассмотренияВозврата
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателя
	|			ПО АктРассмотренияВозврата.СтрокаЗаявки = ЗаявкаПокупателя.СтрокаЗаявки
	|				И (НЕ АктРассмотренияВозврата.СтрокаЗаявки = ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка))
	|	ГДЕ
	|		АктРассмотренияВозврата.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктРассмотренияВозврата.Номенклатура,
	|		АктРассмотренияВозврата.Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения,
	|		ЕСТЬNULL(ЗаявкаПокупателя.КомментарийИзСайта, """"),
	|		АктРассмотренияВозврата.СтавкаНДС,
	|		АктРассмотренияВозврата.Цена,
	|		АктРассмотренияВозврата.СтрокаПрихода.СтранаПроисхождения,
	|		АктРассмотренияВозврата.СтрокаПрихода.НомерГТД,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения.Коэффициент,
	|		АктРассмотренияВозврата.ЕдиницаИзмерения) КАК ВложенныйЗапрос";
	
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху 	= 0; //13;
	ТабДокумент.ПолеСлева  	= 0;
	ТабДокумент.ПолеСнизу  	= 13; //0;
	ТабДокумент.ПолеСправа 	= 0;
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.АвтоМасштаб	= Истина;
	
	Макет = ?(Макет <> Неопределено, Макет, ПолучитьОбщийМакет("СчетФактура1137"));
	
	СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата);
	СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
	
	СведенияОПодразделенииПокупателя = Неопределено;
	Если ТипЗнч(Шапка.Покупатель) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Шапка.Покупатель) Тогда
		РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Шапка.Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
		Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Шапка.Дата);
			СведенияОПодразделенииПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата);
		КонецЕсли;
	КонецЕсли;
	
	// Выводим шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НомерИсправления = "Исправление № -- от --";
	
	// Поставщик
	ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: " 
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		
	ОбластьМакета.Параметры.АдресПоставщика = "Адрес: "	+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
	
	КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННпоставщика = "ИНН/КПП продавца: " + ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) + КПП;
	
	ЗаголовокДляПечати = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Счет-фактура");
	ОбластьМакета.Параметры.Номер = ЗаголовокДляПечати;
		
		
	СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
	?(Шапка.Грузоотправитель = "он же", Неопределено, Шапка.Грузоотправитель), Шапка.Дата);
	СведенияОГрузополучателе  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Грузополучатель, Шапка.Дата);
	
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: "
	+ ?(НЕ ЗначениеЗаполнено(Шапка.Грузоотправитель), 
	"--", 
	?(Шапка.Грузоотправитель = "он же", 
	Шапка.Грузоотправитель, 
	ФормированиеПечатныхФорм.ОписаниеОрганизации(
	СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес,")));
	
	ПредставлениеГрузополучателя = "Грузополучатель и его адрес: " 
	+ ?(НЕ ЗначениеЗаполнено(Шапка.Грузополучатель), 
	"--",
	ФормированиеПечатныхФорм.ОписаниеОрганизации(
	СведенияОГрузополучателе, "ПолноеНаименование, ФактическийАдрес,"));
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ПредставлениеГрузополучателя;

	СтрокаПоДокументу = "К платежно-расчетному документу №           от";
	ОбластьМакета.Параметры.ПоДокументу = СтрокаПоДокументу;
	
	// Покупатель
	ОбластьМакета.Параметры.ПредставлениеПокупателя = "Покупатель: " 
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
	ОбластьМакета.Параметры.АдресПокупателя = "Адрес: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
	
	ОбластьМакета.Параметры.ИННПокупателя = "ИНН/КПП покупателя: "
		+ ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь) 
		+ ?(ЗначениеЗаполнено(Шапка.ОрганизацияКПП), "/" + Шапка.ОрганизацияКПП, "");;
	
	ОбластьМакета.Параметры.Валюта = "Валюта: наименование, код: "+ ?(ЗначениеЗаполнено(Шапка.Валюта), 
		Шапка.Валюта.НаименованиеПолное + ", " + Шапка.Валюта.Код, 
		"");		
			
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Выводим строки таблицы
	ОбластьМакета       = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакетаИтого  = Макет.ПолучитьОбласть("Итого");
	
	НомерСтроки     = 0;
	КоличествоСтрок = ЗапросТовары.Количество();
	
	ЗапросТовары.Колонки.Добавить("СуммаБезНДС");
	ЗапросТовары.Колонки.Добавить("СуммаСНДС");

	Для Каждого Строчка Из ЗапросТовары Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьМакета.Параметры.Заполнить(Строчка);

		Если Шапка.Дата >= УчетНДС.НачалоДействияПостановления981() Тогда
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ТоварКодТНВЭД)
				ИЛИ Строчка.СтавкаНДС <> Перечисления.СтавкиНДС.НДС0 Тогда
				ОбластьМакета.Параметры.ТоварКодТНВЭД = "--";
			КонецЕсли;
		КонецЕсли;
		
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Шапка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		
		ОбластьМакета.Параметры.ТоварНаименование = ?(ПустаяСтрока(Строчка.ТоварАртикул), "", Строчка.ТоварАртикул + " ") + Строчка.ТоварНаименование;
		
		ОбластьМакета.Параметры.Стоимость = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		ОбластьМакета.Параметры.Цена   	  = Строчка.Цена;
		
		ОбластьМакета.Параметры.Всего     = Строчка.СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС = Строчка.СтавкаНДС;
		
		Если Строчка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДС  = "без НДС";
		КонецЕсли;
		
		ОбластьМакета.Параметры.Акциз = "без акциза";
		
		Если ВРег(Строка(Строчка.ПредставлениеСтраны)) = "РОССИЯ" 
			ИЛИ ВРег(Строка(Строчка.ПредставлениеСтраны)) = "РОССИЙСКАЯ ФЕДЕРАЦИЯ"
			ИЛИ Строчка.СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда			
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
		Иначе
			Если ЗначениеЗаполнено(Строчка.СтранаПроисхождения) Тогда
				ОбластьМакета.Параметры.ПредставлениеСтраны  = СокрЛП(Строчка.СтранаПроисхождения.Наименование);
			КонецЕсли;
		КонецЕсли; 
	
		// Проставляем прочерки в незаполненные графы в соответствии с Постановлением
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод) Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество) Тогда
			ОбластьМакета.Параметры.Количество = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмерения = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Цена) Тогда
			ОбластьМакета.Параметры.Цена = "--";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ПредставлениеСтраны) Тогда
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
		КонецЕсли;
		
		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		Если НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
						
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;

	Если КоличествоСтрок > 0 Тогда
		ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,).ВместеСоСледующим = Истина;
	КонецЕсли; 
		
	// Выводим строку "Всего к оплате"
	ОбластьМакетаИтого.Параметры.ИтогоСтоимость = ЗапросТовары.Итог("СуммаБезНДС");
	Если НЕ Шапка.ОрганизацияУчитыватьНДС Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = "без НДС";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ЗапросТовары.Итог("СуммаНДС");
	КонецЕсли;
	ОбластьМакетаИтого.Параметры.ИтогоВсего = ЗапросТовары.Итог("СуммаСНДС");
	
	ТабДокумент.Вывести(ОбластьМакетаИтого);
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	ТабДокумент.ВерхнийКолонтитул.Выводить          = Истина;
	ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница = 1;
	ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
	//ТабДокумент.ВерхнийКолонтитул.ТекстСлева   = ЗаголовокДляПечати;
	//ТабДокумент.ВерхнийКолонтитул.ТекстСправа  = "Лист [&НомерСтраницы]";
	ТабДокумент.НижнийКолонтитул.ТекстСправа           = ЗаголовокДляПечати + ".Страница [&НомерСтраницы] из [&СтраницВсего]";

	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти
