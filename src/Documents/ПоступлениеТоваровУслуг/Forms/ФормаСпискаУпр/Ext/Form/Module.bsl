#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
КонецПроцедуры


&НаКлиенте
Процедура СтруктураПодчиненности(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		//РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(Элементы.Список.ТекущаяСтрока));
		РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДокумента(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ОткрытьФорму("Отчет.ОтчетПоДвижениямДокумента.Форма", Новый Структура("Документ,СпособВыводаОтчета", Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(Элементы.Список.ТекущаяСтрока), "ПоВертикали"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияДокумента(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ФормаСравненияКорректировок = Обработки.ИсторияДокумента.ПолучитьФорму("ФормаСравненияКорректировок");
		ФормаСравненияКорректировок.Документ = Элементы.Список.ТекущаяСтрока;
		ФормаСравненияКорректировок.ТолькоИзменения = Истина;
		ФормаСравненияКорректировок.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
форм=Документы.ПоступлениеТоваровУслуг.ПолучитьФорму("РучнойВвод");
	Форм.Открыть();
	// Вставить содержимое обработчика.
КонецПроцедуры

	
&НаКлиенте
Процедура ПоискПоНомеру(Команда)
	
	Номер = "";
	Если Не ВвестиЗначение(Номер, "Введите номер поступления", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(11, ДопустимаяДлина.Фиксированная))) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(Номер) < 11 Тогда 
		Предупреждение("Введите 11-значный номер", 5);
		Возврат;
	КонецЕсли;
	
	ИскомыйЭлементОтбора = Неопределено;
	   УстановитьСнятьОтборПоПолюФормы("Номер",Номер);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьОтборПоПолюФормы (ИмяПоля, Значение = Неопределено, Использование = истина)
	Для Каждого ЭлтОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл 
		Если ТипЗнч(ЭлтОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") И ЭлтОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля) Тогда
			ИскомыйЭлементОтбора = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлтОтбора.ИдентификаторПользовательскойНастройки);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ИскомыйЭлементОтбора = Неопределено Тогда 
		ИскомыйЭлементОтбора = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ИскомыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	КонецЕсли;
	
	ИскомыйЭлементОтбора.ПравоеЗначение = Значение;
	ИскомыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ИскомыйЭлементОтбора.Использование = Использование;

КонецПроцедуры
	



&НаКлиенте
Процедура ОтменитьПоискПоНомеру(Команда)
	  УстановитьСнятьОтборПоПолюФормы("Номер",,Ложь);
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВТопЛогНаСервере(ДокСсылка)
	
	мПолныеПрава = РольДоступна("ПолныеПрава");
	
	Если ДокСсылка <> Неопределено Тогда 
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокСсылка, "СтатусДокумента,Проведен,ЭтоМФП,ВидОперацииПоступления,Склад,флНеВыгружатьВТопЛог,Склад.ОбменСTopLog");
		
		ОтказОтРегистрации = 
		
		Не Реквизиты.Проведен 
		Или Реквизиты.ЭтоМФП Или Реквизиты.ВидОперацииПоступления = Перечисления.ВидыПоступленияТоваров.ЗачетТовараVMI ИЛИ 
		Реквизиты.ВидОперацииПоступления = Перечисления.ВидыПоступленияТоваров.Прочее ИЛИ Не (Реквизиты.СтатусДокумента =  Справочники.СтатусыДокументов.ПоступлениеТоваровОтгружен Или
		Реквизиты.СтатусДокумента =  Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен Или (мПолныеПрава И Реквизиты.СтатусДокумента <> Справочники.СтатусыДокументов.ПоступлениеТоваровНовый)) ИЛИ 
		Реквизиты.флНеВыгружатьВТопЛог Или
		Реквизиты.СкладОбменСTopLog <> Истина;
		
		Если Не ОтказОтРегистрации Тогда  
			Узел = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(Метаданные.ПланыОбмена.ОбменПартКом83_TopLog, 3);
			Если ЗначениеЗаполнено(Узел) Тогда 
				ПланыОбмена.ЗарегистрироватьИзменения(Узел, ДокСсылка);
				Сообщить("Документ зарегистрирован в обмене с Топ Лог");
			Иначе
				Сообщить("Не найден узел обмена для выгрузки в Топ Лог");
			КонецЕсли;
		Иначе
			Сообщить("Документ нельзя выгружать. Выгружаются только проведенные документы в статусе ""Отгружен"" или ""Доставлен на склад"", 
			|не МФП, не Зачет VMI, без галки не выгружать в ТопЛог, только для складов, которые обмениваются с ТопЛог");
			Если мПолныеПрава Тогда 
				Сообщить("Для полных прав нет проверки на статус документа (кроме статуса ""Новый"")");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВТопЛог(Команда)
	Ответ = Вопрос("Хотите выгрузить этот документ в ТопЛог?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда 	
		ВыгрузитьВТопЛогНаСервере(Элементы.Список.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

 