//функции получения движений по регистрам
Функция РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, вхОтказ, вхПараметры)
	ТабТоваров = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ОтказыПоЗаявкам", ТабТоваров);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТабТоваров;
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов");
	
	ДатаЗаявкиСоздаютсяВ83 = глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83");
	Если Реквизиты.Дата < ДатаЗаявкиСоздаютсяВ83 Тогда 
		Возврат ТабТоваров;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПричиныОтказов.Ссылка,
	|	ПричиныОтказов.СтрокаЗаявки,
	|	ПричиныОтказов.ПричинаОтказа,
	|	ПричиныОтказов.Количество,
	|	КорректировкаЗаказаПоставщикуТовары.Цена
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК ПричиныОтказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|		ПО ПричиныОтказов.СтрокаЗаявки = КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	|ГДЕ
	|	ПричиныОтказов.Ссылка = &Ссылка
	|	И КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа,
	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК КоличествоОборот,
	|	СУММА(ОтказыПоЗаявкамОбороты.СуммаРеглОборот) КАК СуммаРеглОборот
	|ПОМЕСТИТЬ ОтказыВРегистре
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &МоментВремени, Регистратор, СтрокаЗаявки.Заказ = &ДокументОснование) КАК ОтказыПоЗаявкамОбороты
	|ГДЕ
	|	(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	|			ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Отказы.ПричинаОтказа КАК ПричинаОтказа,
	|	Отказы.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &Пересчитывать
	|			ТОГДА Отказы.Цена * Отказы.Количество * &Курс / &Кратность
	|		ИНАЧЕ Отказы.Цена * Отказы.Количество
	|	КОНЕЦ КАК СуммаРегл
	|ИЗ
	|	Отказы КАК Отказы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОтказыВРегистре.СтрокаЗаявки,
	|	ОтказыВРегистре.ПричинаОтказа,
	|	-ОтказыВРегистре.КоличествоОборот,
	|	-ОтказыВРегистре.СуммаРеглОборот
	|ИЗ
	|	ОтказыВРегистре КАК ОтказыВРегистре" 	
	);
		
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ДокументОснование", ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "ДокументОснование"));
	Запрос.УстановитьПараметр("Пересчитывать", Реквизиты.ВалютаДокумента <> глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("Курс", Реквизиты.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", Реквизиты.КратностьВзаиморасчетов);
	
	Таб = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Таб, ТабТоваров);
	
	ТабТоваров.ЗаполнитьЗначения(вхСсылкаНаДокумент, "Регистратор");
	ТабТоваров.ЗаполнитьЗначения(Реквизиты.Дата, "Период");
	Возврат ТабТоваров;
	
КонецФункции

Функция РегистрыСведений_ВозможныеЗаменыНоменклатуры(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено)
	ТабЗамен = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраСведений("ВозможныеЗаменыНоменклатуры", ТабЗамен);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТабЗамен;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Корректировка.Ссылка КАК Регистратор,
	|	&вхПериод КАК Период,
	|	Корректировка.СтрокаЗаявки,
	|	Корректировка.Номенклатура,
	|	Корректировка.НоменклатураЗамена
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК Корректировка
	|ГДЕ
	|	Корректировка.НоменклатураЗамена <> &ПустаяСсылка
	|	И Корректировка.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("вхПериод", вхСсылкаНаДокумент.МоментВремени().Дата);
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Номенклатура.ПустаяСсылка());
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТабЗамен);
	
	Возврат ТабЗамен;
		
КонецФункции

Функция РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
Таблица_ЗаявкиПокупателей = Неопределено;
ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаявкиПокупателей", Таблица_ЗаявкиПокупателей);

РекивзитыДокумента =   ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент,"Дата,СтатусДокумента");

Если РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.НовыйЗаказПоставщику 
	или РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.ОтправленПоставщику  тогда 
	возврат Таблица_ЗаявкиПокупателей;
КонецЕсли;	
	

Запрос = новый запрос("ВЫБРАТЬ
                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
                      |	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
                      |	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) КАК Количество
                      |ПОМЕСТИТЬ ВТОтказыДокумента
                      |ИЗ
                      |	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
                      |ГДЕ
                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &ДокументСсылка
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	ВТОтказы.Склад,
                      |	ВТОтказы.Качество,
                      |	ВТОтказы.СтрокаЗаявки,
                      |	СУММА(ВТОтказы.Количество - ЕСТЬNULL(ОтказыПоЗаявкам.Количество, 0)) КАК Количество
                      |ПОМЕСТИТЬ ВТОтказы
                      |ИЗ
                      |	ВТОтказыДокумента КАК ВТОтказы
                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам КАК ОтказыПоЗаявкам
                      |		ПО ВТОтказы.СтрокаЗаявки = ОтказыПоЗаявкам.СтрокаЗаявки
                      |			И (ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
                      |				ИЛИ ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
                      |			И (НЕ ОтказыПоЗаявкам.Регистратор = &ДокументСсылка)
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	ВТОтказы.Склад,
                      |	ВТОтказы.Качество,
                      |	ВТОтказы.СтрокаЗаявки
                      |
                      |ИМЕЮЩИЕ
                      |	СУММА(ВТОтказы.Количество - ЕСТЬNULL(ОтказыПоЗаявкам.Количество, 0)) > 0
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	ВТОтказы.Склад,
                      |	ЗаявкиПокупателейОстатки.Номенклатура,
                      |	ВТОтказы.Качество,
                      |	ВТОтказы.СтрокаЗаявки,
                      |	ЗаявкиПокупателейОстатки.ТорговаяТочка,
                      |	ЗаявкиПокупателейОстатки.ДоговорКонтрагента,
                      |	ВТОтказы.Количество,
                      |	ВЫБОР
                      |		КОГДА ЗаявкиПокупателейОстатки.КоличествоОстаток = 0
                      |			ТОГДА 0
                      |		ИНАЧЕ ЗаявкиПокупателейОстатки.СуммаРеглОстаток / ЗаявкиПокупателейОстатки.КоличествоОстаток * ВТОтказы.Количество
                      |	КОНЕЦ КАК СуммаРегл,
                      |	ВЫБОР
                      |		КОГДА ЗаявкиПокупателейОстатки.КоличествоОстаток = 0
                      |			ТОГДА 0
                      |		ИНАЧЕ ЗаявкиПокупателейОстатки.СуммаУпрОстаток / ЗаявкиПокупателейОстатки.КоличествоОстаток * ВТОтказы.Количество
                      |	КОНЕЦ КАК СуммаУпр,
                      |	ИСТИНА КАК Отказ,
                      |	&Период,
                      |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
                      |ИЗ
                      |	РегистрНакопления.ЗаявкиПокупателей.Остатки(
                      |			&Период,
                      |			СтрокаЗаявки В
                      |				(ВЫБРАТЬ
                      |					ВТОтказы.СтрокаЗаявки КАК СтрокаЗаявки
                      |				ИЗ
                      |					ВТОтказы КАК ВТОтказы)) КАК ЗаявкиПокупателейОстатки
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтказы КАК ВТОтказы
                      |		ПО ЗаявкиПокупателейОстатки.СтрокаЗаявки = ВТОтказы.СтрокаЗаявки"  );

Запрос.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
Запрос.УстановитьПараметр("Период", РекивзитыДокумента.Дата); 	

	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), Таблица_ЗаявкиПокупателей);
	
	Возврат Таблица_ЗаявкиПокупателей;


	
КонецФункции	


//функции получения движений по регистрам

//предопределнные процедуры
Процедура ВыполнитьПроведение(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	//Если НЕ ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() Тогда
	 //если  РаботаСоСтатусамиДокументовСервер.НоваяСхемаЗакрытияЗаявок(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент,"Дата")) тогда 
	 Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ЗаявкиПокупателей") тогда
		 ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ЗаявкиПокупателей",
		 РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	 КонецЕсли;
		//КонецЕсли;
		
				
		Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ЗаказыПоставщикам") тогда
			ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ЗаказыПоставщикам",
			РегистрыНакопления_ЗаказыПоставщикам(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
		КонецЕсли;


		Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ОтказыПоЗаявкам") тогда
			ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ОтказыПоЗаявкам",
			РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
		КонецЕсли;
		
		Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ВозможныеЗаменыНоменклатуры") тогда
			ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ВозможныеЗаменыНоменклатуры",
			РегистрыСведений_ВозможныеЗаменыНоменклатуры(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
		КонецЕсли;
		
	//КонецЕсли;
		
КонецПроцедуры	

Процедура ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(вхСсылкаНаДокумент);	
		
КонецПроцедуры

Функция КорректировкиПоЗаказу(ЗаказПоставщику, СтрокаОтбора = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщику.Ссылка,
		|	КорректировкаЗаказаПоставщику.Ссылка.Проведен КАК Проведен,
		|	КорректировкаЗаказаПоставщику.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
		|	КорректировкаЗаказаПоставщику.Ссылка.Дата КАК Дата
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику КАК КорректировкаЗаказаПоставщику
		|ГДЕ
		|	КорректировкаЗаказаПоставщику.ДокументОснование = &ЗаказПоставщику
		|	И &СтрокаОтбора
		|
		|УПОРЯДОЧИТЬ ПО
		|	КорректировкаЗаказаПоставщику.Дата Убыв";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтрокаОтбора", ?(Не ЗначениеЗаполнено(СтрокаОтбора), "Истина", СтрокаОтбора));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПометитьНаУдалениеКорректировкиПоЗаказу(ЗаказПоставщику, ВыводитьСообщение = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаКорректировок = Документы.КорректировкаЗаказаПоставщику.КорректировкиПоЗаказу(ЗаказПоставщику, "НЕ ПометкаУдаления");
	Для каждого СтрокаТаб Из ТаблицаКорректировок Цикл
		ДокОбъект =  СтрокаТаб.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	КоличествоКорректировок = ТаблицаКорректировок.Количество();
	Если ВыводитьСообщение И КоличествоКорректировок > 0 Тогда
		Сообщить("Помечено на удаление корректировок заказа: "+КоличествоКорректировок);
	КонецЕсли;
	
КонецПроцедуры


//Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	
//	Если ЗначениеЗаполнено(Данные.ДокументОснование) Тогда
//		Номер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Данные.ДокументОснование, "Номер");
//		Если Значениезаполнено(Данные.СтатусДокумента) Тогда
//			Представление = "Заказ поставщику №" + Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT") + " (" + Строка(Данные.СтатусДокумента) +")";
//		Иначе
//			Представление = "Заказ поставщику №" + Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT");
//		КонецЕсли;
//	Иначе
//		СтандартнаяОбработка = Истина;
//	КонецЕсли;
//	
//КонецПроцедуры

//Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	
//	Поля.Добавить("Дата");
//	Поля.Добавить("ДокументОснование");
//	Поля.Добавить("СтатусДокумента");
//	
//	
//КонецПроцедуры
//предопределнные процедуры


Функция ПолучитьМетаданные()
	Возврат Метаданные.Документы.КорректировкаЗаказаПоставщику;	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(вхМетаданныеОтбора) Экспорт
	
	СтруктураВозврат = Новый Структура;
	
	Если (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_ОкноПоставщика) тогда
		СтруктураВозврат = Новый Структура("Шапка, ТабличныеЧасти");
		СтруктураВозврат.Шапка = "Контрагент,ДоговорКонтрагента,Организация,Склад,ТорговаяТочка,СтатусДокумента";
		Соответствие = Новый Соответствие;
		Соответствие.Вставить("Товары", "Номенклатура, Количество, ЕдиницаИзмерения, КоличествоОтказ");
		Соответствие.Вставить("ПричиныОтказов", "ПричинаОтказа, Количество");
		СтруктураВозврат.ТабличныеЧасти = Соответствие;
	ИначеЕсли (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_77) тогда
		СтруктураВозврат = ОбменДаннымиКлиентСервер.РеквизитыКонтроляПоДокументу(ПолучитьМетаданные(), ИсключаемыеРеквизитыКонтроляРегистрации());
	КонецЕсли;
	
	Возврат СтруктураВозврат

КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора) Экспорт
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора);
КонецФункции

Функция ИсключаемыеРеквизитыКонтроляРегистрации() Экспорт
	
	ИсключаемыеРеквизиты = ОбменДаннымиКлиентСервер.ИнициализироватьТаблицуИсключаемыхРеквизитовКонтроля();
	ОбменДаннымиКлиентСервер.ДобавитьВИсключаемыеРевизиты(ИсключаемыеРеквизиты, "Ссылка");
	
	Возврат ИсключаемыеРеквизиты;
	
КонецФункции



Функция РегистрыНакопления_ЗаказыПоставщикам(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов,СтатусДокумента");
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаказыПоставщикам", ТаблицаДвижений);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	              |ИЗ
	              |	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	              |ГДЕ
	              |	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);

	РезультатЗапроса = Запрос.Выполнить();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировка = БлокировкаДанных.Добавить("РегистрНакопления.ЗаказыПоставщикам");
	ЭлементБлокировка.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировка.ИсточникДанных =  РезультатЗапроса;
	ЭлементБлокировка.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
	
	БлокировкаДанных.Заблокировать();

	Запрос = Новый Запрос;
	Если Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт Тогда
		//то, что нужно закрыть, определяется фоновым заданием, здесь только списываются остатки регистра
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
		|ПОМЕСТИТЬ втСтрокиЗаявки
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Дата КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.СтрокаЗаявки КАК СтрокаЗаявки,
		|	Остатки.ТорговаяТочка КАК ТорговаяТочка,
		|	Остатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Остатки.КоличествоОстаток КАК Количество,
		|	Остатки.СуммаРеглОстаток КАК СуммаРегл,
		|	Остатки.СуммаУпрОстаток КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			&КонПериода,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втСтрокиЗаявки.СтрокаЗаявки
		|				ИЗ
		|					втСтрокиЗаявки)) КАК Остатки";
		
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
				
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
		|ПОМЕСТИТЬ втСтрокиЗаявки
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.Склад КАК Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка КАК ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	СУММА(ЗаказыПоставщикамОбороты.КоличествоОборот) КАК Количество,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглОборот) КАК СуммаРегл,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаУпрОборот) КАК СуммаУпр
		|ПОМЕСТИТЬ втЗаказыПоставщикам
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
		|			,
		|			&КонПериода,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втСтрокиЗаявки.СтрокаЗаявки
		|				ИЗ
		|					втСтрокиЗаявки)) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОбороты.Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка = &ПустаяТТ
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.Контрагент.ОсновнаяТорговаяТочка
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка
		|	КОНЕЦ КАК ТорговаяТочка,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Склад КАК Склад,
		|	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки,
		|	КорректировкаЗаказаПоставщикуТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаРегл,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаУпр
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|	И КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки <> &ПустаяСтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
		|	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) КАК КоличествоДокумент,
		|	СУММА(ЕСТЬNULL(ОтказыПоЗаявкам.Количество, 0)) КАК КоличествоРегистр
		|ПОМЕСТИТЬ ВТОтказы
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам КАК ОтказыПоЗаявкам
		|		ПО КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки = ОтказыПоЗаявкам.СтрокаЗаявки
		|			И (ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|				ИЛИ ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|			И (НЕ ОтказыПоЗаявкам.Регистратор = &Ссылка)
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки
		|
		|ИМЕЮЩИЕ
		|	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) > СУММА(ЕСТЬNULL(ОтказыПоЗаявкам.Количество, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(втТовары.Склад, втЗаказыПоставщикам.Склад) КАК Склад,
		|	ЕСТЬNULL(втТовары.Номенклатура, втЗаказыПоставщикам.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(втТовары.СтрокаЗаявки, втЗаказыПоставщикам.СтрокаЗаявки) КАК СтрокаЗаявки,
		|	ЕСТЬNULL(втТовары.ТорговаяТочка, втЗаказыПоставщикам.ТорговаяТочка) КАК ТорговаяТочка,
		|	ЕСТЬNULL(втТовары.ДоговорКонтрагента, втЗаказыПоставщикам.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) КАК Количество,
		|	ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) КАК СуммаУпр,
		|	ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) КАК СуммаРегл,
		|	&Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Дата КАК Период
		|ИЗ
		|	втТовары КАК втТовары
		|		ПОЛНОЕ СОЕДИНЕНИЕ втЗаказыПоставщикам КАК втЗаказыПоставщикам
		|		ПО втТовары.Склад = втЗаказыПоставщикам.Склад
		|			И втТовары.Номенклатура = втЗаказыПоставщикам.Номенклатура
		|			И втТовары.СтрокаЗаявки = втЗаказыПоставщикам.СтрокаЗаявки
		|			И втТовары.ТорговаяТочка = втЗаказыПоставщикам.ТорговаяТочка
		|			И втТовары.ДоговорКонтрагента = втЗаказыПоставщикам.ДоговорКонтрагента
		|ГДЕ
		|	(ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) <> 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втТовары.Склад,
		|	втТовары.Номенклатура,
		|	втТовары.СтрокаЗаявки,
		|	втТовары.ТорговаяТочка,
		|	втТовары.ДоговорКонтрагента,
		|	ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр,
		|	ВЫБОР
		|		КОГДА втТовары.Количество * ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр = 0
		|			ТОГДА 0
		|		ИНАЧЕ втТовары.СуммаУпр / втТовары.Количество * ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА втТовары.Количество * ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр = 0
		|			ТОГДА 0
		|		ИНАЧЕ втТовары.СуммаРегл / втТовары.Количество * ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр
		|	КОНЕЦ,
		|	&Ссылка,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	&Дата
		|ИЗ
		|	втТовары КАК втТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтказы КАК ВТОтказы
		|		ПО втТовары.СтрокаЗаявки = ВТОтказы.СтрокаЗаявки";
		
		Запрос.УстановитьПараметр("ПустаяТТ", Справочники.ТорговыеТочки.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустаяСтрокаЗаявки", Справочники.ИдентификаторыСтрокЗаявок.ПустаяСсылка());
		Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выгрузить();
		
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
		
	Возврат ТаблицаДвижений;
		
КонецФункции

Функция РегистрыНакопления_ЗаказыПоставщикам_оригинал(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов");
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаказыПоставщикам", ТаблицаДвижений);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
		|ПОМЕСТИТЬ втСтрокиЗаявки
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.Склад КАК Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка КАК ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	СУММА(ЗаказыПоставщикамОбороты.КоличествоОборот) КАК Количество,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглОборот) КАК СуммаРегл,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаУпрОборот) КАК СуммаУпр
		|ПОМЕСТИТЬ втЗаказыПоставщикам
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
		|			,
		|			&КонПериода,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втСтрокиЗаявки.СтрокаЗаявки
		|				ИЗ
		|					втСтрокиЗаявки)) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОбороты.Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка = &ПустаяТТ
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.Контрагент.ОсновнаяТорговаяТочка
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка
		|	КОНЕЦ КАК ТорговаяТочка,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Склад КАК Склад,
		|	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки,
		|	КорректировкаЗаказаПоставщикуТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаРегл,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаУпр
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|	И КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки <> &ПустаяСтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(втТовары.Склад, втЗаказыПоставщикам.Склад) КАК Склад,
		|	ЕСТЬNULL(втТовары.Номенклатура, втЗаказыПоставщикам.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(втТовары.СтрокаЗаявки, втЗаказыПоставщикам.СтрокаЗаявки) КАК СтрокаЗаявки,
		|	ЕСТЬNULL(втТовары.ТорговаяТочка, втЗаказыПоставщикам.ТорговаяТочка) КАК ТорговаяТочка,
		|	ЕСТЬNULL(втТовары.ДоговорКонтрагента, втЗаказыПоставщикам.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) КАК Количество,
		|	ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) КАК СуммаУпр,
		|	ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) КАК СуммаРегл,
		|	&Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Дата КАК Период
		|ИЗ
		|	втТовары КАК втТовары
		|		ПОЛНОЕ СОЕДИНЕНИЕ втЗаказыПоставщикам КАК втЗаказыПоставщикам
		|		ПО втТовары.Склад = втЗаказыПоставщикам.Склад
		|			И втТовары.Номенклатура = втЗаказыПоставщикам.Номенклатура
		|			И втТовары.СтрокаЗаявки = втЗаказыПоставщикам.СтрокаЗаявки
		|			И втТовары.ТорговаяТочка = втЗаказыПоставщикам.ТорговаяТочка
		|			И втТовары.ДоговорКонтрагента = втЗаказыПоставщикам.ДоговорКонтрагента
		|ГДЕ
		|	(ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) <> 0)";
		
		Запрос.УстановитьПараметр("ПустаяТТ", Справочники.ТорговыеТочки.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустаяСтрокаЗаявки", Справочники.ИдентификаторыСтрокЗаявок.ПустаяСсылка());
		Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
		
		Выборка = Запрос.Выполнить().Выгрузить();
		
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
		
		Возврат ТаблицаДвижений;
		
КонецФункции
