//функции получения движений по регистрам
Функция РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, вхОтказ, вхПараметры)
	ТабТоваров = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ОтказыПоЗаявкам", ТабТоваров);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТабТоваров;
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов");
	
	ДатаЗаявкиСоздаютсяВ83 = глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83");
	Если Реквизиты.Дата < ДатаЗаявкиСоздаютсяВ83 Тогда 
		Возврат ТабТоваров;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПричиныОтказов.Ссылка,
	|	ПричиныОтказов.СтрокаЗаявки,
	|	ПричиныОтказов.ПричинаОтказа,
	|	ПричиныОтказов.Количество,
	|	КорректировкаЗаказаПоставщикуТовары.Цена
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК ПричиныОтказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|		ПО ПричиныОтказов.СтрокаЗаявки = КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	|ГДЕ
	|	ПричиныОтказов.Ссылка = &Ссылка
	|	И КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа,
	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК КоличествоОборот,
	|	СУММА(ОтказыПоЗаявкамОбороты.СуммаРеглОборот) КАК СуммаРеглОборот
	|ПОМЕСТИТЬ ОтказыВРегистре
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &МоментВремени, Регистратор, СтрокаЗаявки.Заказ = &ДокументОснование) КАК ОтказыПоЗаявкамОбороты
	|ГДЕ
	|	(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	|			ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыИтог.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОтказыИтог.ПричинаОтказа КАК ПричинаОтказа,
	|	СУММА(ОтказыИтог.Количество) КАК Количество,
	|	СУММА(ОтказыИтог.СуммаРегл) КАК СуммаРегл
	|ИЗ
	|	(ВЫБРАТЬ
	|		Отказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		Отказы.ПричинаОтказа КАК ПричинаОтказа,
	|		Отказы.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА &Пересчитывать
	|				ТОГДА Отказы.Цена * Отказы.Количество * &Курс / &Кратность
	|			ИНАЧЕ Отказы.Цена * Отказы.Количество
	|		КОНЕЦ КАК СуммаРегл
	|	ИЗ
	|		Отказы КАК Отказы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ОтказыВРегистре.СтрокаЗаявки,
	|		ОтказыВРегистре.ПричинаОтказа,
	|		-ОтказыВРегистре.КоличествоОборот,
	|		-ОтказыВРегистре.СуммаРеглОборот
	|	ИЗ
	|		ОтказыВРегистре КАК ОтказыВРегистре) КАК ОтказыИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыИтог.СтрокаЗаявки,
	|	ОтказыИтог.ПричинаОтказа
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОтказыИтог.Количество) > 0" 	
	);
	
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ДокументОснование", ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "ДокументОснование"));
	Запрос.УстановитьПараметр("Пересчитывать", Реквизиты.ВалютаДокумента <> глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("Курс", Реквизиты.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", Реквизиты.КратностьВзаиморасчетов);
	
	Таб = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Таб, ТабТоваров);
	
	ТабТоваров.ЗаполнитьЗначения(вхСсылкаНаДокумент, "Регистратор");
	ТабТоваров.ЗаполнитьЗначения(Реквизиты.Дата, "Период");
	Возврат ТабТоваров;
	
КонецФункции

Функция РегистрыСведений_ВозможныеЗаменыНоменклатуры(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено)
	ТабЗамен = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраСведений("ВозможныеЗаменыНоменклатуры", ТабЗамен);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТабЗамен;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Корректировка.Ссылка КАК Регистратор,
	|	&вхПериод КАК Период,
	|	Корректировка.СтрокаЗаявки,
	|	Корректировка.Номенклатура,
	|	Корректировка.НоменклатураЗамена
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК Корректировка
	|ГДЕ
	|	Корректировка.НоменклатураЗамена <> &ПустаяСсылка
	|	И Корректировка.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("вхПериод", вхСсылкаНаДокумент.МоментВремени().Дата);
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.Номенклатура.ПустаяСсылка());
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТабЗамен);
	
	Возврат ТабЗамен;
	
КонецФункции

Функция РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	Таблица_ЗаявкиПокупателей = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаявкиПокупателей", Таблица_ЗаявкиПокупателей);
	
	РекивзитыДокумента =   ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент,"Дата,СтатусДокумента");
	
	//Если РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.НовыйЗаказПоставщику 
	//	или РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.ОтправленПоставщику  тогда 
	//	возврат Таблица_ЗаявкиПокупателей;
	//КонецЕсли;	
	
	
	Запрос = новый запрос("ВЫБРАТЬ
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
	                      |	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
	                      |	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) КАК Количество,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Дата КАК Период,
	                      |	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.ДоговорКонтрагента,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.ТорговаяТочка
	                      |ПОМЕСТИТЬ ВТОтказыДокумента
	                      |ИЗ
	                      |	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	                      |		ПО КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки = КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	                      |			И КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = КорректировкаЗаказаПоставщикуТовары.Ссылка
	                      |ГДЕ
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &ДокументСсылка
	                      |	И КорректировкаЗаказаПоставщикуТовары.Ссылка = &ДокументСсылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Дата,
	                      |	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.ДоговорКонтрагента,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.ТорговаяТочка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ВТОтказы.Количество КАК КоличествоДокумент,
	                      |	СУММА(ЕСТЬNULL(ОтказыПоЗаявкам.КоличествоОборот, 0)) КАК КоличествоРегистр,
	                      |	ВТОтказы.Период,
	                      |	ВТОтказы.Номенклатура,
	                      |	ВТОтказы.ДоговорКонтрагента,
	                      |	ВТОтказы.ТорговаяТочка
	                      |ПОМЕСТИТЬ ВТОтказы
	                      |ИЗ
	                      |	ВТОтказыДокумента КАК ВТОтказы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период, Регистратор, ) КАК ОтказыПоЗаявкам
	                      |		ПО ВТОтказы.СтрокаЗаявки = ОтказыПоЗаявкам.СтрокаЗаявки
	                      |			И (ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	                      |				ИЛИ ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	                      |			И (НЕ ОтказыПоЗаявкам.Регистратор = &ДокументСсылка)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ВТОтказы.Количество,
	                      |	ВТОтказы.Период,
	                      |	ВТОтказы.Номенклатура,
	                      |	ВТОтказы.ДоговорКонтрагента,
	                      |	ВТОтказы.ТорговаяТочка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗаявкиПокупателей.СтрокаЗаявки,
	                      |	МАКСИМУМ(ЗаявкиПокупателей.ТорговаяТочка) КАК ТорговаяТочка,
	                      |	МАКСИМУМ(ЗаявкиПокупателей.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	                      |	СУММА(ЗаявкиПокупателей.Количество) КАК Количество,
	                      |	СУММА(ЗаявкиПокупателей.СуммаРегл) КАК СуммаРегл,
	                      |	СУММА(ЗаявкиПокупателей.СуммаУпр) КАК СуммаУпр
	                      |ПОМЕСТИТЬ ВТПриходЗаявки
	                      |ИЗ
	                      |	РегистрНакопления.ЗаявкиПокупателей КАК ЗаявкиПокупателей
	                      |ГДЕ
	                      |	ЗаявкиПокупателей.СтрокаЗаявки В
	                      |			(ВЫБРАТЬ
	                      |				ВТОтказы.СтрокаЗаявки КАК СтрокаЗаявки
	                      |			ИЗ
	                      |				ВТОтказы КАК ВТОтказы)
	                      |	И ЗаявкиПокупателей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	                      |	И (ЗаявкиПокупателей.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	                      |			ИЛИ ЗаявкиПокупателей.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗаявкиПокупателей.СтрокаЗаявки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Номенклатура,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ЕСТЬNULL(ВТПриходЗаявки.ТорговаяТочка, ВТОтказы.ТорговаяТочка) КАК ТорговаяТочка,
	                      |	ЕСТЬNULL(ВТПриходЗаявки.ДоговорКонтрагента, ВТОтказы.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	                      |	ВЫБОР
	                      |		КОГДА ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр > ВТПриходЗаявки.СтрокаЗаявки.Количество
	                      |			ТОГДА ВТПриходЗаявки.СтрокаЗаявки.Количество
	                      |		ИНАЧЕ ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр
	                      |	КОНЕЦ КАК Количество,
	                      |	ВЫБОР
	                      |		КОГДА ЕСТЬNULL(ВТПриходЗаявки.Количество, 0) = 0
	                      |			ТОГДА 0
	                      |		ИНАЧЕ ВТПриходЗаявки.СуммаРегл / ВТПриходЗаявки.Количество * (ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр)
	                      |	КОНЕЦ КАК СуммаРегл,
	                      |	ВЫБОР
	                      |		КОГДА ЕСТЬNULL(ВТПриходЗаявки.Количество, 0) = 0
	                      |			ТОГДА 0
	                      |		ИНАЧЕ ВТПриходЗаявки.СуммаУпр / ВТПриходЗаявки.Количество * (ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр)
	                      |	КОНЕЦ КАК СуммаУпр,
	                      |	ИСТИНА КАК Отказ,
	                      |	ВТОтказы.Период КАК Период,
	                      |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	                      |ИЗ
	                      |	ВТОтказы КАК ВТОтказы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриходЗаявки КАК ВТПриходЗаявки
	                      |		ПО (ВТПриходЗаявки.СтрокаЗаявки = ВТОтказы.СтрокаЗаявки)"  );
	
	Запрос.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("Период", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая)); 	
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), Таблица_ЗаявкиПокупателей);
	
	Возврат Таблица_ЗаявкиПокупателей;
	
	
	
КонецФункции	


Функция РегистрыНакопления_РезервыТоваров(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	Таблица_РезервыТоваров = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("РезервыТоваров", Таблица_РезервыТоваров);
	
	РекивзитыДокумента =   ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент,"Дата,СтатусДокумента");
	
	//Если РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.НовыйЗаказПоставщику 
	//	или РекивзитыДокумента.СтатусДокумента = справочники.СтатусыДокументов.ОтправленПоставщику  тогда 
	//	возврат Таблица_ЗаявкиПокупателей;
	//КонецЕсли;	
	
	
	Запрос = новый запрос("ВЫБРАТЬ
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
	                      |	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
	                      |	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) КАК Количество,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Дата КАК Период,
	                      |	КорректировкаЗаказаПоставщикуТовары.Номенклатура
	                      |ПОМЕСТИТЬ ВТОтказыДокумента
	                      |ИЗ
	                      |	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	                      |		ПО КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки = КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	                      |			И КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = КорректировкаЗаказаПоставщикуТовары.Ссылка
	                      |ГДЕ
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &ДокументСсылка
	                      |	И КорректировкаЗаказаПоставщикуТовары.Ссылка = &ДокументСсылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Склад,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
	                      |	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка.Дата,
	                      |	КорректировкаЗаказаПоставщикуТовары.Номенклатура
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ВТОтказы.Количество КАК КоличествоДокумент,
	                      |	СУММА(ЕСТЬNULL(ОтказыПоЗаявкам.КоличествоОборот, 0)) КАК КоличествоРегистр,
	                      |	ВТОтказы.Период,
	                      |	ВТОтказы.Номенклатура
	                      |ПОМЕСТИТЬ ВТОтказы
	                      |ИЗ
	                      |	ВТОтказыДокумента КАК ВТОтказы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период, Регистратор, ) КАК ОтказыПоЗаявкам
	                      |		ПО ВТОтказы.СтрокаЗаявки = ОтказыПоЗаявкам.СтрокаЗаявки
	                      |			И (ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	                      |				ИЛИ ОтказыПоЗаявкам.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	                      |			И (НЕ ОтказыПоЗаявкам.Регистратор = &ДокументСсылка)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ВТОтказы.Количество,
	                      |	ВТОтказы.Период,
	                      |	ВТОтказы.Номенклатура
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТОтказы.Номенклатура,
	                      |	ВТОтказы.Склад,
	                      |	ВТОтказы.Качество,
	                      |	ВТОтказы.СтрокаЗаявки,
	                      |	ЕСТЬNULL(РезервыТоваровОстатки.СтрокаПрихода, ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокПриходов.Пустаяссылка)) КАК СтрокаПрихода,
	                      |	ВТОтказы.КоличествоДокумент - ВТОтказы.КоличествоРегистр КАК Количество,
	                      |	ВТОтказы.Период КАК Период,
	                      |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	                      |ИЗ
	                      |	ВТОтказы КАК ВТОтказы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
	                      |				&Период,
	                      |				СтрокаЗаявки В
	                      |					(ВЫБРАТЬ
	                      |						ВТОтказы.СтрокаЗаявки КАК СтрокаЗаявки
	                      |					ИЗ
	                      |						ВТОтказы КАК ВТОтказы)) КАК РезервыТоваровОстатки
	                      |		ПО (РезервыТоваровОстатки.СтрокаЗаявки = ВТОтказы.СтрокаЗаявки)
	                      |ГДЕ
	                      |	ВТОтказы.КоличествоДокумент > ВТОтказы.КоличествоРегистр"  );
	
	Запрос.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("Период", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая)); 	
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), Таблица_РезервыТоваров);
	
	Возврат Таблица_РезервыТоваров;
	
	
	
КонецФункции	


//функции получения движений по регистрам

//предопределнные процедуры
Процедура ВыполнитьПроведение(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	//Если НЕ ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() Тогда
	//если  РаботаСоСтатусамиДокументовСервер.НоваяСхемаЗакрытияЗаявок(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент,"Дата")) тогда 
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ЗаявкиПокупателей") тогда
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ЗаявкиПокупателей",
		РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	КонецЕсли;
	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "РезервыТоваров") тогда
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "РезервыТоваров",
		РегистрыНакопления_РезервыТоваров(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	КонецЕсли;

	//КонецЕсли;
	
	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ЗаказыПоставщикам") тогда
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ЗаказыПоставщикам",
		РегистрыНакопления_ЗаказыПоставщикам(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	КонецЕсли;
	
	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ОтказыПоЗаявкам") тогда
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ОтказыПоЗаявкам",
		РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	КонецЕсли;
	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ВозможныеЗаменыНоменклатуры") тогда
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ВозможныеЗаменыНоменклатуры",
		РегистрыСведений_ВозможныеЗаменыНоменклатуры(вхСсылкаНаДокумент, вхОтказ, вхПараметры));
	КонецЕсли;
	
	//КонецЕсли;
	
КонецПроцедуры	

Процедура ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(вхСсылкаНаДокумент);	
	
КонецПроцедуры

Функция КорректировкиПоЗаказу(ЗаказПоставщику, СтрокаОтбора = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаказаПоставщику.Ссылка,
	|	КорректировкаЗаказаПоставщику.Ссылка.Проведен КАК Проведен,
	|	КорректировкаЗаказаПоставщику.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	КорректировкаЗаказаПоставщику.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику КАК КорректировкаЗаказаПоставщику
	|ГДЕ
	|	КорректировкаЗаказаПоставщику.ДокументОснование = &ЗаказПоставщику
	|	И &СтрокаОтбора
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаЗаказаПоставщику.Дата Убыв";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтрокаОтбора", ?(Не ЗначениеЗаполнено(СтрокаОтбора), "Истина", СтрокаОтбора));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПометитьНаУдалениеКорректировкиПоЗаказу(ЗаказПоставщику, ВыводитьСообщение = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаКорректировок = Документы.КорректировкаЗаказаПоставщику.КорректировкиПоЗаказу(ЗаказПоставщику, "НЕ ПометкаУдаления");
	Для каждого СтрокаТаб Из ТаблицаКорректировок Цикл
		ДокОбъект =  СтрокаТаб.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	КоличествоКорректировок = ТаблицаКорректировок.Количество();
	Если ВыводитьСообщение И КоличествоКорректировок > 0 Тогда
		Сообщить("Помечено на удаление корректировок заказа: "+КоличествоКорректировок);
	КонецЕсли;
	
КонецПроцедуры


//Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	
//	Если ЗначениеЗаполнено(Данные.ДокументОснование) Тогда
//		Номер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Данные.ДокументОснование, "Номер");
//		Если Значениезаполнено(Данные.СтатусДокумента) Тогда
//			Представление = "Заказ поставщику №" + Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT") + " (" + Строка(Данные.СтатусДокумента) +")";
//		Иначе
//			Представление = "Заказ поставщику №" + Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT");
//		КонецЕсли;
//	Иначе
//		СтандартнаяОбработка = Истина;
//	КонецЕсли;
//	
//КонецПроцедуры

//Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	
//	Поля.Добавить("Дата");
//	Поля.Добавить("ДокументОснование");
//	Поля.Добавить("СтатусДокумента");
//	
//	
//КонецПроцедуры
//предопределнные процедуры


Функция ПолучитьМетаданные()
	Возврат Метаданные.Документы.КорректировкаЗаказаПоставщику;	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(вхМетаданныеОтбора) Экспорт
	
	СтруктураВозврат = Новый Структура;
	
	Если (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_ОкноПоставщика) тогда
		СтруктураВозврат = Новый Структура("Шапка, ТабличныеЧасти");
		СтруктураВозврат.Шапка = "Контрагент,ДоговорКонтрагента,Организация,Склад,ТорговаяТочка,СтатусДокумента";
		Соответствие = Новый Соответствие;
		Соответствие.Вставить("Товары", "Номенклатура, Количество, ЕдиницаИзмерения, КоличествоОтказ");
		Соответствие.Вставить("ПричиныОтказов", "ПричинаОтказа, Количество");
		СтруктураВозврат.ТабличныеЧасти = Соответствие;
	ИначеЕсли (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_77) тогда
		СтруктураВозврат = ОбменДаннымиКлиентСервер.РеквизитыКонтроляПоДокументу(ПолучитьМетаданные(), ИсключаемыеРеквизитыКонтроляРегистрации());
	КонецЕсли;
	
	Возврат СтруктураВозврат
	
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора) Экспорт
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора);
КонецФункции

Функция ИсключаемыеРеквизитыКонтроляРегистрации() Экспорт
	
	ИсключаемыеРеквизиты = ОбменДаннымиКлиентСервер.ИнициализироватьТаблицуИсключаемыхРеквизитовКонтроля();
	ОбменДаннымиКлиентСервер.ДобавитьВИсключаемыеРевизиты(ИсключаемыеРеквизиты, "Ссылка");
	
	Возврат ИсключаемыеРеквизиты;
	
КонецФункции

Процедура ИзменитьКорректировкуЗаказа(Документ,СтруктураЗаполнения,ПровестиИзменения = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") 
		или  ТипЗнч(Документ) = Тип("ДокументСсылка.ЗаказПоставщику") тогда 
		Документ = Документ.ПолучитьОбъект();
	КонецЕсли;	
		
	МетаданныеДокумента = Документ.метаданные();
	
	Модифицированость = Ложь;
	
	Для каждого ЭлементаСтруктуры  из СтруктураЗаполнения цикл 
		Если НЕ МетаданныеДокумента.Реквизиты.Найти(ЭлементаСтруктуры.ключ) = Неопределено
			 и Не Документ[ЭлементаСтруктуры.ключ] = ЭлементаСтруктуры.Значение тогда 
				 Документ[ЭлементаСтруктуры.ключ] = ЭлементаСтруктуры.Значение;
		Иначеесли  НЕ МетаданныеДокумента.ТабличныеЧасти.Найти(ЭлементаСтруктуры.ключ) = Неопределено тогда 
			Документ[ЭлементаСтруктуры.ключ].Загрузить(ЭлементаСтруктуры.Значение);
		ИначеЕсли  ЭлементаСтруктуры.ключ = "Дата" тогда
			Документ.Дата =  ЭлементаСтруктуры.Значение;
		иначе 	
			Продолжить;
		КонецЕсли;	
		
		Модифицированость = Истина
	КонецЦикла;	
	
	Если не Модифицированость тогда 
		Возврат;
	КонецЕсли;
	Документ.ДополнительныеСвойства.Вставить("СнятьОграничениеПоДатеЗапрета");
	Документ.Записать(?(ПровестиИзменения,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
	
	
КонецПроцедуры	


Функция РегистрыНакопления_ЗаказыПоставщикам_НеИспользуется(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов,СтатусДокумента");
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаказыПоставщикам", ТаблицаДвижений);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|ГДЕ
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировка = БлокировкаДанных.Добавить("РегистрНакопления.ЗаказыПоставщикам");
	ЭлементБлокировка.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировка.ИсточникДанных =  РезультатЗапроса;
	ЭлементБлокировка.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
	
	БлокировкаДанных.Заблокировать();
	
	Запрос = Новый Запрос;
	Если Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт Тогда
		//то, что нужно закрыть, определяется фоновым заданием, здесь только списываются остатки регистра
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
		|ПОМЕСТИТЬ втСтрокиЗаявки
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Дата КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.СтрокаЗаявки КАК СтрокаЗаявки,
		|	Остатки.ТорговаяТочка КАК ТорговаяТочка,
		|	Остатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Остатки.КоличествоОстаток КАК Количество,
		|	Остатки.СуммаРеглОстаток КАК СуммаРегл,
		|	Остатки.СуммаУпрОстаток КАК СуммаУпр
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			&КонПериода,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втСтрокиЗаявки.СтрокаЗаявки
		|				ИЗ
		|					втСтрокиЗаявки)) КАК Остатки";
		
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка КАК Ссылка,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.ТорговыеТочки.ПустаяСсылка)
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.Контрагент.ОсновнаяТорговаяТочка
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка
		|	КОНЕЦ КАК ТорговаяТочка,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Склад КАК Склад,
		|	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки,
		|	КорректировкаЗаказаПоставщикуТовары.Количество,
		|	КорректировкаЗаказаПоставщикуТовары.Цена
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
		|	И КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки <> ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка КАК Ссылка,
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки,
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.Количество
		|ПОМЕСТИТЬ втОтказы
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &Ссылка
		|	И КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки <> ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.Ссылка,
		|	втТовары.ДоговорКонтрагента,
		|	втТовары.ТорговаяТочка,
		|	втТовары.Склад,
		|	втТовары.Номенклатура,
		|	втТовары.СтрокаЗаявки,
		|	втТовары.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК Количество,
		|	втТовары.Цена КАК Цена
		|ПОМЕСТИТЬ втТоварыДокумента
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
		|		ПО втТовары.СтрокаЗаявки = втОтказы.СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.Склад КАК Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура КАК Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка КАК ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	СУММА(ЗаказыПоставщикамОбороты.КоличествоОборот) КАК Количество,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглОборот) КАК СуммаРегл,
		|	СУММА(ЗаказыПоставщикамОбороты.СуммаУпрОборот) КАК СуммаУпр
		|ПОМЕСТИТЬ втЗаказыПоставщикам
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
		|			,
		|			&Граница,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втТовары.СтрокаЗаявки
		|				ИЗ
		|					втТовары)) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОбороты.Склад,
		|	ЗаказыПоставщикамОбороты.Номенклатура,
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ТорговаяТочка,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(втТоварыДокумента.ДоговорКонтрагента, втЗаказыПоставщикам.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	ЕСТЬNULL(втТоварыДокумента.ТорговаяТочка, втЗаказыПоставщикам.ТорговаяТочка) КАК ТорговаяТочка,
		|	ЕСТЬNULL(втТоварыДокумента.Склад, втЗаказыПоставщикам.Склад) КАК Склад,
		|	ЕСТЬNULL(втТоварыДокумента.Номенклатура, втЗаказыПоставщикам.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(втТоварыДокумента.СтрокаЗаявки, втЗаказыПоставщикам.СтрокаЗаявки) КАК СтрокаЗаявки,
		|	втТоварыДокумента.Количество КАК КоличествоТовары,
		|	ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) КАК КоличествоРегистр,
		|	втТоварыДокумента.Цена КАК ЦенаТовары,
		|	ВЫБОР
		|		КОГДА втТоварыДокумента.Ссылка.ВалютаДокумента = &ВалютаРегл
		|			ТОГДА втТоварыДокумента.Цена
		|		ИНАЧЕ втТоварыДокумента.Цена * втТоварыДокумента.Ссылка.КурсВзаиморасчетов / втТоварыДокумента.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * втТоварыДокумента.Количество КАК СуммаРеглТовары,
		|	ВЫБОР
		|		КОГДА втТоварыДокумента.Ссылка.ВалютаДокумента = &ВалютаУпр
		|			ТОГДА втТоварыДокумента.Цена
		|		ИНАЧЕ втТоварыДокумента.Цена * втТоварыДокумента.Ссылка.КурсВзаиморасчетов / втТоварыДокумента.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * втТоварыДокумента.Количество КАК СуммаУпрТовары,
		|	ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) КАК СуммаРеглРегистр,
		|	ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) КАК СуммаУпрРегистр
		|ПОМЕСТИТЬ втИтоговая
		|ИЗ
		|	втТоварыДокумента КАК втТоварыДокумента
		|		ПОЛНОЕ СОЕДИНЕНИЕ втЗаказыПоставщикам КАК втЗаказыПоставщикам
		|		ПО втТоварыДокумента.Склад = втЗаказыПоставщикам.Склад
		|			И втТоварыДокумента.Номенклатура = втЗаказыПоставщикам.Номенклатура
		|			И втТоварыДокумента.СтрокаЗаявки = втЗаказыПоставщикам.СтрокаЗаявки
		|			И втТоварыДокумента.ТорговаяТочка = втЗаказыПоставщикам.ТорговаяТочка
		|			И втТоварыДокумента.ДоговорКонтрагента = втЗаказыПоставщикам.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр < 0
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	&Дата КАК Период,
		|	втИтоговая.ДоговорКонтрагента,
		|	втИтоговая.ТорговаяТочка,
		|	втИтоговая.Склад,
		|	втИтоговая.Номенклатура,
		|	втИтоговая.СтрокаЗаявки,
		|	втИтоговая.ЦенаТовары КАК ЦенаТовары,
		|	ВЫБОР
		|		КОГДА втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр < 0
		|			ТОГДА -(втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр)
		|		ИНАЧЕ втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр < 0
		|			ТОГДА -(втИтоговая.СуммаРеглТовары - втИтоговая.СуммаРеглРегистр)
		|		ИНАЧЕ втИтоговая.СуммаРеглТовары - втИтоговая.СуммаРеглРегистр
		|	КОНЕЦ КАК СуммаРегл,
		|	ВЫБОР
		|		КОГДА втИтоговая.КоличествоТовары - втИтоговая.КоличествоРегистр < 0
		|			ТОГДА -(втИтоговая.СуммаУпрТовары - втИтоговая.СуммаУпрРегистр)
		|		ИНАЧЕ втИтоговая.СуммаУпрТовары - втИтоговая.СуммаУпрРегистр
		|	КОНЕЦ КАК СуммаУпр
		|ИЗ
		|	втИтоговая КАК втИтоговая
		|ГДЕ
		|	(втИтоговая.КоличествоТовары <> втИтоговая.КоличествоРегистр
		|			ИЛИ втИтоговая.СуммаРеглТовары <> втИтоговая.СуммаРеглРегистр
		|			ИЛИ втИтоговая.СуммаУпрТовары <> втИтоговая.СуммаУпрТовары)";
		
		Запрос.УстановитьПараметр("Дата", 		Реквизиты.Дата);
		Запрос.УстановитьПараметр("Ссылка", 	вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("ВалютаРегл", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпр", 	глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Запрос.УстановитьПараметр("Граница", 	Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция РегистрыНакопления_ЗаказыПоставщикам(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов,СтатусДокумента");
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаказыПоставщикам", ТаблицаДвижений);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|ГДЕ
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировка = БлокировкаДанных.Добавить("РегистрНакопления.ЗаказыПоставщикам");
	ЭлементБлокировка.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировка.ИсточникДанных =  РезультатЗапроса;
	ЭлементБлокировка.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
	
	БлокировкаДанных.Заблокировать();
	
	Запрос = Новый Запрос;
	//Если Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт Тогда
	//	//то, что нужно закрыть, определяется фоновым заданием, здесь только списываются остатки регистра
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
	//	|ПОМЕСТИТЬ втСтрокиЗаявки
	//	|ИЗ
	//	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	//	|ГДЕ
	//	|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	СтрокаЗаявки
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	&Дата КАК Период,
	//	|	&Ссылка КАК Регистратор,
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	//	|	Остатки.Склад КАК Склад,
	//	|	Остатки.Номенклатура КАК Номенклатура,
	//	|	Остатки.СтрокаЗаявки КАК СтрокаЗаявки,
	//	|	Остатки.ТорговаяТочка КАК ТорговаяТочка,
	//	|	Остатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//	|	Остатки.КоличествоОстаток КАК Количество,
	//	|	Остатки.СуммаРеглОстаток КАК СуммаРегл,
	//	|	Остатки.СуммаУпрОстаток КАК СуммаУпр
	//	|ИЗ
	//	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	//	|			&КонПериода,
	//	|			СтрокаЗаявки В
	//	|				(ВЫБРАТЬ
	//	|					втСтрокиЗаявки.СтрокаЗаявки
	//	|				ИЗ
	//	|					втСтрокиЗаявки)) КАК Остатки";
	//	
	//	Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
	//	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	//	Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
	//	
	//Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(КорректировкаЗаказаПоставщикуПричиныОтказов.Количество) КАК Количество,
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки
		|ПОМЕСТИТЬ ВТПричиныОтказов
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.ПричиныОтказов КАК КорректировкаЗаказаПоставщикуПричиныОтказов
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректировкаЗаказаПоставщикуПричиныОтказов.СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка,
		|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ДоговорКонтрагента,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Склад,
		|	КорректировкаЗаказаПоставщикуТовары.Количество КАК КоличествоЗаказано,
		|	ЕСТЬNULL(ВТПричиныОтказов.Количество, 0) КАК КоличествоОтказ,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = ВалютаРегламентированногоУчета.Значение
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ КАК ЦенаРегл,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = ВалютаУправленческогоУчета.Значение
		|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
		|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ КАК ЦенаУпр,
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Дата КАК Период
		|ПОМЕСТИТЬ ВтДанныеДокумента
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПричиныОтказов КАК ВТПричиныОтказов
		|		ПО КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки = ВТПричиныОтказов.СтрокаЗаявки,
		|	Константа.ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета,
		|	Константа.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
		|ГДЕ
		|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
		|	СУММА(ЗаказыПоставщикамОбороты.КоличествоПриход) КАК КоличествоПриход,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТПриход
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
		|			,
		|			&Период,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					ВтДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки
		|				ИЗ
		|					ВтДанныеДокумента КАК ВтДанныеДокумента)) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|	И НЕ ЗаказыПоставщикамОбороты.Регистратор = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
		|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.Склад,
		|	ЗаказыПоставщикамОстатки.Номенклатура,
		|	ЗаказыПоставщикамОстатки.СтрокаЗаявки,
		|	ЗаказыПоставщикамОстатки.ТорговаяТочка,
		|	ЗаказыПоставщикамОстатки.ДоговорКонтрагента,
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК Количество,
		|	ЗаказыПоставщикамОстатки.СуммаРеглОстаток КАК СуммаРегл,
		|	ЗаказыПоставщикамОстатки.СуммаУпрОстаток КАК СуммаУпр
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			&Период,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					ВтДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки
		|				ИЗ
		|					ВтДанныеДокумента КАК ВтДанныеДокумента)) КАК ЗаказыПоставщикамОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтДанныеДокумента.Номенклатура,
		|	ВтДанныеДокумента.ТорговаяТочка,
		|	ВтДанныеДокумента.СтрокаЗаявки,
		|	ВтДанныеДокумента.ДоговорКонтрагента,
		|	ВтДанныеДокумента.Склад,
		|	ВтДанныеДокумента.КоличествоЗаказано - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0) КАК Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ВтДанныеДокумента.Период,
		|	(ВтДанныеДокумента.КоличествоЗаказано - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)) * ВтДанныеДокумента.ЦенаРегл КАК СуммаРегл,
		|	(ВтДанныеДокумента.КоличествоЗаказано - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)) * ВтДанныеДокумента.ЦенаУпр КАК СуммаУпр
		|ИЗ
		|	ВтДанныеДокумента КАК ВтДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриход КАК ВТПриход
		|		ПО ВтДанныеДокумента.СтрокаЗаявки = ВТПриход.СтрокаЗаявки
		|ГДЕ
		|	ВтДанныеДокумента.КоличествоЗаказано > ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.ТорговаяТочка,
		|	ВложенныйЗапрос.СтрокаЗаявки,
		|	ВложенныйЗапрос.ДоговорКонтрагента,
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоРегистр,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	ВложенныйЗапрос.Период,
		|	(ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоРегистр) * ВложенныйЗапрос.ЦенаРегл,
		|	(ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоРегистр) * ВложенныйЗапрос.ЦенаУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВтДанныеДокумента.Номенклатура КАК Номенклатура,
		|		ВтДанныеДокумента.ТорговаяТочка КАК ТорговаяТочка,
		|		ВтДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки,
		|		ВтДанныеДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВтДанныеДокумента.Склад КАК Склад,
		|		ВтДанныеДокумента.КоличествоЗаказано КАК КоличествоЗаказано,
		|		ВтДанныеДокумента.КоличествоОтказ КАК КоличествоОтказ,
		|		ВтДанныеДокумента.Период КАК Период,
		|		СУММА(ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0)) КАК КоличествоРегистр,
		|		ВтДанныеДокумента.ЦенаРегл КАК ЦенаРегл,
		|		ВтДанныеДокумента.ЦенаУпр КАК ЦенаУпр
		|	ИЗ
		|		ВтДанныеДокумента КАК ВтДанныеДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(
		|					,
		|					&Период,
		|					Регистратор,
		|					СтрокаЗаявки В
		|						(ВЫБРАТЬ
		|							ВтДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки
		|						ИЗ
		|							ВтДанныеДокумента КАК ВтДанныеДокумента)) КАК ОтказыПоЗаявкамОбороты
		|			ПО ВтДанныеДокумента.СтрокаЗаявки = ОтказыПоЗаявкамОбороты.СтрокаЗаявки
		|				И (ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|					ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
		|				И (НЕ ОтказыПоЗаявкамОбороты.Регистратор = &ДокументСсылка)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВтДанныеДокумента.Номенклатура,
		|		ВтДанныеДокумента.Период,
		|		ВтДанныеДокумента.ТорговаяТочка,
		|		ВтДанныеДокумента.ДоговорКонтрагента,
		|		ВтДанныеДокумента.Склад,
		|		ВтДанныеДокумента.СтрокаЗаявки,
		|		ВтДанныеДокумента.КоличествоЗаказано,
		|		ВтДанныеДокумента.КоличествоОтказ,
		|		ВтДанныеДокумента.ЦенаРегл,
		|		ВтДанныеДокумента.ЦенаУпр) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.КоличествоОтказ > ВложенныйЗапрос.КоличествоРегистр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СменаДоговора.Номенклатура,
		|	СменаДоговора.ТорговаяТочка,
		|	СменаДоговора.СтрокаЗаявки,
		|	СменаДоговора.ДоговорКонтрагента,
		|	СменаДоговора.Склад,
		|	СменаДоговора.Количество,
		|	СменаДоговора.ВидДвижения,
		|	СменаДоговора.Период,
		|	СменаДоговора.СуммаРегл,
		|	СменаДоговора.СуммаУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВЫРАЗИТЬ(&ДокументСсылка КАК Документ.КорректировкаЗаказаПоставщику).ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВТОстатки.Номенклатура КАК Номенклатура,
		|		ВТОстатки.Склад КАК Склад,
		|		ВТОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
		|		ВТОстатки.ТорговаяТочка КАК ТорговаяТочка,
		|		ЗНАЧЕНИЕ(ВИдДвиженияНакопления.Приход) КАК ВидДвижения,
		|		ВТОстатки.Количество КАК Количество,
		|		ВТОстатки.СуммаРегл КАК СуммаРегл,
		|		ВТОстатки.СуммаУпр КАК СуммаУпр,
		|		ВЫРАЗИТЬ(&ДокументСсылка КАК Документ.КорректировкаЗаказаПоставщику).Дата КАК Период
		|	ИЗ
		|		ВТОстатки КАК ВТОстатки
		|	ГДЕ
		|		ВТОстатки.ДоговорКонтрагента <> ВЫРАЗИТЬ(&ДокументСсылка КАК Документ.КорректировкаЗаказаПоставщику).ДоговорКонтрагента
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОстатки.ДоговорКонтрагента,
		|		ВТОстатки.Номенклатура,
		|		ВТОстатки.Склад,
		|		ВТОстатки.СтрокаЗаявки,
		|		ВТОстатки.ТорговаяТочка,
		|		ЗНАЧЕНИЕ(ВИдДвиженияНакопления.Расход),
		|		ВТОстатки.Количество,
		|		ВТОстатки.СуммаРегл,
		|		ВТОстатки.СуммаУпр,
		|		ВЫРАЗИТЬ(&ДокументСсылка КАК Документ.КорректировкаЗаказаПоставщику).Дата
		|	ИЗ
		|		ВТОстатки КАК ВТОстатки
		|	ГДЕ
		|		ВТОстатки.ДоговорКонтрагента <> ВЫРАЗИТЬ(&ДокументСсылка КАК Документ.КорректировкаЗаказаПоставщику).ДоговорКонтрагента) КАК СменаДоговора";
		
		Запрос.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Период",Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
		
	//КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция РегистрыНакопления_ЗаказыПоставщикам_оригинал(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов");
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаказыПоставщикам", ТаблицаДвижений);
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки КАК СтрокаЗаявки
	|ПОМЕСТИТЬ втСтрокиЗаявки
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|ГДЕ
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОбороты.Склад КАК Склад,
	|	ЗаказыПоставщикамОбороты.Номенклатура КАК Номенклатура,
	|	ЗаказыПоставщикамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗаказыПоставщикамОбороты.ТорговаяТочка КАК ТорговаяТочка,
	|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СУММА(ЗаказыПоставщикамОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглОборот) КАК СуммаРегл,
	|	СУММА(ЗаказыПоставщикамОбороты.СуммаУпрОборот) КАК СуммаУпр
	|ПОМЕСТИТЬ втЗаказыПоставщикам
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			&КонПериода,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					втСтрокиЗаявки.СтрокаЗаявки
	|				ИЗ
	|					втСтрокиЗаявки)) КАК ЗаказыПоставщикамОбороты
	|ГДЕ
	|	(ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	|			ИЛИ ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОбороты.Склад,
	|	ЗаказыПоставщикамОбороты.Номенклатура,
	|	ЗаказыПоставщикамОбороты.СтрокаЗаявки,
	|	ЗаказыПоставщикамОбороты.ТорговаяТочка,
	|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка = &ПустаяТТ
	|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.Контрагент.ОсновнаяТорговаяТочка
	|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Ссылка.ТорговаяТочка
	|	КОНЕЦ КАК ТорговаяТочка,
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка.Склад КАК Склад,
	|	КорректировкаЗаказаПоставщикуТовары.Номенклатура,
	|	КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки,
	|	КорректировкаЗаказаПоставщикуТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
	|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
	|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
	|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА КорректировкаЗаказаПоставщикуТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
	|			ТОГДА КорректировкаЗаказаПоставщикуТовары.Цена
	|		ИНАЧЕ КорректировкаЗаказаПоставщикуТовары.Цена * КорректировкаЗаказаПоставщикуТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаказаПоставщикуТовары.Ссылка.КратностьВзаиморасчетов
	|	КОНЕЦ * КорректировкаЗаказаПоставщикуТовары.Количество КАК СуммаУпр
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК КорректировкаЗаказаПоставщикуТовары
	|ГДЕ
	|	КорректировкаЗаказаПоставщикуТовары.Ссылка = &Ссылка
	|	И КорректировкаЗаказаПоставщикуТовары.СтрокаЗаявки <> &ПустаяСтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втТовары.Склад, втЗаказыПоставщикам.Склад) КАК Склад,
	|	ЕСТЬNULL(втТовары.Номенклатура, втЗаказыПоставщикам.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(втТовары.СтрокаЗаявки, втЗаказыПоставщикам.СтрокаЗаявки) КАК СтрокаЗаявки,
	|	ЕСТЬNULL(втТовары.ТорговаяТочка, втЗаказыПоставщикам.ТорговаяТочка) КАК ТорговаяТочка,
	|	ЕСТЬNULL(втТовары.ДоговорКонтрагента, втЗаказыПоставщикам.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) КАК СуммаРегл,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период
	|ИЗ
	|	втТовары КАК втТовары
	|		ПОЛНОЕ СОЕДИНЕНИЕ втЗаказыПоставщикам КАК втЗаказыПоставщикам
	|		ПО втТовары.Склад = втЗаказыПоставщикам.Склад
	|			И втТовары.Номенклатура = втЗаказыПоставщикам.Номенклатура
	|			И втТовары.СтрокаЗаявки = втЗаказыПоставщикам.СтрокаЗаявки
	|			И втТовары.ТорговаяТочка = втЗаказыПоставщикам.ТорговаяТочка
	|			И втТовары.ДоговорКонтрагента = втЗаказыПоставщикам.ДоговорКонтрагента
	|ГДЕ
	|	(ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаказыПоставщикам.Количество, 0) <> 0
	|			ИЛИ ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаУпр, 0) <> 0
	|			ИЛИ ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаказыПоставщикам.СуммаРегл, 0) <> 0)";
	
	Запрос.УстановитьПараметр("ПустаяТТ", Справочники.ТорговыеТочки.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтрокаЗаявки", Справочники.ИдентификаторыСтрокЗаявок.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
	
	Возврат ТаблицаДвижений;
	
КонецФункции
