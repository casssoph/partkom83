
//// ОБРАБОТЧИКИ МОДУЛЯ ОБЪЕКТА

// Процедура - Перед записью. Обрабочик модуля документов "Заявка покупателя" и "Корректировка заявки покупателя"
//
// Параметры:
//  ЭтотОбъект		 - ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ			 - Булево - Признак отказа 
//  РежимЗаписи		 - РежимЗаписиДокумента	- 
//  РежимПроведения	 - РежимПроведенияДокумента	- 
//
Процедура ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	     
	////Перем вхПараметры;
	//Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт И Не РольДоступна("ПолныеПрава") Тогда 
	//	Отказ = Истина;
	//	ВызватьИсключение "Заявка закрывается документом ""Закрытие заявок покупателя""";
	//КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтотОбъект.ЭтоНовый());
	ЭтотОбъект.ДополнительныеСвойства.Вставить("мПроверкаПередПроведением", ЭтотОбъект.мПроверкаПередПроведением);
	ЭтотОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Попытка
		ПокупательИзДругойБазы = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЭтотОбъект.Контрагент, "ПокупательИзДрБазы");
		Если ПокупательИзДругойБазы Тогда
			//для питерских заявок нужна цена закупки и прайс поставщика 16, если он не заполнен
			Прайс16 = Справочники.ПрайсыПоставщиков.НайтиПоКоду(16);
			Для Каждого Товар Из ЭтотОбъект.Товары Цикл
				ДописатьВСтрокуЗаявки = Ложь;
			
				Если Товар.ЦенаЗакупки = 0 Тогда
					Товар.ЦенаЗакупки = Товар.Цена;
					ДописатьВСтрокуЗаявки = Истина;
				
				КонецЕсли;
			
				Если НЕ ЗначениеЗаполнено(Товар.ПрайсПоставщика) Тогда
					Товар.ПрайсПоставщика = Прайс16;
					ДописатьВСтрокуЗаявки = Истина;
				
				КонецЕсли;
			
				Если ЗначениеЗаполнено(Товар.СтрокаЗаявки) И ДописатьВСтрокуЗаявки Тогда
					ОбъектСтрокаЗаявки = Товар.СтрокаЗаявки.ПолучитьОбъект();
					ОбъектСтрокаЗаявки.ЦенаЗакупки = Товар.ЦенаЗакупки;
					ОбъектСтрокаЗаявки.ПрайсПоставщика = Товар.ПрайсПоставщика;
					ОбъектСтрокаЗаявки.Записать();
					
				КонецЕсли;
			
			КонецЦикла;
		
		КонецЕсли;
	Исключение
		//контрагент не заполнен, пропускаем
	КонецПопытки;
		
	
	
	Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("мНеПерезаполнятьДвижения") Тогда 
		ЭтотОбъект.ДополнительныеСвойства.Вставить("мНеПерезаполнятьДвижения", Ложь); // Для корректировок
	КонецЕсли;
	
	//{{ХудинВВ 20180629 ХХ-159, временный костыль
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ИНН = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.Организация, "ИНН"));
		Если Не ЗначениеЗаполнено(ИНН) Тогда
			Отказ = Истина;
			ВызватьИсключение "Выбрана организация с незаполненным ИНН!";
		КонецЕсли;
		
	КонецЕсли;
	//}}
	
	
	//Если Не ЭтотОбъект.ДополнительныеСвойства.ЭтоНовый И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
	//	ДатаДо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.Ссылка, "Дата");
	//	Если ДатаДо < ЭтотОбъект.Дата И ЭтотОбъект.Дата >= глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда  
	//		// Собственные движения документа стали попадать в рассчитываемый период, поэтому движения нужно удалить
	//		// Т.к. некоторые данные будут получены перед записью, то движения удаляются заранее 
	//		ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(ЭтотОбъект.Ссылка, "РезервыТоваров");
	//		ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(ЭтотОбъект.Ссылка, "ЗаявкиПокупателей");
	//		ПроведениеДокументовКлиентСервер.ОчиститьДвиженияДокумента(ЭтотОбъект.Ссылка, "ОтказыПоЗаявкам");
	//	КонецЕсли;
	//КонецЕсли;
	
	ПроведениеДокументовКлиентСервер.ОчиститьДвиженияПриСдвигеДаты(ЭтотОбъект, РежимЗаписи, "РезервыТоваров,ЗаявкиПокупателей,ОтказыПоЗаявкам");
	//# Kalinin V.A. ( 2018-11-28 )
	// Добавил отдельный механизм по рознице
	Если ЭтотОбъект.ИсточникЗаявки = Перечисления.ИсточникиЗаявок.СайтРозница тогда 
		ЗаявкиПокупателяКлиентСервер.СоздатьОбновитьСТрокуЗаявкиРозничнойЗаявки(ЭтотОбъект);
	иначе 	
		СоздатьОбновитьСтрокиЗаявки(ЭтотОбъект);
	КонецЕсли;
	
	Если Не ЭтотОбъект.ДополнительныеСвойства.мНеПерезаполнятьДвижения Тогда 	
		
		Если Не ЭтотОбъект.ОбменДанными.Загрузка Тогда 
			
			//Добавлено Валиахметов А.А. 01.03.2018 PK83-232				
			ЗаполнениеДокументов.ЗаполнитьКлючиСвязи(ЭтотОбъект);
			//Конец Добавлено Валиахметов А.А. 01.03.2018 PK83-232				
			
			Если Не ЗначениеЗаполнено(ЭтотОбъект.Ответственный) Тогда 
				ЭтотОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЭтотОбъект.ДатаОплаты) Тогда
				ЭтотОбъект.ДатаОплаты = ТекущаяДата();
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЭтотОбъект.ДатаОтгрузки) Тогда
				ЭтотОбъект.ДатаОтгрузки = ТекущаяДата();
			КонецЕсли;
			
			ЭтотОбъект.СуммаДокумента = ОбщегоНазначения.ФорматСумм(ЭтотОбъект.Товары.Итог("Сумма") + ЭтотОбъект.Услуги.Итог("Сумма") + ?(ЭтотОбъект.УчитыватьНДС И Не ЭтотОбъект.СуммаВключаетНДС, ЭтотОбъект.Товары.Итог("СуммаНДС") + ЭтотОбъект.Услуги.Итог("СуммаНДС"), 0));
			
			Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда 
				ЭтотОбъект.Подтверждена = Истина;	
			ИначеЕсли ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден Тогда 	
				ЭтотОбъект.Подтверждена = Ложь;	
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("НеПроверятьКорректностьОтказов") Тогда 
			ПроверитьКорректностьОтказов(ЭтотОбъект, Отказ, РежимЗаписи);
		КонецЕсли;
		
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;
		
		//ЭтотОбъект.ДополнительныеСвойства.Свойство("вхПараметры", вхПараметры);
		
		ПолучитьДополнительныеТаблицы(ЭтотОбъект, Отказ, РежимЗаписи);
		ПроставитьРеквизитыРезерваДляЗаявки(ЭтотОбъект, РежимЗаписи);
		
		//ДобавитьОтказыРассчитатьРезерв(ЭтотОбъект, Отказ, РежимЗаписи, вхПараметры);
		ЗаполнитьКолонкуОтмена(ЭтотОбъект);
		//ЗаполнитьРеквизитыСвязанныеСРезервом(ЭтотОбъект, Отказ, РежимЗаписи, вхПараметры);
		
		// Дурандин Д.А. 2018-07-30
		//РассчитатьПрибыль(ЭтотОбъект, Отказ, РежимЗаписи); 
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - При записи. Обрабочик модуля документов "Заявка покупателя" и "Корректировка заявки покупателя"
//
// Параметры:
//  ЭтотОбъект	- ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		- Булево - Признак отказа 
//
Процедура ПриЗаписи(ЭтотОбъект, Отказ) Экспорт 
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("мЗаписьБезОбработки") Тогда 
		Возврат;
	КонецЕсли;

	Если Не Отказ И (ЭтотОбъект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение 
		ИЛИ ЭтотОбъект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) Тогда 
		Документы.ЗаявкаПокупателя.ОбновитьПоследнююКорректировку(ЭтотОбъект.Ссылка);
	КонецЕсли;
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ЗаписатьВИсториюИзменения") Тогда
		РегистрыСведений.ПричиныИзмененияДокументов.Добавить(ЭтотОбъект.Ссылка, ЭтотОбъект.ДополнительныеСвойства.КомментарийПричинаИзменения, ЭтотОбъект.ДополнительныеСвойства.СуммаДоПричинаИзменения);
	КонецЕсли;

КонецПроцедуры

// Процедура - Выполнить проведение. Вызывается из обработчика "Обработка проведения" документов "Заявка покупателя" и "Корректировка заявки покупателя"
// Может вызываться отдельно для ссылки на документ. 
//
// Параметры:
//  вхОбъект	 - ДокументСсылка.ЗаявкаПокупателя, ДокументСсылка.КорректировкаЗаявкиПокупателя - 
//  вхОтказ		 - Булево	 - Признак отказа
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры
//
Процедура ВыполнитьПроведение(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
		
	ОбновитьОтказы = Ложь;
	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "РезервыТоваров") Тогда
		ДобавленныеОтказы = Новый ТаблицаЗначений;
		ДатаНовыхРезервов = ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("Временно_ДатаНовыхДвиженийПоРезервам");
		Если ЗначениеЗаполнено(ДатаНовыхРезервов) и   ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент,"Дата")>= ДатаНовыхРезервов  тогда 
		ТаблицаДвижений = РегистрыНакопления_РезервыТоваров_Новая(вхСсылкаНаДокумент, вхОтказ, вхПараметры,ДобавленныеОтказы);	
		Иначе 	
		ТаблицаДвижений = РегистрыНакопления_РезервыТоваров(вхСсылкаНаДокумент, вхОтказ, вхПараметры,,ДобавленныеОтказы);
		КонецЕсли;
		
		
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "РезервыТоваров", ТаблицаДвижений);
		ОбновитьДокумент(вхСсылкаНаДокумент, ДобавленныеОтказы, ОбновитьОтказы, вхПараметры);
	КонецЕсли; 
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ЗаявкиПокупателей") Тогда
		//Если РаботаСоСтатусамиДокументовСервер.НоваяСхемаЗакрытияЗаявок(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент,"Дата")) тогда 
		ТаблицаДвижений = РегистрыНакопления_ЗаявкиПокупателей_НоваяСхема(вхСсылкаНаДокумент, вхОтказ, вхПараметры);	
		//иначе 	
		//ТаблицаДвижений = РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры);
		//КонецЕсли;
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ЗаявкиПокупателей", ТаблицаДвижений);
	КонецЕсли;
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "ОтказыПоЗаявкам") Или ОбновитьОтказы Тогда 
		ТаблицаДвижений = РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, вхОтказ, вхПараметры);
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "ОтказыПоЗаявкам", ТаблицаДвижений);
	КонецЕсли;	
	Если ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "Услуги") Тогда 
		ТаблицаДвижений = РегистрыНакопления_Услуги(вхСсылкаНаДокумент, вхОтказ, вхПараметры);
		ОбщегоНазначения.ЗаписатьДвиженияДокумента(вхСсылкаНаДокумент, "Услуги", ТаблицаДвижений);
	КонецЕсли;	
	
////Контроль
//СформироватьСписокРегистровДляКонтроля();
//ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
//ПроведениеДокументовКлиентСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект,Отказ);
//	
	
	
	
КонецПроцедуры

// Процедура - Выполнить отмену проведения. Вызывается из обработчика "Обработка удаления проведения" документов "Заявка покупателя" и "Корректировка заявки покупателя"
//
// Параметры:
//  вхСсылкаНаДокумент	 - ДокументСсылка.ЗаявкаПокупателя, ДокументСсылка.КорректировкаЗаявкиПокупателя - 
//  вхОтказ				 - Булево - Признак отказа
//  вхПараметры			 - Структура, Неопределено - Дополнительные параметры
//
Процедура ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	Если НЕ вхОтказ Тогда
		
		
		Движения = РегистрыНакопления.РезервыТоваров.СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(вхСсылкаНаДокумент);
		Движения.Записать();
		
		Движения = РегистрыНакопления.ЗаявкиПокупателей.СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(вхСсылкаНаДокумент);
		Движения.Записать();
		
		Движения = РегистрыНакопления.ОтказыПоЗаявкам.СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(вхСсылкаНаДокумент);
		Движения.Записать();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбновитьДокумент(вхСсылкаНаДокумент, ДобавленныеОтказы, ОбновитьОтказы, вхПараметры = Неопределено) 
	
	Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "Дата");
	
	АвтоОтказы = Дата >= глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83"); 
	
	ДобавитьКритСобытие = Ложь;
	ДополнительныеСвойства = Неопределено;
	Если ТипЗнч(вхПараметры) = Тип("Структура") И вхПараметры.Свойство("ДополнительныеСвойства", ДополнительныеСвойства) Тогда
		Если ТипЗнч(ДополнительныеСвойства) = Тип("Структура") И ДополнительныеСвойства.Свойство("ЗагрузкаССайта") Тогда
			ДобавитьКритСобытие	= Истина;
		КонецЕсли;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаПокупателяПричиныОтказов.КлючСвязи,
	               |	СУММА(ЗаявкаПокупателяПричиныОтказов.Количество) КАК Количество
	               |ПОМЕСТИТЬ втОтказы
	               |ИЗ
	               |	Документ.ЗаявкаПокупателя.ПричиныОтказов КАК ЗаявкаПокупателяПричиныОтказов
	               |ГДЕ
	               |	ЗаявкаПокупателяПричиныОтказов.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаявкаПокупателяПричиныОтказов.КлючСвязи
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаявкаПокупателяТовары.СтрокаЗаявки,
	               |	ЗаявкаПокупателяТовары.ДатаУстановкиРезерва,
	               |	ВЫБОР
	               |		КОГДА ЗаявкаПокупателяТовары.Количество - ЕСТЬNULL(втОтказы.Количество, 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЗаявкаПокупателяТовары.Сумма / (ЗаявкаПокупателяТовары.Количество - ЕСТЬNULL(втОтказы.Количество, 0))
	               |	КОНЕЦ КАК Цена
	               |ПОМЕСТИТЬ втСтрокиЗаявки
	               |ИЗ
	               |	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
	               |		ПО ЗаявкаПокупателяТовары.КлючСвязи = втОтказы.КлючСвязи
	               |ГДЕ
	               |	ЗаявкаПокупателяТовары.Ссылка = &Ссылка
	               |	И (ЗаявкаПокупателяТовары.ПрайсПоставщика = ЗНАЧЕНИЕ(Справочник.ПрайсыПоставщиков.ПустаяСсылка)
	               |			ИЛИ ЗаявкаПокупателяТовары.ПрайсПоставщика.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РезервыТоваровОбороты.СтрокаЗаявки,
	               |	СУММА(РезервыТоваровОбороты.КоличествоОборот) КАК Количество
	               |ПОМЕСТИТЬ втРезервы
	               |ИЗ
	               |	РегистрНакопления.РезервыТоваров.Обороты(
	               |			,
	               |			&КонПериода,
	               |			Регистратор,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК РезервыТоваровОбороты
	               |ГДЕ
	               |	(РезервыТоваровОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	               |			ИЛИ РезервыТоваровОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя
	               |			ИЛИ РезервыТоваровОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковПоРегиструРезервыТоваров)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РезервыТоваровОбороты.СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втСтрокиЗаявки.СтрокаЗаявки,
	               |	втСтрокиЗаявки.ДатаУстановкиРезерва,
	               |	ЕСТЬNULL(втРезервы.Количество, 0) > 0 КАК УстановленРезерв,
	               |	втСтрокиЗаявки.Цена * ЕСТЬNULL(втРезервы.Количество, 0) КАК СуммаРезерва
	               |ИЗ
	               |	втСтрокиЗаявки КАК втСтрокиЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втРезервы.СтрокаЗаявки";
	
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ЗаявкаПокупателя.ПричиныОтказов", "Документ.КорректировкаЗаявкиПокупателя.ПричиныОтказов");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ЗаявкаПокупателя.Товары", "Документ.КорректировкаЗаявкиПокупателя.Товары");
		Заявка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "ДокументОснование");
	Иначе
		Заявка = вхСсылкаНаДокумент;
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("Заявка", Заявка);
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Включая));	
	ДанныеПоРезервам = Запрос.Выполнить().Выгрузить();
	
	СуммаРезерва = ДанныеПоРезервам.Итог("СуммаРезерва");
	СуммаРезерваВДокументе = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "СуммаРезерва");
	НужноМенятьДокумент = СуммаРезерва <> СуммаРезерваВДокументе;
	
	Если Не НужноМенятьДокумент Тогда 
		Для Каждого СтрокаТЧ Из ДанныеПоРезервам Цикл 
			Если СтрокаТЧ.УстановленРезерв И Не ЗначениеЗаполнено(СтрокаТЧ.ДатаУстановкиРезерва) Тогда 
				НужноМенятьДокумент = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НужноМенятьДокумент Или (ДобавленныеОтказы.Количество() > 0 И АвтоОтказы) Тогда 
		ОбновитьОтказы = Истина;
		лОбъект = вхСсылкаНаДокумент.ПолучитьОбъект();
		лОбъект.СуммаРезерва = СуммаРезерва;
		
		Если ДобавленныеОтказы.Количество() > 0 И АвтоОтказы Тогда 
			Для Каждого СтрокаТЧ Из ДобавленныеОтказы Цикл 
				СтрокаТовары = лОбъект.Товары.Найти(СтрокаТЧ.КлючСвязи, "КлючСвязи");
				Количество = СтрокаТовары.Количество;
				
				Отбор = Новый Структура("КлючСвязи,ПричинаОтмены");
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЧ);
				Строки = лОбъект.ПричиныОтказов.НайтиСтроки(Отбор);
				КоличествоОтказаноДо = 0;
				
				Для Каждого СтрокаОтказа Из Строки Цикл 
					КоличествоОтказаноДо = КоличествоОтказаноДо + СтрокаОтказа.Количество;
				КонецЦикла;
				
				Если Строки.Количество() = 0 Тогда 
					СтрокаОтказа = лОбъект.ПричиныОтказов.Добавить();
				Иначе
					СтрокаОтказа = Строки.Получить(0);
				КонецЕсли;
				СтрокаОтказа.КлючСвязи = СтрокаТЧ.КлючСвязи;
				СтрокаОтказа.ПричинаОтмены = СтрокаТЧ.ПричинаОтмены;
				СтрокаОтказа.Количество = СтрокаОтказа.Количество + СтрокаТЧ.Количество;
				
				Если Количество = КоличествоОтказаноДо Тогда 
					СтрокаТовары.Сумма = 0;
				Иначе
					СтрокаТовары.Сумма = СтрокаТовары.Сумма * (Количество - КоличествоОтказаноДо - СтрокаТЧ.Количество)/(Количество - КоличествоОтказаноДо);
				КонецЕсли;
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТовары, лОбъект);
			КонецЦикла;
			лОбъект.СуммаДокумента = ОбщегоНазначения.ФорматСумм(лОбъект.Товары.Итог("Сумма") + лОбъект.Услуги.Итог("Сумма") + ?(лОбъект.УчитыватьНДС И Не лОбъект.СуммаВключаетНДС, лОбъект.Товары.Итог("СуммаНДС") + лОбъект.Услуги.Итог("СуммаНДС"), 0));
			ПолучитьДополнительныеТаблицы(лОбъект, Ложь, РежимЗаписиДокумента.Проведение);
			ЗаполнитьКолонкуОтмена(лОбъект);
			РассчитатьПрибыль(лОбъект, Ложь, РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		
		Для Каждого СтрокаТЧ Из лОбъект.Товары Цикл 
			Если Не ЗначениеЗаполнено(СтрокаТЧ.ДатаУстановкиРезерва) Тогда 
				СтрокаД = ДанныеПоРезервам.Найти(СтрокаТЧ.СтрокаЗаявки, "СтрокаЗаявки");
				Если СтрокаД = Неопределено Тогда 
					Продолжить;
				ИначеЕсли СтрокаД.УстановленРезерв Тогда 
					СтрокаТЧ.ДатаУстановкиРезерва = Дата;
				ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") И Не СтрокаД.УстановленРезерв И ЗначениеЗаполнено(СтрокаТЧ.ДатаУстановкиРезерва) Тогда 
					СтрокаТЧ.ДатаУстановкиРезерва = Неопределено;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		лОбъект.ДополнительныеСвойства.Вставить("мЗаписьБезОбработки");
		лОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		Если ДобавитьКритСобытие И ДобавленныеОтказы.Количество() > 0 И АвтоОтказы Тогда
			
			ОписаниеОшибки = "Добавлено отказов при загрузке с сайта: "+ДобавленныеОтказы.Количество();	
			
			КритическиеСобытияСервер.ЗарегистрироватьКритическоеСобытие(
			лОбъект.Ссылка, 
			Справочники.СобытияДляОтправкиЭлектронныхПисем.ОтказПриЗагрузкеЗаявкиСайта,
			ОписаниеОшибки,
			,
			Истина,
			,
			"Документ.КорректировкаЗаявкиПокупателя.МодульМенеджера.ОбновитьДокумент()");
			
		КонецЕсли;
					
	Иначе
		ОбновитьОтказы = Ложь;
	КонецЕсли;
КонецПроцедуры
//// ТАБЛИЦЫ ДВИЖЕНИЙ ДОКУМЕНТОВ
	
	
Функция РегистрыНакопления_ЗаявкиПокупателей_НоваяСхема(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаявкиПокупателей", ТаблицаДвижений);
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата, СтатусДокумента, Подтверждена");
	
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Если Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;

	СтатусДокумента = Реквизиты.СтатусДокумента;
	
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаПокупателяТовары.Ссылка.Склад,
		|	ЗаявкаПокупателяТовары.Номенклатура,
		|	ЗаявкаПокупателяТовары.Качество,
		|	ЗаявкаПокупателяТовары.СтрокаЗаявки,
		|	ЗаявкаПокупателяТовары.Ссылка.ТорговаяТочка,
		|	ЗаявкаПокупателяТовары.Ссылка.ДоговорКонтрагента,
		|	ЗаявкаПокупателяТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|			ТОГДА ЗаявкаПокупателяТовары.Сумма
		|		ИНАЧЕ ЗаявкаПокупателяТовары.Сумма * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|					ТОГДА ЗаявкаПокупателяТовары.СуммаНДС
		|				ИНАЧЕ ЗаявкаПокупателяТовары.СуммаНДС * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|			ТОГДА ЗаявкаПокупателяТовары.Сумма
		|		ИНАЧЕ ЗаявкаПокупателяТовары.Сумма * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|					ТОГДА ЗаявкаПокупателяТовары.СуммаНДС
		|				ИНАЧЕ ЗаявкаПокупателяТовары.СуммаНДС * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРегл,
		|	ЗаявкаПокупателяТовары.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗаявкаПокупателяТовары.Ссылка.Дата КАК Период,
		|	ЗаявкаПокупателяТовары.КлючСвязи
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
		|ГДЕ
		|	ЗаявкаПокупателяТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Склад,
		|	ВТТовары.Номенклатура,
		|	ВТТовары.Качество,
		|	ВТТовары.СтрокаЗаявки,
		|	ВТТовары.ТорговаяТочка,
		|	ВТТовары.ДоговорКонтрагента,
		|	СУММА(ВТТовары.Количество) КАК Количество,
		|	СУММА(ВТТовары.СуммаУпр) КАК СуммаУпр,
		|	СУММА(ВТТовары.СуммаРегл) КАК СуммаРегл,
		|	ВТТовары.Регистратор,
		|	ВТТовары.ВидДвижения,
		|	ВТТовары.Период,
		|	ЛОЖЬ КАК Отказ
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТТовары.Склад,
		|	ВТТовары.Номенклатура,
		|	ВТТовары.Качество,
		|	ВТТовары.СтрокаЗаявки,
		|	ВТТовары.ТорговаяТочка,
		|	ВТТовары.ДоговорКонтрагента,
		|	ВТТовары.Регистратор,
		|	ВТТовары.ВидДвижения,
		|	ВТТовары.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТТовары.Склад,
		|	ВТТовары.Номенклатура,
		|	ВТТовары.Качество,
		|	ВТТовары.СтрокаЗаявки,
		|	ВТТовары.ТорговаяТочка,
		|	ВТТовары.ДоговорКонтрагента,
		|	ЗаявкаПокупателяПричиныОтказов.Количество,
		|	ВЫБОР
		|		КОГДА ВТТовары.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТТовары.СуммаУпр / ВТТовары.Количество * ЗаявкаПокупателяПричиныОтказов.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТТовары.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТТовары.СуммаРегл / ВТТовары.Количество * ЗаявкаПокупателяПричиныОтказов.Количество
		|	КОНЕЦ,
		|	ВТТовары.Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	ВТТовары.Период,
		|	ИСТИНА
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаПокупателя.ПричиныОтказов КАК ЗаявкаПокупателяПричиныОтказов
		|		ПО ВТТовары.Регистратор = ЗаявкаПокупателяПричиныОтказов.Ссылка
		|			И ВТТовары.КлючСвязи = ЗаявкаПокупателяПричиныОтказов.КлючСвязи
		|			И (ЗаявкаПокупателяПричиныОтказов.Ссылка = &Ссылка)";
		
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Выборка = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);

	Иначе   
		
			//Для корректировок формируются корректирующие движения (дельта)
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад,
		|	КорректировкаЗаявкиПокупателяТовары.Номенклатура,
		|	КорректировкаЗаявкиПокупателяТовары.Качество,
		|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ТорговаяТочка,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ДоговорКонтрагента,
		|	КорректировкаЗаявкиПокупателяТовары.Количество КАК Количество,
		|	СУММА(ЕСТЬNULL(КорректировкаЗаявкиПокупателяПричиныОтказов.Количество, 0)) КАК КоличествоОтказ,
		|	СУММА(ВЫБОР
		|			КОГДА КорректировкаЗаявкиПокупателяТовары.Ссылка.ВалютаДокумента = ВалютаУправленческогоУчета.Значение
		|				ТОГДА ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0)
		|			ИНАЧЕ ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0) * КорректировкаЗаявкиПокупателяТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаявкиПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|		КОНЕЦ * ВЫБОР
		|			КОГДА КорректировкаЗаявкиПокупателяТовары.Сумма = 0
		|					ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС
		|				ТОГДА 1
		|			ИНАЧЕ 1 + КорректировкаЗаявкиПокупателяТовары.СуммаНДС / КорректировкаЗаявкиПокупателяТовары.Сумма
		|		КОНЕЦ * КорректировкаЗаявкиПокупателяТовары.Количество * (100 - КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки) / 100) КАК СуммаУпр,
		|	СУММА(ВЫБОР
		|			КОГДА КорректировкаЗаявкиПокупателяТовары.Ссылка.ВалютаДокумента = ВалютаРегламентированногоУчета.Значение
		|				ТОГДА ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0)
		|			ИНАЧЕ ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0) * КорректировкаЗаявкиПокупателяТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаявкиПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|		КОНЕЦ * ВЫБОР
		|			КОГДА КорректировкаЗаявкиПокупателяТовары.Сумма = 0
		|					ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС
		|				ТОГДА 1
		|			ИНАЧЕ 1 + КорректировкаЗаявкиПокупателяТовары.СуммаНДС / КорректировкаЗаявкиПокупателяТовары.Сумма
		|		КОНЕЦ * КорректировкаЗаявкиПокупателяТовары.Количество * (100 - КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки) / 100) КАК СуммаРегл,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Дата КАК Период,
		|	КорректировкаЗаявкиПокупателяТовары.КлючСвязи
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.ПричиныОтказов КАК КорректировкаЗаявкиПокупателяПричиныОтказов
		|		ПО КорректировкаЗаявкиПокупателяТовары.КлючСвязи = КорректировкаЗаявкиПокупателяПричиныОтказов.КлючСвязи
		|			И КорректировкаЗаявкиПокупателяТовары.Ссылка = КорректировкаЗаявкиПокупателяПричиныОтказов.Ссылка,
		|	Константа.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
		|	Константа.ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета
		|ГДЕ
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректировкаЗаявкиПокупателяТовары.Номенклатура,
		|	КорректировкаЗаявкиПокупателяТовары.Качество,
		|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ТорговаяТочка,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ДоговорКонтрагента,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Дата,
		|	КорректировкаЗаявкиПокупателяТовары.Количество,
		|	КорректировкаЗаявкиПокупателяТовары.КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкиПокупателейОбороты.СтрокаЗаявки,
		|	СУММА(ЗаявкиПокупателейОбороты.КоличествоПриход) КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТПриход
		|ИЗ
		|	РегистрНакопления.ЗаявкиПокупателей.Обороты(
		|			,
		|			&Период,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					ВТДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки
		|				ИЗ
		|					ВТДанныеДокумента КАК ВТДанныеДокумента)) КАК ЗаявкиПокупателейОбороты
		|ГДЕ
		|	(ЗаявкиПокупателейОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
		|			ИЛИ ЗаявкиПокупателейОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
		|	И НЕ ЗаявкиПокупателейОбороты.Регистратор = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкиПокупателейОбороты.СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеДокумента.Склад,
		|	ВТДанныеДокумента.Номенклатура,
		|	ВТДанныеДокумента.Качество,
		|	ВТДанныеДокумента.СтрокаЗаявки,
		|	ВТДанныеДокумента.ТорговаяТочка,
		|	ВТДанныеДокумента.ДоговорКонтрагента,
		|	ВТДанныеДокумента.Количество - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ВТПриход.КоличествоПриход ЕСТЬ NULL
		|			ТОГДА ВТДанныеДокумента.СуммаУпр
		|		ИНАЧЕ ВТДанныеДокумента.СуммаУпр / ВТДанныеДокумента.Количество * ВТДанныеДокумента.Количество - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)
		|	КОНЕЦ КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА ВТПриход.КоличествоПриход ЕСТЬ NULL
		|			ТОГДА ВТДанныеДокумента.СуммаРегл
		|		ИНАЧЕ ВТДанныеДокумента.СуммаРегл / ВТДанныеДокумента.Количество * ВТДанныеДокумента.Количество - ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)
		|	КОНЕЦ КАК СуммаРегл,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЛОЖЬ КАК Отказ,
		|	ВТДанныеДокумента.Период
		|ИЗ
		|	ВТДанныеДокумента КАК ВТДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриход КАК ВТПриход
		|		ПО ВТДанныеДокумента.СтрокаЗаявки = ВТПриход.СтрокаЗаявки
		|ГДЕ
		|	ВТДанныеДокумента.Количество > ЕСТЬNULL(ВТПриход.КоличествоПриход, 0)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Качество,
		|	ВложенныйЗапрос.СтрокаЗаявки,
		|	ВложенныйЗапрос.ТорговаяТочка,
		|	ВложенныйЗапрос.ДоговорКонтрагента,
		|	ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоОтказРегистр,
		|	ВложенныйЗапрос.СуммаУпр / ВложенныйЗапрос.КоличествоОтказ * ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоОтказРегистр,
		|	ВложенныйЗапрос.СуммаРегл / ВложенныйЗапрос.КоличествоОтказ * ВложенныйЗапрос.КоличествоОтказ - ВложенныйЗапрос.КоличествоОтказРегистр,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	ИСТИНА,
		|	ВложенныйЗапрос.Период
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТДанныеДокумента.Склад КАК Склад,
		|		ВТДанныеДокумента.Номенклатура КАК Номенклатура,
		|		ВТДанныеДокумента.Качество КАК Качество,
		|		ВТДанныеДокумента.СтрокаЗаявки КАК СтрокаЗаявки,
		|		ВТДанныеДокумента.ТорговаяТочка КАК ТорговаяТочка,
		|		ВТДанныеДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		ВТДанныеДокумента.КоличествоОтказ КАК КоличествоОтказ,
		|		ВТДанныеДокумента.СуммаУпр КАК СуммаУпр,
		|		ВТДанныеДокумента.СуммаРегл КАК СуммаРегл,
		|		СУММА(ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0)) КАК КоличествоОтказРегистр,
		|		ВТДанныеДокумента.Период КАК Период
		|	ИЗ
		|		ВТДанныеДокумента КАК ВТДанныеДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(, , Регистратор, ) КАК ОтказыПоЗаявкамОбороты
		|			ПО ВТДанныеДокумента.СтрокаЗаявки = ОтказыПоЗаявкамОбороты.СтрокаЗаявки
		|				И (ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
		|					ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
		|				И (НЕ ОтказыПоЗаявкамОбороты.Регистратор = &ДокументСсылка)
		|	ГДЕ
		|		ВТДанныеДокумента.КоличествоОтказ > 0
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВТДанныеДокумента.Склад,
		|		ВТДанныеДокумента.Номенклатура,
		|		ВТДанныеДокумента.Качество,
		|		ВТДанныеДокумента.СтрокаЗаявки,
		|		ВТДанныеДокумента.ТорговаяТочка,
		|		ВТДанныеДокумента.ДоговорКонтрагента,
		|		ВТДанныеДокумента.КоличествоОтказ,
		|		ВТДанныеДокумента.СуммаУпр,
		|		ВТДанныеДокумента.СуммаРегл,
		|		ВТДанныеДокумента.Период) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.КоличествоОтказ > ВложенныйЗапрос.КоличествоОтказРегистр";
		
		
		Запрос.УстановитьПараметр("Период", новый Граница(вхСсылкаНаДокумент.МоментВремени(),ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
		//Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
		
		Выборка = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
		
	КонецЕсли;
	
	Возврат ТаблицаДвижений;
	
КонецФункции


// Функция - Возвращает таблицу движений документа по регистру накопления "Заявки покупателей". 
// Заявка покупателя делает приход по регистру, "Корректировка заявки покупателя" в статусе "Не подтвержден" и "Подтвержден" делает корректирующие движения.
// При проведении корректировки "Заявка покупателя" в статусе "Закрыт" происходит сторно всех остатков по текущему документу.
//
// Параметры:
//  вхОбъект	 - ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  вхОтказ		 - Булево - Признак отказа 
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры 
// 
// Возвращаемое значение:
// ТаблицаЗначений - Структура таблицы значений соответствует регистру накопления
//
Функция РегистрыНакопления_ЗаявкиПокупателей(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ЗаявкиПокупателей", ТаблицаДвижений);
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата, СтатусДокумента, Подтверждена");
	
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Если НЕ Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
 
	//ТаблицаСтрокиЗаявки =  вхОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявки;
	СтатусДокумента = Реквизиты.СтатусДокумента;
	
	//Если СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда  
	//	ПроверитьВозможностьЗакрытия(вхСсылкаНаДокумент, вхОтказ, вхПараметры);
	//	Если вхОтказ Тогда 
	//		Возврат ТаблицаДвижений;
	//	КонецЕсли;
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки
	//	|ПОМЕСТИТЬ втСтрокиЗаявки
	//	|ИЗ
	//	|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	//	|ГДЕ
	//	|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	СтрокаЗаявки
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗаявкиПокупателейОстатки.Склад,
	//	|	ЗаявкиПокупателейОстатки.Номенклатура,
	//	|	ЗаявкиПокупателейОстатки.Качество,
	//	|	ЗаявкиПокупателейОстатки.СтрокаЗаявки,
	//	|	ЗаявкиПокупателейОстатки.ТорговаяТочка,
	//	|	ЗаявкиПокупателейОстатки.ДоговорКонтрагента,
	//	|	-ЗаявкиПокупателейОстатки.КоличествоОстаток КАК Количество,
	//	|	-ЗаявкиПокупателейОстатки.СуммаРеглОстаток КАК СуммаРегл,
	//	|	-ЗаявкиПокупателейОстатки.СуммаУпрОстаток КАК СуммаУпр,
	//	|	&Ссылка КАК Регистратор,
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	//	|	&Период
	//	|ИЗ
	//	|	РегистрНакопления.ЗаявкиПокупателей.Остатки(
	//	|			,
	//	|			СтрокаЗаявки В
	//	|				(ВЫБРАТЬ
	//	|					втСтрокиЗаявки.СтрокаЗаявки
	//	|				ИЗ
	//	|					втСтрокиЗаявки)) КАК ЗаявкиПокупателейОстатки";		
	//	
	//	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	//	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	//	
	//	Выборка = Запрос.Выполнить().Выгрузить();
	//	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
	//	
	//Иначе
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаПокупателяТовары.Ссылка.Склад,
		|	ЗаявкаПокупателяТовары.Номенклатура,
		|	ЗаявкаПокупателяТовары.Качество,
		|	ЗаявкаПокупателяТовары.СтрокаЗаявки,
		|	ЗаявкаПокупателяТовары.Ссылка.ТорговаяТочка,
		|	ЗаявкаПокупателяТовары.Ссылка.ДоговорКонтрагента,
		|	ЗаявкаПокупателяТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|			ТОГДА ЗаявкаПокупателяТовары.Сумма
		|		ИНАЧЕ ЗаявкаПокупателяТовары.Сумма * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|					ТОГДА ЗаявкаПокупателяТовары.СуммаНДС
		|				ИНАЧЕ ЗаявкаПокупателяТовары.СуммаНДС * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|			ТОГДА ЗаявкаПокупателяТовары.Сумма
		|		ИНАЧЕ ЗаявкаПокупателяТовары.Сумма * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗаявкаПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|					ТОГДА ЗаявкаПокупателяТовары.СуммаНДС
		|				ИНАЧЕ ЗаявкаПокупателяТовары.СуммаНДС * ЗаявкаПокупателяТовары.Ссылка.КурсВзаиморасчетов / ЗаявкаПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРегл,
		|	ЗаявкаПокупателяТовары.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗаявкаПокупателяТовары.Ссылка.Дата КАК Период
		|ИЗ
		|	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
		|ГДЕ
		|	ЗаявкаПокупателяТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Выборка = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);

	Иначе   
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ЗаявкиПокупателей");
		
		Запрос = Новый Запрос;
		Запрос.Текст =  "ВЫБРАТЬ
		                |	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад КАК Склад,
		                |	КорректировкаЗаявкиПокупателяТовары.Номенклатура КАК Номенклатура,
		                |	КорректировкаЗаявкиПокупателяТовары.Качество КАК Качество,
		                |	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		                |	КорректировкаЗаявкиПокупателяТовары.Ссылка.ТорговаяТочка КАК ТорговаяТочка,
		                |	КорректировкаЗаявкиПокупателяТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента
		                |ИЗ
		                |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
		                |ГДЕ
		                |	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.КорректировкаЗаявкиПокупателя.Товары", "Документ.ЗаявкаПокупателя.Товары");
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура","Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад","Склад");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Качество","Качество");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтрокаЗаявки","СтрокаЗаявки");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ТорговаяТочка","ТорговаяТочка");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ДоговорКонтрагента","ДоговорКонтрагента");
		
		БлокировкаДанных.Заблокировать();

		//Для корректировок формируются корректирующие движения (дельта)
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки
		|ПОМЕСТИТЬ втСтрокиЗаявки
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
		|ГДЕ
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	ЗаявкиПокупателейОстатки.Номенклатура КАК Номенклатура,
		|	ЗаявкиПокупателейОстатки.Качество КАК Качество,
		|	ЗаявкиПокупателейОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ЗаявкиПокупателейОстатки.ТорговаяТочка КАК ТорговаяТочка,
		|	ЗаявкиПокупателейОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ЗаявкиПокупателейОстатки.КоличествоОстаток,
		|	ЗаявкиПокупателейОстатки.СуммаРеглОстаток,
		|	ЗаявкиПокупателейОстатки.СуммаУпрОстаток
		|ПОМЕСТИТЬ втЗаявкиПокупателей
		|ИЗ
		|	РегистрНакопления.ЗаявкиПокупателей.Остатки(
		|			&КонПериода,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втСтрокиЗаявки.СтрокаЗаявки
		|				ИЗ
		|					втСтрокиЗаявки)) КАК ЗаявкиПокупателейОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад КАК Склад,
		|	КорректировкаЗаявкиПокупателяТовары.Номенклатура КАК Номенклатура,
		|	КорректировкаЗаявкиПокупателяТовары.Качество КАК Качество,
		|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ТорговаяТочка КАК ТорговаяТочка,
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	КорректировкаЗаявкиПокупателяТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаявкиПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаУпрУчета
		|			ТОГДА ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0)
		|		ИНАЧЕ ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0) * КорректировкаЗаявкиПокупателяТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаявкиПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * ВЫБОР
		|		КОГДА КорректировкаЗаявкиПокупателяТовары.Сумма = 0
		|				ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 1
		|		ИНАЧЕ 1 + КорректировкаЗаявкиПокупателяТовары.СуммаНДС / КорректировкаЗаявкиПокупателяТовары.Сумма
		|	КОНЕЦ * КорректировкаЗаявкиПокупателяТовары.Количество * (100 - КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки) / 100 КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА КорректировкаЗаявкиПокупателяТовары.Ссылка.ВалютаДокумента = &ВалютаРеглУчета
		|			ТОГДА ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0)
		|		ИНАЧЕ ЕСТЬNULL(КорректировкаЗаявкиПокупателяТовары.Цена, 0) * КорректировкаЗаявкиПокупателяТовары.Ссылка.КурсВзаиморасчетов / КорректировкаЗаявкиПокупателяТовары.Ссылка.КратностьВзаиморасчетов
		|	КОНЕЦ * ВЫБОР
		|		КОГДА КорректировкаЗаявкиПокупателяТовары.Сумма = 0
		|				ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА 1
		|		ИНАЧЕ 1 + КорректировкаЗаявкиПокупателяТовары.СуммаНДС / КорректировкаЗаявкиПокупателяТовары.Сумма
		|	КОНЕЦ * КорректировкаЗаявкиПокупателяТовары.Количество * (100 - КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки) / 100 КАК СуммаРегл
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
		|ГДЕ
		|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(втТовары.Склад, втЗаявкиПокупателей.Склад) КАК Склад,
		|	ЕСТЬNULL(втТовары.Номенклатура, втЗаявкиПокупателей.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(втТовары.Качество, втЗаявкиПокупателей.Качество) КАК Качество,
		|	ЕСТЬNULL(втТовары.СтрокаЗаявки, втЗаявкиПокупателей.СтрокаЗаявки) КАК СтрокаЗаявки,
		|	ЕСТЬNULL(втТовары.ТорговаяТочка, втЗаявкиПокупателей.ТорговаяТочка) КАК ТорговаяТочка,
		|	ЕСТЬNULL(втТовары.ДоговорКонтрагента, втЗаявкиПокупателей.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаявкиПокупателей.КоличествоОстаток, 0) КАК Количество,
		|	ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаявкиПокупателей.СуммаУпрОстаток, 0) КАК СуммаУпр,
		|	ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаявкиПокупателей.СуммаРеглОстаток, 0) КАК СуммаРегл,
		|	&Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Дата КАК Период
		|ИЗ
		|	втТовары КАК втТовары
		|		ПОЛНОЕ СОЕДИНЕНИЕ втЗаявкиПокупателей КАК втЗаявкиПокупателей
		|		ПО втТовары.Склад = втЗаявкиПокупателей.Склад
		|			И втТовары.Номенклатура = втЗаявкиПокупателей.Номенклатура
		|			И втТовары.Качество = втЗаявкиПокупателей.Качество
		|			И втТовары.СтрокаЗаявки = втЗаявкиПокупателей.СтрокаЗаявки
		|			И втТовары.ТорговаяТочка = втЗаявкиПокупателей.ТорговаяТочка
		|			И втТовары.ДоговорКонтрагента = втЗаявкиПокупателей.ДоговорКонтрагента
		|ГДЕ
		|	(ЕСТЬNULL(втТовары.Количество, 0) - ЕСТЬNULL(втЗаявкиПокупателей.КоличествоОстаток, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаУпр, 0) - ЕСТЬNULL(втЗаявкиПокупателей.СуммаУпрОстаток, 0) <> 0
		|			ИЛИ ЕСТЬNULL(втТовары.СуммаРегл, 0) - ЕСТЬNULL(втЗаявкиПокупателей.СуммаРеглОстаток, 0) <> 0)";
		
		
		Запрос.УстановитьПараметр("ВалютаРеглУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Запрос.УстановитьПараметр("ВалютаУпрУчета",  глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Запрос.УстановитьПараметр("КонПериода", вхСсылкаНаДокумент.МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
		
		Выборка = Запрос.Выполнить().Выгрузить();
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
		
	КонецЕсли;
	
	Возврат ТаблицаДвижений;
	
КонецФункции

// Функция - Возвращает таблицу движений документа по регистру накопления "Отказы по заявкам".
// Таблица движений рассчитывается как разница между табличной частью "Причины отказов" документа и сумма отказов по заявке и корректировкам заявки до текущего документа
//
// Параметры:
//  вхОбъект	 - ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  вхОтказ		 - Булево - Признак отказа 
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры 
// 
// Возвращаемое значение:
// ТаблицаЗначений - Структура таблицы значений соответствует регистру накопления
Функция РегистрыНакопления_ОтказыПоЗаявкам(вхСсылкаНаДокумент, хОтказ, вхПараметры = Неопределено) Экспорт
		
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("ОтказыПоЗаявкам", ТаблицаДвижений);
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,СтатусДокумента,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов,Подтверждена");
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Если  Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	СтатусДокумента = Реквизиты.СтатусДокумента;

	//Если СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда 
	//	Возврат ТаблицаДвижений;
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки,
	|	КорректировкаЗаявкиПокупателяПричиныОтказов.ПричинаОтмены КАК ПричинаОтказа,
	|	КорректировкаЗаявкиПокупателяПричиныОтказов.Количество КАК Количество,
	|	КорректировкаЗаявкиПокупателяТовары.Цена
	|ПОМЕСТИТЬ ОтказыПоДокументу
	|ИЗ
	|	Документ.КорректировкаЗаявкиПокупателя.ПричиныОтказов КАК КорректировкаЗаявкиПокупателяПричиныОтказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	|		ПО КорректировкаЗаявкиПокупателяПричиныОтказов.КлючСвязи = КорректировкаЗаявкиПокупателяТовары.КлючСвязи
	|ГДЕ
	|	КорректировкаЗаявкиПокупателяПричиныОтказов.Ссылка = &Ссылка
	|	И КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтрокаЗаявки,
	|	ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки
	|ПОМЕСТИТЬ втСтрокиЗаявки
	|ИЗ
	|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	|ГДЕ
	|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК ПричинаОтказа,
	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ ОтказыДоДетально
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			&КонПериода,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					втСтрокиЗаявки.СтрокаЗаявки
	|				ИЗ
	|					втСтрокиЗаявки)) КАК ОтказыПоЗаявкамОбороты
	|ГДЕ
	|	(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	|			ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	|	И ОтказыПоЗаявкамОбороты.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка КАК Регистратор,
	|	ОтказыПоДокументу.СтрокаЗаявки,
	|	ОтказыПоДокументу.ПричинаОтказа КАК ПричинаОтказа,
	|	ОтказыПоДокументу.Количество - ЕСТЬNULL(ОтказыДоДетально.Количество, 0) КАК Количество,
	|	ОтказыПоДокументу.Цена * (ОтказыПоДокументу.Количество - ЕСТЬNULL(ОтказыДоДетально.Количество, 0)) КАК СуммаРегл
	|ИЗ
	|	ОтказыПоДокументу КАК ОтказыПоДокументу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыДоДетально КАК ОтказыДоДетально
	|		ПО ОтказыПоДокументу.СтрокаЗаявки = ОтказыДоДетально.СтрокаЗаявки
	|			И ОтказыПоДокументу.ПричинаОтказа = ОтказыДоДетально.ПричинаОтказа
	|ГДЕ
	|	ОтказыПоДокументу.Количество - ЕСТЬNULL(ОтказыДоДетально.Количество, 0) <> 0";
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.КорректировкаЗаявкиПокупателя", "Документ.ЗаявкаПокупателя");
	КонецЕсли;
	Запрос.УстановитьПараметр("КонПериода", вхСсылкаНаДокумент.МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	
	Выборка = Запрос.Выполнить().Выгрузить();
	ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета"); 
	
	Если Реквизиты.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда 
		КурсДокумента = Реквизиты.КурсВзаиморасчетов;
		КратностьДокумента = Реквизиты.КратностьВзаиморасчетов;
		Для Каждого СтрокаТЧ Из Выборка Цикл 
			СтрокаТЧ.СуммаРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаРегл , Реквизиты.ВалютаДокумента,
			ВалютаРегламентированногоУчета, КурсДокумента, 1, КратностьДокумента, 1);
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Выборка, ТаблицаДвижений);
	
	Возврат ТаблицаДвижений;
	
КонецФункции

// Функция - Возвращает таблицу движений документа по регистру накопления "Резервы товаров".
// Таблица резервов рассчитывается предварительно в процедуре "ПередЗаписью" и только для документов в статусе "Подтвержден". 
//
// Параметры:
//  вхОбъект	 - ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  вхОтказ		 - Булево - Признак отказа 
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры 
// 
// Возвращаемое значение:
// ТаблицаЗначений - Структура таблицы значений соответствует регистру накопления
Функция РегистрыНакопления_РезервыТоваров(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено, ОбновитьОтказы = Ложь, ДобавленныеОтказы = Неопределено) Экспорт
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("РезервыТоваров", ТаблицаДвижений);
		
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата,СтатусДокумента,ДокументОснование,Подтверждена, Организация");
	
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "ВидОперации");
	Иначе
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.ДокументОснование, "ВидОперации");
	КонецЕсли;
	
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПроведенияПоПартиямРезервам") Или ВидОперации = Перечисления.ВидыОперацийЗаявкаПокупателя.ПополнениеСклада Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Если НЕ Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
    
	СтатусДокумента = Реквизиты.СтатусДокумента;	
	
	Если СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден ИЛИ СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда  
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	АвтоОтказы = Реквизиты.Дата >= глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83"); 
	
	//ТаблицаСтрокиЗаявкиРезервируются =  вхОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявкиРезервируются;
	//Если ТаблицаСтрокиЗаявкиРезервируются.Количество() = 0 Тогда 
	//	Возврат ТаблицаДвижений;
	//КонецЕсли;
	//
	//Дата = вхОбъект.Дата;	
	//ТаблицаРезерв = вхОбъект.ДополнительныеСвойства.ТаблицаРезерв;
	//
	//Для Каждого СтрокаРезерв Из ТаблицаРезерв Цикл 
	//	НоваяСтрока = ТаблицаДвижений.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезерв);
	//	НоваяСтрока.Период = Дата;
	//	НоваяСтрока.Регистратор = вхОбъект.Ссылка;
	//	НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
	//КонецЦикла;
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.РезервыТоваров");
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	КорректировкаЗаявкиПокупателяТовары.Номенклатура,
	                |	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад КАК Склад,
	                |	КорректировкаЗаявкиПокупателяТовары.Качество
	                |ИЗ
	                |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	                |ГДЕ
	                |	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.КорректировкаЗаявкиПокупателя.Товары", "Документ.ЗаявкаПокупателя.Товары");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Качество", "Качество");
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ПартииТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Качество", "Качество");
	
	БлокировкаДанных.Заблокировать();
	
	Запрос = Новый Запрос;	
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда
			
			// Для заявки запрос отличается тем, что не расчитываются имеющиеся резервы по строкам заявок, 
			// т.к. считается что при проведении заявки, резервов по строкам заявок нет
			// Также считается, что нет продаж и отказов на момент заявки
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаявкаПокупателяТовары.СтрокаЗаявки,
			|	ЗаявкаПокупателяТовары.КлючСвязи КАК КлючСвязи,
			|	ЗаявкаПокупателяТовары.Ссылка.Склад КАК Склад,
			|	ЗаявкаПокупателяТовары.Номенклатура,
			|	ЗаявкаПокупателяТовары.Качество,
			|	ЗаявкаПокупателяТовары.Количество
			|ПОМЕСТИТЬ втСтрокиЗаявки
			|ИЗ
			|	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
			|ГДЕ
			|	ЗаявкаПокупателяТовары.Ссылка = &Ссылка
			|	И (ЗаявкаПокупателяТовары.ПрайсПоставщика = ЗНАЧЕНИЕ(Справочник.ПрайсыПоставщиков.ПустаяСсылка)
			|			ИЛИ ЗаявкаПокупателяТовары.ПрайсПоставщика.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаявкаПокупателяПричиныОтказов.КлючСвязи КАК КлючСвязи,
			|	СУММА(ЗаявкаПокупателяПричиныОтказов.Количество) КАК Количество
			|ПОМЕСТИТЬ втОтказы
			|ИЗ
			|	Документ.ЗаявкаПокупателя.ПричиныОтказов КАК ЗаявкаПокупателяПричиныОтказов
			|ГДЕ
			|	ЗаявкаПокупателяПричиныОтказов.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаявкаПокупателяПричиныОтказов.КлючСвязи
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСтрокиЗаявки.СтрокаЗаявки,
			|	втСтрокиЗаявки.КлючСвязи,
			|	втСтрокиЗаявки.Склад КАК Склад,
			|	втСтрокиЗаявки.Номенклатура КАК Номенклатура,
			|	втСтрокиЗаявки.Качество КАК Качество,
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК НужноДорезервировать
			|ПОМЕСТИТЬ втТребуетсяДорезервировать
			|ИЗ
			|	втСтрокиЗаявки КАК втСтрокиЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
			|		ПО втСтрокиЗаявки.КлючСвязи = втОтказы.КлючСвязи
			|ГДЕ
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) <> 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РезервыТоваровОстатки.Склад КАК Склад,
			|	РезервыТоваровОстатки.Номенклатура КАК Номенклатура,
			|	РезервыТоваровОстатки.Качество КАК Качество,
			|	РезервыТоваровОстатки.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ втРезервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втТребуетсяДорезервировать.Склад,
			|					втТребуетсяДорезервировать.Номенклатура,
			|					втТребуетсяДорезервировать.Качество
			|				ИЗ
			|					втТребуетсяДорезервировать)) КАК РезервыТоваровОстатки
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.РезервыТоваров.Остатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПартииТоваровОстатки.Склад КАК Склад,
			|	ПартииТоваровОстатки.Номенклатура КАК Номенклатура,
			|	ПартииТоваровОстатки.Качество КАК Качество,
			|	ПартииТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток
			|ПОМЕСТИТЬ втОстатки
			|ИЗ
			|	РегистрНакопления.ПартииТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втТребуетсяДорезервировать.Склад,
			|					втТребуетсяДорезервировать.Номенклатура,
			|					втТребуетсяДорезервировать.Качество
			|				ИЗ
			|					втТребуетсяДорезервировать)
			|             И (&ВсеОрганизации ИЛИ Организация В (&ДоступныеОрганизации))) КАК ПартииТоваровОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОстатки.Склад КАК Склад,
			|	втОстатки.Номенклатура КАК Номенклатура,
			|	втОстатки.Качество КАК Качество,
			|	втОстатки.КоличествоОстаток - ЕСТЬNULL(втРезервы.Количество, 0) КАК ДоступныйОстаток
			|ПОМЕСТИТЬ втСвободныеОстатки
			|ИЗ
			|	втОстатки КАК втОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
			|		ПО втОстатки.Склад = втРезервы.Склад
			|			И втОстатки.Номенклатура = втРезервы.Номенклатура
			|			И втОстатки.Качество = втРезервы.Качество
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втТребуетсяДорезервировать.СтрокаЗаявки,
			|	втТребуетсяДорезервировать.КлючСвязи,
			|	втТребуетсяДорезервировать.Склад,
			|	втТребуетсяДорезервировать.Номенклатура,
			|	втТребуетсяДорезервировать.Качество,
			|	втТребуетсяДорезервировать.НужноДорезервировать КАК Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(втСвободныеОстатки.ДоступныйОстаток, 0) < 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(втСвободныеОстатки.ДоступныйОстаток, 0)
			|	КОНЕЦ КАК ДоступныйОстаток
			|ИЗ
			|	втТребуетсяДорезервировать КАК втТребуетсяДорезервировать
			|		ЛЕВОЕ СОЕДИНЕНИЕ втСвободныеОстатки КАК втСвободныеОстатки
			|		ПО втТребуетсяДорезервировать.Склад = втСвободныеОстатки.Склад
			|			И втТребуетсяДорезервировать.Номенклатура = втСвободныеОстатки.Номенклатура
			|			И втТребуетсяДорезервировать.Качество = втСвободныеОстатки.Качество";
		Иначе
			
			ЗапросБлок = Новый Запрос;
			ЗапросБлок.Текст = "ВЫБРАТЬ
			|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки
			|ИЗ
			|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
			|ГДЕ
			|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка";
			ЗапросБлок.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
			Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
				ЗапросБлок.Текст = СтрЗаменить(ЗапросБлок.Текст, "Документ.КорректировкаЗаявкиПокупателя.Товары", "Документ.ЗаявкаПокупателя.Товары");
			КонецЕсли;
			
			РезультатЗапроса = ЗапросБлок.Выполнить();
			
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ОтказыПоЗаявкам");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
			
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ТоварыКОтгрузке");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
			
			ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.Продажи");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");
			
			БлокировкаДанных.Заблокировать();
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
			|	КорректировкаЗаявкиПокупателяТовары.КлючСвязи КАК КлючСвязи,
			|	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад КАК Склад,
			|	КорректировкаЗаявкиПокупателяТовары.Номенклатура,
			|	КорректировкаЗаявкиПокупателяТовары.Качество,
			|	КорректировкаЗаявкиПокупателяТовары.Количество
			|ПОМЕСТИТЬ втСтрокиЗаявки
			|ИЗ
			|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
			|ГДЕ
			|	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка
			|	И (КорректировкаЗаявкиПокупателяТовары.ПрайсПоставщика = ЗНАЧЕНИЕ(Справочник.ПрайсыПоставщиков.ПустаяСсылка)
			|			ИЛИ КорректировкаЗаявкиПокупателяТовары.ПрайсПоставщика.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КорректировкаЗаявкиПокупателяПричиныОтказов.КлючСвязи КАК КлючСвязи,
			|	СУММА(КорректировкаЗаявкиПокупателяПричиныОтказов.Количество) КАК Количество
			|ПОМЕСТИТЬ втОтказы
			|ИЗ
			|	Документ.КорректировкаЗаявкиПокупателя.ПричиныОтказов КАК КорректировкаЗаявкиПокупателяПричиныОтказов
			|ГДЕ
			|	КорректировкаЗаявкиПокупателяПричиныОтказов.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	КорректировкаЗаявкиПокупателяПричиныОтказов.КлючСвязи
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСтрокиЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	втСтрокиЗаявки.КлючСвязи,
			|	втСтрокиЗаявки.Склад,
			|	втСтрокиЗаявки.Номенклатура,
			|	втСтрокиЗаявки.Качество,
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК Количество
			|ПОМЕСТИТЬ втТоварыМинусОтказы
			|ИЗ
			|	втСтрокиЗаявки КАК втСтрокиЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
			|		ПО втСтрокиЗаявки.КлючСвязи = втОтказы.КлючСвязи
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
			|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК Количество
			|ПОМЕСТИТЬ втОтказыДо
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
			|			,
			|			&КонПериода,
			|			Регистратор,
			|			СтрокаЗаявки В
			|				(ВЫБРАТЬ
			|					втСтрокиЗаявки.СтрокаЗаявки
			|				ИЗ
			|					втСтрокиЗаявки)) КАК ОтказыПоЗаявкамОбороты
			|ГДЕ
			|	(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
			|			ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
			|	И ОтказыПоЗаявкамОбороты.Регистратор <> &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПродажиОбороты.СтрокаЗаявки,
			|	ПродажиОбороты.КоличествоОборот
			|ПОМЕСТИТЬ втПродажи
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(
			|			,
			|			&КонПериода,
			|			,
			|			СтрокаЗаявки В
			|				(ВЫБРАТЬ
			|					втТоварыМинусОтказы.СтрокаЗаявки
			|				ИЗ
			|					втТоварыМинусОтказы)) КАК ПродажиОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКОтгрузкеОбороты.СтрокаЗаявки,
			|	ТоварыКОтгрузкеОбороты.КоличествоОборот
			|ПОМЕСТИТЬ втКОтгрузке
			|ИЗ
			|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
			|			,
			|			&КонПериода,
			|			,
			|			СтрокаЗаявки В
			|				(ВЫБРАТЬ
			|					втТоварыМинусОтказы.СтрокаЗаявки
			|				ИЗ
			|					втТоварыМинусОтказы)) КАК ТоварыКОтгрузкеОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот
			|ПОМЕСТИТЬ втОтказы2
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
			|			,
			|			&КонПериода,
			|			,
			|			СтрокаЗаявки В
			|				(ВЫБРАТЬ
			|					втТоварыМинусОтказы.СтрокаЗаявки
			|				ИЗ
			|					втТоварыМинусОтказы)) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втТоварыМинусОтказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	втТоварыМинусОтказы.КлючСвязи,
			|	втТоварыМинусОтказы.Склад КАК Склад,
			|	втТоварыМинусОтказы.Номенклатура КАК Номенклатура,
			|	втТоварыМинусОтказы.Качество КАК Качество,
			|	втТоварыМинусОтказы.Количество - ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0) - ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) - ЕСТЬNULL(ТоварыКОтгрузке.КоличествоОборот, 0) + ЕСТЬNULL(втОтказыДо.Количество, 0) КАК НужноДорезервировать
			|ПОМЕСТИТЬ втОжидаемыйРезерв
			|ИЗ
			|	втТоварыМинусОтказы КАК втТоварыМинусОтказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ втПродажи КАК ПродажиОбороты
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ПродажиОбороты.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы2 КАК ОтказыПоЗаявкамОбороты
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ОтказыПоЗаявкамОбороты.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказыДо КАК втОтказыДо
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = втОтказыДо.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втКОтгрузке КАК ТоварыКОтгрузке
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ТоварыКОтгрузке.СтрокаЗаявки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество,
			|	СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(втОжидаемыйРезерв.Склад, РезервыТоваровОстатки.Склад) КАК Склад,
			|	ЕСТЬNULL(втОжидаемыйРезерв.Номенклатура, РезервыТоваровОстатки.Номенклатура) КАК Номенклатура,
			|	ЕСТЬNULL(втОжидаемыйРезерв.Качество, РезервыТоваровОстатки.Качество) КАК Качество,
			|	ЕСТЬNULL(втОжидаемыйРезерв.СтрокаЗаявки, РезервыТоваровОстатки.СтрокаЗаявки) КАК СтрокаЗаявки,
			|	втОжидаемыйРезерв.КлючСвязи КАК КлючСвязи,
			|	ЕСТЬNULL(втОжидаемыйРезерв.НужноДорезервировать, 0) - ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0) КАК Количество
			|ПОМЕСТИТЬ втСкорректироватьРезерв
			|ИЗ
			|	втОжидаемыйРезерв КАК втОжидаемыйРезерв
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
			|				&КонПериода,
			|				СтрокаЗаявки В
			|					(ВЫБРАТЬ
			|						втТоварыМинусОтказы.СтрокаЗаявки
			|					ИЗ
			|						втТоварыМинусОтказы)) КАК РезервыТоваровОстатки
			|		ПО втОжидаемыйРезерв.Склад = РезервыТоваровОстатки.Склад
			|			И втОжидаемыйРезерв.Номенклатура = РезервыТоваровОстатки.Номенклатура
			|			И втОжидаемыйРезерв.Качество = РезервыТоваровОстатки.Качество
			|			И втОжидаемыйРезерв.СтрокаЗаявки = РезервыТоваровОстатки.СтрокаЗаявки
			|ГДЕ
			|	ЕСТЬNULL(втОжидаемыйРезерв.НужноДорезервировать, 0) - ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0) <> 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РезервыТоваровОстатки.Склад КАК Склад,
			|	РезервыТоваровОстатки.Номенклатура КАК Номенклатура,
			|	РезервыТоваровОстатки.Качество КАК Качество,
			|	РезервыТоваровОстатки.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ втРезерв
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втСкорректироватьРезерв.Склад,
			|					втСкорректироватьРезерв.Номенклатура,
			|					втСкорректироватьРезерв.Качество
			|				ИЗ
			|					втСкорректироватьРезерв
			|				ГДЕ
			|					втСкорректироватьРезерв.Количество > 0)) КАК РезервыТоваровОстатки
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.РезервыТоваров.Остатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПартииТоваровОстатки.Склад КАК Склад,
			|	ПартииТоваровОстатки.Номенклатура КАК Номенклатура,
			|	ПартииТоваровОстатки.Качество КАК Качество,
			|	ПартииТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток
			|ПОМЕСТИТЬ втОстатки
			|ИЗ
			|	РегистрНакопления.ПартииТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|					(ВЫБРАТЬ
			|						втСкорректироватьРезерв.Склад,
			|						втСкорректироватьРезерв.Номенклатура,
			|						втСкорректироватьРезерв.Качество
			|					ИЗ
			|						втСкорректироватьРезерв)
			|				И (&ВсеОрганизации
			|					ИЛИ Организация В (&ДоступныеОрганизации))) КАК ПартииТоваровОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОстатки.Склад КАК Склад,
			|	втОстатки.Номенклатура КАК Номенклатура,
			|	втОстатки.Качество КАК Качество,
			|	втОстатки.КоличествоОстаток - ЕСТЬNULL(втРезерв.Количество, 0) КАК ДоступныйОстаток
			|ПОМЕСТИТЬ втСвободныеОстатки
			|ИЗ
			|	втОстатки КАК втОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втРезерв КАК втРезерв
			|		ПО втОстатки.Склад = втРезерв.Склад
			|			И втОстатки.Номенклатура = втРезерв.Номенклатура
			|			И втОстатки.Качество = втРезерв.Качество
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСкорректироватьРезерв.Склад,
			|	втСкорректироватьРезерв.Номенклатура,
			|	втСкорректироватьРезерв.Качество,
			|	втСкорректироватьРезерв.СтрокаЗаявки,
			|	втСкорректироватьРезерв.КлючСвязи,
			|	втСкорректироватьРезерв.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СвободныеОстатки.ДоступныйОстаток, 0) < 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СвободныеОстатки.ДоступныйОстаток, 0)
			|	КОНЕЦ КАК ДоступныйОстаток
			|ИЗ
			|	втСкорректироватьРезерв КАК втСкорректироватьРезерв
			|		ЛЕВОЕ СОЕДИНЕНИЕ втСвободныеОстатки КАК СвободныеОстатки
			|		ПО втСкорректироватьРезерв.Склад = СвободныеОстатки.Склад
			|			И втСкорректироватьРезерв.Номенклатура = СвободныеОстатки.Номенклатура
			|			И втСкорректироватьРезерв.Качество = СвободныеОстатки.Качество";
		КонецЕсли;
		
		
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(вхСсылкаНаДокумент.МоментВремени(), ВидГраницы.Исключая));  //Чтобы не захватывались движения оборотных регистров самого документа
		Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		
		ДоступныеОрганизации = Неопределено;
		Если ПроведениеДокументовКлиентСервер.ИспользуютсяМФП(Реквизиты.Дата) Тогда		
			ПараметрыПолитикиМФП = Справочники.ПолитикиМФП.ПолучитьПараметрыПолитикиМФПДляОрганизации(Реквизиты.Организация, Реквизиты.Дата, Истина);
			ДоступныеОрганизации = ПараметрыПолитикиМФП.ОрганизацииДляЗакупки.ВыгрузитьКолонку("Организация");
			ДоступныеОрганизации.Добавить(Реквизиты.Организация);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДоступныеОрганизации", ДоступныеОрганизации);
		Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(ДоступныеОрганизации));
		
		Выборка = Запрос.Выполнить().Выгрузить();
		//ТаблицаРезерв = Выборка.СкопироватьКолонки("Склад,Номенклатура,Качество,СтрокаЗаявки,Количество");
		ДобавленныеОтказы = Новый ТаблицаЗначений;
		ДобавленныеОтказы.Колонки.Добавить("КлючСвязи", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,0)));
		ДобавленныеОтказы.Колонки.Добавить("ПричинаОтмены", Новый ОписаниеТипов("СправочникСсылка.СостоянияСтрокДокументов"));  
		ДобавленныеОтказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));  
		
		Для Каждого СтрокаТЧ Из Выборка Цикл 
			Если СтрокаТЧ.Количество < 0 Тогда 
				НоваяСтрока = ТаблицаДвижений.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ, "Склад,Номенклатура,Качество,СтрокаЗаявки,Количество"); 
				Отбор = Новый Структура("Номенклатура,Склад,Качество", СтрокаТЧ.Номенклатура, СтрокаТЧ.Склад, СтрокаТЧ.Качество);
				НайденныеСтроки = Выборка.НайтиСтроки(Отбор);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.ДоступныйОстаток = НайденнаяСтрока.ДоступныйОстаток - СтрокаТЧ.Количество;		
				КонецЦикла;
			Иначе	
				МожноРаспределить = Мин(СтрокаТЧ.Количество, СтрокаТЧ.ДоступныйОстаток);
				КоличествоОтказ = СтрокаТЧ.Количество - МожноРаспределить;
				Если КоличествоОтказ > 0 И АвтоОтказы Тогда 
					Отбор = Новый Структура("КлючСвязи,ПричинаОтмены", СтрокаТЧ.КлючСвязи, Справочники.СостоянияСтрокДокументов.ОтсутствуетНаСкладеПартком);
					Строки = ДобавленныеОтказы.НайтиСтроки(Отбор);
					Если Строки.Количество() = 0 Тогда 
						СтрокаОтказа = ДобавленныеОтказы.Добавить();
					Иначе
						СтрокаОтказа = Строки.Получить(0);
					КонецЕсли;
					СтрокаОтказа.КлючСвязи = СтрокаТЧ.КлючСвязи;
					СтрокаОтказа.ПричинаОтмены = Справочники.СостоянияСтрокДокументов.ОтсутствуетНаСкладеПартком;
					СтрокаОтказа.Количество = СтрокаОтказа.Количество + КоличествоОтказ;
				КонецЕсли;
				
				Отбор = Новый Структура("Номенклатура,Склад,Качество", СтрокаТЧ.Номенклатура, СтрокаТЧ.Склад, СтрокаТЧ.Качество);
				НайденныеСтроки = Выборка.НайтиСтроки(Отбор);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.ДоступныйОстаток = НайденнаяСтрока.ДоступныйОстаток - МожноРаспределить;		
				КонецЦикла;
				Если СтрокаТЧ.Количество - КоличествоОтказ > 0 Тогда 
					НоваяСтрока = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
					НоваяСтрока.Количество = СтрокаТЧ.Количество - КоличествоОтказ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		
	ТаблицаДвижений.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход, "ВидДвижения");
	ТаблицаДвижений.ЗаполнитьЗначения(Реквизиты.Дата, "Период");
	ТаблицаДвижений.ЗаполнитьЗначения(вхСсылкаНаДокумент, "Регистратор");
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция РегистрыНакопления_РезервыТоваров_Новая(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено, ДобавленныеОтказы = Неопределено) Экспорт
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("РезервыТоваров", ТаблицаДвижений);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата, Контрагент,СтатусДокумента,ДокументОснование,Подтверждена, Организация");
	
	
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПроведенияПоПартиямРезервам")
		Или Реквизиты.Контрагент.Родитель  = ПредопределенноеЗначение("Справочник.Контрагенты.ПополнениеМинимальныхОстатков")
		Или НЕ Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден 
		или Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден  Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	ДоступныеОрганизации = Неопределено;
	Если ПроведениеДокументовКлиентСервер.ИспользуютсяМФП(Реквизиты.Дата) Тогда		
		ПараметрыПолитикиМФП = Справочники.ПолитикиМФП.ПолучитьПараметрыПолитикиМФПДляОрганизации(Реквизиты.Организация, Реквизиты.Дата, Истина);
		ДоступныеОрганизации = ПараметрыПолитикиМФП.ОрганизацииДляЗакупки.ВыгрузитьКолонку("Организация");
		ДоступныеОрганизации.Добавить(Реквизиты.Организация);
	КонецЕсли;
	
	ЗапросДвижений = новый Запрос ;
	ЗапросДвижений.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.СтрокаЗаявки,
	|	ВложенныйЗапрос.Номенклатура,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.КлючСвязи
	|ПОМЕСТИТЬ ВТТаблицаТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ЗаявкаПокупателяТовары.Номенклатура КАК Номенклатура,
	|		ЗаявкаПокупателяТовары.Количество КАК Количество,
	|		ЗаявкаПокупателяТовары.КлючСвязи КАК КлючСвязи,
	|		ЗаявкаПокупателяТовары.Ссылка.Склад КАК Склад
	|	ИЗ
	|		Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
	|	ГДЕ
	|		ЗаявкаПокупателяТовары.Ссылка = &ДокументСсылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
	|		КорректировкаЗаявкиПокупателяТовары.Номенклатура,
	|		КорректировкаЗаявкиПокупателяТовары.Количество,
	|		КорректировкаЗаявкиПокупателяТовары.КлючСвязи,
	|		КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад
	|	ИЗ
	|		Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	|	ГДЕ
	|		КорректировкаЗаявкиПокупателяТовары.Ссылка = &ДокументСсылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.СтрокаЗаявки,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.КлючСвязи,
	|	ВложенныйЗапрос.СтрокаЗаявки
	|ПОМЕСТИТЬ ВТТаблицаОтказов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаПокупателяПричиныОтказов.Количество КАК Количество,
	|		ЗаявкаПокупателяПричиныОтказов.КлючСвязи КАК КлючСвязи,
	|		ВТТаблицаТоваров.СтрокаЗаявки КАК СтрокаЗаявки
	|	ИЗ
	|		Документ.ЗаявкаПокупателя.ПричиныОтказов КАК ЗаявкаПокупателяПричиныОтказов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаТоваров КАК ВТТаблицаТоваров
	|			ПО ЗаявкаПокупателяПричиныОтказов.КлючСвязи = ВТТаблицаТоваров.КлючСвязи
	|	ГДЕ
	|		ЗаявкаПокупателяПричиныОтказов.ПричинаОтмены.НеСтавитьОтказПриПроведении = ЛОЖЬ
	|		И ЗаявкаПокупателяПричиныОтказов.Ссылка = &ДокументСсылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаявкаПокупателяПричиныОтказов.Количество,
	|		ЗаявкаПокупателяПричиныОтказов.КлючСвязи,
	|		ВТТаблицаТоваров.СтрокаЗаявки
	|	ИЗ
	|		ВТТаблицаТоваров КАК ВТТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.ПричиныОтказов КАК ЗаявкаПокупателяПричиныОтказов
	|			ПО ВТТаблицаТоваров.КлючСвязи = ЗаявкаПокупателяПричиныОтказов.КлючСвязи
	|	ГДЕ
	|		ЗаявкаПокупателяПричиныОтказов.ПричинаОтмены.НеСтавитьОтказПриПроведении = ЛОЖЬ
	|		И ЗаявкаПокупателяПричиныОтказов.Ссылка = &ДокументСсылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КлючСвязи,
	|	ВложенныйЗапрос.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОстатки.Номенклатура,
	|	РезервыТоваровОстатки.Склад,
	|	РезервыТоваровОстатки.КоличествоОстаток,
	|	NULL КАК СтрокаЗаявки,
	|	NULL КАК СтрокаПрихода
	|ПОМЕСТИТЬ ВТРезервыНоменклатура
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Остатки(
	|			&МоментВремени,
	|			(Номенклатура, Склад) В
	|				(ВЫБРАТЬ
	|					ВТТаблицаТоваров.Номенклатура,
	|					ВТТаблицаТоваров.Склад
	|				ИЗ
	|					ВТТаблицаТоваров КАК ВТТаблицаТоваров)) КАК РезервыТоваровОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(РезервыТоваровОстатки.Номенклатура),
	|	МАКСИМУМ(РезервыТоваровОстатки.Склад),
	|	СУММА(РезервыТоваровОстатки.КоличествоОстаток),
	|	РезервыТоваровОстатки.СтрокаЗаявки,
	|	МАКСИМУМ(РезервыТоваровОстатки.СтрокаПрихода)
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Остатки(
	|			&МоментВремени,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ВТТаблицаТоваров.СтрокаЗаявки
	|				ИЗ
	|					ВТТаблицаТоваров КАК ВТТаблицаТоваров)) КАК РезервыТоваровОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОстатки.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТТаблицаОтказов.Количество - ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0)) КАК КоличествоКОтказу,
	|	ВТТаблицаОтказов.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ВТТаблицаОтказов.КлючСвязи
	|ПОМЕСТИТЬ ВТОтказы
	|ИЗ
	|	ВТТаблицаОтказов КАК ВТТаблицаОтказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|				,
	|				&МоментВремени,
	|				,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						ВТТаблицаТоваров.СтрокаЗаявки
	|					ИЗ
	|						ВТТаблицаТоваров КАК ВТТаблицаТоваров)) КАК ОтказыПоЗаявкамОбороты
	|		ПО ВТТаблицаОтказов.СтрокаЗаявки = ОтказыПоЗаявкамОбороты.СтрокаЗаявки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаОтказов.СтрокаЗаявки,
	|	ВТТаблицаОтказов.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаОтказов.Количество - ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0)) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОстатки.Номенклатура,
	|	ПартииТоваровОстатки.Склад,
	|	СУММА(ПартииТоваровОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТОстаткиПартий
	|ИЗ
	|	РегистрНакопления.ПартииТоваров.Остатки(
	|			&МоментВремени,
	|			(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТТаблицаТоваров.Номенклатура,
	|						ВТТаблицаТоваров.Склад
	|					ИЗ
	|						ВТТаблицаТоваров КАК ВТТаблицаТоваров
	|					ГДЕ
	|						ВТТаблицаТоваров.СтрокаЗаявки.ТипПоставки В (ЗНАЧЕНИЕ(Перечисление.ТипПоставки.Сток), ЗНАЧЕНИЕ(Перечисление.ТипПоставки.VMI)))
	|				И (&ВсеОрганизации
	|					ИЛИ Организация В (&ДоступныеОрганизации))) КАК ПартииТоваровОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровОстатки.Номенклатура,
	|	ПартииТоваровОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстаткиПартий.Номенклатура,
	|	ВТОстаткиПартий.Склад,
	|	СУММА(ВТОстаткиПартий.КоличествоОстаток - ЕСТЬNULL(ВТРезервыНоменклатура.КоличествоОстаток, 0)) КАК КоличествоСвободныйОстаток
	|ПОМЕСТИТЬ ВТСвободныеОстатки
	|ИЗ
	|	ВТОстаткиПартий КАК ВТОстаткиПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезервыНоменклатура КАК ВТРезервыНоменклатура
	|		ПО ВТОстаткиПартий.Номенклатура = ВТРезервыНоменклатура.Номенклатура
	|			И ВТОстаткиПартий.Склад = ВТРезервыНоменклатура.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОстаткиПартий.Номенклатура,
	|	ВТОстаткиПартий.Склад
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТОстаткиПартий.КоличествоОстаток - ЕСТЬNULL(ВТРезервыНоменклатура.КоличествоОстаток, 0)) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремЗапрДвижений.Номенклатура,
	|	ВремЗапрДвижений.СтрокаЗаявки,
	|	ВремЗапрДвижений.Склад,
	|	ВремЗапрДвижений.Количество КАК Количество,
	|	ВремЗапрДвижений.ВидДвижения КАК ВидДвижения,
	|	ВремЗапрДвижений.СтрокаПрихода КАК СтрокаПрихода,
	|	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
	|	&Период
	|ПОМЕСТИТЬ ВТДвижений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВТСвободныеОстатки.КоличествоСвободныйОстаток >= ВТТаблицаТоваров.Количество - ЕСТЬNULL(ВТТаблицаОтказов.Количество, 0) - ЕСТЬNULL(ВТРезервыНоменклатура.КоличествоОстаток, 0)
	|				ТОГДА ВТТаблицаТоваров.Количество - ЕСТЬNULL(ВТТаблицаОтказов.Количество, 0) - ЕСТЬNULL(ВТРезервыНоменклатура.КоличествоОстаток, 0)
	|			ИНАЧЕ ВТСвободныеОстатки.КоличествоСвободныйОстаток
	|		КОНЕЦ КАК Количество,
	|		ВТТаблицаТоваров.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ВТТаблицаТоваров.Склад КАК Склад,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.ПРиход) КАК ВидДвижения,
	|		ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокПриходов.ПустаяСсылка) КАК СтрокаПрихода
	|	ИЗ
	|		ВТТаблицаТоваров КАК ВТТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСвободныеОстатки КАК ВТСвободныеОстатки
	|			ПО ВТТаблицаТоваров.Номенклатура = ВТСвободныеОстатки.Номенклатура
	|				И ВТТаблицаТоваров.Склад = ВТСвободныеОстатки.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРезервыНоменклатура КАК ВТРезервыНоменклатура
	|			ПО ВТТаблицаТоваров.СтрокаЗаявки = ВТРезервыНоменклатура.СтрокаЗаявки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаОтказов КАК ВТТаблицаОтказов
	|			ПО ВТТаблицаТоваров.КлючСвязи = ВТТаблицаОтказов.КлючСвязи
	|	ГДЕ
	|		ВТТаблицаТоваров.СтрокаЗаявки.ТипПоставки В (ЗНАЧЕНИЕ(Перечисление.ТипПоставки.Сток), ЗНАЧЕНИЕ(Перечисление.ТипПоставки.VMI))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТРезервыНоменклатура.Номенклатура,
	|		ВЫБОР
	|			КОГДА ВТРезервыНоменклатура.КоличествоОстаток >= ВТОтказы.КоличествоКОтказу
	|				ТОГДА ВТОтказы.КоличествоКОтказу
	|			ИНАЧЕ ВТРезервыНоменклатура.КоличествоОстаток
	|		КОНЕЦ,
	|		ВТОтказы.СтрокаЗаявки,
	|		ВТРезервыНоменклатура.Склад,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		ВТРезервыНоменклатура.СтрокаПрихода
	|	ИЗ
	|		ВТОтказы КАК ВТОтказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРезервыНоменклатура КАК ВТРезервыНоменклатура
	|			ПО ВТОтказы.СтрокаЗаявки = ВТРезервыНоменклатура.СтрокаЗаявки) КАК ВремЗапрДвижений
	|ГДЕ
	|	ВремЗапрДвижений.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаТоваров.СтрокаЗаявки,
	|	СУММА(ВТТаблицаТоваров.Количество - ЕСТЬNULL(ВТДвижений.Количество, 0)) КАК Количество,
	|	ВТТаблицаТоваров.КлючСвязи,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтсутствуетНаСкладеПартком) КАК ПричинаОтмены
	|ИЗ
	|	ВТТаблицаТоваров КАК ВТТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДвижений КАК ВТДвижений
	|		ПО ВТТаблицаТоваров.СтрокаЗаявки = ВТДвижений.СтрокаЗаявки
	|			И (ВТДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|ГДЕ
	|	ВТТаблицаТоваров.СтрокаЗаявки.ТипПоставки В (ЗНАЧЕНИЕ(Перечисление.ТипПоставки.Сток), ЗНАЧЕНИЕ(Перечисление.ТипПоставки.VMI))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаТоваров.СтрокаЗаявки,
	|	ВТТаблицаТоваров.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТТаблицаТоваров.Количество - ЕСТЬNULL(ВТДвижений.Количество, 0)) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижений.Номенклатура,
	|	ВТДвижений.СтрокаЗаявки,
	|	ВТДвижений.Склад,
	|	ВТДвижений.Количество,
	|	ВТДвижений.ВидДвижения,
	|	ВТДвижений.СтрокаПрихода,
	|	ВТДвижений.Качество,
	|	ВТДвижений.Период
	|ИЗ
	|	ВТДвижений КАК ВТДвижений";
	ЗапросДвижений.УстановитьПараметр("ДокументСсылка", вхСсылкаНаДокумент);
	ЗапросДвижений.УстановитьПараметр("ВсеОрганизации",  Не ЗначениеЗаполнено(ДоступныеОрганизации));
	ЗапросДвижений.УстановитьПараметр("ДоступныеОрганизации", ДоступныеОрганизации);
	ЗапросДвижений.УстановитьПараметр("Период", Реквизиты.Дата);	
	ЗапросДвижений.УстановитьПараметр("МоментВремени", новый Граница(вхСсылкаНаДокумент.МоментВремени(),ВидГраницы.Исключая));
	
	
	
	РезультатЗапроса = ЗапросДвижений.ВыполнитьПакет();
	
	ДобавленныеОтказы= РезультатЗапроса[7].Выгрузить();
	ТаблицаДвижений  = РезультатЗапроса[8].Выгрузить();
	
	Возврат  ТаблицаДвижений;
	
	
	
КонецФункции


//Функция - Возвращает таблицу движений документа по регистру накопления "Услуги"
Функция РегистрыНакопления_Услуги(вхСсылкаНаДокумент, вхОтказ, вхПараметры = Неопределено) Экспорт
	
	ТаблицаДвижений = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраНакопления("Услуги", ТаблицаДвижений);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(вхСсылкаНаДокумент, "Дата, Подтверждена, СтатусДокумента");
	
	Если Реквизиты.Дата < глЗначениеПеременной("ДатаЗапускаПервогоЭтапа") Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Если НЕ Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда
		Возврат ТаблицаДвижений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда 
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗаявкаПокупателяУслуги.Ссылка.Дата КАК Период,
		               |	ЗаявкаПокупателяУслуги.Ссылка.Ссылка КАК Регистратор,
		               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		               |	ЗаявкаПокупателяУслуги.Номенклатура,
		               |	ЗаявкаПокупателяУслуги.Ссылка КАК Заявка,
		               |	ЗаявкаПокупателяУслуги.Количество,
		               |	ЗаявкаПокупателяУслуги.Сумма + ВЫБОР
		               |		КОГДА ЗаявкаПокупателяУслуги.Ссылка.СуммаВключаетНДС
		               |			ТОГДА 0
		               |		ИНАЧЕ ЗаявкаПокупателяУслуги.СуммаНДС
		               |	КОНЕЦ КАК Сумма
		               |ИЗ
		               |	Документ.ЗаявкаПокупателя.Услуги КАК ЗаявкаПокупателяУслуги
		               |ГДЕ
		               |	ЗаявкаПокупателяУслуги.Ссылка = &Ссылка";
	Иначе
		ЗапросБлок = Новый Запрос;
		ЗапросБлок.Текст = "ВЫБРАТЬ
		                   |	КорректировкаЗаявкиПокупателяТовары.Номенклатура,
		                   |	КорректировкаЗаявкиПокупателяТовары.Ссылка.ДокументОснование КАК Заявка
		                   |ИЗ
		                   |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
		                   |ГДЕ
		                   |	КорректировкаЗаявкиПокупателяТовары.Ссылка = &Ссылка";
		ЗапросБлок.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
		РезультатЗапроса = ЗапросБлок.Выполнить();
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.Услуги");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Заявка", "Заявка");
		
		БлокировкаДанных.Заблокировать();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	УслугиОбороты.Номенклатура,
		               |	УслугиОбороты.Заявка,
		               |	УслугиОбороты.КоличествоОборот КАК Количество,
		               |	УслугиОбороты.СуммаОборот КАК Сумма
		               |ПОМЕСТИТЬ втДвиженияВРегистре
		               |ИЗ
		               |	РегистрНакопления.Услуги.Обороты(, &КонПериода, Регистратор, Заявка = &Заявка) КАК УслугиОбороты
		               |ГДЕ
		               |	(УслугиОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
		               |			ИЛИ УслугиОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КорректировкаЗаявкиПокупателяУслуги.Номенклатура,
		               |	КорректировкаЗаявкиПокупателяУслуги.Ссылка.ДокументОснование КАК Заявка,
		               |	КорректировкаЗаявкиПокупателяУслуги.Количество,
		               |	КорректировкаЗаявкиПокупателяУслуги.Сумма + ВЫБОР
		               |		КОГДА КорректировкаЗаявкиПокупателяУслуги.Ссылка.СуммаВключаетНДС
		               |			ТОГДА 0
		               |		ИНАЧЕ КорректировкаЗаявкиПокупателяУслуги.СуммаНДС
		               |	КОНЕЦ КАК Сумма
		               |ПОМЕСТИТЬ втУслуги
		               |ИЗ
		               |	Документ.КорректировкаЗаявкиПокупателя.Услуги КАК КорректировкаЗаявкиПокупателяУслуги
		               |ГДЕ
		               |	КорректировкаЗаявкиПокупателяУслуги.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		               |	&Ссылка КАК Регистратор,
		               |	&Дата КАК Период,
		               |	ЕСТЬNULL(втУслуги.Номенклатура, втДвиженияВРегистре.Номенклатура) КАК Номенклатура,
		               |	ЕСТЬNULL(втУслуги.Заявка, втДвиженияВРегистре.Заявка) КАК Заявка,
		               |	ЕСТЬNULL(втУслуги.Количество, 0) - ЕСТЬNULL(втДвиженияВРегистре.Количество, 0) КАК Количество,
		               |	ЕСТЬNULL(втУслуги.Сумма, 0) - ЕСТЬNULL(втДвиженияВРегистре.Сумма, 0) КАК Сумма
		               |ИЗ
		               |	втУслуги КАК втУслуги
		               |		ПОЛНОЕ СОЕДИНЕНИЕ втДвиженияВРегистре КАК втДвиженияВРегистре
		               |		ПО втУслуги.Номенклатура = втДвиженияВРегистре.Номенклатура
		               |			И втУслуги.Заявка = втДвиженияВРегистре.Заявка
		               |ГДЕ
		               |	(ЕСТЬNULL(втУслуги.Количество, 0) - ЕСТЬNULL(втДвиженияВРегистре.Количество, 0) <> 0
		               |			ИЛИ ЕСТЬNULL(втУслуги.Сумма, 0) - ЕСТЬNULL(втДвиженияВРегистре.Сумма, 0) <> 0)";
		Запрос.УстановитьПараметр("КонПериода", вхСсылкаНаДокумент.МоментВремени());
		Запрос.УстановитьПараметр("Заявка", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(вхСсылкаНаДокумент, "ДокументОснование"));
		Запрос.УстановитьПараметр("Дата", Реквизиты.Дата);
		
	КонецЕсли;
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТаблицаДвижений);
	
	Возврат ТаблицаДвижений;
	
КонецФункции

//// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура - Проверяет, что сумма всех отказов на дату документа не превышает количество а табличной части "Товары".
// Срабатывает только при проведении документа и только если стоит флаг мПроверкаПередПроведением = Истина в дополнительных свойствах объекта
// 
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево -
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//
Процедура ПроверитьКорректностьОтказов(ЭтотОбъект, Отказ, РежимЗаписи) Экспорт 
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ЭтотОбъект.ДополнительныеСвойства.мПроверкаПередПроведением Тогда
		
		ТаблицаОтказы = ЭтотОбъект.ПричиныОтказов.Выгрузить(,"КлючСвязи,Количество");
		ТаблицаОтказы.Свернуть("КлючСвязи", "Количество");
		ТаблицаТовары = ЭтотОбъект.Товары.Выгрузить(,"СтрокаЗаявки,КлючСвязи,Количество");
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	втТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	втТовары.КлючСвязи КАК КлючСвязи,
		|	втТовары.Количество КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&ТаблицаТовары КАК втТовары
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОтказы.КлючСвязи КАК КлючСвязи,
		|	втОтказы.Количество КАК Количество
		|ПОМЕСТИТЬ втОтказы
		|ИЗ
		|	&ТаблицаОтказы КАК втОтказы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	втТовары.КлючСвязи КАК КлючСвязи,
		|	втТовары.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК Количество
		|ПОМЕСТИТЬ втТоварыCОтказами
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
		|		ПО втТовары.КлючСвязи = втОтказы.КлючСвязи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
		|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК КоличествоОборот
		|ПОМЕСТИТЬ втОтказыПоДругимДокументам
		|ИЗ
		|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
		|			,
		|			&КонПериода,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ
		|					втТоварыCОтказами.СтрокаЗаявки
		|				ИЗ
		|					втТоварыCОтказами)) КАК ОтказыПоЗаявкамОбороты
		|ГДЕ
		|	НЕ(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
		|				ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.СтрокаЗаявки,
		|	втТовары.Количество - ЕСТЬNULL(втОтказыПоДругимДокументам.КоличествоОборот, 0) КАК Количество
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказыПоДругимДокументам КАК втОтказыПоДругимДокументам
		|		ПО втТовары.СтрокаЗаявки = втОтказыПоДругимДокументам.СтрокаЗаявки
		|ГДЕ
		|	втТовары.Количество - ЕСТЬNULL(втОтказыПоДругимДокументам.КоличествоОборот, 0) < 0";
		
		Если Не ЭтотОбъект.ЭтоНовый() Тогда 
			//Запрос.УстановитьПараметр("КонПериода", ЭтотОбъект.Ссылка.МоментВремени());
			Запрос.УстановитьПараметр("КонПериода", Новый МоментВремени(ЭтотОбъект.Дата, ЭтотОбъект.Ссылка));
		Иначе 
			Запрос.УстановитьПараметр("КонПериода", Неопределено);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
		Запрос.УстановитьПараметр("ТаблицаОтказы", ТаблицаОтказы);	
		Выборка = Запрос.Выполнить().Выбрать();
		                                    
		Пока Выборка.Следующий() Цикл 
			Сообщить("Сумма отказов превышает количество для строки заявки " + Выборка.СтрокаЗаявки, СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Процедура - Формирует таблицы данных, необходимых для проведения документа
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево -
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//
Процедура ПолучитьДополнительныеТаблицы(ЭтотОбъект, Отказ, РежимЗаписи) Экспорт
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		//ТаблицаСтрокиЗаявки = ЭтотОбъект.Товары.Выгрузить(,"СтрокаЗаявки");
		//ТаблицаСтрокиЗаявки.Свернуть("СтрокаЗаявки");
		//ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаСтрокиЗаявки", ТаблицаСтрокиЗаявки);
		
		Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда 
			Возврат;
		КонецЕсли;
		
		///Заполнение ТаблицаСтрокиЗаявкиРезервируются 
		ТаблицаСтрокиЗаявкиРезервируются = ЭтотОбъект.Товары.ВыгрузитьКолонки();
		ТаблицаСтрокиЗаявкиРезервируются.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") Тогда 
			ВидОперации = ЭтотОбъект.ВидОперации;
		Иначе
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.ДокументОснование, "ВидОперации");	
		КонецЕсли;
		
		Если ВидОперации = Перечисления.ВидыОперацийЗаявкаПокупателя.ЗаявкаПокупателя Тогда 
			ТаблицаПрайсовПоставщиков = Новый ТаблицаЗначений;
			ТаблицаПрайсовПоставщиков.Колонки.Добавить("ПрайсПоставщика", Новый ОписаниеТипов("СправочникСсылка.ПрайсыПоставщиков"));
			Для Каждого ТекСтрока Из ЭтотОбъект.Товары Цикл
				Если Не ЗначениеЗаполнено(ТекСтрока.ПрайсПоставщика)  Тогда
					НоваяСтрока = ТаблицаСтрокиЗаявкиРезервируются.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Склад = ЭтотОбъект.Склад;
				Иначе
					ТаблицаПрайсовПоставщиков.Добавить().ПрайсПоставщика = ТекСтрока.ПрайсПоставщика;			
				КонецЕсли;
			КонецЦикла;
			ТаблицаПрайсовПоставщиков.Свернуть("ПрайсПоставщика");
			МассивСсылок = ТаблицаПрайсовПоставщиков.ВыгрузитьКолонку("ПрайсПоставщика");
			
			ЗначенияРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "Склад");
			Для Каждого КлючИЗначение Из ЗначенияРеквизита Цикл 
				Если ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда 
					Отбор = Новый Структура("ПрайсПоставщика", КлючИЗначение.Ключ);
					Строки = ЭтотОбъект.Товары.НайтиСтроки(Отбор);
					Для Каждого ТекСтроки Из Строки Цикл 
						НоваяСтрока = ТаблицаСтрокиЗаявкиРезервируются.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
						НоваяСтрока.Склад = ЭтотОбъект.Склад;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		//Конец ТаблицаСтрокиЗаявкиРезервируются
		
		//Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") Тогда 
		//	ТаблицаОтказыДоДетально = Новый ТаблицаЗначений;
		//	ТаблицаОтказыДоДетально.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
		//	ТаблицаОтказыДоДетально.Колонки.Добавить("ПричинаОтмены", Новый ОписаниеТипов("СправочникСсылка.СостоянияСтрокДокументов"));
		//	ТаблицаОтказыДоДетально.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
		//Иначе
		//	Запрос = Новый Запрос;
		//	Запрос.Текст =
		//	"ВЫБРАТЬ 
		//	|	СтрокиЗаявки.СтрокаЗаявки КАК СтрокаЗаявки
		//	|ПОМЕСТИТЬ втСтрокиЗаявки
		//	|ИЗ
		//	|	&СтрокиЗаявки КАК СтрокиЗаявки
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	СтрокаЗаявки
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
		//	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК ПричинаОтмены,
		//	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК Количество
		//	|ИЗ
		//	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
		//	|			,
		//	|			&КонПериода,
		//	|			Регистратор,
		//	|			СтрокаЗаявки В
		//	|				(ВЫБРАТЬ
		//	|					втСтрокиЗаявки.СтрокаЗаявки
		//	|				ИЗ
		//	|					втСтрокиЗаявки)) КАК ОтказыПоЗаявкамОбороты
		//	|ГДЕ
		//	|	(ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
		//	|			ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
		//	|	И ОтказыПоЗаявкамОбороты.Регистратор <> &Ссылка
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
		//	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа";
		//	Запрос.УстановитьПараметр("СтрокиЗаявки", ТаблицаСтрокиЗаявки);
		//	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		//	
		//	Если Не ЭтотОбъект.ЭтоНовый() Тогда 
		//		//Запрос.УстановитьПараметр("КонПериода", ЭтотОбъект.Ссылка.МоментВремени());
		//		Запрос.УстановитьПараметр("КонПериода", Новый МоментВремени(ЭтотОбъект.Дата, ЭтотОбъект.Ссылка));
		//	Иначе 
		//		Запрос.УстановитьПараметр("КонПериода", Неопределено);
		//	КонецЕсли;
		//	
		//	ТаблицаОтказыДоДетально = Запрос.Выполнить().Выгрузить();
		//КонецЕсли;
		//ТаблицаОтказыДо = ТаблицаОтказыДоДетально.Скопировать(,	"СтрокаЗаявки, Количество");
		//ТаблицаОтказыДо.Свернуть("СтрокаЗаявки","Количество");
		//
		//ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаОтказыДо", ТаблицаОтказыДо);  //Данная таблица значений возможно не нужна
		//ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаОтказыДоДетально", ТаблицаОтказыДоДетально);
		ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаСтрокиЗаявкиРезервируются", ТаблицаСтрокиЗаявкиРезервируются);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Для каждой строки из табличной части "Товары" считается сумма отказов из табличной части "Причины отказов"
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево - Признак отказа
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//
Процедура ЗаполнитьКолонкуОтмена(ЭтотОбъект) Экспорт 
	
	Для Каждого ТекСтрока Из ЭтотОбъект.Товары Цикл
		КоличествоОтменено = 0;
		Отбор = Новый Структура("КлючСвязи", ТекСтрока.КлючСвязи);
		
		Строки = ЭтотОбъект.ПричиныОтказов.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаТЧ Из Строки Цикл
			КоличествоОтменено = КоличествоОтменено + СтрокаТЧ.Количество;
		КонецЦикла;
		
		ТекСтрока.Отмена = КоличествоОтменено;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - Заполнить реквизиты связанные с резервом. Рассчитывает сумму резерва текущего документа, предыдущих корректировок и заявки покупателя.
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево - Признак отказа
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры
//
Процедура ЗаполнитьРеквизитыСвязанныеСРезервом(ЭтотОбъект, Отказ, РежимЗаписи, вхПараметры = Неопределено) Экспорт 
	
	Если Не (РежимЗаписи = РежимЗаписиДокумента.Проведение)	Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден Тогда 
		ЭтотОбъект.СуммаРезерва = 0;
	Иначе 
	
		ПоследнийДокументКорректировки = Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(ЭтотОбъект.Ссылка);
		
		Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") Тогда 
			СуммаРезерва = 0;
		Иначе  
			Запрос = Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
			                |	КорректировкаЗаявкиПокупателя.СуммаРезерва
			                |ИЗ
			                |	Документ.КорректировкаЗаявкиПокупателя КАК КорректировкаЗаявкиПокупателя
			                |ГДЕ
			                |	КорректировкаЗаявкиПокупателя.ДокументОснование = &ДокументОснование
			                |	И КорректировкаЗаявкиПокупателя.МоментВремени < &МоментВремени
			                |	И КорректировкаЗаявкиПокупателя.Проведен
			                |
			                |УПОРЯДОЧИТЬ ПО
			                |	КорректировкаЗаявкиПокупателя.МоментВремени УБЫВ";
			Запрос.УстановитьПараметр("ДокументОснование", ЭтотОбъект.ДокументОснование);
			Запрос.УстановитьПараметр("МоментВремени", Новый МоментВремени(ЭтотОбъект.Дата, ЭтотОбъект.Ссылка));
			РезультатЗапроса = Запрос.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда 
				СуммаРезерва = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.ДокументОснование, "СуммаРезерва");
			Иначе
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				СуммаРезерва = Выборка.СуммаРезерва;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда 
			ТаблицаСтрокиЗаявкиРезервируются =  ЭтотОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявкиРезервируются;
			Если ТаблицаСтрокиЗаявкиРезервируются.Количество() > 0 Тогда 
				ТаблицаРезерв = ЭтотОбъект.ДополнительныеСвойства.ТаблицаРезерв;
				Для Каждого СтрокаТаблицы Из ТаблицаРезерв Цикл
					СтрокаТЧ = ЭтотОбъект.Товары.Найти(СтрокаТаблицы.СтрокаЗаявки, "СтрокаЗаявки");
					
					Если Не ЗначениеЗаполнено(СтрокаТЧ.ДатаУстановкиРезерва) Тогда 
						СтрокаТЧ.ДатаУстановкиРезерва = ЭтотОбъект.Дата;
					КонецЕсли;
					
					СуммаРезерва = СуммаРезерва + СтрокаТЧ.Сумма * СтрокаТаблицы.Количество / СтрокаТЧ.Количество; 
					
				КонецЦикла;
			КонецЕсли;
			ЭтотОбъект.СуммаРезерва = СуммаРезерва;
		ИначеЕсли ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда
			ЭтотОбъект.СуммаРезерва = СуммаРезерва;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Рассчитать прибыль. Рассчитывает ожидаемую прибыль на основании партий. Сначала учитываются партии по организации документа, затем все остальные.
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево - Признак отказа
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//
Процедура РассчитатьПрибыль(ЭтотОбъект, Отказ, РежимЗаписи) Экспорт 
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ЭтотОбъект.СтатусДокумента <> Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда 	
		ТаблицаСтрокиЗаявкиРезервируются = ЭтотОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявкиРезервируются;
		Если ТаблицаСтрокиЗаявкиРезервируются.Количество() = 0 Тогда 
			Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл 
				СтрокаТЧ.Прибыль = 0;
			КонецЦикла;
			Возврат;
		КонецЕсли;
		
		ВалютаДокумента = ЭтотОбъект.ВалютаДокумента;
		
		Запрос = Новый Запрос;
		Запрос.Текст =  "ВЫБРАТЬ
		                |	СтрокиЗаявки.Номенклатура КАК Номенклатура
		                |ПОМЕСТИТЬ втСтрокиЗаявки
		                |ИЗ
		                |	&СтрокиЗаявки КАК СтрокиЗаявки
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Номенклатура
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ПартииТоваровОстатки.Номенклатура,
		                |	ПартииТоваровОстатки.КоличествоОстаток КАК Количество,
		                |	ВЫБОР
		                |		КОГДА &ВалютаДокумента = &ВалютаРубль
		                |			ТОГДА ПартииТоваровОстатки.СуммаРублиОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |		КОГДА &ВалютаДокумента = &ВалютаДоллар
		                |			ТОГДА ПартииТоваровОстатки.СуммаДолларыОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |		КОГДА &ВалютаДокумента = &ВалютаЕвро
		                |			ТОГДА ПартииТоваровОстатки.СуммаЕвроОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |	КОНЕЦ КАК Цена,
		                |	ПартииТоваровОстатки.СтрокаПрихода.Дата КАК Дата,
		                |	1 КАК Приоритет
		                |ПОМЕСТИТЬ ПартииПоОрганизации
		                |ИЗ
		                |	РегистрНакопления.ПартииТоваров.Остатки(
		                |			,
		                |			Организация = &Организация
		                |				И Склад = &Склад
		                |				И Номенклатура В
		                |					(ВЫБРАТЬ
		                |						втСтрокиЗаявки.Номенклатура КАК Номенклатура
		                |					ИЗ
		                |						втСтрокиЗаявки)) КАК ПартииТоваровОстатки
		                |ГДЕ
		                |	ПартииТоваровОстатки.КоличествоОстаток <> 0
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Приоритет,
		                |	Дата
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ПартииТоваровОстатки.Номенклатура,
		                |	ПартииТоваровОстатки.КоличествоОстаток КАК Количество,
		                |	ВЫБОР
		                |		КОГДА &ВалютаДокумента = &ВалютаРубль
		                |			ТОГДА ПартииТоваровОстатки.СуммаРублиОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |		КОГДА &ВалютаДокумента = &ВалютаДоллар
		                |			ТОГДА ПартииТоваровОстатки.СуммаДолларыОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |		КОГДА &ВалютаДокумента = &ВалютаЕвро
		                |			ТОГДА ПартииТоваровОстатки.СуммаЕвроОстаток / ПартииТоваровОстатки.КоличествоОстаток
		                |	КОНЕЦ КАК Цена,
		                |	ПартииТоваровОстатки.СтрокаПрихода.Дата КАК Дата,
		                |	2 КАК Приоритет
		                |ПОМЕСТИТЬ ПартииПоДругимОрганизациям
		                |ИЗ
		                |	РегистрНакопления.ПартииТоваров.Остатки(
		                |			,
		                |			Организация <> &Организация
		                |				И Склад = &Склад
		                |				И Номенклатура В
		                |					(ВЫБРАТЬ
		                |						втСтрокиЗаявки.Номенклатура КАК Номенклатура
		                |					ИЗ
		                |						втСтрокиЗаявки)) КАК ПартииТоваровОстатки
		                |ГДЕ
		                |	ПартииТоваровОстатки.КоличествоОстаток <> 0
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Приоритет,
		                |	Дата
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ПартииПоОрганизации.Номенклатура,
		                |	ПартииПоОрганизации.Количество,
		                |	ПартииПоОрганизации.Цена,
		                |	ПартииПоОрганизации.Дата КАК Дата,
		                |	ПартииПоОрганизации.Приоритет КАК Приоритет
		                |ИЗ
		                |	ПартииПоОрганизации КАК ПартииПоОрганизации
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПартииПоДругимОрганизациям.Номенклатура,
		                |	ПартииПоДругимОрганизациям.Количество,
		                |	ПартииПоДругимОрганизациям.Цена,
		                |	ПартииПоДругимОрганизациям.Дата,
		                |	ПартииПоДругимОрганизациям.Приоритет
		                |ИЗ
		                |	ПартииПоДругимОрганизациям КАК ПартииПоДругимОрганизациям
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	Приоритет,
		                |	Дата";
						
						
						
		Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
		Запрос.УстановитьПараметр("Склад", ЭтотОбъект.Склад);
		Запрос.УстановитьПараметр("СтрокиЗаявки", ТаблицаСтрокиЗаявкиРезервируются);
		
		Запрос.УстановитьПараметр("ВалютаДокумента", ВалютаДокумента);
		Запрос.УстановитьПараметр("ВалютаДоллар", ПараметрыСеанса.ВалютаДоллар);
		Запрос.УстановитьПараметр("ВалютаЕвро", ПараметрыСеанса.ВалютаЕвро);
		Запрос.УстановитьПараметр("ВалютаРубль", ПараметрыСеанса.ВалютаРубль);
		
		Попытка
			Партии = Запрос.Выполнить().Выгрузить();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			Партии = Новый ТаблицаЗначений;
			Партии.Колонки.Добавить("Номенклатура");
		КонецПопытки;
			Для Каждого ТекСтрока Из ТаблицаСтрокиЗаявкиРезервируются Цикл 
				СтрокаТЧ = ЭтотОбъект.Товары.Найти(ТекСтрока.СтрокаЗаявки, "СтрокаЗаявки");
				КоличествоРаспределить = СтрокаТЧ.Количество - СтрокаТЧ.Отмена;
				СуммаЗакупки = 0;
				УжеРаспределено = 0;
				Если КоличествоРаспределить > 0 Тогда 
					СтрокиПартии = Партии.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
					Для Каждого СтрокаПартии Из СтрокиПартии Цикл 
						МожноРаспределить = Мин(КоличествоРаспределить, СтрокаПартии.Количество);
						СуммаЗакупки = СуммаЗакупки + МожноРаспределить * СтрокаПартии.Цена;
						СтрокаПартии.Количество = СтрокаПартии.Количество - МожноРаспределить;
						КоличествоРаспределить = КоличествоРаспределить - МожноРаспределить;
						Если КоличествоРаспределить = 0 Тогда 
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если СуммаЗакупки <> 0 И СтрокаТЧ.Количество - СтрокаТЧ.Отмена <> 0 Тогда 
					СуммаПродажи = (СтрокаТЧ.Количество - СтрокаТЧ.Отмена - КоличествоРаспределить) * СтрокаТЧ.Сумма / (СтрокаТЧ.Количество - СтрокаТЧ.Отмена);
					СтрокаТЧ.Прибыль =  100 * (СуммаПродажи - СуммаЗакупки) / СуммаЗакупки;
				Иначе
					СтрокаТЧ.Прибыль = 0;
				КонецЕсли;
				//Если КоличествоРаспределить > 0 Тогда 
				//	Сообщить("При расчете прибыли не найдены партии по строке № " + СтрокаТЧ.НомерСтроки + " на количество " + КоличествоРаспределить);
				//КонецЕсли;
			КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Добавить отказы рассчитать резерв. Для строк, которые должны быть зарезервированы, расчитывается возможный резерв, остальное количество добаляется в отказ
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя,	ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//  Отказ		 - Булево - Признак отказа
//  РежимЗаписи	 - РежимЗаписиДокумента -	 
//  вхПараметры	 - Структура, Неопределено - Дополнительные параметры
//
Процедура ДобавитьОтказыРассчитатьРезерв(ЭтотОбъект, Отказ, РежимЗаписи, вхПараметры = Неопределено) Экспорт  
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ПроведениеДокументовКлиентСервер.ПроводитсяПо(вхПараметры, "РезервыТоваров") Тогда
		Если ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяНеПодтвержден ИЛИ ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт Тогда  
			Возврат;
		КонецЕсли;
				
		ТаблицаСтрокиЗаявкиРезервируются =  ЭтотОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявкиРезервируются;
		Если ТаблицаСтрокиЗаявкиРезервируются.Количество() = 0 Тогда 
			Возврат; //Кроссовая заявка
		КонецЕсли;
		
		ТаблицаОтказыДо =  ЭтотОбъект.ДополнительныеСвойства.ТаблицаОтказыДо;
		
		ТаблицаПричиныОтказов = ЭтотОбъект.ПричиныОтказов.Выгрузить(, "КлючСвязи, Количество");
		ТаблицаПричиныОтказов.Свернуть("КлючСвязи", "Количество");
		
		АвтоОтказы = ЭтотОбъект.Дата >= глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83"); 
					
		Запрос = Новый Запрос;	
		Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") Тогда
			
			// Для заявки запрос отличается тем, что не расчитываются имеющиеся резервы по строкам заявок, 
			// т.к. считается что при проведении заявки, резервов по строкам заявок нет
			// Также считается, что нет продаж и отказов на момент заявки
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СтрокиЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	СтрокиЗаявки.КлючСвязи КАК КлючСвязи,
			|	СтрокиЗаявки.Склад КАК Склад,
			|	СтрокиЗаявки.Номенклатура КАК Номенклатура,
			|	СтрокиЗаявки.Качество КАК Качество,
			|	СтрокиЗаявки.Количество КАК Количество
			|ПОМЕСТИТЬ втСтрокиЗаявки
			|ИЗ
			|	&СтрокиЗаявки КАК СтрокиЗаявки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОтказы.КлючСвязи КАК КлючСвязи,
			|	втОтказы.Количество КАК Количество
			|ПОМЕСТИТЬ втОтказы
			|ИЗ
			|	&ТаблицаПричиныОтказов КАК втОтказы
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСтрокиЗаявки.СтрокаЗаявки,
			|	втСтрокиЗаявки.КлючСвязи,
			|	втСтрокиЗаявки.Склад КАК Склад,
			|	втСтрокиЗаявки.Номенклатура КАК Номенклатура,
			|	втСтрокиЗаявки.Качество КАК Качество,
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК НужноДорезервировать
			|ПОМЕСТИТЬ втТребуетсяДорезервировать
			|ИЗ
			|	втСтрокиЗаявки КАК втСтрокиЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
			|		ПО втСтрокиЗаявки.КлючСвязи = втОтказы.КлючСвязи
			|ГДЕ
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) <> 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РезервыТоваровОстатки.Склад КАК Склад,
			|	РезервыТоваровОстатки.Номенклатура КАК Номенклатура,
			|	РезервыТоваровОстатки.Качество КАК Качество,
			|	РезервыТоваровОстатки.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ втРезервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втТребуетсяДорезервировать.Склад,
			|					втТребуетсяДорезервировать.Номенклатура,
			|					втТребуетсяДорезервировать.Качество
			|				ИЗ
			|					втТребуетсяДорезервировать)) КАК РезервыТоваровОстатки
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.РезервыТоваров.Остатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыНаСкладахОстатки.Склад КАК Склад,
			|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
			|	ТоварыНаСкладахОстатки.Качество КАК Качество,
			|	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(втРезервы.Количество, 0) КАК ДоступныйОстаток
			|ПОМЕСТИТЬ втСвободныеОстатки
			|ИЗ
			|	РегистрНакопления.ТоварыНаСкладах.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втТребуетсяДорезервировать.Склад,
			|					втТребуетсяДорезервировать.Номенклатура,
			|					втТребуетсяДорезервировать.Качество
			|				ИЗ
			|					втТребуетсяДорезервировать)) КАК ТоварыНаСкладахОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
			|		ПО ТоварыНаСкладахОстатки.Склад = втРезервы.Склад
			|			И ТоварыНаСкладахОстатки.Номенклатура = втРезервы.Номенклатура
			|			И ТоварыНаСкладахОстатки.Качество = втРезервы.Качество
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втТребуетсяДорезервировать.СтрокаЗаявки,
			|	втТребуетсяДорезервировать.КлючСвязи,
			|	втТребуетсяДорезервировать.Склад,
			|	втТребуетсяДорезервировать.Номенклатура,
			|	втТребуетсяДорезервировать.Качество,
			|	втТребуетсяДорезервировать.НужноДорезервировать КАК Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(втСвободныеОстатки.ДоступныйОстаток, 0) < 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(втСвободныеОстатки.ДоступныйОстаток, 0)
			|	КОНЕЦ КАК ДоступныйОстаток
			|ИЗ
			|	втТребуетсяДорезервировать КАК втТребуетсяДорезервировать
			|		ЛЕВОЕ СОЕДИНЕНИЕ втСвободныеОстатки КАК втСвободныеОстатки
			|		ПО втТребуетсяДорезервировать.Склад = втСвободныеОстатки.Склад
			|			И втТребуетсяДорезервировать.Номенклатура = втСвободныеОстатки.Номенклатура
			|			И втТребуетсяДорезервировать.Качество = втСвободныеОстатки.Качество";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СтрокиЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	СтрокиЗаявки.КлючСвязи КАК КлючСвязи,
			|	СтрокиЗаявки.Склад КАК Склад,
			|	СтрокиЗаявки.Номенклатура КАК Номенклатура,
			|	СтрокиЗаявки.Качество КАК Качество,
			|	СтрокиЗаявки.Количество,
			|	СтрокиЗаявки.Отмена КАК КоличествоОтменено
			|ПОМЕСТИТЬ втСтрокиЗаявки
			|ИЗ
			|	&СтрокиЗаявки КАК СтрокиЗаявки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОтказы.КлючСвязи КАК КлючСвязи,
			|	втОтказы.Количество
			|ПОМЕСТИТЬ втОтказы
			|ИЗ
			|	&ТаблицаПричиныОтказов КАК втОтказы
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	КлючСвязи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСтрокиЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	втСтрокиЗаявки.КлючСвязи,
			|	втСтрокиЗаявки.Склад,
			|	втСтрокиЗаявки.Номенклатура,
			|	втСтрокиЗаявки.Качество,
			|	втСтрокиЗаявки.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК Количество
			|ПОМЕСТИТЬ втТоварыМинусОтказы
			|ИЗ
			|	втСтрокиЗаявки КАК втСтрокиЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
			|		ПО втСтрокиЗаявки.КлючСвязи = втОтказы.КлючСвязи
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втОтказыДо.СтрокаЗаявки КАК СтрокаЗаявки,
			|	втОтказыДо.Количество
			|ПОМЕСТИТЬ втОтказыДо
			|ИЗ
			|	&ТаблицаОтказыДо КАК втОтказыДо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втТоварыМинусОтказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	втТоварыМинусОтказы.КлючСвязи,
			|	втТоварыМинусОтказы.Склад КАК Склад,
			|	втТоварыМинусОтказы.Номенклатура КАК Номенклатура,
			|	втТоварыМинусОтказы.Качество КАК Качество,
			|	втТоварыМинусОтказы.Количество - ЕСТЬNULL(ОтказыПоЗаявкамОбороты.КоличествоОборот, 0) - ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) - ЕСТЬNULL(ТоварыКОтгрузке.КоличествоОборот, 0) + ЕСТЬNULL(втОтказыДо.Количество, 0) КАК НужноДорезервировать
			|ПОМЕСТИТЬ втОжидаемыйРезерв
			|ИЗ
			|	втТоварыМинусОтказы КАК втТоварыМинусОтказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
			|				,
			|				&КонПериода,
			|				,
			|				СтрокаЗаявки В
			|					(ВЫБРАТЬ
			|						втТоварыМинусОтказы.СтрокаЗаявки
			|					ИЗ
			|						втТоварыМинусОтказы)) КАК ПродажиОбороты
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ПродажиОбороты.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтказыПоЗаявкам.Обороты(
			|				,
			|				&КонПериода,
			|				,
			|				СтрокаЗаявки В
			|					(ВЫБРАТЬ
			|						втТоварыМинусОтказы.СтрокаЗаявки
			|					ИЗ
			|						втТоварыМинусОтказы)) КАК ОтказыПоЗаявкамОбороты
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ОтказыПоЗаявкамОбороты.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втОтказыДо КАК втОтказыДо
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = втОтказыДо.СтрокаЗаявки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
			|				,
			|				&КонПериода,
			|				,
			|				СтрокаЗаявки В
			|						(ВЫБРАТЬ
			|							втТоварыМинусОтказы.СтрокаЗаявки
			|						ИЗ
			|							втТоварыМинусОтказы)
			|					И Статус = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.РеализацияТоваровУслуг)) КАК ТоварыКОтгрузке
			|		ПО втТоварыМинусОтказы.СтрокаЗаявки = ТоварыКОтгрузке.СтрокаЗаявки
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество,
			|	СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(втОжидаемыйРезерв.Склад, РезервыТоваровОстатки.Склад) КАК Склад,
			|	ЕСТЬNULL(втОжидаемыйРезерв.Номенклатура, РезервыТоваровОстатки.Номенклатура) КАК Номенклатура,
			|	ЕСТЬNULL(втОжидаемыйРезерв.Качество, РезервыТоваровОстатки.Качество) КАК Качество,
			|	ЕСТЬNULL(втОжидаемыйРезерв.СтрокаЗаявки, РезервыТоваровОстатки.СтрокаЗаявки) КАК СтрокаЗаявки,
			|	втОжидаемыйРезерв.КлючСвязи КАК КлючСвязи,
			|	ЕСТЬNULL(втОжидаемыйРезерв.НужноДорезервировать, 0) - ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0) КАК Количество
			|ПОМЕСТИТЬ втСкорректироватьРезерв
			|ИЗ
			|	втОжидаемыйРезерв КАК втОжидаемыйРезерв
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
			|				&КонПериода,
			|				СтрокаЗаявки В
			|					(ВЫБРАТЬ
			|						втТоварыМинусОтказы.СтрокаЗаявки
			|					ИЗ
			|						втТоварыМинусОтказы)) КАК РезервыТоваровОстатки
			|		ПО втОжидаемыйРезерв.Склад = РезервыТоваровОстатки.Склад
			|			И втОжидаемыйРезерв.Номенклатура = РезервыТоваровОстатки.Номенклатура
			|			И втОжидаемыйРезерв.Качество = РезервыТоваровОстатки.Качество
			|			И втОжидаемыйРезерв.СтрокаЗаявки = РезервыТоваровОстатки.СтрокаЗаявки
			|ГДЕ
			|	ЕСТЬNULL(втОжидаемыйРезерв.НужноДорезервировать, 0) - ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0) <> 0
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.РезервыТоваров.Остатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РезервыТоваровОстатки.Склад КАК Склад,
			|	РезервыТоваровОстатки.Номенклатура КАК Номенклатура,
			|	РезервыТоваровОстатки.Качество КАК Качество,
			|	РезервыТоваровОстатки.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ втРезерв
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втСкорректироватьРезерв.Склад,
			|					втСкорректироватьРезерв.Номенклатура,
			|					втСкорректироватьРезерв.Качество
			|				ИЗ
			|					втСкорректироватьРезерв
			|				ГДЕ
			|					втСкорректироватьРезерв.Количество > 0)) КАК РезервыТоваровОстатки
			|
			|ДЛЯ ИЗМЕНЕНИЯ
			|	РегистрНакопления.РезервыТоваров.Остатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыНаСкладахОстатки.Склад КАК Склад,
			|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
			|	ТоварыНаСкладахОстатки.Качество КАК Качество,
			|	ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(втРезерв.Количество, 0) КАК ДоступныйОстаток
			|ПОМЕСТИТЬ втСвободныеОстатки
			|ИЗ
			|	РегистрНакопления.ТоварыНаСкладах.Остатки(
			|			&КонПериода,
			|			(Склад, Номенклатура, Качество) В
			|				(ВЫБРАТЬ
			|					втСкорректироватьРезерв.Склад,
			|					втСкорректироватьРезерв.Номенклатура,
			|					втСкорректироватьРезерв.Качество
			|				ИЗ
			|					втСкорректироватьРезерв
			|				ГДЕ
			|					втСкорректироватьРезерв.Количество > 0)) КАК ТоварыНаСкладахОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ втРезерв КАК втРезерв
			|		ПО ТоварыНаСкладахОстатки.Склад = втРезерв.Склад
			|			И ТоварыНаСкладахОстатки.Номенклатура = втРезерв.Номенклатура
			|			И ТоварыНаСкладахОстатки.Качество = втРезерв.Качество
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад,
			|	Номенклатура,
			|	Качество
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втСкорректироватьРезерв.Склад,
			|	втСкорректироватьРезерв.Номенклатура,
			|	втСкорректироватьРезерв.Качество,
			|	втСкорректироватьРезерв.СтрокаЗаявки,
			|	втСкорректироватьРезерв.КлючСвязи,
			|	втСкорректироватьРезерв.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СвободныеОстатки.ДоступныйОстаток, 0) < 0
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(СвободныеОстатки.ДоступныйОстаток, 0)
			|	КОНЕЦ КАК ДоступныйОстаток
			|ИЗ
			|	втСкорректироватьРезерв КАК втСкорректироватьРезерв
			|		ЛЕВОЕ СОЕДИНЕНИЕ втСвободныеОстатки КАК СвободныеОстатки
			|		ПО втСкорректироватьРезерв.Склад = СвободныеОстатки.Склад
			|			И втСкорректироватьРезерв.Номенклатура = СвободныеОстатки.Номенклатура
			|			И втСкорректироватьРезерв.Качество = СвободныеОстатки.Качество
			|
			|УПОРЯДОЧИТЬ ПО
			|	Количество";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТаблицаПричиныОтказов", ТаблицаПричиныОтказов);
		Запрос.УстановитьПараметр("ТаблицаОтказыДо", ТаблицаОтказыДо);
		Запрос.УстановитьПараметр("СтрокиЗаявки", ТаблицаСтрокиЗаявкиРезервируются);
		
		Если Не ЭтотОбъект.ДополнительныеСвойства.ЭтоНовый Тогда 
			//Запрос.УстановитьПараметр("КонПериода", Новый Граница(ЭтотОбъект.Ссылка.МоментВремени(), ВидГраницы.Исключая));
			Запрос.УстановитьПараметр("КонПериода", Новый Граница(Новый МоментВремени(ЭтотОбъект.Дата, ЭтотОбъект.Ссылка), ВидГраницы.Исключая));  //Чтобы не захватывались движения оборотных регистров самого документа
		Иначе 
			Запрос.УстановитьПараметр("КонПериода", Неопределено);
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выгрузить();
		ТаблицаРезерв = Выборка.СкопироватьКолонки("Склад,Номенклатура,Качество,СтрокаЗаявки,Количество");
		
		Для Каждого СтрокаТЧ Из Выборка Цикл 
			Если СтрокаТЧ.Количество < 0 Тогда 
				НоваяСтрока = ТаблицаРезерв.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ, "Склад,Номенклатура,Качество,СтрокаЗаявки,Количество"); 
				Отбор = Новый Структура("Номенклатура,Склад,Качество", СтрокаТЧ.Номенклатура, СтрокаТЧ.Склад, СтрокаТЧ.Качество);
				НайденныеСтроки = Выборка.НайтиСтроки(Отбор);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.ДоступныйОстаток = НайденнаяСтрока.ДоступныйОстаток - СтрокаТЧ.Количество;		
				КонецЦикла;
			Иначе	
				МожноРаспределить = Мин(СтрокаТЧ.Количество, СтрокаТЧ.ДоступныйОстаток);
				КоличествоОтказ = СтрокаТЧ.Количество - МожноРаспределить;
				Если КоличествоОтказ > 0 И АвтоОтказы Тогда 
					Отбор = Новый Структура("КлючСвязи,ПричинаОтмены", СтрокаТЧ.КлючСвязи, Справочники.СостоянияСтрокДокументов.ОтсутствуетНаСкладеПартком);
					Строки = ЭтотОбъект.ПричиныОтказов.НайтиСтроки(Отбор);
					Если Строки.Количество() = 0 Тогда 
						СтрокаОтказа = ЭтотОбъект.ПричиныОтказов.Добавить();
					Иначе
						СтрокаОтказа = Строки.Получить(0);
					КонецЕсли;
					СтрокаОтказа.КлючСвязи = СтрокаТЧ.КлючСвязи;
					СтрокаОтказа.ПричинаОтмены = Справочники.СостоянияСтрокДокументов.ОтсутствуетНаСкладеПартком;
					СтрокаОтказа.Количество = СтрокаОтказа.Количество + КоличествоОтказ;
				КонецЕсли;
				
				Отбор = Новый Структура("Номенклатура,Склад,Качество", СтрокаТЧ.Номенклатура, СтрокаТЧ.Склад, СтрокаТЧ.Качество);
				НайденныеСтроки = Выборка.НайтиСтроки(Отбор);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.ДоступныйОстаток = НайденнаяСтрока.ДоступныйОстаток - МожноРаспределить;		
				КонецЦикла;
				Если СтрокаТЧ.Количество - КоличествоОтказ > 0 Тогда 
					НоваяСтрока = ТаблицаРезерв.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
					НоваяСтрока.Количество = СтрокаТЧ.Количество - КоличествоОтказ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаРезерв", ТаблицаРезерв); 
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Создать обновить строки заявки. Создает элементы справочника "Идентификаторы строк заявок" и заполняет их по данным строки
//
// Параметры:
//  ЭтотОбъект	 - ДокументОбъект.ЗаявкаПокупателя, ДокументОбъект.КорректировкаЗаявкиПокупателя - 
//
Процедура СоздатьОбновитьСтрокиЗаявки(ЭтотОбъект) Экспорт
	
 	Если ЭтотОбъект.Ссылка <> Документы.ЗаявкаПокупателя.ПолучитьПоследнийДокументКорректировки(ЭтотОбъект.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	РеквизитыПоставщика = Неопределено;
	Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("РеквизитыПоставщика", РеквизитыПоставщика) ИЛИ ТипЗнч(РеквизитыПоставщика) <> Тип("Соответствие") Тогда
		РеквизитыПоставщика = Новый Соответствие;
	КонецЕсли;
		
	Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") Тогда 
	
		Если ЭтотОбъект.ЭтоНовый() Тогда 
			СсылкаНаДокумент = ЭтотОбъект.ПолучитьСсылкуНового();
			
			Если СсылкаНаДокумент.Пустая() Тогда 
				СсылкаНаДокумент = Документы.ЗаявкаПокупателя.ПолучитьСсылку();
				ЭтотОбъект.УстановитьСсылкуНового(СсылкаНаДокумент);
			КонецЕсли;
			Если ПустаяСтрока(ЭтотОбъект.Номер) Тогда 
				ЭтотОбъект.УстановитьНовыйНомер();
			КонецЕсли;
		Иначе
			СсылкаНаДокумент = ЭтотОбъект.Ссылка;
		КонецЕсли;
		
		МассивРеквизитовДляСравнения = Новый Массив;
		МассивРеквизитовДляСравнения.Добавить("IDSite");
		МассивРеквизитовДляСравнения.Добавить("ПрайсПоставщика");
		МассивРеквизитовДляСравнения.Добавить("СрокГарантированный");
		МассивРеквизитовДляСравнения.Добавить("СрокОжидаемый");
		МассивРеквизитовДляСравнения.Добавить("СрокГарантированныйЗаказа");
		МассивРеквизитовДляСравнения.Добавить("СрокОжидаемыйЗаказа");
		МассивРеквизитовДляСравнения.Добавить("ЦенаЗакупки");
		МассивРеквизитовДляСравнения.Добавить("Количество");
		МассивРеквизитовДляСравнения.Добавить("Цена");
		
		ПоследнийКлючСвязи = 0;
		Если ЭтотОбъект.Товары.Количество() = 0 Тогда
			ПоследнийКлючСвязи = 0
		Иначе
			КопияТовары = ЭтотОбъект.Товары.Выгрузить(,"КлючСвязи");
			КопияТовары.Сортировать("КлючСвязи УБЫВ");
			ПоследнийКлючСвязи = КопияТовары.Получить(0).КлючСвязи;
		КонецЕсли;
		
		ЭтоVMI = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.Склад, "СкладVMI");
		
		СтруктураПоиска = Новый Структура("КлючСвязи");
		
		МассивСтрок = Новый Массив;
		ТаблицаНоменклатуры = Новый ТаблицаЗначений;
		ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаНоменклатуры.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
		Для Каждого ТекСтрока Из ЭтотОбъект.Товары Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока.СтрокаЗаявки) Тогда
				
				Попытка
					ОбъектЗаявки = ТекСтрока.СтрокаЗаявки.ПолучитьОбъект();
				
					Для Каждого ТекРеквизит Из МассивРеквизитовДляСравнения Цикл
						Если Не ОбъектЗаявки[ТекРеквизит] = ТекСтрока[ТекРеквизит] Тогда
							ОбъектЗаявки[ТекРеквизит] = ТекСтрока[ТекРеквизит];
						КонецЕсли;
					КонецЦикла;
					Если Не ОбъектЗаявки.Заявка = СсылкаНаДокумент Тогда 
						ОбъектЗаявки.Заявка = СсылкаНаДокумент;
					КонецЕсли;
					
					Если Не ОбъектЗаявки.СостояниеЗаявки = ЭтотОбъект.СтатусДокумента Тогда 
						ОбъектЗаявки.СостояниеЗаявки = ЭтотОбъект.СтатусДокумента;
					КонецЕсли;
					
					//Поставщик
					Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.ПрайсПоставщика, "Владелец.Владелец");
					
					Если Не ЗначениеЗаполнено(Поставщик) Тогда 
						Поставщик = Справочники.Контрагенты.ПустаяСсылка();
					КонецЕсли;
					
					Если Не ОбъектЗаявки.Поставщик = Поставщик Тогда 
						ОбъектЗаявки.Поставщик = Поставщик;
					КонецЕсли;
					
					//Маршрут доставки
					Если Не ОбъектЗаявки.МаршрутДоставки = ЭтотОбъект.МаршрутДоставки Тогда 
						ОбъектЗаявки.МаршрутДоставки = ЭтотОбъект.МаршрутДоставки;
					КонецЕсли;
					
					//#XX-1573 Kalinin V.A. ( 2018-12-28 )
					СкладЗаказа = ЗаказыПоставщикамСервер.ПолучитьСкладЗаказаПоПрайсу(ОбъектЗаявки.ПрайсПоставщика,ЭтотОбъект.Склад);
					Если Не ОбъектЗаявки.СкладЗаказа = СкладЗаказа Тогда 
						ОбъектЗаявки.СкладЗаказа = СкладЗаказа;
					КонецЕсли;		
					// */

					
					Если ЭтоVMI Тогда 
						Запрос = Новый Запрос;
						Запрос.Текст = "ВЫБРАТЬ
						               |	НоменклатураКонтрагентов.АртикулПоставщика,
						               |	НоменклатураКонтрагентов.ИзготовительПоставщика
						               |ИЗ
						               |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
						               |ГДЕ
						               |	НоменклатураКонтрагентов.Владелец = &Владелец
						               |	И НоменклатураКонтрагентов.Номенклатура = &Номенклатура";
						Запрос.УстановитьПараметр("Владелец", Поставщик);
						Запрос.УстановитьПараметр("Номенклатура", ТекСтрока.Номенклатура);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							Если Не ОбъектЗаявки.АртикулПоставщика = Выборка.АртикулПоставщика Тогда 
								ОбъектЗаявки.АртикулПоставщика = Выборка.АртикулПоставщика;
							КонецЕсли;
							Если Не ОбъектЗаявки.ИзготовительПоставщика = Выборка.ИзготовительПоставщика Тогда 
								ОбъектЗаявки.ИзготовительПоставщика = Выборка.ИзготовительПоставщика;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Если ОбъектЗаявки.Модифицированность() Тогда
						ОбъектЗаявки.Записать();
					КонецЕсли;
					
				Исключение
					ЗаписьЖурналаРегистрации("ОтладкаОбмена", УровеньЖурналаРегистрации.Ошибка, ЭтотОбъект, ТекСтрока.СтрокаЗаявки, "Ошибка обмена: " + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
				КонецПопытки;
				
			Иначе
				МассивСтрок.Добавить(ТекСтрока);
				СтрокаТаблицы = ТаблицаНоменклатуры.Добавить();
				
				СтрокаТаблицы.Номенклатура = ТекСтрока.Номенклатура;
				СтрокаТаблицы.Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.ПрайсПоставщика, "Владелец.Владелец");
			КонецЕсли;
			
			
			Если Не ЗначениеЗаполнено(ТекСтрока.КлючСвязи) Тогда
				ПоследнийКлючСвязи = ПоследнийКлючСвязи + 1;
				ТекСтрока.КлючСвязи = ПоследнийКлючСвязи;
			КонецЕсли;
			
		КонецЦикла;
		//ТаблицаНоменклатуры.Свернуть("Номенклатура");
		МассивСсылок = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
		
		
		Если МассивСсылок.Количество() > 0 Тогда 
			ЗначенияРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "Наименование");
		КонецЕсли;
		
		Если ЭтоVMI Тогда 
			Запрос = Новый Запрос;
			//#PK83-746 Kalinin V.A. ( 2018-06-01 )
			//Семенов И.П. 18.01.2019(
			//Запрос.Текст =   "ВЫБРАТЬ
			//                 |	втТаблица.Номенклатура,
			//                 |	втТаблица.Поставщик
			//                 |ПОМЕСТИТЬ втТаблица
			//                 |ИЗ
			//                 |	&Таблица КАК втТаблица
			//                 |;
			//                 |
			//                 |////////////////////////////////////////////////////////////////////////////////
			//                 |ВЫБРАТЬ
			//                 |	НоменклатураКонтрагентов.Номенклатура,
			//                 |	НоменклатураКонтрагентов.Владелец КАК Поставщик,
			//                 |	НоменклатураКонтрагентов.АртикулПоставщика,
			//                 |	НоменклатураКонтрагентов.ИзготовительПоставщика КАК ИзготовительПоставщика,
			//                 |	0 КАК Приоритет
			//                 |ИЗ
			//                 |	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
			//                 |ГДЕ
			//                 |	(НоменклатураКонтрагентов.Номенклатура, НоменклатураКонтрагентов.Владелец) В
			//                 |			(ВЫБРАТЬ
			//                 |				втТаблица.Номенклатура,
			//                 |				втТаблица.Поставщик
			//                 |			ИЗ
			//                 |				втТаблица)
			//                 |
			//                 |ОБЪЕДИНИТЬ ВСЕ
			//                 |
			//                 |ВЫБРАТЬ
			//                 |	втТаблица.Номенклатура,
			//                 |	втТаблица.Поставщик,
			//                 |	ВЫРАЗИТЬ(втТаблица.Номенклатура КАК Справочник.Номенклатура).Артикул,
			//                 |	ВЫРАЗИТЬ(втТаблица.Номенклатура КАК Справочник.Номенклатура).Изготовитель,
			//                 |	1
			//                 |ИЗ
			//                 |	втТаблица КАК втТаблица
			//                 |
			//                 |УПОРЯДОЧИТЬ ПО
			//                 |	Приоритет"   ;
			Запрос.Текст =   "ВЫБРАТЬ
			                 |	втТаблица.Номенклатура,
			                 |	втТаблица.Поставщик
			                 |ПОМЕСТИТЬ втТаблица
			                 |ИЗ
			                 |	&Таблица КАК втТаблица
			                 |;
			                 |
			                 |////////////////////////////////////////////////////////////////////////////////
			                 |ВЫБРАТЬ
			                 |	втТаблица.Номенклатура,
			                 |	втТаблица.Поставщик,
			                 |	ВЫРАЗИТЬ(втТаблица.Номенклатура КАК Справочник.Номенклатура).Артикул КАК Артикул,
			                 |	ВЫРАЗИТЬ(втТаблица.Номенклатура КАК Справочник.Номенклатура).Изготовитель КАК Изготовитель
			                 |ПОМЕСТИТЬ НоменклатураЗаявки
			                 |ИЗ
			                 |	втТаблица КАК втТаблица
			                 |;
			                 |
			                 |////////////////////////////////////////////////////////////////////////////////
			                 |ВЫБРАТЬ
			                 |	НоменклатураКонтрагентов.Номенклатура,
			                 |	НоменклатураКонтрагентов.Владелец КАК Поставщик,
			                 |	НоменклатураКонтрагентов.АртикулПоставщика,
			                 |	НоменклатураКонтрагентов.ИзготовительПоставщика КАК ИзготовительПоставщика,
			                 |	0 КАК Приоритет
			                 |ИЗ
			                 |	НоменклатураЗаявки КАК НоменклатураЗаявки
			                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
			                 |		ПО НоменклатураЗаявки.Номенклатура = НоменклатураКонтрагентов.Номенклатура
			                 |			И НоменклатураЗаявки.Поставщик = НоменклатураКонтрагентов.Владелец
			                 |
			                 |ОБЪЕДИНИТЬ ВСЕ
			                 |
			                 |ВЫБРАТЬ
			                 |	НоменклатураЗаявки.Номенклатура,
			                 |	НоменклатураКонтрагентов.Владелец,
			                 |	НоменклатураКонтрагентов.АртикулПоставщика,
			                 |	НоменклатураКонтрагентов.ИзготовительПоставщика,
			                 |	1
			                 |ИЗ
			                 |	НоменклатураЗаявки КАК НоменклатураЗаявки
			                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
			                 |		ПО (НоменклатураКонтрагентов.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
			                 |			И НоменклатураЗаявки.Артикул = НоменклатураКонтрагентов.Артикул
			                 |			И НоменклатураЗаявки.Изготовитель = НоменклатураКонтрагентов.Изготовитель
			                 |			И НоменклатураЗаявки.Поставщик = НоменклатураКонтрагентов.Владелец
			                 |
			                 |ОБЪЕДИНИТЬ ВСЕ
			                 |
			                 |ВЫБРАТЬ
			                 |	НоменклатураЗаявки.Номенклатура,
			                 |	НоменклатураЗаявки.Поставщик,
			                 |	НоменклатураЗаявки.Артикул,
			                 |	НоменклатураЗаявки.Изготовитель,
			                 |	2
			                 |ИЗ
			                 |	НоменклатураЗаявки КАК НоменклатураЗаявки
			                 |
			                 |УПОРЯДОЧИТЬ ПО
			                 |	Приоритет"   ;
			Запрос.УстановитьПараметр("Таблица", ТаблицаНоменклатуры);
			АртикулИзготовительПоставщика = Запрос.Выполнить().Выгрузить();
			АртикулИзготовительПоставщика.Индекс("Номенклатура,Поставщик");
			//)Семенов И.П.
		КонецЕсли;
		
		Для Каждого ТекСтрока Из МассивСтрок Цикл
			
			Наименование = ЗначенияРеквизита.Получить(ТекСтрока.Номенклатура);
			НовыйИдентификатор = Справочники.ИдентификаторыСтрокЗаявок.СоздатьЭлемент();
			НовыйИдентификатор.Наименование = ЭтотОбъект.Номер + "; " + Наименование + "; " + ТекСтрока.Цена;
			ЗаполнитьЗначенияСвойств(НовыйИдентификатор, ТекСтрока);
			НовыйИдентификатор.Заявка = СсылкаНаДокумент;
			НовыйИдентификатор.СостояниеЗаявки = ЭтотОбъект.СтатусДокумента;
			
			НовыйИдентификатор.Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.ПрайсПоставщика, "Владелец.Владелец");
			НовыйИдентификатор.МаршрутДоставки = ЭтотОбъект.МаршрутДоставки;
			
			Если ПустаяСтрока(ТекСтрока.IDSite) Тогда
				НовыйИдентификатор.IDSite = "00" + Строка(Новый УникальныйИдентификатор);
				ТекСтрока.IDSite = НовыйИдентификатор.IDSite;
			КонецЕсли;
			
			// ЛНА  http://jira.part-kom.ru/browse/XX-1641 --(
			//УстановитьТипПоставки(НовыйИдентификатор, РеквизитыПоставщика, ЭтотОбъект.Контрагент, ТекСтрока.ПрайсПоставщика);			
			НовыйИдентификатор.ТипПоставки = Справочники.ИдентификаторыСтрокЗаявок.ПолучитьТипПоставки(НовыйИдентификатор, ЭтотОбъект, ТекСтрока.ПрайсПоставщика, РеквизитыПоставщика);
			//)--
			
			//#XX-1573 Kalinin V.A. ( 2018-12-28 )
			НовыйИдентификатор.СкладЗаказа = ЗаказыПоставщикамСервер.ПолучитьСкладЗаказаПоПрайсу(НовыйИдентификатор.ПрайсПоставщика,ЭтотОбъект.Склад);
			// */
			УстановитьОтсрочкуДоставкиДоДомашнегоСклада(НовыйИдентификатор, РеквизитыПоставщика);
			
			Если Не ЭтоVMI Тогда 
				УстановитьРеквизитыПоставщика(НовыйИдентификатор, РеквизитыПоставщика);
			Иначе
				Строки = АртикулИзготовительПоставщика.НайтиСтроки(Новый Структура("Номенклатура,Поставщик", ТекСтрока.Номенклатура, НовыйИдентификатор.Поставщик));
				Если Строки.Количество() > 0 Тогда 
					ЗаполнитьЗначенияСвойств(НовыйИдентификатор, Строки.Получить(0), "АртикулПоставщика,ИзготовительПоставщика");
				КонецЕсли;
			КонецЕсли;
			
			НовыйИдентификатор.Записать();
			
			ТекСтрока.СтрокаЗаявки = НовыйИдентификатор.Ссылка;
		КонецЦикла;
		
	Иначе
		СтрокаРеквизиитов = "Количество,ПрайсПоставщика"; //Реквизиты, которые могут меняться в корректировке
		МассивРеквизитовДляСравнения = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрокаРеквизиитов);				
		Для Каждого ТекСтрока Из ЭтотОбъект.Товары Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока.СтрокаЗаявки) Тогда
				
				СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекСтрока.СтрокаЗаявки, СтрокаРеквизиитов + ",Поставщик,МаршрутДоставки");
				
				НеобходимоИзменить = Ложь;
				Для Каждого ТекРеквизит Из МассивРеквизитовДляСравнения Цикл
					Если Не СтруктураРеквизитов[ТекРеквизит] = ТекСтрока[ТекРеквизит] Тогда
						НеобходимоИзменить = Истина;
					КонецЕсли;
				КонецЦикла;
				
				//Поставщик
				Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрока.ПрайсПоставщика, "Владелец.Владелец");
				Если Не ЗначениеЗаполнено(Поставщик) Тогда 
					Поставщик = Справочники.Контрагенты.ПустаяСсылка();
				КонецЕсли;
				
				Если Не СтруктураРеквизитов.Поставщик = Поставщик Тогда 
					НеобходимоИзменить = Истина;				
				КонецЕсли;
				
				//Маршрут доставки
				Если Не СтруктураРеквизитов.МаршрутДоставки = ЭтотОбъект.МаршрутДоставки Тогда 
					НеобходимоИзменить = Истина;				
				КонецЕсли;
				
				Если НеобходимоИзменить Тогда
					ОбъектЗаявки = ТекСтрока.СтрокаЗаявки.ПолучитьОбъект();
					ЗаполнитьЗначенияСвойств(ОбъектЗаявки, ТекСтрока, СтрокаРеквизиитов);
					ОбъектЗаявки.Поставщик = Поставщик;
					ОбъектЗаявки.МаршрутДоставки = ЭтотОбъект.МаршрутДоставки;
					
					//Скорее всего корректировки не меняют артикул и изготовителя поставщика//
					//УстановитьРеквизитыПоставщика(ОбъектЗаявки, РеквизитыПоставщика);
					
					ОбъектЗаявки.Записать();
				КонецЕсли;
			Иначе
				ВызватьИсключение "В строке № " + ТекСтрока.НомерСтроки + " не заполнена строка заявки";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры


Процедура ПроставитьРеквизитыРезерваДляЗаявки(ЭтотОбъект, РежимЗаписи) 
	Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ЗаявкаПокупателя") И РежимЗаписи = РежимЗаписиДокумента.Проведение И ЭтотОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден Тогда 
		ТаблицаСтрокиЗаявкиРезервируются =  ЭтотОбъект.ДополнительныеСвойства.ТаблицаСтрокиЗаявкиРезервируются;
		//Если ТаблицаСтрокиЗаявкиРезервируются.Количество() = 0 Тогда 
		//	Возврат; //Кроссовая заявка
		//КонецЕсли;
		СуммаРезерва = 0;
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл 
			СтрокаР = ТаблицаСтрокиЗаявкиРезервируются.Найти(СтрокаТЧ.СтрокаЗаявки, "СтрокаЗаявки");
			Если СтрокаР = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			СуммаРезерва = СуммаРезерва + СтрокаТЧ.Сумма;
			СтрокаТЧ.ДатаУстановкиРезерва = ЭтотОбъект.Дата;
		КонецЦикла;
		ЭтотОбъект.СуммаРезерва = СуммаРезерва;
	КонецЕсли;
КонецПроцедуры
Процедура УстановитьРеквизитыПоставщика(ИдентификаторСтрокиЗаявки, РеквизитыПоставщика)
	
	ЗначениеРеквизитов = РеквизитыПоставщика[ИдентификаторСтрокиЗаявки.IDSite];
	Если ЗначениеРеквизитов <> Неопределено Тогда
		ИдентификаторСтрокиЗаявки.ИзготовительПоставщика = ЗначениеРеквизитов.ИзготовительПоставщика;
		ИдентификаторСтрокиЗаявки.АртикулПоставщика = ЗначениеРеквизитов.АртикулПоставщика;
	КонецЕсли;
	
КонецПроцедуры

//ЛНА http://jira.part-kom.ru/browse/XX-1641 --(

//Процедура УстановитьТипПоставки(ИдентификаторСтрокиЗаявки, РеквизитыПоставщика, Контрагент, Прайс) 
//	
//	ЗначениеРеквизитов = РеквизитыПоставщика[ИдентификаторСтрокиЗаявки.IDSite];
//	Если ЗначениеРеквизитов <> Неопределено Тогда
//		ТипПоставки = ЗначениеРеквизитов.ТипПоставки;
//	ИначеЕсли ЗначениеЗаполнено(Контрагент) И ЗначениеЗаполнено(Контрагент.Родитель) И Контрагент.Родитель.Код = "00005396" Тогда
//		//Папка "Пополнение мин.остатков"
//		ТипПоставки = Перечисления.ТипПоставки.ПополнениеСклада;
//	ИначеЕсли Прайс.Пустая() Тогда
//		ТипПоставки = Перечисления.ТипПоставки.Сток;
//	ИначеЕсли Прайс.Склад.Пустая() Тогда
//		ТипПоставки = Перечисления.ТипПоставки.Кросс;
//	ИначеЕсли Прайс.Склад.СкладVMI Тогда
//		ТипПоставки = Перечисления.ТипПоставки.VMI;
//	Иначе
//		ТипПоставки = Перечисления.ТипПоставки.Сток;
//	КонецЕсли;

//	ИдентификаторСтрокиЗаявки.ТипПоставки = ТипПоставки;

//КонецПроцедуры
//)--

Процедура УстановитьОтсрочкуДоставкиДоДомашнегоСклада(ИдентификаторСтрокиЗаявки, РеквизитыПоставщика)
	
	ЗначениеРеквизитов = РеквизитыПоставщика[ИдентификаторСтрокиЗаявки.IDSite];
	Если ЗначениеРеквизитов <> Неопределено Тогда
		ИдентификаторСтрокиЗаявки.ДнейДоставкиДоДомашнегоСклада = ЗначениеРеквизитов.ДнейДоставкиДоДомашнегоСклада;
	КонецЕсли;	
	
КонецПроцедуры


Функция ПолучитьМетаданные()
	Возврат Метаданные.Документы.КорректировкаЗаявкиПокупателя;	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(вхПараметр = Неопределено) Экспорт
	
	Результат = Новый Структура;
	Если (вхПараметр = Метаданные.ПланыОбмена.ОбменПартКом83_77) тогда
		Результат = ОбменДаннымиКлиентСервер.РеквизитыКонтроляПоДокументу(ПолучитьМетаданные(), ИсключаемыеРеквизитыКонтроляРегистрации());
	Иначе
		Результат.Вставить("Шапка", "Дата,Проведен");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИсключаемыеРеквизитыКонтроляРегистрации() Экспорт
	
	ИсключаемыеРеквизиты = ОбменДаннымиКлиентСервер.ИнициализироватьТаблицуИсключаемыхРеквизитовКонтроля();
	ОбменДаннымиКлиентСервер.ДобавитьВИсключаемыеРевизиты(ИсключаемыеРеквизиты, "Ссылка");
	
	Возврат ИсключаемыеРеквизиты;
	
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхПараметр = Неопределено) Экспорт
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхПараметр);
КонецФункции


