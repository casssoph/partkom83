Перем мМенеджерОбъекта;
Перем мДействияСоСвязаннымиДокументами;
Перем ОбъектМодифицирован Экспорт;
Перем мПометкаУдаления;

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если ЭтоНовый() Тогда
	//	СсылкаНаДокумент = Документы.ВводНачальныхОстатковПоРегиструТоварыНаСкладах.ПолучитьСсылку();
	//	ЭтотОбъект.УстановитьСсылкуНового(СсылкаНаДокумент);
	//Иначе
	//	СсылкаНаДокумент = Ссылка;
	//КонецЕсли;
	
	//Для Каждого Товар Из Товары Цикл
	//	Товар.Качество = Справочники.Качество.Новый;
	//	Товар.СтрокаПрихода = РаботаСоСтатусамиДокументов.ОбновитьЗаписьСтрокПрихода(СсылкаНаДокумент, Товар.СтрокаПрихода);
	//	
	//КонецЦикла;
		
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	лПараметры = Новый Структура;
	лПараметры.Вставить("ДанныеОбъекта", ЭтотОбъект.ДополнительныеСвойства);
	мМенеджерОбъекта.ВыполнитьПроведение(Ссылка, Отказ, лПараметры);
	
	//Если НЕ Отказ Тогда
	//	КорректироватьПодчиненные(2);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	СвязанныеДокументы.Очистить();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если НЕ Отказ Тогда
		КорректироватьПодчиненные(3);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//Если НЕ Отказ Тогда
	//	Если ЭтоНовый() Тогда
	//		КорректироватьПодчиненные(1);
	//		
	//	Иначе
	//		Если ОбъектМодифицирован Тогда
	//			КорректироватьПодчиненные(5);
	//		КонецЕсли;
	//		
	//		Если ПометкаУдаления <> мПометкаУдаления Тогда
	//			КорректироватьПодчиненные(4);
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если Не Отказ Тогда
		КорректироватьПодчиненные(4);
	КонецЕсли;
	
КонецПроцедуры

Процедура КорректироватьПодчиненные(КлючДействия = 0)
	КлючДействия = 0;
	Если КлючДействия = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СвязанныеДокументы.СсылкаНаДокумент
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоРегиструТоварыНаСкладах.СвязанныеДокументы КАК СвязанныеДокументы
	|ГДЕ
	|	СвязанныеДокументы.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если мДействияСоСвязаннымиДокументами.Получить(КлючДействия-1) = "СозданиеНового" Тогда
		ДокПартии = СоздатьДокументПартииТоваров(ЭтотОбъект);
		Если ДокПартии <> Неопределено Тогда
			НовСтрока = СвязанныеДокументы.Добавить();
			НовСтрока.СсылкаНаДокумент = ДокПартии;
		КонецЕсли;
		Если ПризнакVMI Тогда
			ДокПартии = СоздатьДокументПартииТоваровVMI(ЭтотОбъект);
			Если ДокПартии <> Неопределено Тогда
				НовСтрока = СвязанныеДокументы.Добавить();
				НовСтрока.СсылкаНаДокумент = ДокПартии;
			КонецЕсли;
		Иначе
			ДокПартии = СоздатьДокументПартииТоваровУпр(ЭтотОбъект);
			Если ДокПартии <> Неопределено Тогда
				НовСтрока = СвязанныеДокументы.Добавить();
				НовСтрока.СсылкаНаДокумент = ДокПартии;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если мДействияСоСвязаннымиДокументами.Получить(КлючДействия-1) = "Проведение" Тогда
		Для Каждого СвязанныйДокумент Из Запрос.Выполнить().Выгрузить() Цикл
			ДокументОбъект = СвязанныйДокумент.СсылкаНаДокумент.ПолучитьОбъект();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если мДействияСоСвязаннымиДокументами.Получить(КлючДействия-1) = "ОтменаПроведения" Тогда
		Для Каждого СвязанныйДокумент Из Запрос.Выполнить().Выгрузить() Цикл
			ДокументОбъект = СвязанныйДокумент.СсылкаНаДокумент.ПолучитьОбъект();
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если мДействияСоСвязаннымиДокументами.Получить(КлючДействия-1) = "Удаление" Тогда
		Для Каждого СвязанныйДокумент Из Запрос.Выполнить().Выгрузить() Цикл
			ДокументОбъект = СвязанныйДокумент.СсылкаНаДокумент.ПолучитьОбъект();
			ЭтотОбъект.УстановитьПометкуУдаления(ЭтотОбъект.ПометкаУдаления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если мДействияСоСвязаннымиДокументами.Получить(КлючДействия-1) = "Перезаполнить" Тогда
		Если ОбъектМодифицирован Тогда
			Для Каждого СвязанныйДокумент Из Запрос.Выполнить().Выгрузить() Цикл
				Если ТипЗнч(СвязанныйДокумент.СсылкаНаДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатковПоРегиструПартииТоваров") Тогда
					СоздатьДокументПартииТоваров(ЭтотОбъект, СвязанныйДокумент.СсылкаНаДокумент);
				КонецЕсли;
				Если ТипЗнч(СвязанныйДокумент.СсылкаНаДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатковПоРегиструПартииТоваровVMI") Тогда
					СоздатьДокументПартииТоваровVMI(ЭтотОбъект, СвязанныйДокумент.СсылкаНаДокумент);
				КонецЕсли;
				Если ТипЗнч(СвязанныйДокумент.СсылкаНаДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатковПоРегиструПартииТоваровУпр") Тогда
					СоздатьДокументПартииТоваровУпр(ЭтотОбъект, СвязанныйДокумент.СсылкаНаДокумент);
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьДокументПартииТоваров(вхОбъект, ДокументПартии = Неопределено)
	Если ДокументПартии = Неопределено Тогда
		ВводОстатковПартииТоваров = Документы.ВводНачальныхОстатковПоРегиструПартииТоваров.СоздатьДокумент();
	Иначе
		ВводОстатковПартииТоваров = ДокументПартии.ПолучитьОбъект();
	КонецЕсли;
	ВводОстатковпартииТоваров.Дата = вхОбъект.Дата;
	ВводОстатковПартииТоваров.Организация = вхОбъект.Организация;
	ВводОстатковПартииТоваров.Склад = вхОбъект.Склад;
	ВводОстатковПартииТоваров.Комментарий = вхОбъект.Комментарий;
	ВводОстатковПартииТоваров.ДокументОснование = вхОбъект.Ссылка;
	ВводОстатковПартииТоваров.ВалютаДокумента = вхОбъект.ВалютаДокумента;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения,
	|	Док.СтрокаПрихода,
	|	Док.Количество,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаРубль
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРубли,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаДоллар
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоллары,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаЕвро
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЕвро
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоРегиструТоварыНаСкладах.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("ВалютаРубль", Константы.ВалютаРубль.Получить());
	Запрос.УстановитьПараметр("ВалютаДоллар", Константы.ВалютаДоллар.Получить());
	Запрос.УстановитьПараметр("ВалютаЕвро", Константы.ВалютаЕвро.Получить());
	Запрос.УстановитьПараметр("Ссылка", вхОбъект.Ссылка);
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ВводОстатковПартииТоваров.Товары);
	
	Если ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаРубль.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаРубли");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаДоллар.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаДоллары");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаЕвро.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаЕвро");
	КонецЕсли;
	
	Попытка
		Если вхОбъект.Проведен Тогда
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		Возврат ВводОстатковПартииТоваров.Ссылка;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция СоздатьДокументПартииТоваровVMI(вхОбъект, ДокументПартии = Неопределено)
	Если ДокументПартии = Неопределено Тогда
		ВводОстатковПартииТоваров = Документы.ВводНачальныхОстатковПоРегиструПартииТоваровVMI.СоздатьДокумент();
	Иначе
		ВводОстатковПартииТоваров = ДокументПартии.ПолучитьОбъект();
	КонецЕсли;
	ВводОстатковпартииТоваров.Дата = вхОбъект.Дата;
	ВводОстатковПартииТоваров.Организация = вхОбъект.Организация;
	ВводОстатковПартииТоваров.Склад = вхОбъект.Склад;
	ВводОстатковПартииТоваров.Комментарий = вхОбъект.Комментарий;
	ВводОстатковПартииТоваров.ДокументОснование = вхОбъект.Ссылка;
	ВводОстатковПартииТоваров.ВалютаДокумента = вхОбъект.ВалютаДокумента;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Док.ТорговаяТочка,
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения,
	|	Док.СтрокаПрихода,
	|	Док.Количество,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаРубль
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРубли,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаДоллар
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоллары,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаЕвро
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЕвро
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоРегиструТоварыНаСкладах.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("ВалютаРубль", Константы.ВалютаРубль.Получить());
	Запрос.УстановитьПараметр("ВалютаДоллар", Константы.ВалютаДоллар.Получить());
	Запрос.УстановитьПараметр("ВалютаЕвро", Константы.ВалютаЕвро.Получить());
	Запрос.УстановитьПараметр("Ссылка", вхОбъект.Ссылка);
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ВводОстатковПартииТоваров.Товары);
	
	Если ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаРубль.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаРубли");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаДоллар.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаДоллары");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаЕвро.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаЕвро");
	КонецЕсли;
	
	Попытка
		Если вхОбъект.Проведен Тогда
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		Возврат ВводОстатковПартииТоваров.Ссылка;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция СоздатьДокументПартииТоваровУпр(вхОбъект, ДокументПартии = Неопределено)
	Если ДокументПартии = Неопределено Тогда
		ВводОстатковПартииТоваров = Документы.ВводНачальныхОстатковПоРегиструПартииТоваровУпр.СоздатьДокумент();
	Иначе
		ВводОстатковПартииТоваров = ДокументПартии.ПолучитьОбъект();
	КонецЕсли;
	ВводОстатковпартииТоваров.Дата = вхОбъект.Дата;
	ВводОстатковПартииТоваров.Организация = вхОбъект.Организация;
	ВводОстатковПартииТоваров.Склад = вхОбъект.Склад;
	ВводОстатковПартииТоваров.Комментарий = вхОбъект.Комментарий;
	ВводОстатковПартииТоваров.ДокументОснование = вхОбъект.Ссылка;
	ВводОстатковПартииТоваров.ВалютаДокумента = вхОбъект.ВалютаДокумента;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.ЕдиницаИзмерения,
	|	Док.СтрокаПрихода,
	|	Док.Количество,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаРубль
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРубли,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаДоллар
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоллары,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВалютаДокумента = &ВалютаЕвро
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЕвро
	|ИЗ
	|	Документ.ВводНачальныхОстатковПоРегиструТоварыНаСкладах.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("ВалютаРубль", Константы.ВалютаРубль.Получить());
	Запрос.УстановитьПараметр("ВалютаДоллар", Константы.ВалютаДоллар.Получить());
	Запрос.УстановитьПараметр("ВалютаЕвро", Константы.ВалютаЕвро.Получить());
	Запрос.УстановитьПараметр("Ссылка", вхОбъект.Ссылка);
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ВводОстатковПартииТоваров.Товары);
	
	Если ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаРубль.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаРубли");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаДоллар.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаДоллары");
	ИначеЕсли ВводОстатковПартииТоваров.ВалютаДокумента = Константы.ВалютаЕвро.Получить() Тогда
		ВводОстатковПартииТоваров.СуммаДокумента = ВводОстатковПартииТоваров.Товары.Итог("СуммаЕвро");
	КонецЕсли;
	
	Попытка
		Если вхОбъект.Проведен Тогда
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ВводОстатковПартииТоваров.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		Возврат ВводОстатковПартииТоваров.Ссылка;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

мМенеджерОбъекта = Документы[Метаданные().Имя];

мДействияСоСвязаннымиДокументами = Новый СписокЗначений;
мДействияСоСвязаннымиДокументами.Добавить(1, "СозданиеНового");
мДействияСоСвязаннымиДокументами.Добавить(2, "Проведение");
мДействияСоСвязаннымиДокументами.Добавить(3, "ОтменаПроведения");
мДействияСоСвязаннымиДокументами.Добавить(4, "Удаление");
мДействияСоСвязаннымиДокументами.Добавить(5, "Перезаполнить");

ОбъектМодифицирован = Ложь;
мПометкаУдаления = ПометкаУдаления;