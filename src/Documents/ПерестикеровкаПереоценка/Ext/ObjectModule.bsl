Перем мВалютаРегламентированногоУчета Экспорт;
Перем мМенеджерОбъекта;

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	лПараметры = Новый Структура;
	лПараметры.Вставить("ДанныеОбъекта", ЭтотОбъект.ДополнительныеСвойства);
	мМенеджерОбъекта.ВыполнитьПроведение(Ссылка, Отказ, лПараметры);
	
	// ЛНА, Замер  APDEX ++(
	Попытка		
		APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени("ПерестикеровкаПереоценка_Проведение", "Кол-во строк: "+Товары.Количество(), , Ссылка);
	Исключение
	КонецПопытки;
	//)--


КонецПроцедуры// ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	лПараметры = Новый Структура;
	лПараметры.Вставить("ДанныеОбъекта", ЭтотОбъект.ДополнительныеСвойства);
	мМенеджерОбъекта.ВыполнитьОтменуПроведения(Ссылка, Отказ, лПараметры);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// ЛНА, Замер  APDEX ++(
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ПерестикеровкаПереоценка_Проведение");
		
	КонецЕсли;
	
	ПроведениеДокументовКлиентСервер.ОчиститьДвиженияПриСдвигеДаты(ЭтотОбъект, РежимЗаписи, "ТоварыНаСкладах");
	
	Для Каждого Товар Из Товары Цикл
		Если НЕ ЗначениеЗаполнено(Товар.ЕдиницаИзмерения) тогда
			Товар.ЕдиницаИзмерения = Товар.Номенклатура.ЕдиницаХраненияОстатков;
			Товар.Коэффициент = Товар.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Товар.ЕдиницаИзмеренияНовая) тогда
			Товар.ЕдиницаИзмеренияНовая = Товар.НоменклатураНовая.ЕдиницаХраненияОстатков;
			Товар.КоэффициентНовый = Товар.ЕдиницаИзмеренияНовая.Коэффициент;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ЭтоНовый() Тогда 
		СсылкаНаДокумент = ЭтотОбъект.ПолучитьСсылкуНового();
		
		Если СсылкаНаДокумент.Пустая() Тогда 
			СсылкаНаДокумент = Документы.ПерестикеровкаПереоценка.ПолучитьСсылку();
			ЭтотОбъект.УстановитьСсылкуНового(СсылкаНаДокумент);
		КонецЕсли;
	Иначе
		СсылкаНаДокумент = ЭтотОбъект.Ссылка;
	КонецЕсли;
	
	
	//НайденныеСтроки = Товары.НайтиСтроки(Новый Структура("СтрокаПриходаОприходованная", Справочники.ИдентификаторыСтрокПриходов.ПустаяСсылка()));
	
	Для Каждого СтрокаТЧ Из Товары Цикл 
		
		Если  ЗначениеЗаполнено(СтрокаТЧ.СтрокаПриходаОприходованная)
			И ОбщегоНазначения.СсылкаСуществует(СтрокаТЧ.СтрокаПриходаОприходованная) Тогда
			Продолжить;
		КонецЕсли;
		
		лСсылкаСтрокаПриходов = Справочники.ИдентификаторыСтрокПриходов.ПолучитьСсылку();
		лСтрокаПрихода = Справочники.ИдентификаторыСтрокПриходов.СоздатьЭлемент();
		лСтрокаПрихода.УстановитьСсылкуНового(лСсылкаСтрокаПриходов);
		лСтрокаПрихода.Приход = СсылкаНаДокумент;
		лСтрокаПрихода.Наименование = лСсылкаСтрокаПриходов.УникальныйИдентификатор();
		Если ЗначениеЗаполнено(СтрокаТЧ.СтрокаПрихода) Тогда 
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТЧ.СтрокаПрихода, "НомерГТД,СтранаПроисхождения,ТорговаяТочка,ДоговорКонтрагента");
			ЗаполнитьЗначенияСвойств(лСтрокаПрихода, Реквизиты);
		КонецЕсли;
		лСтрокаПрихода.Дата = ЭтотОбъект.Дата;
		лСтрокаПрихода.Записать();
		
		СтрокаТЧ.СтрокаПриходаОприходованная = лСтрокаПрихода.Ссылка;
	КонецЦикла;
	
	//Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
	//    Сообщить("Изменить документ вручную пока невозможно.");
	//	Отказ = Истина;
	//КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийУценки.Перестикеровка Тогда
		Запрос = Новый Запрос(
		
		);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	СозданВ77 = Ложь;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктРассмотренияВозврата") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктРассмотренияВозврата.Организация КАК Организация,
		|	АктРассмотренияВозврата.Ссылка КАК АктРассмотренияВозврата,
		|	АктРассмотренияВозврата.ДокументПродажи.Склад,
		|	АктРассмотренияВозврата.СуммаВключаетНДС,
		|	АктРассмотренияВозврата.УчитыватьНДС
		|ИЗ
		|	Документ.АктРассмотренияВозврата КАК АктРассмотренияВозврата
		|	ГДЕ Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Результат = Запрос.Выполнить();
		Шапка = Результат.Выбрать();
		Шапка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Шапка);
		
		ВалютаДокумента 	= ПараметрыСеанса.ВалютаРубль;
		КурсДокумента		= 1;
		КратностьДокумента	= 1;
		
		ВидОперации = Перечисления.ВидыОперацийУценки.Уценка;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктРассмотренияВозвратаТовары.Номенклатура,
		|	АктРассмотренияВозвратаТовары.Качество,
		|	АктРассмотренияВозвратаТовары.ЕдиницаИзмерения,
		|	АктРассмотренияВозвратаТовары.Коэффициент,
		|	АктРассмотренияВозвратаТовары.Количество,
		|	АктРассмотренияВозвратаТовары.Цена КАК ЦенаСтарая,
		|	АктРассмотренияВозвратаТовары.СтрокаПрихода
		|ИЗ
		|	Документ.АктРассмотренияВозврата.Товары КАК АктРассмотренияВозвратаТовары
		|ГДЕ
		|	АктРассмотренияВозвратаТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		РезультатЗапроса = Запрос.Выполнить();
		Товары.Загрузить(РезультатЗапроса.Выгрузить())		
		
	КонецЕсли;
	
	
	
КонецПроцедуры


мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
мМенеджерОбъекта = Документы[Метаданные().Имя];