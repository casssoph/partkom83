// Процедура проверяет заполнение обязательных реквизитов объекта.
//
Процедура ПроверитьВозможностьСтарта(Отказ, Заголовок)

	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Контрагенты");
	СтруктураПолей.Вставить("КПП");
	СтруктураПолей.Вставить("Настройка");
	
	//Проверить
	//
	//ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,
	//		СтруктураПолей,
	//		Отказ,
	//		Заголовок);

КонецПроцедуры // ПроверитьВозможностьСтарта()


Процедура Действие1ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СформироватьЗадачиТочкиМаршрута(ТочкаМаршрутаБизнесПроцесса,
									ФормируемыеЗадачи,
									СтандартнаяОбработка);
КонецПроцедуры

Процедура Условие1ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
КонецПроцедуры

// Процедура вызывается перед стартом бизнес-процесса для выполнения проверок и
//заполнения реквизитов.
//
// Параметры:
//  Отказ - булево, флаг отказа.
//
Процедура ПередСтартомБизнесПроцесса(Отказ)

	ПроверитьВозможностьСтарта(Отказ, "Старт бизнес-процесса: " + Ссылка);

	Если Не Отказ Тогда
		ОбработатьСтартБизнесПроцесса();
	КонецЕсли;

КонецПроцедуры // ПередСтартомБизнесПроцесса()

// Процедура вызывается перед стартом бизнес-процесса для заполнения реквизитов.
//
Процедура ОбработатьСтартБизнесПроцесса()

	Если Инициатор.Пустая() Тогда
		Инициатор = ОбщегоНазначения.ПолучитьЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;

	ДатаСтарта = ТекущаяДата();

КонецПроцедуры // ОбработатьСтартБизнесПроцесса()

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
		ПередСтартомБизнесПроцесса(Отказ)

КонецПроцедуры

// Процедура формирует массив задач для точки маршрута.
//
//Параметры:
//  ТочкаМаршрутаБизнесПроцесса - ТочкаМаршрутаБизнесПроцесса.
//  ФормируемыеЗадачи           - пустой массив для задач.
//
Процедура СформироватьЗадачиТочкиМаршрута(ТочкаМаршрутаБизнесПроцесса,
											ФормируемыеЗадачи, 
											СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	//Исполнитель = ПолучитьПользователяОтветственногоЗаСклад(Склад);
	//Если Исполнитель.Пустая() Тогда
		Исполнитель = Инициатор;
	//КонецЕсли;
	
	ВыборкаПараметры = РаботаСБизнесПроцессами.ПолучитьПараметрыТочкиМаршрута(
						Настройка, 
						ТочкаМаршрутаБизнесПроцесса);

	Если Не ВыборкаПараметры.Следующий() Тогда
		Возврат;
	КонецЕсли;

	Если Не ВыборкаПараметры.Выполнять Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗадач = РаботаСБизнесПроцессами.СформироватьПараметрыШапкиЗадач(ВыборкаПараметры);
	ПараметрыЗадач.Вставить("ТочкаМаршрута", ТочкаМаршрутаБизнесПроцесса);
	ПараметрыЗадач.Вставить("Исполнитель",   Исполнитель);
	ПараметрыЗадач.Вставить("БизнесПроцесс", Ссылка);

	ФормируемыеЗадачи.Добавить(РаботаСБизнесПроцессами.УстановитьПараметрыЗадачи(ПараметрыЗадач));

КонецПроцедуры // СформироватьЗадачиТочкиМаршрута()

Процедура Действие2ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
		СформироватьЗадачиТочкиМаршрута(ТочкаМаршрутаБизнесПроцесса,
									ФормируемыеЗадачи,
									СтандартнаяОбработка);

КонецПроцедуры
