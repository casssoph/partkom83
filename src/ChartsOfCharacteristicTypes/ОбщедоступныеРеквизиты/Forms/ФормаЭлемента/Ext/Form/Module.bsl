
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	лКлючАлгоритма = "ПланыВидовХарактеристик_ОбщедоступныеРеквизиты_ФормаЭлемента_ПриСозданииНаСервере";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////		
	
	Если ЗначениеЗаполнено(Объект.Ссылка) тогда 
		ЗаполнитьСпискиРеквизитов()
	иначе 
		Объект.ТипЗначения = новый ОписаниеТипов;
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиРеквизитов()
	лКлючАлгоритма = "ПланыВидовХарактеристик_ОбщедоступныеРеквизиты_ФормаЭлемента_ЗаполнитьСпискиРеквизитов";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////		
	
	Если Объект.ТипЗначения.СодержитТип(Тип("ДокументСсылка.ПлатежноеПоручениеВходящее")) или 
		Объект.ТипЗначения.СодержитТип(Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее")) тогда 
		Элементы.Перепроводить.Доступность = Истина;
	КонецЕсли;	
		
		
	//ИмяМетаданных = СтрЗаменить(Объект.ИмяПредопределенныхДанных,"_",".");	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(Объект.ИмяМетаданных);
	Для Каждого Реквизит  из ОбъектМетаданных.Реквизиты цикл 
		Элементы.РеквизитыИмяРеквизита.СписокВыбора.Добавить(Реквизит.Имя,Реквизит.Синоним);	
		Элементы.ОтборРеквизит.СписокВыбора.Добавить(Реквизит.Имя,Реквизит.Синоним);
	КонецЦикла;
	
	Для Каждого  ТабличнаяЧасть  из ОбъектМетаданных.ТабличныеЧасти цикл 
		Элементы.РеквизитыИмяРеквизита.СписокВыбора.Добавить(ТабличнаяЧасть.Имя,ТабличнаяЧасть.Синоним);	
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтборЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// не смог победить поэтому пока не реализовал
	
	//ТекущиеДанные =   Элементы.Отбор.ТекущиеДанные;
	//Если не  ТекущиеДанные = Неопределено тогда 
	
	//Элемент.ДоступныеТипы =  ТипТекущегоРеквизита(ИмяМетаданных,ТекущиеДанные.Реквизит);
	//Элемент.ВыбиратьТип  = ложь;
	
	
	
	//КонецЕсли;
	
	//	Элемент.ВыбиратьТип  = ложь;
	//	
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаСервере
Функция ТипТекущегоРеквизита(ИмяМетаданных,ИмяРеквизита)
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИмяМетаданных);
	
	Возврат  ОбъектМетаданных.Реквизиты[ИмяРеквизита].Тип	;
	
	
КонецФункции	

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	лКлючАлгоритма = "ПланыВидовХарактеристик_ОбщедоступныеРеквизиты_ФормаЭлемента_ТипЗначенияПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////		
	
	ТипЗначенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИмяМетаданных() 
	лКлючАлгоритма = "ПланыВидовХарактеристик_ОбщедоступныеРеквизиты_ФормаЭлемента_ЗаполнитьИмяМетаданных";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////		
	
	Типы  = Объект.ТипЗначения.Типы();
	Если Типы.Количество() тогда 
		МетаданныеОбъект = Метаданные.НайтиПоТипу(Типы[0])	;
		Объект.ИмяМетаданных= МетаданныеОбъект.ПолноеИмя();
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ТипЗначенияПриИзмененииНаСервере()
	лКлючАлгоритма = "ПланыВидовХарактеристик_ОбщедоступныеРеквизиты_ФормаЭлемента_ТипЗначенияПриИзмененииНаСервере";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////		
	
	
	ЗаполнитьИмяМетаданных() ;	
	ЗаполнитьСпискиРеквизитов() ;
	Если не ЗначениеЗаполнено(Объект.Наименование) тогда 
		Объект.Наименование = Строка(Объект.ТипЗначения);
	КонецЕсли;	
КонецПроцедуры
