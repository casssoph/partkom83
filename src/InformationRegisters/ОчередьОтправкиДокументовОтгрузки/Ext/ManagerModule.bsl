//ОчередьОтправкиДокументовОтгрузки
Процедура ДобавитьВОчередьОтправкиДокументовОтгрузки(СсылкаНаДокумент) Экспорт
	
	ТестовыйКонтрагент = Константы.ТестовыйКонтрагентДляОтправкиОтгрузочныхДокументов.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.СтатусДокумента КАК СтатусДокумента,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Контрагент.ОсновнаяТорговаяТочка.АвтоотправкаОтгрузочныхДокументов КАК Автоотправка,
	|	РеализацияТоваровУслуг.Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	РеализацияТоваровУслуг.Контрагент.ГоловнойКонтрагент.ОсновнаяТорговаяТочка.АвтоотправкаОтгрузочныхДокументов КАК ГоловнойАвтоотправка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка
	|	И РеализацияТоваровУслуг.СтатусДокумента В(&СтатусыДокумента)";
	
	СтатусыДокумента = Новый Массив;	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", "ВозвратТоваровОтПокупателя");
		
		СтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ВозвратТоваровОтПокупателяПринят);
		СтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ВозвратТоваровОтПокупателяРазмещен);
		
	Иначе //РТУ
		СтатусыДокумента.Добавить(Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен);
	КонецЕсли;

	Запрос.УстановитьПараметр("СтатусыДокумента", 	СтатусыДокумента);
	Запрос.УстановитьПараметр("Ссылка", 			СсылкаНаДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();	
	
	Если ЗначениеЗаполнено(ТестовыйКонтрагент) Тогда
		
		//Ветка для тестовой проверки
		Если (Реквизиты.Контрагент = ТестовыйКонтрагент ИЛИ Реквизиты.ГоловнойКонтрагент = ТестовыйКонтрагент) Тогда
			Если Реквизиты.Автоотправка Тогда
				РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.ДобавитьКОтправке(Реквизиты.Контрагент, СсылкаНаДокумент);
			КонецЕсли;
			//Отдельно для головного
			Если Реквизиты.Контрагент <> Реквизиты.ГоловнойКонтрагент И Реквизиты.ГоловнойАвтоотправка Тогда
				РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.ДобавитьКОтправке(Реквизиты.ГоловнойКонтрагент, СсылкаНаДокумент);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		//Основная рабочая ветка
		Если Реквизиты.Автоотправка Тогда
			РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.ДобавитьКОтправке(Реквизиты.Контрагент, СсылкаНаДокумент);
		КонецЕсли;
		//Отдельно для головного
		Если Реквизиты.Контрагент <> Реквизиты.ГоловнойКонтрагент И Реквизиты.ГоловнойАвтоотправка Тогда
			РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.ДобавитьКОтправке(Реквизиты.ГоловнойКонтрагент, СсылкаНаДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура Добавить(Контрагент, Документ, Период = Неопределено, ДатаОтправки = Неопределено, ДатаОтменыОтправки = Неопределено, Комментарий = "", Ошибка = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) ИЛИ НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	МЗ 						= РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.СоздатьМенеджерЗаписи();
	МЗ.Документ 			= Документ;
	МЗ.Контрагент 			= Контрагент;
	МЗ.Период 				= ?(ЗначениеЗаполнено(Период), Период, ТекущаяДата());
	МЗ.ДатаОтправки 		= ДатаОтправки;
	МЗ.ДатаОтменыОтправки 	= ДатаОтменыОтправки;
	МЗ.Комментарий 			= Комментарий;
	МЗ.Ошибка 				= Ошибка;
	МЗ.Записать();
	
КонецПроцедуры

Процедура ДобавитьКОтправке(Контрагент, Документ, Период = Неопределено, Комментарий = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) ИЛИ НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеДокумента = СостояниеДокумента(Документ, Контрагент);
	Если СостояниеДокумента.ДатаОтправки = Дата(1,1,1)
		И СостояниеДокумента.ДатаОтменыОтправки = Дата(1,1,1) Тогда 
		//Документ уже стоит в очереди на отправку
		Возврат;
	КонецЕсли;
	
	Добавить(Контрагент, Документ, Период, Комментарий );
	
КонецПроцедуры


Процедура Удалить(Документ, Контрагент = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	НЗ = РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(Документ);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		НЗ.Отбор.Контрагент.Установить(Контрагент);
	КонецЕсли;
	НЗ.Записать();
	
КонецПроцедуры

Процедура УстановитьДатуОтправки(Документ, Контрагент = Неопределено, ДатаОтправки = Неопределено, Комментарий = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	НЗ = РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(Документ);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		НЗ.Отбор.Контрагент.Установить(Контрагент);
	КонецЕсли;
	
	НЗ.Прочитать();
	Для каждого ЗаписьНабора Из НЗ Цикл
		Если Не ЗначениеЗаполнено(ЗаписьНабора.ДатаОтправки) И Не ЗначениеЗаполнено(ЗаписьНабора.ДатаОтменыОтправки) Тогда
			ЗаписьНабора.ДатаОтправки 	= ?(ЗначениеЗаполнено(ДатаОтправки), ДатаОтправки, ТекущаяДата());
			ЗаписьНабора.Комментарий 	= Комментарий;
			ЗаписьНабора.Ошибка 		= Ложь;
		КонецЕсли;
	КонецЦикла;
	Если НЗ.Количество() > 0 Тогда
		НЗ.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДатуОтменыОтправки(Документ, Контрагент = Неопределено, ДатаОтменыОтправки = Неопределено, Комментарий = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	НЗ = РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(Документ);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		НЗ.Отбор.Контрагент.Установить(Контрагент);
	КонецЕсли;
	НЗ.Прочитать();
	Для каждого ЗаписьНабора Из НЗ Цикл
		Если Не ЗначениеЗаполнено(ЗаписьНабора.ДатаОтправки) И Не ЗначениеЗаполнено(ЗаписьНабора.ДатаОтменыОтправки) Тогда
			ЗаписьНабора.ДатаОтменыОтправки = ?(ЗначениеЗаполнено(ДатаОтменыОтправки), ДатаОтменыОтправки, ТекущаяДата());
			ЗаписьНабора.Комментарий 		= Комментарий;
			ЗаписьНабора.Ошибка 			= Ложь;
		КонецЕсли;
	КонецЦикла;
	Если НЗ.Количество() > 0 Тогда
		НЗ.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОшибкуОтправки(Документ, Контрагент =Неопределено, Комментарий = "") Экспорт
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	НЗ = РегистрыСведений.ОчередьОтправкиДокументовОтгрузки.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(Документ);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		НЗ.Отбор.Контрагент.Установить(Контрагент);
	КонецЕсли;
	НЗ.Прочитать();
	Для каждого ЗаписьНабора Из НЗ Цикл
		Если Не ЗначениеЗаполнено(ЗаписьНабора.ДатаОтправки) Тогда
			ЗаписьНабора.Комментарий = Комментарий;
			ЗаписьНабора.Ошибка 	 = Истина;
		КонецЕсли;
	КонецЦикла;
	Если НЗ.Количество() > 0 Тогда
		НЗ.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция СостояниеДокумента(Документ, Контрагент = Неопределено, СостояниеСтрокой = Ложь) Экспорт
	
	ВозвращаемоеЗначение = Неопределено;
	СостояниеДокумента = Новый Структура("Документ, ДатаОтправки, ДатаОтменыОтправки, Комментарий, Ошибка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОчередьОтправкиДокументовОтгрузкиСрезПоследних.Документ,
	|	ОчередьОтправкиДокументовОтгрузкиСрезПоследних.ДатаОтправки,
	|	ОчередьОтправкиДокументовОтгрузкиСрезПоследних.ДатаОтменыОтправки,
	|	ОчередьОтправкиДокументовОтгрузкиСрезПоследних.Комментарий,
	|	ОчередьОтправкиДокументовОтгрузкиСрезПоследних.Ошибка
	|ИЗ
	|	РегистрСведений.ОчередьОтправкиДокументовОтгрузки.СрезПоследних(
	|			,
	|			Документ = &Документ
	|				И (Контрагент = &Контрагент
	|					ИЛИ &ВсеКонтрагенты)) КАК ОчередьОтправкиДокументовОтгрузкиСрезПоследних";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ВсеКонтрагенты", Не ЗначениеЗаполнено(Контрагент));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СостояниеДокумента, Выборка); 
	КонецЕсли;
	
	Если СостояниеСтрокой Тогда
		
		Если СостояниеДокумента.Документ = Неопределено Тогда
			//Нет ни одной записи
			ВозвращаемоеЗначение = "Документ не отмечен к отправке";
		ИначеЕсли СостояниеДокумента.Ошибка Тогда
			ВозвращаемоеЗначение = "Не удалось отправить документ по причине: "+СостояниеДокумента.Комментарий+". Документ ожидает повторной отправки.";
		ИначеЕсли ЗначениеЗаполнено(СостояниеДокумента.ДатаОтменыОтправки) Тогда
			ВозвращаемоеЗначение = "Отправка документа отменена "+СостояниеДокумента.ДатаОтменыОтправки+", "+СостояниеДокумента.Комментарий;
		ИначеЕсли Не ЗначениеЗаполнено(СостояниеДокумента.ДатаОтправки) Тогда
			ВозвращаемоеЗначение = "Документ ожидает отправки";
		Иначе
			ВозвращаемоеЗначение = "Документ отправлен "+СостояниеДокумента.ДатаОтправки;
		КонецЕсли;
		
	Иначе
		
		ВозвращаемоеЗначение = СостояниеДокумента;
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура УстановитьБлокировку(Документ) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОчередьОтправкиДокументовОтгрузки");
	ЭлементБлокировки.УстановитьЗначение("Документ", Документ);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();

КонецПроцедуры