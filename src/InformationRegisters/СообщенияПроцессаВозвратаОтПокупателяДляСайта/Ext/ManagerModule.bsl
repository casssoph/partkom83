Процедура Добавить(ПараметрыСообщения, РегистрироватьКВыгрузке = Истина) Экспорт
	
	МЗ = РегистрыСведений.СообщенияПроцессаВозвратаОтПокупателяДляСайта.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ, ПараметрыСообщения,,"ДопСведения");
	МЗ.Период = ТекущаяДата();
	МЗ.Идентификатор = Строка(Новый УникальныйИдентификатор);
	МЗ.ДопСведения = Новый ХранилищеЗначения(ПараметрыСообщения.ДопСведения, Новый СжатиеДанных(9)); 
	МЗ.Записать();
	
	Если РегистрироватьКВыгрузке Тогда
		ЗарегистрироватьКВыгрузке(МЗ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьКВыгрузке(ПараметрыОтбора) Экспорт
	
	Узел = ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.Узел(Ложь);
	
	Если ЗначениеЗаполнено(Узел) Тогда
		
		НЗ = РегистрыСведений.СообщенияПроцессаВозвратаОтПокупателяДляСайта.СоздатьНаборЗаписей();
		НЗ.Отбор.Период.Установить(ПараметрыОтбора.Период, Истина);
		НЗ.Отбор.Идентификатор.Установить(ПараметрыОтбора.Идентификатор, Истина);
		НЗ.Отбор.ТипСообщения.Установить(ПараметрыОтбора.ТипСообщения, Истина);
		НЗ.Отбор.Штрихкод.Установить(ПараметрыОтбора.Штрихкод, Истина);
		НЗ.Прочитать();
		
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НЗ);
		ОбменДаннымиКлиентСервер.СоздатьЗаписьИсторииРегистрации(Узел, ПараметрыОтбора.Идентификатор,,); 
		
	Иначе
		
		ВызватьИсключение "Не определен исходящий узел обмена для плана обмена ""ОбменПартКом83_Сайт_Возвраты""!";
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураПараметровСообщения() Экспорт
	
	Возврат Новый Структура("ТипСообщения, Штрихкод, АктРассмотренияВозврата, Сообщение, ДопСведения", 
	Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.ТекстовоеСообщение,,,,Новый Структура);	
	
КонецФункции

Функция ЗначениеКлючаДопСведений(ДопСведенияХЗ, ИмяКлюча) Экспорт
	
	ЗначениеКлючаДопСведений = Неопределено;
	
	ДССтруктура = ДопСведенияХЗ.Получить();
	
	Если ТипЗнч("ДССтруктура") = Тип("Структура") Тогда
		 ДССтруктура.Свойство(ИмяКлюча, ЗначениеКлючаДопСведений);
	КонецЕсли;
	
	Возврат ЗначениеКлючаДопСведений;
	
КонецФункции

//Выгрузка
Функция ВыгрузитьЭлементы(вхКлючиЗаписей, вхПланОбмена) Экспорт
	
	Результат = Новый Массив;
	
	лМетаданныеПланаОбмена = Неопределено;
	лТип = ТипЗнч(вхПланОбмена);
	Если (лТип = Тип("Строка")) тогда
		лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.Найти(вхПланОбмена);
	ИначеЕсли (лТип = Тип("ОбъектМетаданных")) И Метаданные.ПланыОбмена.Содержит(вхПланОбмена) тогда
		лМетаданныеПланаОбмена = вхПланОбмена;
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Неопределено) тогда
		ВызватьИсключение "[ВыгрузитьЭлементы]: неправильный параметр номер 2.";
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт_Возвраты) тогда
		
		лМенеджерПланаОбмена = ПланыОбмена[лМетаданныеПланаОбмена.Имя];
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	КлючиЗаписей.Период,
		                      |	КлючиЗаписей.Идентификатор
		                      |ПОМЕСТИТЬ КлючиЗарегистрированныхЗаписейЗаписей
		                      |ИЗ
		                      |	&Ключи КАК КлючиЗаписей
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.Идентификатор КАК Идентификатор,
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.ТипСообщения КАК ТипСообщения,
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.Штрихкод КАК Штрихкод,
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.Сообщение КАК Сообщение,
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.АктРассмотренияВозврата КАК АктРассмотренияВозврата,
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.ДопСведения КАК ДопСведения
		                      |ИЗ
		                      |	КлючиЗарегистрированныхЗаписейЗаписей КАК КлючиЗарегистрированныхЗаписейЗаписей
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СообщенияПроцессаВозвратаОтПокупателяДляСайта КАК СообщенияПроцессаВозвратаОтПокупателяДляСайта
		                      |		ПО КлючиЗарегистрированныхЗаписейЗаписей.Период = СообщенияПроцессаВозвратаОтПокупателяДляСайта.Период
		                      |			И КлючиЗарегистрированныхЗаписейЗаписей.Идентификатор = СообщенияПроцессаВозвратаОтПокупателяДляСайта.Идентификатор
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	СообщенияПроцессаВозвратаОтПокупателяДляСайта.Период");
		
		Запрос.УстановитьПараметр("Ключи", вхКлючиЗаписей);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			лТипОбъектаXDTO = ПланыОбмена.ОбменПартКом83_Сайт_Возвраты.ТипПоТипуСообщения(Выборка.ТипСообщения);
			
			лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
			лОбъект.ИдентификаторСообщения 	= Выборка.Идентификатор;
			лОбъект.Штрихкод 				= Выборка.Штрихкод;
			
			Если Выборка.ТипСообщения = Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.ТекстовоеСообщение
				ИЛИ  Выборка.ТипСообщения = Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.ОтменаАктаВозврата Тогда
				
				лОбъект.ТекстовоеСообщение = Выборка.Сообщение;
				
			ИначеЕсли Выборка.ТипСообщения = Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.ОтправкаФайла Тогда
				
				лОбъект.Описание = Выборка.Сообщение;
				
				ИдентификаторВоВнешнемХранилище = ЗначениеКлючаДопСведений(Выборка.ДопСведения, "ИдентификаторВоВнешнемХранилище");
				Если ТипЗнч(ИдентификаторВоВнешнемХранилище) = Тип("Число") И ИдентификаторВоВнешнемХранилище <> 0 Тогда
					лОбъект.ИдентификаторФайла = ИдентификаторВоВнешнемХранилище;
				Иначе
					лОбъект.ИдентификаторФайла = 0; //ошибка, пока игнорируем, посылаем 0
				КонецЕсли;
				
			ИначеЕсли Выборка.ТипСообщения = Перечисления.ТипыСообщенийПроцессаВозвратовДляСайта.РезультатЗагрузки Тогда
				
				СтруктураДопСведений = Выборка.ДопСведения.Получить();
				
				лОбъект.Ошибка 			= СтруктураДопСведений.Ошибка;
				лОбъект.ТекстОшибки 	= СтруктураДопСведений.ТекстОшибки;
				
			КонецЕсли;
				
			Результат.Добавить(лОбъект);
			
			//Семенов И.П. 04.02.2019 XX-1768(
			ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Выборка.Идентификатор, лОбъект, "РегистрСведений.СообщенияПроцессаВозвратаОтПокупателяДляСайта");
			//)Семенов И.П.
			
		КонецЦикла;
		
		
	КонецЕсли;	
		
	//	//////////////////////////////////////////
	//	
	//	ВыборкаПоНомерамДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//	
	//	лТипОбъектаXDTO = ФабрикаXDTO.Тип(лМенеджерПланаОбмена.URIПространстваИмен(), "Документы.ПоступлениеТоваровУслуг_Ошибка");
	//	
	//	Пока ВыборкаПоНомерамДокументов.Следующий() Цикл
	//		
	//		лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
	//		
	//		лОбъект.invoice_id = ВыборкаПоНомерамДокументов.invoice_id;
	//		
	//		лТипОшибкиСтроки = ФабрикаXDTO.Тип(лМенеджерПланаОбмена.URIПространстваИмен(), "Документы.ПоступлениеТоваровУслуг_Ошибка_Строки");
	//		лОбъектОшибкиСтроки = ФабрикаXDTO.Создать(лТипОшибкиСтроки);
	//		лСписокОбъектов = лОбъектОшибкиСтроки.ПолучитьСписок("item");
	//		
	//		лТипОшибкиСтрока = ФабрикаXDTO.Тип(лМенеджерПланаОбмена.URIПространстваИмен(), "Документы.ПоступлениеТоваровУслуг_Ошибка_Строка");
	//		
	//		Выборка = ВыборкаПоНомерамДокументов.Выбрать();
	//		
	//		ПервыйПроход = Истина;
	//		
	//		Пока Выборка.Следующий() Цикл
	//			
	//			Если ПервыйПроход Тогда
	//				ПервыйПроход = Ложь;
	//				ЗаполнитьЗначенияСвойств(лОбъект, Выборка);
	//				лОбъект.doc_date = Формат(Выборка.document_date, "ДФ=yyyy-MM-dd");
	//				лОбъект.doc_time = Формат(Выборка.document_date, "ДФ=hh:mm");
	//				Если Не ЗначениеЗаполнено(лОбъект.error) Тогда
	//					лОбъект.error = "Во время обработки СФ обнаружены ошибки";
	//				КонецЕсли;
	//				Продолжить;
	//			КонецЕсли;
	//			
	//			лОбъектОшибкиСтрока = ФабрикаXDTO.Создать(лТипОшибкиСтрока);
	//			ЗаполнитьЗначенияСвойств(лОбъектОшибкиСтрока, Выборка);
	//			лОбъектОшибкиСтрока.invoice_number = лОбъект.number;
	//			
	//			лСписокОбъектов.Добавить(лОбъектОшибкиСтрока);
	//			
	//		КонецЦикла;
	//		
	//		лОбъект.items = лОбъектОшибкиСтроки;
	//		
	//		Результат.Добавить(лОбъект);
	//		
	//		//Семенов И.П. 04.02.2019 XX-1768(
	//		ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Формат(ВыборкаПоНомерамДокументов.invoice_id,"ЧГ=0"), лОбъект, "РегистрСведений.ОшибкиЗагрузкиОП");
	//		//)Семенов И.П.

	//	КонецЦикла;
	//	
	//КонецЕсли;
	
	Возврат Результат;
	
	
КонецФункции