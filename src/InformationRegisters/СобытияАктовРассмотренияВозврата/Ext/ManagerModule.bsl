
Процедура ДобавитьСобытие(АктРассмотренияВозврата, ПараметрыСобытия) Экспорт
	
	МЗ = РегистрыСведений.СобытияАктовРассмотренияВозврата.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ, ПараметрыСобытия);
	
	МЗ.ИдентификаторСобытия 	= Строка(Новый УникальныйИдентификатор);
	МЗ.Период 					= ТекущаяДата();
	МЗ.АктРассмотренияВозврата 	= АктРассмотренияВозврата;
	МЗ.Изменил 					= ?(ЗначениеЗаполнено(ПараметрыСобытия.Изменил), ПараметрыСобытия.Изменил, ПараметрыСеанса.ТекущийПользователь);
	
	Если ЗначениеЗаполнено(ПараметрыСобытия.СтарыйСтатус) Тогда
		
		//Если указан старый статус, тогда найдем идентификатор события его установки и запишем в новое событие
		ДанныеСтарогоСтатуса = ДанныеСтарогоСтатуса(АктРассмотренияВозврата, ПараметрыСобытия.СтарыйСтатус);
		//МЗ.ДатаУстановкиСтарогоСтатуса 				= ДанныеСтарогоСтатуса.ДатаУстановкиСтатуса;
		МЗ.ИдентификаторСобытияПрошлойСменыСтатуса  = ДанныеСтарогоСтатуса.ИдентификаторСобытия;
		
		//Если старый статус не найден, то установим текущий идентификатор. Такое может быть, если записи из регистра удаляли руками.
		Если Не ЗначениеЗаполнено(МЗ.ИдентификаторСобытияПрошлойСменыСтатуса) Тогда
			МЗ.ИдентификаторСобытияПрошлойСменыСтатуса 	= МЗ.ИдентификаторСобытия;
		КонецЕсли;
		
	ИначеЕсли ПараметрыСобытия.ЭтоНовый Тогда 
		//Если это новый документ, то в качестве идентификатора установки прошлого статуса укажем текущий идентификатор
		//МЗ.ДатаУстановкиСтарогоСтатуса 				= ТекущаяДата();
		МЗ.ИдентификаторСобытияПрошлойСменыСтатуса 	= МЗ.ИдентификаторСобытия;
	КонецЕсли;
	
	МЗ.Записать();
	
КонецПроцедуры

Функция ДанныеСтарогоСтатуса(АктРассмотренияВозврата, СтатусДокумента)
	
	ДанныеСтарогоСтатуса = Новый Структура();
	//ДанныеСтарогоСтатуса.Вставить("ДатаУстановкиСтатуса", Дата(1,1,1));
	ДанныеСтарогоСтатуса.Вставить("ИдентификаторСобытия", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Первые 1
	|	СобытияАктовРассмотренияВозвратаСрезПоследних.Период КАК ДатаУстановкиСтатуса,
	|	СобытияАктовРассмотренияВозвратаСрезПоследних.ИдентификаторСобытия КАК ИдентификаторСобытия
	|ИЗ
	|	РегистрСведений.СобытияАктовРассмотренияВозврата.СрезПоследних(
	|			,
	|			АктРассмотренияВозврата = &АктРассмотренияВозврата
	|				И СтатусДокумента = &СтатусДокумента
	//|				И НЕ ДатаУстановкиСтарогоСтатуса = ДАТАВРЕМЯ(1, 1, 1)
	|				И НЕ ИдентификаторСобытияПрошлойСменыСтатуса = 	&ПустаяСтрока) КАК СобытияАктовРассмотренияВозвратаСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ, ИдентификаторСобытия Убыв";
	
	Запрос.УстановитьПараметр("АктРассмотренияВозврата", АктРассмотренияВозврата);
	Запрос.УстановитьПараметр("СтатусДокумента", СтатусДокумента);
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеСтарогоСтатуса, Выборка);
	КонецЕсли;
	
	Возврат ДанныеСтарогоСтатуса;
	
КонецФункции

Функция ПустойИдентификаторСтрока()
	
	Возврат "00000000-0000-0000-0000-000000000000";
	
КонецФункции

Функция ПустойИдентификатор()
	
	Возврат Новый УникальныйИдентификатор(ПустойИдентификаторСтрока());
	
КонецФункции


Функция ИнициализироватьСтруктуруПараметровСобытия() Экспорт
	
	ПараметрыСобытия = Новый Структура;
	
	лМетаданныеРегистра = Метаданные.РегистрыСведений.СобытияАктовРассмотренияВозврата;
	Для Каждого лОбъектМетаданных Из лМетаданныеРегистра.Измерения цикл
		ПараметрыСобытия.Вставить(лОбъектМетаданных.Имя);
	КонецЦикла;
	
	Для Каждого лОбъектМетаданных Из лМетаданныеРегистра.Ресурсы цикл
		ПараметрыСобытия.Вставить(лОбъектМетаданных.Имя);
	КонецЦикла;
	
	Для Каждого лОбъектМетаданных Из лМетаданныеРегистра.Реквизиты цикл
		ПараметрыСобытия.Вставить(лОбъектМетаданных.Имя);
	КонецЦикла;
	
	ПараметрыСобытия.Вставить("ЭтоНовый", Ложь);
	ПараметрыСобытия.Вставить("СтарыйСтатус", Неопределено);
		
	Возврат ПараметрыСобытия;
		
КонецФункции