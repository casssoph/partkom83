Процедура ЗафиксироватьЗапускРегламентногоЗадания(РегламентноеЗадание) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	МенеджерЗаписи.Событие = ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Запуск");
	МенеджерЗаписи.РегламентноеЗадание = РегламентноеЗадание;
	МенеджерЗаписи.Начало = ТекущаяДатаСеанса();
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьЗавершениеРегламентногоЗадания(РегламентноеЗадание) Экспорт
	
	НаборЗаписей = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.РегламентноеЗадание.Установить(РегламентноеЗадание);
	НаборЗаписей.Отбор.Событие.Установить(ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Запуск"));
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	НаборЗаписей.Отбор.Завершено.Установить(Ложь);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 1 Тогда
		Запись = НаборЗаписей[0];
		Запись.Конец = ТекущаяДатаСеанса();
		Запись.Длительность = ТекущаяДатаСеанса() - Запись.Начало;
		Запись.Завершено = Ложь;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗафиксироватьОшибкуРегламентногоЗадания(РегламентноеЗадание, ОписаниеОшибки) Экспорт
	НаборЗаписей = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.РегламентноеЗадание.Установить(РегламентноеЗадание);
	НаборЗаписей.Отбор.Событие.Установить(ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Запуск"));
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	НаборЗаписей.Отбор.Завершено.Установить(Ложь);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Запись = НаборЗаписей.Добавить();
		Запись.Период = ТекущаяДатаСеанса();
		//Запись.Событие = ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Ошибка");
		Запись.ОписаниеОшибки = ОписаниеОшибки;
		Запись.Начало = ТекущаяДатаСеанса();
		Запись.Конец = ТекущаяДатаСеанса();
		Запись.Длительность = 0;

	Иначе
		Запись = НаборЗаписей[0];
		Запись.Конец = ТекущаяДатаСеанса();
		Запись.Длительность = ТекущаяДатаСеанса() - Запись.Начало;
		Запись.Ошибка = Истина;
		Запись.ОписаниеОшибки = ОписаниеОшибки;
		//Запись.Завершено = Истина;

	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьИзмененияНастроекРегламентогоЗадания(РегламентноеЗадание) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Событие = ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.ИзменениеНастроек");
	МенеджерЗаписи.РегламентноеЗадание = РегламентноеЗадание;
	МенеджерЗаписи.Начало = ТекущаяДатаСеанса();
	МенеджерЗаписи.ОписаниеОшибки = "Изменены настройки";
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;

	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьВключениеРегламентногоЗадания(РегламентноеЗадание) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Событие = ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Включение");
	МенеджерЗаписи.РегламентноеЗадание = РегламентноеЗадание;
	МенеджерЗаписи.Начало = ТекущаяДатаСеанса();
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;

	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьОтключениеРегламентногоЗадания(РегламентноеЗадание) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ИсторияРегламентныхЗаданий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Событие = ПредопределенноеЗначение("Перечисление.СобытияРегламентныхЗаданий.Отключение");
	МенеджерЗаписи.РегламентноеЗадание = РегламентноеЗадание;
	МенеджерЗаписи.Начало = ТекущаяДатаСеанса();
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;

	МенеджерЗаписи.Записать();
	
КонецПроцедуры