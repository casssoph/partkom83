//Обмен 1С-Сайт: ОбменПартКом83_Сайт_состояние_заявок//
Процедура ДобавитьДанныеСостояниеСтрокЗаявок(Список, НомерСообщения) Экспорт
	
	Если НЕ РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен 1С-Сайт","Выгружать состояния строк заявок", Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОтбораSSID = "";
	ТекущаяДата = ТекущаяДата();
	ТипОбъектаXDTO = ФабрикаXDTO.Тип("http://ws-02.part-kom.ru/partkom83/hs/SiteExchange/XMLSchema", "СостояниеСтрокиЗаявки");
	Выборка = ВыборкаСостоянийСтрокЗаявок();
	Пока Выборка.Следующий() Цикл
		
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, Выборка, "IDSite,Дата,Артикул,КоличествоВЗаявке,КоличествоЗаказано,КоличествоОтказано,КоличествоНаСкладе,КоличествоВыдано");
		ОбъектXDTO.Состояние = Выборка.Состояние.УникальныйИдентификатор();
		ОбъектXDTO.Склад = Выборка.Склад.УникальныйИдентификатор();
		Список.Добавить(ОбъектXDTO);
		
		СтрокаОтбораSSID = СтрокаОтбораSSID + ?(СтрокаОтбораSSID = "",  "'" + Выборка.IDSite + "'" , ", '" + Выборка.IDSite + "'");
		
		//Отмечаем непосредственно через запрос SQL//
		//Запись = РегистрыСведений.СостояниеЗаявокПокупателя.СоздатьМенеджерЗаписи();
		//Запись.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		//Запись.Прочитать();
		//Запись.НомерСообщенияОтправленного = НомерСообщения;
		//Запись.ДатаОтправки = ТекущаяДата;
		//Запись.Записать();
		
	КонецЦикла;
	
	ОтметитьОтправленныеСтрокиВSQL(НомерСообщения, СтрокаОтбораSSID);
	
КонецПроцедуры
Процедура ФиксацияПринятогоСообщения(НомерСообщения) Экспорт
	
	ТекущаяДата = ТекущаяДата();
	Выборка = ВыборкаПодтвержденныхСтрокЗаявок(НомерСообщения);
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.СостояниеЗаявокПокупателя.СоздатьМенеджерЗаписи();
		Запись.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		Запись.Прочитать();
		Запись.ДатаОбработкиСайтом = ТекущаяДата;
		Запись.ПолученоСайтом = Истина;
		Запись.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция ВыборкаСостоянийСтрокЗаявок()
	
	КоличествоОбъектов = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Количество объектов в обмене", 1000);
	ОбратныйПорядокВыборки = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Обратный порядок выборки", Истина);
	УсловиеОтбора = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Условие запроса состояний строк заявок", "");
	
	Запрос = Новый Запрос(ТекстЗапросаВыборкиСостояний());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "1234", Формат(КоличествоОбъектов, "ЧГ="));
	Если НЕ ОбратныйПорядокВыборки Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " УБЫВ", "");
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,	"НЕ СостояниеЗаявокПокупателя.СтрокаЗаявки.Виртуальная И НЕ СостояниеЗаявокПокупателя.ПолученоСайтом",
													"НЕ СостояниеЗаявокПокупателя.СтрокаЗаявки.Виртуальная И НЕ СостояниеЗаявокПокупателя.ПолученоСайтом И " + УсловиеОтбора);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции
Функция ВыборкаПодтвержденныхСтрокЗаявок(НомерПринятого)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СостояниеЗаявокПокупателя.СтрокаЗаявки
	                      |ИЗ
	                      |	РегистрСведений.СостояниеЗаявокПокупателя КАК СостояниеЗаявокПокупателя
	                      |ГДЕ
	                      |	СостояниеЗаявокПокупателя.НомерСообщенияОтправленного МЕЖДУ 1 И &НомерПринятого
	                      |	И НЕ СостояниеЗаявокПокупателя.ПолученоСайтом");
	Запрос.УстановитьПараметр("НомерПринятого", НомерПринятого);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции
Функция ТекстЗапросаВыборкиСостояний()
	
	Возврат "ВЫБРАТЬ ПЕРВЫЕ 1234
	        |	СостояниеЗаявокПокупателя.ДатаИзменения КАК Дата,
	        |	ВЫБОР
	        |		КОГДА СостояниеЗаявокПокупателя.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	        |			ТОГДА СостояниеЗаявокПокупателя.СтрокаЗаявки.Заявка.Склад
	        |		ИНАЧЕ СостояниеЗаявокПокупателя.Склад
	        |	КОНЕЦ КАК Склад,
	        |	СостояниеЗаявокПокупателя.Номенклатура,
	        |	СостояниеЗаявокПокупателя.IDSite,
	        |	СостояниеЗаявокПокупателя.СтрокаЗаявки,
	        |	СостояниеЗаявокПокупателя.Состояние,
	        |	СостояниеЗаявокПокупателя.КоличествоВЗаявке,
	        |	СостояниеЗаявокПокупателя.КоличествоЗаказано,
	        |	СостояниеЗаявокПокупателя.КоличествоОтказ КАК КоличествоОтказано,
	        |	СостояниеЗаявокПокупателя.КоличествоПоступило КАК КоличествоНаСкладе,
	        |	СостояниеЗаявокПокупателя.КоличествоОтгружено КАК КоличествоВыдано,
	        |	ВЫБОР
	        |		КОГДА СостояниеЗаявокПокупателя.СтрокаЗаявки.ПоследняяКорректировка <> ЗНАЧЕНИЕ(Документ.КорректировкаЗаявкиПокупателя.ПустаяСсылка)
	        |			ТОГДА СостояниеЗаявокПокупателя.СтрокаЗаявки.ПоследняяКорректировка
	        |		ИНАЧЕ СостояниеЗаявокПокупателя.СтрокаЗаявки.Заявка
	        |	КОНЕЦ КАК ДокументСвязи
	        |ПОМЕСТИТЬ ДанныеСтрокиЗаявки
	        |ИЗ
	        |	РегистрСведений.СостояниеЗаявокПокупателя КАК СостояниеЗаявокПокупателя
	        |ГДЕ
	        |	НЕ СостояниеЗаявокПокупателя.СтрокаЗаявки.Виртуальная
	        |	И НЕ СостояниеЗаявокПокупателя.ПолученоСайтом
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	СостояниеЗаявокПокупателя.ДатаИзменения УБЫВ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗаявкаПокупателяТовары.Ссылка КАК Документ,
	        |	ЗаявкаПокупателяТовары.СтрокаЗаявки,
	        |	ЗаявкаПокупателяТовары.Номенклатура
	        |ПОМЕСТИТЬ ОпределениеНоменклатуры
	        |ИЗ
	        |	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
	        |ГДЕ
	        |	ЗаявкаПокупателяТовары.Ссылка В
	        |			(ВЫБРАТЬ
	        |				ДанныеСтрокиЗаявки.ДокументСвязи
	        |			ИЗ
	        |				ДанныеСтрокиЗаявки КАК ДанныеСтрокиЗаявки)
	        |	И ЗаявкаПокупателяТовары.СтрокаЗаявки В
	        |			(ВЫБРАТЬ
	        |				ДанныеСтрокиЗаявки.СтрокаЗаявки
	        |			ИЗ
	        |				ДанныеСтрокиЗаявки КАК ДанныеСтрокиЗаявки)
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	КорректировкаЗаявкиПокупателяТовары.Ссылка,
	        |	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
	        |	КорректировкаЗаявкиПокупателяТовары.Номенклатура
	        |ИЗ
	        |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	        |ГДЕ
	        |	КорректировкаЗаявкиПокупателяТовары.Ссылка В
	        |			(ВЫБРАТЬ
	        |				ДанныеСтрокиЗаявки.ДокументСвязи
	        |			ИЗ
	        |				ДанныеСтрокиЗаявки КАК ДанныеСтрокиЗаявки)
	        |	И КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки В
	        |			(ВЫБРАТЬ
	        |				ДанныеСтрокиЗаявки.СтрокаЗаявки
	        |			ИЗ
	        |				ДанныеСтрокиЗаявки КАК ДанныеСтрокиЗаявки)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ДанныеСтрокиЗаявки.Дата,
	        |	ВЫБОР
	        |		КОГДА ДанныеСтрокиЗаявки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	        |			ТОГДА ЕСТЬNULL(ОпределениеНоменклатуры.Номенклатура.Артикул, """")
	        |		ИНАЧЕ ЕСТЬNULL(ДанныеСтрокиЗаявки.Номенклатура.Артикул, """")
	        |	КОНЕЦ КАК Артикул,
	        |	ДанныеСтрокиЗаявки.Склад,
	        |	ДанныеСтрокиЗаявки.IDSite,
	        |	ДанныеСтрокиЗаявки.СтрокаЗаявки,
	        |	ДанныеСтрокиЗаявки.Состояние,
	        |	ДанныеСтрокиЗаявки.КоличествоВЗаявке,
	        |	ДанныеСтрокиЗаявки.КоличествоЗаказано,
	        |	ДанныеСтрокиЗаявки.КоличествоОтказано,
	        |	ДанныеСтрокиЗаявки.КоличествоНаСкладе,
	        |	ДанныеСтрокиЗаявки.КоличествоВыдано,
	        |	ДанныеСтрокиЗаявки.ДокументСвязи
	        |ИЗ
	        |	ДанныеСтрокиЗаявки КАК ДанныеСтрокиЗаявки
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ОпределениеНоменклатуры КАК ОпределениеНоменклатуры
	        |		ПО ДанныеСтрокиЗаявки.СтрокаЗаявки = ОпределениеНоменклатуры.СтрокаЗаявки
	        |			И ДанныеСтрокиЗаявки.ДокументСвязи = ОпределениеНоменклатуры.Документ";
	
КонецФункции
Процедура ОтметитьОтправленныеСтрокиВSQL(НомерСообщения, СтрокаОтбораSSID)
	
	ТекущаяДата = ТекущаяДата();
	Дата = Формат(Год(ТекущаяДата), "ЧЦ=4; ЧВН=; ЧГ=") + "-" + Формат(Месяц(ТекущаяДата), "ЧЦ=2; ЧВН=; ЧГ=") + "-" + Формат(День(ТекущаяДата), "ЧЦ=2; ЧВН=; ЧГ=")+ " " + Формат(ТекущаяДата, "ДЛФ=T");
	ТекстЗапроса =	"UPDATE _InfoRg6507 set _Fld6527 = " + Формат(НомерСообщения, "ЧГ=") + ", _Fld6528 = '" + Дата + "' " +
					"WHERE _Fld6526 in (" + СтрокаОтбораSSID + ")";
	
	Попытка
		СоединениеSQL  = Новый COMОбъект("ADODB.Connection");
		КомандаSQL     = Новый COMОбъект("ADODB.Command");
		ВыборкаSQL     = Новый COMОбъект("ADODB.RecordSet");
		
		Пользователь = "partkom83";
		Пароль = "partkom83";
		База = "partkom83";
		Сервер = "nng9-v-sq-07";
		
		СоединениеSQL_ConnectionString =
		"driver={SQL Server};" +
		"server="+Сервер+";"+
		"uid="+Пользователь+";"+
		"pwd="+Пароль+";"+
		"database="+База+";";
		СоединениеSQL.ConnectionString = СоединениеSQL_ConnectionString;
		
		СоединениеSQL.ConnectionTimeout = 30;
		СоединениеSQL.CommandTimeout = 6000;
		
		СоединениеSQL.Open();
		КомандаSQL.ActiveConnection   = СоединениеSQL;
		КомандаSQL.CommandText = ТекстЗапроса;
		КомандаSQL.Execute();
		
		СоединениеSQL.Close();
		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры


