Процедура ДобавитьДанныеИсторияЗаявокПокупателя(Список, НомерСообщения, СтруктураХранения) Экспорт
	
	Если НЕ РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен 1С-Сайт","Выгружать историю строк заявок", Ложь) Тогда
		Возврат;
	КонецЕсли;

	УстанавливаемыеПоля = Новый Структура;
	УстанавливаемыеПоля.Вставить("НомерСообщенияОтправленного", НомерСообщения);
	УстанавливаемыеПоля.Вставить("ДатаОтправки", ТекущаяДата());
	
	КлючевыеПоля = Новый Структура;
	КлючевыеПоля.Вставить("Период");	
	КлючевыеПоля.Вставить("Регистратор");	
	КлючевыеПоля.Вставить("НомерСтроки");	
	КлючевыеПоля.Вставить("СтрокаЗаявки");	
	КлючевыеПоля.Вставить("СтрокаПрихода");	
	КлючевыеПоля.Вставить("Отказ");	
	КлючевыеПоля.Вставить("Порядок");	
	
	Структура = Новый Структура("ИмяТаблицы", "РегистрСведений.ИсторияЗаявокПокупателя");
	Структура.Вставить("КлючевыеПоля", КлючевыеПоля);
	Структура.Вставить("УстанавливаемыеПоля", УстанавливаемыеПоля);
	
	Структура.Вставить("СтруктураХранения", СтруктураХранения);

	РаботаСSQL.УстановитьИменаПолей(Структура);
	РаботаСSQL.УстановитьПоляSet(Структура);
	ВнутренняяТаблица = "";
	
	ТипОбъектаXDTO = ФабрикаXDTO.Тип("http://ws-02.part-kom.ru/partkom83/hs/SiteExchange/XMLSchema", "ИсторияСтрокЗаявок");
	ВыборкаИсторииСтрокЗаявок = ВыборкаИсторииСтрокЗаявок();
	ТаблицаОтбора = "";
	
	Пока ВыборкаИсторииСтрокЗаявок.Следующий() Цикл
		
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, ВыборкаИсторииСтрокЗаявок, "IDSite,Количество,НомерЗаявки,Артикул,Цена,ЗакупочнаяЦена,Розница");
		ОбъектXDTO.Состояние = ВыборкаИсторииСтрокЗаявок.Состояние.УникальныйИдентификатор();
		ОбъектXDTO.ВерсияДанных = ВыборкаИсторииСтрокЗаявок.Период;
		ОбъектXDTO.Склад = ВыборкаИсторииСтрокЗаявок.Склад.УникальныйИдентификатор();
		Список.Добавить(ОбъектXDTO);
		
		ВнутренняяТаблица = ВнутренняяТаблица + ?(ВнутренняяТаблица = "", "", ",") + "(" + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.Период) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.Регистратор) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.НомерСтроки) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.СтрокаЗаявки) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.СтрокаПрихода) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.Отказ) + "," + 
							РаботаСSQL.ЗначениеSQL(ВыборкаИсторииСтрокЗаявок.Порядок) + ")";
		
	КонецЦикла;
	
	
	СтрокаJoin =	Структура.Поля["Период"] + "=t.f1 and " +
					Структура.Поля["Регистратор"] + "=t.f2 and " +
					Структура.Поля["НомерСтроки"] + "=t.f3 and " +
					Структура.Поля["СтрокаЗаявки"] + "=t.f4 and " +
					Структура.Поля["СтрокаПрихода"] + "=t.f5 and " +
					Структура.Поля["Отказ"] + "=t.f6 and " +
					Структура.Поля["Порядок"] + "=t.f7";
	ВнутренняяТаблица =  " inner join " + Символы.ПС + "(values" + ВнутренняяТаблица + ") t (f1,f2,f3,f4,f5,f6,f7) on " + СтрокаJoin;;
	Структура.Вставить("ВнутренняяТаблица", ВнутренняяТаблица);
	ТекстЗапроса = "update " + Структура.ИмяТаблицыХранения + Структура.Set + "from " + Структура.ИмяТаблицыХранения + ВнутренняяТаблица;
	
	ОписаниеОшибки = РаботаСSQL.ВыполнитьЗапросSQL(ТекстЗапроса);
	
КонецПроцедуры
Функция ВыборкаИсторииСтрокЗаявок()
	
	КоличествоОбъектов = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Количество объектов в обмене", 1000);
	ОбратныйПорядокВыборки = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Обратный порядок выборки", Истина);
	УсловиеОтбора = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен (Общее)","Условие запроса истории строк заявок", "");
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1234
	                      |	ИсторияЗаявокПокупателя.IDSite,
	                      |	ИсторияЗаявокПокупателя.Период КАК Период,
	                      |	ЕСТЬNULL(ИсторияЗаявокПокупателя.СтрокаЗаявки.Заявка.Номер, """") КАК НомерЗаявки,
	                      |	ИсторияЗаявокПокупателя.Склад,
	                      |	ИсторияЗаявокПокупателя.Количество,
	                      |	ЕСТЬNULL(ИсторияЗаявокПокупателя.СтрокаЗаявки.Цена, 0) КАК Цена,
	                      |	ИсторияЗаявокПокупателя.СтрокаЗаявки,
	                      |	ЕСТЬNULL(ИсторияЗаявокПокупателя.СтрокаЗаявки.ЦенаЗакупки, 0) КАК ЗакупочнаяЦена,
	                      |	ИсторияЗаявокПокупателя.Состояние,
	                      |	ИсторияЗаявокПокупателя.СтрокаПрихода,
	                      |	ИсторияЗаявокПокупателя.Отказ,
	                      |	ИсторияЗаявокПокупателя.Порядок,
	                      |	ИсторияЗаявокПокупателя.ДатаСобытия КАК ДатаСобытия,
	                      |	ИсторияЗаявокПокупателя.Номенклатура,
	                      |	ИсторияЗаявокПокупателя.Регистратор,
	                      |	ИсторияЗаявокПокупателя.НомерСтроки,
	                      |	ЕСТЬNULL(ИсторияЗаявокПокупателя.Номенклатура.Артикул, """") КАК Артикул,
	                      |	ВЫБОР
	                      |		КОГДА ИсторияЗаявокПокупателя.СтрокаЗаявки.Заявка.ИсточникЗаявки = ЗНАЧЕНИЕ(Перечисление.ИсточникиЗаявок.СайтРозница)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК Розница
	                      |ИЗ
	                      |	РегистрСведений.ИсторияЗаявокПокупателя КАК ИсторияЗаявокПокупателя
	                      |ГДЕ
	                      |	НЕ ИсторияЗаявокПокупателя.ПолученоСайтом
	                      |	И ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаСобытия УБЫВ");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "1234", Формат(КоличествоОбъектов, "ЧГ="));
	Если НЕ ОбратныйПорядокВыборки Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " УБЫВ", "");
	КонецЕсли;
	Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ИСТИНА", "И " + УсловиеОтбора);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ФиксацияПринятогоСообщения(НомерСообщения, СтруктураХранения) Экспорт
	
	УстанавливаемыеПоля = Новый Структура;
	УстанавливаемыеПоля.Вставить("ПолученоСайтом", Истина);
	УстанавливаемыеПоля.Вставить("ДатаОбработкиСайтом", ТекущаяДата());

	ОтборПоНомеруСообщения = Новый Структура;
	ОтборПоНомеруСообщения.Вставить("ВидСравнения", ВидСравнения.Интервал);
	ОтборПоНомеруСообщения.Вставить("Минимум", 1);
	ОтборПоНомеруСообщения.Вставить("Максимум", НомерСообщения);
	
	ПоляОтбора = Новый Структура;
	ПоляОтбора.Вставить("НомерСообщенияОтправленного", ОтборПоНомеруСообщения);
	ПоляОтбора.Вставить("ПолученоСайтом", Ложь);
	
	Структура = Новый Структура("ИмяТаблицы", "РегистрСведений.ИсторияЗаявокПокупателя");
	Структура.Вставить("УстанавливаемыеПоля", УстанавливаемыеПоля);
	Структура.Вставить("ПоляОтбора", ПоляОтбора);
	Структура.Вставить("СтруктураХранения", СтруктураХранения);
	
	ОписаниеОшибки = РаботаСSQL.UpdateAtWhere(Структура);
	
КонецПроцедуры

Процедура СнятьРегистрациюСЗаписей(Выборка) Экспорт
	
	УстанавливаемыеПоля = Новый Структура;
	УстанавливаемыеПоля.Вставить("НомерСообщенияОтправленного", 0);
	УстанавливаемыеПоля.Вставить("ДатаОтправки", '00010101');
	УстанавливаемыеПоля.Вставить("ДатаОбработкиСайтом", '00010101');
	УстанавливаемыеПоля.Вставить("ПолученоСайтом", Ложь);
	
	КлючевыеПоля = Новый Структура;
	КлючевыеПоля.Вставить("Период");	
	КлючевыеПоля.Вставить("Регистратор");	
	КлючевыеПоля.Вставить("НомерСтроки");	
	КлючевыеПоля.Вставить("СтрокаЗаявки");	
	КлючевыеПоля.Вставить("СтрокаПрихода");	
	КлючевыеПоля.Вставить("Отказ");	
	КлючевыеПоля.Вставить("Порядок");	
	
	Структура = Новый Структура("ИмяТаблицы", "РегистрСведений.ИсторияЗаявокПокупателя");
	Структура.Вставить("КлючевыеПоля", КлючевыеПоля);
	Структура.Вставить("УстанавливаемыеПоля", УстанавливаемыеПоля);
	Структура.Вставить("ВыборкаДанных", Выборка);
	
	ОписаниеОшибки = РаботаСSQL.UpdateAtJOIN(Структура);
	
КонецПроцедуры

Процедура ОтметитьЗаписиКакВыгруженные(Выборка) Экспорт
	
	УстанавливаемыеПоля = Новый Структура;
	УстанавливаемыеПоля.Вставить("НомерСообщенияОтправленного", 0);
	УстанавливаемыеПоля.Вставить("ДатаОтправки", ТекущаяДата());
	УстанавливаемыеПоля.Вставить("ДатаОбработкиСайтом", ТекущаяДата());
	УстанавливаемыеПоля.Вставить("ПолученоСайтом", Истина);
	
	КлючевыеПоля = Новый Структура;
	КлючевыеПоля.Вставить("Период");	
	КлючевыеПоля.Вставить("Регистратор");	
	КлючевыеПоля.Вставить("НомерСтроки");	
	КлючевыеПоля.Вставить("СтрокаЗаявки");	
	КлючевыеПоля.Вставить("СтрокаПрихода");	
	КлючевыеПоля.Вставить("Отказ");	
	КлючевыеПоля.Вставить("Порядок");	
	
	Структура = Новый Структура("ИмяТаблицы", "РегистрСведений.ИсторияЗаявокПокупателя");
	Структура.Вставить("КлючевыеПоля", КлючевыеПоля);
	Структура.Вставить("УстанавливаемыеПоля", УстанавливаемыеПоля);
	Структура.Вставить("ВыборкаДанных", Выборка);
	
	ОписаниеОшибки = РаботаСSQL.UpdateAtJOIN(Структура);
	
КонецПроцедуры

Функция ИмяПоляТаблицы(ОписаниеПолей, ИмяПоля, Отказ)
	
	ИмяПоляХранения = "";	
	Строка = ОписаниеПолей.Найти(ИмяПоля, "ИмяПоля");
	Если Строка = Неопределено Тогда
		Отказ = Истина;
	Иначе
		ИмяПоляХранения = Строка.ИмяПоляХранения;
	КонецЕсли;
	
	Возврат ИмяПоляХранения;
	
КонецФункции