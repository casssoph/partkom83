
Процедура Добавить(АктРассмотренияВозврата = Неопределено, Событие, ПараметрСобытия = Неопределено, НеДобавлятьЕслиУжеЕсть = Истина, КоличествоПопыток = 0) Экспорт
	
	Если Не ЗначениеЗаполнено(Событие) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобытияКОбработкеАктовРассмотренияВозврата.АктРассмотренияВозврата
	|ИЗ
	|	РегистрСведений.СобытияКОбработкеАктовРассмотренияВозврата КАК СобытияКОбработкеАктовРассмотренияВозврата
	|ГДЕ
	|	(СобытияКОбработкеАктовРассмотренияВозврата.АктРассмотренияВозврата = &АктРассмотренияВозврата
	|			ИЛИ &ВсеАкты)
	|	И (СобытияКОбработкеАктовРассмотренияВозврата.ПараметрСобытия = &ПараметрСобытия
	|			ИЛИ &ВсеПараметрСобытия)
	|	И СобытияКОбработкеАктовРассмотренияВозврата.Событие = &Событие";
	
	Запрос.УстановитьПараметр("АктРассмотренияВозврата", 	АктРассмотренияВозврата);
	Запрос.УстановитьПараметр("ВсеАкты",				 	Не ЗначениеЗаполнено(АктРассмотренияВозврата));
	Запрос.УстановитьПараметр("ПараметрСобытия", 			ПараметрСобытия);
	Запрос.УстановитьПараметр("ВсеПараметрСобытия", 		Не ЗначениеЗаполнено(ПараметрСобытия));
	
	Запрос.УстановитьПараметр("Событие", Событие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УжеЕсть = НЕ РезультатЗапроса.Пустой();
	
	НужноДобавить = Истина;
	Если УжеЕсть Тогда
		НужноДобавить = Не НеДобавлятьЕслиУжеЕсть;
	КонецЕсли;
	
	Если НужноДобавить Тогда	
		
		МЗ 							= РегистрыСведений.СобытияКОбработкеАктовРассмотренияВозврата.СоздатьМенеджерЗаписи();
		МЗ.Период 					= ТекущаяДата();
		МЗ.АктРассмотренияВозврата 	= АктРассмотренияВозврата;
		МЗ.Событие 					= Событие;
		МЗ.ПараметрСобытия 			= ПараметрСобытия;
		МЗ.Записать();	
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстОшибкиОбработки(АктРассмотренияВозврата)  Экспорт
	
	ТекстОшибкиОбработки = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ Первые 1
		|	СобытияКОбработкеАктовРассмотренияВозврата.ОписаниеОшибки
		|ИЗ
		|	РегистрСведений.СобытияКОбработкеАктовРассмотренияВозврата КАК СобытияКОбработкеАктовРассмотренияВозврата
		|ГДЕ
		|	СобытияКОбработкеАктовРассмотренияВозврата.АктРассмотренияВозврата = &АктРассмотренияВозврата
		|	И СобытияКОбработкеАктовРассмотренияВозврата.Ошибка";
	
	Запрос.УстановитьПараметр("АктРассмотренияВозврата", АктРассмотренияВозврата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекстОшибкиОбработки =  Выборка.ОписаниеОшибки;
	КонецЕсли;
	
	Возврат ТекстОшибкиОбработки;
	
КонецФункции

Процедура СброситьДатуОбработкиОшибки(АктРассмотренияВозврата) Экспорт
	
	Если Не ЗначениеЗаполнено(АктРассмотренияВозврата) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СобытияКОбработкеАктовРассмотренияВозврата.АктРассмотренияВозврата,
		|	СобытияКОбработкеАктовРассмотренияВозврата.Событие
		|ИЗ
		|	РегистрСведений.СобытияКОбработкеАктовРассмотренияВозврата КАК СобытияКОбработкеАктовРассмотренияВозврата
		|ГДЕ
		|	СобытияКОбработкеАктовРассмотренияВозврата.АктРассмотренияВозврата = &АктРассмотренияВозврата
		|	И СобытияКОбработкеАктовРассмотренияВозврата.Ошибка";
	
	Запрос.УстановитьПараметр("АктРассмотренияВозврата", АктРассмотренияВозврата);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	НЗ = РегистрыСведений.СобытияКОбработкеАктовРассмотренияВозврата.СоздатьНаборЗаписей();
	НЗ.Отбор.АктРассмотренияВозврата.Установить(АктРассмотренияВозврата);
	НЗ.Прочитать();
	Для каждого ЗаписьНабора Из НЗ Цикл
		ЗаписьНабора.КоличествоПопыток = 0;	
		ЗаписьНабора.ДатаОбработки = Дата(1,1,1);	
	КонецЦикла;
	НЗ.Записать();	
	
КонецПроцедуры

