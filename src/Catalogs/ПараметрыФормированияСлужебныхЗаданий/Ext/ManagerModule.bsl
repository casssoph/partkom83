Функция ЗапроситьИсториюПоПараметру(пар_Ссылка) экспорт
	
	ДтВрмФСЗ = Неопределено;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДатыФормированияЗаказовПоставщикам.ДатаФормирования
	                      |ИЗ
	                      |	РегистрСведений.ДатыФормированияСлужебныхЗаданий КАК ДатыФормированияЗаказовПоставщикам
	                      |ГДЕ
	                      |	ДатыФормированияЗаказовПоставщикам.ПараметрФормированияСЗ = &ПараметрФормированияЗаказовПоставщикам");
	Запрос.УстановитьПараметр("ПараметрФормированияЗаказовПоставщикам", пар_Ссылка);
	Выборка = Запрос.Выполнить().Выгрузить();
	Если Выборка.Количество() > 0 тогда
		ДтВрмФСЗ = Выборка[0].ДатаФормирования;
	КонецЕсли;
	
	Возврат ?( НЕ ДтВрмФСЗ = Неопределено, ?(ДтВрмФСЗ = ДАТА(1,1,1),"Не запускалось",СокрлП(ДтВрмФСЗ)), "ошибка записи");
КонецФункции
	
Процедура ОбновитьВремяОтгрузки_Региональное() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПараметрыФормированияСлужебныхЗаданий.Ссылка
	|ИЗ
	|	Справочник.ПараметрыФормированияСлужебныхЗаданий КАК ПараметрыФормированияСлужебныхЗаданий";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Об = Выборка.Ссылка.ПолучитьОбъект();
		Об.ОбменДанными.Загрузка = Истина;
		
		Для Инд = 1 По 7 Цикл 
			Выполнить("Об.ВремОтгрузки_Региональное" + Инд + " = ПроверкаРазницыВремени.ПолучитьРегиональноеВремя(Об.ВремОтгрузки" + Инд + ", Об.Склад)");
		КонецЦикла;
		Попытка
			Об.Записать();
		Исключение
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры