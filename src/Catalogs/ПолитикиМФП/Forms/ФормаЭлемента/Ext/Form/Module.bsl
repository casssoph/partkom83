
#Область СобытияФормы

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПередЗаписью";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	ПроверитьДоговорыТабличнойЧасти(Истина, Ложь, Отказ);
	
	Если НЕ Отказ Тогда
		
		Текст = "Изменение существующей политики МФП может повлиять на формирование документов! Вы уверены что хотите изменить существующую политику, а не создать новую? Если уверены, можете записать.";
		
		Если Не РазрешитьЗапись Тогда
			Отказ = Истина;
			ПоказатьПредупреждение(,Текст);
			РазрешитьЗапись = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	РазрешитьЗапись = Истина;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПриОткрытии";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	УстановитьВнешнийВидФормы()
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПослеЗаписи";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	ЗаполнитьДопРеквизитыТЧВФорме();
	
КонецПроцедуры

#КонецОбласти


#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ВладелецПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	СформироватьНаименование();
	
	ПроверитьДоговорыТабличнойЧасти(Ложь, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияПриИзменении(Элемент)
	
		
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПериодДействияПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	
	СформироватьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешенаПокупкаУСобственныхОрганизацийПриИзменении(Элемент)
	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_РазрешенаПокупкаУСобственныхОрганизацийПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура СобственныеОрганизацииРазрешенаПокупкаДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_СобственныеОрганизацииРазрешенаПокупкаДоговорКонтрагентаНачалоВыбора";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	
	СтандартнаяОбработка = Ложь;
	
	текСтрока = Элементы.СобственныеОрганизацииРазрешенаПокупка.ТекущиеДанные;
	
	ОрганизацияПродавец = текСтрока.Организация;
	
	Если Не ЗначениеЗаполнено(ОрганизацияПродавец) Тогда
		Возврат;		
	КонецЕсли;
	
	ФормаВыбораДоговора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора();
	
	ОтборВладелец = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.Владелец;	
	ОтборВладелец.Значение = Объект.Контрагент;	
	ОтборВладелец.Использование = Истина;
	
	ОтборОрганизация = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.Организация;	
	ОтборОрганизация.Значение = ОрганизацияПродавец;	
	ОтборОрганизация.Использование = Истина;
	
	ОтборВидДоговора = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.ВидДоговора;	
	ОтборВидДоговора.Значение = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем");	
	ОтборВидДоговора.Использование = Истина;
	
	ВыбранноеЗначение = ФормаВыбораДоговора.ОткрытьМодально();
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		текСтрока.ДоговорКонтрагента = ВыбранноеЗначение;		
	КонецЕсли;
	
	ЗаполнитьДопРеквизитыТЧВФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура СобственныеОрганизацииРазрешенаПокупкаДоговорКонтрагентаВозвратНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_СобственныеОрганизацииРазрешенаПокупкаДоговорКонтрагентаВозвратНачалоВыбора";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	СтандартнаяОбработка = Ложь;
	
	текСтрока = Элементы.СобственныеОрганизацииРазрешенаПокупка.ТекущиеДанные;
	
	ОрганизацияПродавец = текСтрока.Организация;
	КонтрагентПродавец = КонтрагентОрганизации(текСтрока.Организация, Объект.ПериодДействия);
	
	ОрганизацияПокупатель = Объект.Владелец;
	
	Если Не ЗначениеЗаполнено(КонтрагентПродавец) Тогда
		Возврат;		
	КонецЕсли;
	
	ФормаВыбораДоговора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора();
	
	ОтборВладелец = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.Владелец;	
	ОтборВладелец.Значение = КонтрагентПродавец;	
	ОтборВладелец.Использование = Истина;
	
	ОтборОрганизация = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.Организация;	
	ОтборОрганизация.Значение = ОрганизацияПокупатель;	
	ОтборОрганизация.Использование = Истина;
	
	//ОтборВидДоговора = ФормаВыбораДоговора.ЭлементыФормы.СправочникСписок.Значение.Отбор.ВидДоговора;	
	//ОтборВидДоговора.Значение = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ПустаяСсылка");	
	//ОтборВидДоговора.Использование = Истина;
	
	ВыбранноеЗначение = ФормаВыбораДоговора.ОткрытьМодально();
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		текСтрока.ДоговорКонтрагентаВозврат = ВыбранноеЗначение;		
	КонецЕсли;
	
	ЗаполнитьДопРеквизитыТЧВФорме();

КонецПроцедуры

&НаКлиенте
Процедура СобственныеОрганизацииРазрешенаПокупкаОрганизацияПриИзменении(Элемент)
	 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_СобственныеОрганизацииРазрешенаПокупкаОрганизацияПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	ЗаполнитьДопРеквизитыТЧВФорме();
	
	текСтрока = Элементы.СобственныеОрганизацииРазрешенаПокупка.ТекущиеДанные;
	
	ПроверитьДоговорыТекущейСтроки(текСтрока, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
		 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_КонтрагентПриИзменении";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	
	ПроверитьДоговорыТабличнойЧасти(Ложь, Истина);
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура УстановитьВнешнийВидФормы()
		 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_УстановитьВнешнийВидФормы";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	Элементы.ГруппаПокупка.Видимость 			= Объект.РазрешенаПокупкаУСобственныхОрганизаций;
	Элементы.РазрешенаЦепочкаЗакупок.Видимость 	= Объект.РазрешенаПокупкаУСобственныхОрганизаций;
	//Элементы.РазрешенВозврат.Видимость 			= Объект.РазрешенаПокупкаУСобственныхОрганизаций;
	
	ЗаполнитьДопРеквизитыТЧВФорме();

КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование()
			 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_СформироватьНаименование";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	Объект.Наименование = ""+Объект.Владелец+" от "+Формат(Объект.ПериодДействия, "ДФ=dd.MM.yyyy")+"г.";	
	
КонецПроцедуры

&НаСервере
Функция КонтрагентОрганизации(вхОрганизация, вхДатаДействия)
	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПроверитьДоговорыТабличнойЧасти";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Возврат Справочники.ПолитикиМФП.КонтрагентОрганизации(вхОрганизация, вхДатаДействия);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДопРеквизитыТЧВФорме()
	 			 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ЗаполнитьДопРеквизитыТЧВФорме";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	Для каждого стр Из Объект.СобственныеОрганизацииРазрешенаПокупка Цикл
		
		РеквизитыДоговораПродажи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(стр.ДоговорКонтрагента, "Владелец, Организация");
		РеквизитыДоговораВозврата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(стр.ДоговорКонтрагентаВозврат, "Владелец, Организация");
		
		стр.ДоговорКонтрагентаВладелец = РеквизитыДоговораПродажи.Владелец; 
		стр.ДоговорКонтрагентаОрганизация = РеквизитыДоговораПродажи.Организация; 
		
		стр.ДоговорКонтрагентаВозвратВладелец = РеквизитыДоговораВозврата.Владелец; 
		стр.ДоговорКонтрагентаВозвратОрганизация = РеквизитыДоговораВозврата.Организация; 
		
		стр.КонтрагентПродавец = КонтрагентОрганизации(стр.Организация, Объект.ПериодДействия);

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура  ПроверитьДоговорыТекущейСтроки(стр, СообщатьОбОшибке = Истина, Очищать = Ложь, Отказ = Неопределено)
	 	 			 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПроверитьДоговорыТекущейСтроки";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	ТекстОшибки = "";
	
	Если НЕ стр.ДоговорКонтрагентаВладелец = Объект.Контрагент
		ИЛИ НЕ стр.ДоговорКонтрагентаОрганизация = стр.Организация Тогда
		ТекстОшибки = "В строке "+Стр.НомерСтроки+" неверно указан договор продажи!";
		Если Очищать Тогда
			стр.ДоговорКонтрагента = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	
	Если НЕ стр.ДоговорКонтрагентаВозвратВладелец = стр.КонтрагентПродавец
		ИЛИ НЕ стр.ДоговорКонтрагентаВозвратОрганизация = Объект.Владелец Тогда
		ТекстОшибки = ТекстОшибки +?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "")+
		"В строке "+Стр.НомерСтроки+" неверно указан договор возврата!";
		Если Очищать Тогда
			стр.ДоговорКонтрагентаВозврат = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		Отказ = Истина;
		
		Если СообщатьОбОшибке Тогда
			Сообщить(ТекстОшибки, СтатусСообщения.Важное);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура  ПроверитьДоговорыТабличнойЧасти(СообщатьОбОшибке = Истина, Очищать = Ложь, Отказ = Неопределено)
	 	 	 			 	
	лКлючАлгоритма = "Справочник_ПолитикиМФП_ФормаЭлемента_ПроверитьДоговорыТабличнойЧасти";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////

	Для каждого текСтрока из Объект.СобственныеОрганизацииРазрешенаПокупка Цикл
		ПроверитьДоговорыТекущейСтроки(текСтрока, СообщатьОбОшибке, Очищать, Отказ);
	КонецЦикла;
	
КонецПроцедуры
	
#КонецОбласти

