Перем мВалютаРегламентированногоУчета Экспорт;
Перем ЭтоВалютныйСчет Экспорт;
Перем ЗарегистрироватьВОбмене;

Функция ПроверитьКорректностьНомераСчета(Номер, ТекстОшибки = "") Экспорт

	Если НЕ ТипЗнч(Номер) = Тип("Строка") Тогда
		ТекстОшибки = "Номер счета должен быть строкой.";
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Номер) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если НЕ ЭтоВалютныйСчет И СтрДлина(Номер) <> 20 Тогда
			ТекстОшибки = "Номер счета должен состоять из 20 знаков.";
			Возврат Ложь;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Номер) Тогда
		ТекстОшибки = "В номере счета есть не только цифры. Возможно, номер указан неверно.";
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПроверитьКорректностьНомераСчета()

Функция ПроверитьКорректностьБИК(БИК, ТекстОшибки = "") Экспорт

	Если НЕ ТипЗнч(БИК) = Тип("Строка") Тогда
		ТекстОшибки = "БИК банка должен быть строкой.";
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(БИК) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрДлина(БИК) <> 9 Тогда
		ТекстОшибки = "БИК банка должен состоять из 9 знаков.";
		Возврат Ложь;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(БИК) Тогда
		ТекстОшибки = "В составе БИК банка должны быть только цифры.";
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ Лев(БИК, 2) = "04" Тогда
		ТекстОшибки = "Первые 2 цифры БИК банка должны быть ""04"".";
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПроверитьКорректностьБИК()

Функция ПроверитьКорректностьКоррсчета(Коррсчет, ТекстОшибки = "") Экспорт

	Если НЕ ТипЗнч(Коррсчет) = Тип("Строка") Тогда
		ТекстОшибки = "Корр.счет банка должен быть строкой.";
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Коррсчет) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрДлина(Коррсчет) <> 20 Тогда
		ТекстОшибки = "Корр.счет банка должен состоять из 20 знаков.";
		Возврат Ложь;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(Коррсчет) Тогда
		ТекстОшибки = "В составе корр.счета банка должны быть только цифры.";
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ПроверитьКорректностьКоррсчета()

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)
	ЗарегистрироватьВОбмене = Ложь;
	Если ЭтоНовый() Тогда
		ЗарегистрироватьВОбмене = Истина;
	Иначе
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	БанковскиеСчета.Владелец,
		|	БанковскиеСчета.НомерСчета,
		|	БанковскиеСчета.Банк
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Ссылка = &Ссылка"
		);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Если Результат.Владелец <> Владелец
				ИЛИ Результат.НомерСчета <> НомерСчета
				ИЛИ Результат.Банк <> Банк Тогда
				ЗарегистрироватьВОбмене = Истина;
			КонецЕсли;
			
			Если Результат.Владелец <> Владелец Тогда
				//был изменен владелец, надо сообщить на почту
				ТемаПисьма = "был изменен владелец расчетного счета";
				ТекстПисьма = "";
				ТекстПисьма = ТекстПисьма + "номер расчетного счета - " + НомерСчета + Символы.ПС;
				ТекстПисьма = ТекстПисьма + "был - " + Строка(Результат.Владелец) + Символы.ПС;
				ТекстПисьма = ТекстПисьма + "стал - " + Строка(Владелец) + Символы.ПС;
				ТекстПисьма = ТекстПисьма + "тек пользователь - " + ПараметрыСеанса.ТекущийПользователь + Символы.ПС;
				//ТекстПисьма = ТекстПисьма + "внАдресСоединения - " + ПараметрыСеанса.внАдресСоединения + Символы.ПС;
				ТекстПисьма = ТекстПисьма + "Имя компьютера - " +  ИмяКомпьютера();
				Получатели = Новый СписокЗначений;
				Получатели.Добавить("Golubev-SV@Part-kom.ru", "Голубев Сергей");
				// 13.12.18 Строганов Роман > 
				Событие = Справочники.СобытияДляОтправкиЭлектронныхПисем.Банк;
				// 13.12.18 Строганов Роман <
				РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Событие, ТекстПисьма, ТемаПисьма, Получатели);
				
			КонецЕсли;
				
		КонецЦикла;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ПометкаУдаления ИЛИ Ссылка.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = "Запись банковского счета (" + Владелец + ") " + Наименование + ", код " + Код;
	
	Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(СокрЛП(НомерСчета)) Тогда 
		ОбщегоНазначения.СообщитьОбОшибке("В номере счета есть не только цифры. Возможно, номер указан неверно.", Отказ, Заголовок);
	КонецЕсли;

	// Проверка заполнения обязательных реквизитов
	Если НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не выбрана валюта.", Отказ, Заголовок);
	КонецЕсли;
	Если ВалютаДенежныхСредств = мВалютаРегламентированногоУчета Тогда
	
		Если НЕ ЗначениеЗаполнено(НомерСчета) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан номер счета.", Отказ, Заголовок);
		ИначеЕсли СтрДлина(НомерСчета) <> 20 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Номер счета должен состоять из 20 знаков.", Отказ, Заголовок);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Банк) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не выбран банк.", Отказ, Заголовок);
		КонецЕсли;
	
	КонецЕсли;


КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗарегистрироватьВОбмене Тогда
		ОбменДаннымиКлиентСервер.ЗарегистрироватьКОбменуБИТ(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

