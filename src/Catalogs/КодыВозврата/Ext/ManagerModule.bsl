
Функция СписокВыбораКодовВозврата() Экспорт
	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_СписокВыбораКодовВозврата";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	СписокВыбораКодовВозврата = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодыВозврата.Ссылка,
		|	КодыВозврата.Наименование
		|ИЗ
		|	Справочник.КодыВозврата КАК КодыВозврата
		|ГДЕ
		|	НЕ КодыВозврата.ПометкаУдаления 
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодыВозврата.Код";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		СписокВыбораКодовВозврата.Добавить(Выборка.Ссылка, Выборка.Наименование);
		
	КонецЦикла;
	
	Возврат СписокВыбораКодовВозврата;
	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(МетаданныеОтбора) Экспорт
	 	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_ПолучитьРеквизитыКонтроля";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	СтруктураПроверяемыхРеквизитов = Новый Структура;

	Возврат СтруктураПроверяемыхРеквизитов;
	
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора) Экспорт
	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_ПолучитьЗначенияРеквизитовКонтроля";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора);
	
КонецФункции

Функция ВыгрузитьЭлементы(ТаблицаСсылокНаОбъекты, МетаданныеПланаОбмена, ВыгружаемыеОбъекты = Неопределено) Экспорт
	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_ВыгрузитьЭлементы";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////

	МассивОбъектов = Новый Массив;
	
	Если МетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog Тогда	
		ВыгрузитьДанныеПланаОбменаОбменПартКом83_TopLog(МассивОбъектов, ТаблицаСсылокНаОбъекты);
	Иначе
		ВызватьИсключение "[ВыгрузитьЭлементы]: неправильный параметр номер 2.";
	КонецЕсли;
	
	Возврат МассивОбъектов;
	
КонецФункции

Процедура ВыгрузитьДанныеПланаОбменаОбменПартКом83_TopLog(МассивОбъектов, ТаблицаСсылокНаОбъекты)
	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_ВыгрузитьДанныеПланаОбменаОбменПартКом83_TopLog";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	URI = "http://partkom83-TopLogExchangeScheme.ru";
	ТипОбъектаXDTO = ФабрикаXDTO.Тип(URI, "Справочники.КодыВозврата");
	ТипУдалениеОбъекта = ФабрикаXDTO.Тип(URI, "УдалениеОбъекта");
	ОбъектыОбмена = ДанныеОбъектовПланаОбменаОбменПартКом83_TopLog(ТаблицаСсылокНаОбъекты);
	
	Выборка = ОбъектыОбмена[2].Выбрать();
	Пока Выборка.Следующий() цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, Выборка,, "Ссылка");
		ОбъектXDTO.Ссылка = XMLСтрока(Выборка.Ссылка);
		ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Выборка.Ссылка, ОбъектXDTO);
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;
		
	Выборка = ОбъектыОбмена[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипУдалениеОбъекта);
		ОбъектXDTO.ТипОбъекта = "Справочники.КодыВозврата";
		ОбъектXDTO.Ссылка = XMLСтрока(Выборка.Ссылка);
		ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Выборка.Ссылка, ОбъектXDTO);
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;
		
КонецПроцедуры
Функция ДанныеОбъектовПланаОбменаОбменПартКом83_TopLog(ТаблицаСсылокНаОбъекты)
	
	лКлючАлгоритма = "Справочник_КодыВозврата_МодульМенеджера_ДанныеОбъектовПланаОбменаОбменПартКом83_TopLog";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВнешняяТаблица.Ссылка
	                      |ПОМЕСТИТЬ ЗарегистрированныеОбъекты
	                      |ИЗ
	                      |	&ТаблицаСсылокНаОбъекты КАК ВнешняяТаблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.КодыВозврата) КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.КодыВозврата).ВерсияДанных ЕСТЬ NULL
	                      |				И (ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.КодыВозврата)) <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЭтоУдаление
	                      |ПОМЕСТИТЬ Объекты
	                      |ИЗ
	                      |	ЗарегистрированныеОбъекты КАК ЗарегистрированныеОбъекты
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Объекты.Ссылка КАК Ссылка,
	                      |	Объекты.Ссылка.Наименование КАК Наименование,
	                      |	Объекты.Ссылка.Код КАК Код,
	                      |	Объекты.Ссылка.ПометкаУдаления КАК ПометкаУдаления
	                      |ИЗ
	                      |	Объекты КАК Объекты
	                      |ГДЕ
	                      |	НЕ Объекты.ЭтоУдаление
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Объекты.Ссылка
	                      |ИЗ
	                      |	Объекты КАК Объекты
	                      |ГДЕ
	                      |	Объекты.ЭтоУдаление");
	Запрос.УстановитьПараметр("ТаблицаСсылокНаОбъекты", ТаблицаСсылокНаОбъекты);
		
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции
