Функция КодТерритории(Организация, Период) Экспорт
	
	Если Период < НалоговыйУчет.ДатаНачалаПримененияОКТМО() Тогда
		Возврат Организация.КодПоОКАТО;
	Иначе
		Возврат Организация.КодПоОКТМО;
	КонецЕсли;

КонецФункции

Функция ИмяРеквизитаКодаТерритории(Период) Экспорт
	
	Если Период < НалоговыйУчет.ДатаНачалаПримененияОКТМО() Тогда
		Возврат "ОКАТО";
	Иначе
		Возврат "ОКТМО";
	КонецЕсли;

КонецФункции

Функция ПолучитьМетаданные()
	Возврат Метаданные.Справочники.Организации;
КонецФункции

Функция ВыгрузитьЭлементы(вхТаблицаСсылокНаОбъекты, вхПланОбмена, ВыгружаемыеОбъекты = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	лМетаданныеПланаОбмена = Неопределено;
	лТип = ТипЗнч(вхПланОбмена);
	Если (лТип = Тип("Строка")) тогда
		лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.Найти(вхПланОбмена);
	ИначеЕсли (лТип = Тип("ОбъектМетаданных")) И Метаданные.ПланыОбмена.Содержит(вхПланОбмена) тогда
		лМетаданныеПланаОбмена = вхПланОбмена;
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Неопределено) тогда
		ВызватьИсключение "[ВыгрузитьЭлементы]: неправильный параметр номер 2.";
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт) тогда
		
		лЗапрос = Новый Запрос;
		лЗапрос.УстановитьПараметр("ТаблицаСсылок", вхТаблицаСсылокНаОбъекты);
		лЗапрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		лЗапрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка
		|ПОМЕСТИТЬ ЗарегистрированныеОбъекты
		|ИЗ
		|	&ТаблицаСсылок КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка,
		|	ВЫБОР
		|		КОГДА Т.Ссылка В
		|				(ВЫБРАТЬ
		|					Справочник.Организации.Ссылка
		|				ИЗ
		|					Справочник.Организации)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоУдаление
		|ПОМЕСТИТЬ Объекты
		|ИЗ
		|	ЗарегистрированныеОбъекты КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка,
		|	Т.Код,
		|	Т.Наименование,
		|	Т.НаименованиеПолное,
		|	ВЫБОР
		|		КОГДА Т.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ЮрФизЛицо,
		|	Т.ИНН,
		|	Т.КПП,
		|	Т.ОГРН,
		|	Т.КодИМНС,
		|	Т.КодПоОКАТО,
		|	Т.КодПоОКТМО,
		|	Т.КодПоОКПО,
		|	Т.СвидетельствоДатаВыдачи,
		|	Т.СвидетельствоСерияНомер
		|ИЗ
		|	Справочник.Организации КАК Т
		|ГДЕ
		|	Т.Ссылка В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка
		|ИЗ
		|	Объекты КАК Т
		|ГДЕ
		|	Т.ЭтоУдаление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Объекты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗарегистрированныеОбъекты";
		
		лМенеджерПланаОбмена = ПланыОбмена[лМетаданныеПланаОбмена.Имя];
		лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
		Если НЕ лРезультатыЗапроса[2].Пустой() Тогда
			лТипОбъектаXDTO = лМенеджерПланаОбмена.ТипПоОбъектуМетаданных(ПолучитьМетаданные());
			лВыборка = лРезультатыЗапроса[2].Выбрать();
			Пока лВыборка.Следующий() Цикл
				лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
				ЗаполнитьЗначенияСвойств(лОбъект, лВыборка,,"Ссылка");
				лОбъект.Ссылка = лВыборка.Ссылка.УникальныйИдентификатор();
				
				Результат.Добавить(лОбъект);
			КонецЦикла;
		КонецЕсли;
		
		Если НЕ лРезультатыЗапроса[3].Пустой() Тогда
			лМассивСсылок = лРезультатыЗапроса[3].Выгрузить().ВыгрузитьКолонку(0);
			лОбъекты = лМенеджерПланаОбмена.ВыгрузитьУдаленияЭлементов(лМассивСсылок, ПолучитьМетаданные());
			Для Каждого лОбъект Из лОбъекты Цикл
				Результат.Добавить(лОбъект);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog Тогда 
		лЗапрос = Новый Запрос;
		лЗапрос.УстановитьПараметр("ТаблицаСсылок", вхТаблицаСсылокНаОбъекты);
		лЗапрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		лЗапрос.УстановитьПараметр("ВидФактАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		лЗапрос.УстановитьПараметр("ВидЮрАдрес", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		лЗапрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
		лЗапрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизации.ГлавныйБухгалтер);
		лЗапрос.УстановитьПараметр("ВидТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
		
		лЗапрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка
		|ПОМЕСТИТЬ ЗарегистрированныеОбъекты
		|ИЗ
		|	&ТаблицаСсылок КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка,
		|	ВЫБОР
		|		КОГДА Т.Ссылка В
		|				(ВЫБРАТЬ
		|					Справочник.Организации.Ссылка
		|				ИЗ
		|					Справочник.Организации)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоУдаление
		|ПОМЕСТИТЬ Объекты
		|ИЗ
		|	ЗарегистрированныеОбъекты КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Организации) КАК Объект,
		|	КонтактнаяИнформация.Представление КАК Представление
		|ПОМЕСТИТЬ втФактАдреса
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|	И КонтактнаяИнформация.Вид = &ВидФактАдрес
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Организации) КАК Объект,
		|	КонтактнаяИнформация.Представление КАК Представление
		|ПОМЕСТИТЬ втЮрАдреса
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|	И КонтактнаяИнформация.Вид = &ВидЮрАдрес
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Организации) КАК Объект,
		|	КонтактнаяИнформация.Представление КАК Представление
		|ПОМЕСТИТЬ втТелефоны
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|	И КонтактнаяИнформация.Вид = &ВидТелефон
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацииСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо.Наименование КАК Руководитель,
		|	ОтветственныеЛицаОрганизацииСрезПоследних.Должность.Наименование КАК ДолжностьРуководителя
		|ПОМЕСТИТЬ втРуководители
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
		|			,
		|			СтруктурнаяЕдиница В
		|					(ВЫБРАТЬ
		|						Объекты.Ссылка
		|					ИЗ
		|						Объекты
		|					ГДЕ
		|						НЕ Объекты.ЭтоУдаление)
		|				И ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацииСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацииСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо.Наименование КАК ГлавныйБухгалтер
		|ПОМЕСТИТЬ втГлавныеБухгалтеры
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних(
		|			,
		|			СтруктурнаяЕдиница В
		|					(ВЫБРАТЬ
		|						Объекты.Ссылка
		|					ИЗ
		|						Объекты
		|					ГДЕ
		|						НЕ Объекты.ЭтоУдаление)
		|				И ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацииСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка КАК Ссылка,
		|	Т.Код КАК Код,
		|	Т.Наименование КАК Наименование,
		|	Т.НаименованиеПолное КАК НаименованиеПолное,
		|	Т.ИНН КАК ИНН,
		|	Т.КПП КАК КПП,
		|	Т.КодПоОКПО КАК КодПоОКПО,
		|	Т.Префикс КАК Префикс,
		|	ЕСТЬNULL(Т.ОсновнойБанковскийСчет.Банк.Наименование, """") КАК Банк,
		|	ЕСТЬNULL(Т.ОсновнойБанковскийСчет.Банк.Код, """") КАК БИКБанка,
		|	ЕСТЬNULL(Т.ОсновнойБанковскийСчет.Банк.КоррСчет, """") КАК КоррСчет,
		|	ЕСТЬNULL(Т.ОсновнойБанковскийСчет.НомерСчета, """") КАК НомерСчета,
		|	Т.УчитыватьНДС КАК УчитыватьНДС,
		|	Т.ПометкаУдаления КАК ПометкаУдаления,
		|	ЕСТЬNULL(втФактАдреса.Представление, """") КАК ФактическийАдрес,
		|	ЕСТЬNULL(втЮрАдреса.Представление, """") КАК ЮридическийАдрес,
		|	ЕСТЬNULL(втРуководители.Руководитель, """") КАК Руководитель,
		|	ЕСТЬNULL(втРуководители.ДолжностьРуководителя, """") КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(втГлавныеБухгалтеры.ГлавныйБухгалтер, """") КАК ГлавныйБухгалтер,
		|	ЕСТЬNULL(Т.ЮрФизЛицо.Порядок, 0) = 0 КАК ЭтоЮридическоеЛицо,
		|	ЕСТЬNULL(втТелефоны.Представление, """") КАК Телефон,
		|	Т.НаименованиеПлательщикаПриПеречисленииНалогов,
		|	Т.КодИМНС,
		|	Т.СвидетельствоДатаВыдачи,
		|	Т.СвидетельствоСерияНомер
		|ИЗ
		|	Справочник.Организации КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ втФактАдреса КАК втФактАдреса
		|		ПО (втФактАдреса.Объект = Т.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ втЮрАдреса КАК втЮрАдреса
		|		ПО Т.Ссылка = втЮрАдреса.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ втРуководители КАК втРуководители
		|		ПО Т.Ссылка = втРуководители.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ втГлавныеБухгалтеры КАК втГлавныеБухгалтеры
		|		ПО Т.Ссылка = втГлавныеБухгалтеры.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ втТелефоны КАК втТелефоны
		|		ПО Т.Ссылка = втТелефоны.Объект
		|ГДЕ
		|	Т.Ссылка В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка
		|ИЗ
		|	Объекты КАК Т
		|ГДЕ
		|	Т.ЭтоУдаление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Объекты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗарегистрированныеОбъекты";
		
		лМенеджерПланаОбмена = ПланыОбмена[лМетаданныеПланаОбмена.Имя];
		лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
		Если НЕ лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 3].Пустой() Тогда
			лТипОбъектаXDTO = лМенеджерПланаОбмена.ТипПоОбъектуМетаданных(ПолучитьМетаданные());
			лВыборка = лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 3].Выбрать();
			Пока лВыборка.Следующий() Цикл
				лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
				ЗаполнитьЗначенияСвойств(лОбъект, лВыборка,,"Ссылка");
				лОбъект.Ссылка = XMLСтрока(лВыборка.Ссылка);
				лОбъект.Код = СтроковыеФункцииКлиентСервер.УбратьЛидирующиеНули(лВыборка.Код);
				Результат.Добавить(лОбъект);
			КонецЦикла;
		КонецЕсли;
		
		Если НЕ лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 2].Пустой() Тогда
			лМассивСсылок = лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 2].Выгрузить().ВыгрузитьКолонку(0);
			лОбъекты = лМенеджерПланаОбмена.ВыгрузитьУдаленияЭлементов(лМассивСсылок, ПолучитьМетаданные());
			Для Каждого лОбъект Из лОбъекты Цикл
				Результат.Добавить(лОбъект);
			КонецЦикла;
		КонецЕсли;

	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОрганизацияЗакрыта(Организация, ДатаПроверки, ВызыватьИсключение = Ложь) Экспорт	
	
	ОрганизацияЗакрытаС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ОрганизацияЗакрыта");
	
	ОрганизацияЗакрыта = Ложь;
	Если ЗначениеЗаполнено(ОрганизацияЗакрытаС) И ДатаПроверки >= ОрганизацияЗакрытаС Тогда
		ОрганизацияЗакрыта = Истина;
	КонецЕсли;
	
	Если ОрганизацияЗакрыта И ВызыватьИсключение Тогда
		ТекстОшибки = "Организация """+Организация+""" не работает с "+Формат(ОрганизацияЗакрытаС,"ДФ=dd.MM.yyyy")+"!";
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат ОрганизацияЗакрыта;
	
КонецФункции
