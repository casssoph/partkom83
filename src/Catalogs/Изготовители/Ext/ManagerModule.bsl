
Функция ПолучитьМетаданные()
	Возврат Метаданные.Справочники.Изготовители;	
КонецФункции

Функция ПолучитьРеквизитыКонтроля(вхМетаданныеОтбора) Экспорт
	Если (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт) тогда
		Возврат (Новый Структура("Шапка", "Наименование,КодСайта"));
	ИначеЕсли (вхМетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog) тогда
		Возврат (Новый Структура("Шапка", "Наименование,КодСайта,ПометкаУдаления"));
	КонецЕсли;
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора) Экспорт
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(вхСсылкаНаОбъект, вхМетаданныеОтбора);
КонецФункции

Функция ВыгрузитьЭлементы(вхТаблицаСсылокНаОбъекты, вхПланОбмена, ВыгружаемыеОбъекты = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	лМетаданныеПланаОбмена = Неопределено;
	лТип = ТипЗнч(вхПланОбмена);
	Если (лТип = Тип("Строка")) тогда
		лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.Найти(вхПланОбмена);
	ИначеЕсли (лТип = Тип("ОбъектМетаданных")) И Метаданные.ПланыОбмена.Содержит(вхПланОбмена) тогда
		лМетаданныеПланаОбмена = вхПланОбмена;
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Неопределено) тогда
		ВызватьИсключение "[ВыгрузитьЭлементы]: неправильный параметр номер 2.";
	КонецЕсли;
	
	Если (лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт) тогда
		
		лЗапрос = Новый Запрос;
		лЗапрос.УстановитьПараметр("ТаблицаСсылок", вхТаблицаСсылокНаОбъекты);
		лЗапрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка
		|ПОМЕСТИТЬ ЗарегистрированныеОбъекты
		|ИЗ
		|	&ТаблицаСсылок КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка,
		|	ВЫБОР
		|		КОГДА Т.Ссылка В
		|				(ВЫБРАТЬ
		|					Справочник.Изготовители.Ссылка
		|				ИЗ
		|					Справочник.Изготовители)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоУдаление
		|ПОМЕСТИТЬ Объекты
		|ИЗ
		|	ЗарегистрированныеОбъекты КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка КАК Ссылка,
		|	Т.Наименование КАК Наименование,
		|	Т.КодСайта КАК Код
		|ИЗ
		|	Справочник.Изготовители КАК Т
		|ГДЕ
		|	Т.Ссылка В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка
		|ИЗ
		|	Объекты КАК Т
		|ГДЕ
		|	Т.ЭтоУдаление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Объекты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗарегистрированныеОбъекты";
		
		лМенеджерПланаОбмена = ПланыОбмена[лМетаданныеПланаОбмена.Имя];
		лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
		Если НЕ лРезультатыЗапроса[2].Пустой() тогда
			лТипОбъектаXDTO = лМенеджерПланаОбмена.ТипПоОбъектуМетаданных(ПолучитьМетаданные());
			лВыборка = лРезультатыЗапроса[2].Выбрать();
			Пока лВыборка.Следующий() цикл
				лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
				лОбъект.Ссылка = лВыборка.Ссылка.УникальныйИдентификатор();
				лОбъект.Код = лВыборка.Код;
				лОбъект.Наименование = лВыборка.Наименование;
				Результат.Добавить(лОбъект);
			КонецЦикла;			
		КонецЕсли;
		
		Если НЕ лРезультатыЗапроса[3].Пустой() тогда
			лМассивСсылок = лРезультатыЗапроса[3].Выгрузить().ВыгрузитьКолонку(0);
			лМенеджерПланаОбмена = ОбщегоНазначения.МенеджерОбъектаПоМетаданным(лМетаданныеПланаОбмена);
			лОбъекты = лМенеджерПланаОбмена.ВыгрузитьУдаленияЭлементов(лМассивСсылок, ПолучитьМетаданные());
			Для Каждого лОбъект Из лОбъекты цикл
				Результат.Добавить(лОбъект);
			КонецЦикла;			
		КонецЕсли;
	ИначеЕсли лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog Тогда 
		лЗапрос = Новый Запрос;
		лЗапрос.УстановитьПараметр("ТаблицаСсылок", вхТаблицаСсылокНаОбъекты);
		лЗапрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Ссылка
		|ПОМЕСТИТЬ ЗарегистрированныеОбъекты
		|ИЗ
		|	&ТаблицаСсылок КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка,
		|	ВЫБОР
		|		КОГДА Т.Ссылка В
		|				(ВЫБРАТЬ
		|					Справочник.Изготовители.Ссылка
		|				ИЗ
		|					Справочник.Изготовители)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоУдаление
		|ПОМЕСТИТЬ Объекты
		|ИЗ
		|	ЗарегистрированныеОбъекты КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка КАК Ссылка,
		|	Т.Наименование КАК Наименование,
		|	Т.КодСайта КАК КодСайта,
		|	Т.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.Изготовители КАК Т
		|ГДЕ
		|	Т.Ссылка В
		|			(ВЫБРАТЬ
		|				Объекты.Ссылка
		|			ИЗ
		|				Объекты
		|			ГДЕ
		|				НЕ Объекты.ЭтоУдаление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Ссылка
		|ИЗ
		|	Объекты КАК Т
		|ГДЕ
		|	Т.ЭтоУдаление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Объекты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗарегистрированныеОбъекты";
		
		лМенеджерПланаОбмена = ПланыОбмена[лМетаданныеПланаОбмена.Имя];
		лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
		Если НЕ лРезультатыЗапроса[2].Пустой() тогда
			лТипОбъектаXDTO = лМенеджерПланаОбмена.ТипПоОбъектуМетаданных(ПолучитьМетаданные());
			лВыборка = лРезультатыЗапроса[2].Выбрать();
			Пока лВыборка.Следующий() цикл
				лОбъект = ФабрикаXDTO.Создать(лТипОбъектаXDTO);
				ЗаполнитьЗначенияСвойств(лОбъект, лВыборка,,"Ссылка");
				лОбъект.Ссылка = XMLСтрока(лВыборка.Ссылка);
				Результат.Добавить(лОбъект);
			КонецЦикла;			
		КонецЕсли;
		
		Если НЕ лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 2].Пустой() тогда
			лМассивСсылок = лРезультатыЗапроса[лРезультатыЗапроса.ВГраница() - 2].Выгрузить().ВыгрузитьКолонку(0);
			лМенеджерПланаОбмена = ОбщегоНазначения.МенеджерОбъектаПоМетаданным(лМетаданныеПланаОбмена);
			лОбъекты = лМенеджерПланаОбмена.ВыгрузитьУдаленияЭлементов(лМассивСсылок, ПолучитьМетаданные());
			Для Каждого лОбъект Из лОбъекты цикл
				Результат.Добавить(лОбъект);
			КонецЦикла;			
		КонецЕсли;

	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗагрузитьЭлемент(вхОбъектXDTO, вхОтправитель) Экспорт
	
	лМетаданныеПланаОбмена = Метаданные.НайтиПоТипу(ТипЗнч(вхОтправитель));
	Если (лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт) тогда
		
		лСсылкаНаОбъект = ПолучитьСсылку(Новый УникальныйИдентификатор(вхОбъектXDTO.Ссылка));
		лОбъект = лСсылкаНаОбъект.ПолучитьОбъект();
		
		Если (лОбъект = Неопределено) тогда
			лОбъект = СоздатьЭлемент();
			лОбъект.УстановитьСсылкуНового(лСсылкаНаОбъект);
			лОбъект.УстановитьНовыйКод();
		КонецЕсли;
		
		лОбъект.КодСайта = вхОбъектXDTO.Код;
		лОбъект.Наименование = вхОбъектXDTO.Наименование;
		лОбъект.ОбменДанными.Загрузка = Истина;
		лОбъект.ОбменДанными.Отправитель = вхОтправитель;
		лОбъект.Записать();
		
		// + 20170522 Пушкин
		ПроверкаИзготовителейПоНаименованию(вхОбъектXDTO.Наименование, ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() );
		// - 20170522 Пушкин
		
	КонецЕсли;
	
КонецПроцедуры

// + 20170522 Пушкин
Процедура ПроверкаИзготовителейПоНаименованию(пар_Наименование, пар_вариант_оповещения_через_e_mail = Ложь ) экспорт
	
	Если НЕ ЗначениеЗаполнено(пар_Наименование) тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изготовители.Ссылка как СЦылка,
	|	Изготовители.Код,
	|	Изготовители.КодСайта,
	|	Изготовители.Наименование
	|ИЗ
	|	Справочник.Изготовители КАК Изготовители
	|ГДЕ
	|	Изготовители.Наименование подобно &Наименование";

	Запрос.УстановитьПараметр("Наименование", пар_Наименование);
	Результат = Запрос.Выполнить().Выгрузить();
	
	кол_вар = Результат.Количество();
	Если кол_вар > 1 тогда
		
		Аларм_Заголовок = "Обнаружены дубли в спр.Изготовители по наименованию ["+ СокрЛП(пар_Наименование) +"] в кол-ве " + СокрЛП(кол_вар) + "шт.";
		Аларм_Содержимое = "";
		
		счс = 0;
		Для каждого стртз из Результат цикл
			счс = счс + 1;
			Аларм_Содержимое = Аларм_Содержимое + Символы.ПС + СокрлП(счс) + ";" + стртз.Наименование + ";" + стртз.Код + ";" + стртз.КодСайта + ";" + стртз.СЦылка.УникальныйИдентификатор() + ";";
		КонецЦикла;
		
		Если пар_вариант_оповещения_через_e_mail тогда
			Аларм_Источник = Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом;
			РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Аларм_Источник,Аларм_Содержимое,Аларм_Заголовок);	
		Иначе
			Сообщить(Аларм_Заголовок + Символы.ПС + Символы.ПС + Аларм_Содержимое);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
// - 20170522 Пушкин
