Функция ПолучитьРеквизитыКонтроля(МетаданныеОтбора) Экспорт
	
	СтруктураПроверяемыхРеквизитов = Новый Структура;
	
	Если МетаданныеОтбора = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт Тогда
		СтруктураПроверяемыхРеквизитов.Вставить("Шапка", "Наименование,Код,ТранспортнаяКомпания,ГосударственныйНомер,Автомобиль,ФизЛицо,Родитель");
	КонецЕсли;
	
	Возврат СтруктураПроверяемыхРеквизитов;
	
КонецФункции

Функция ПолучитьЗначенияРеквизитовКонтроля(СсылкаНаОбъект, МетаданныеОтбора) Экспорт
	
	Возврат	РаботаСПоследовательностямиКлиентСервер.ПолучитьЗначенияРеквизитовКонтроля(СсылкаНаОбъект, МетаданныеОтбора);
	
КонецФункции

Функция ВыгрузитьЭлементы(ТаблицаСсылокНаОбъекты, МетаданныеПланаОбмена, ВыгружаемыеОбъекты = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	ОбъектыОбмена = ДанныеЗарегистрированныхОбъектов(ТаблицаСсылокНаОбъекты);
	Если МетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog Тогда
		//Добавлено Валиахметов А.А. 07.03.2018 Закомментировал
		//ВыгрузитьДанныеПланаОбменПартКом83_TopLog(Результат, ОбъектыОбмена)	
		//Конец Добавлено Валиахметов А.А. 07.03.2018
	ИначеЕсли МетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_Сайт Тогда 
		ВыгрузитьДанныеПланаОбменаОбменПартКом83_Сайт(Результат, ОбъектыОбмена)
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗагрузитьЭлемент(ОбъектXDTO, Отправитель, Отказ, Параметры) Экспорт
	
	лМетаданныеПланаОбмена = Метаданные.НайтиПоТипу(ТипЗнч(Отправитель));
	Если (лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog
		Или лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog_РТУ) тогда
		Попытка
			лСсылкаНаОбъект = ПолучитьСсылку(Новый УникальныйИдентификатор(ОбъектXDTO.Ссылка));
			лОбъект = лСсылкаНаОбъект.ПолучитьОбъект();
			
			Если (лОбъект = Неопределено) тогда
				Если ОбъектXDTO.ЭтоГруппа Тогда 
					лОбъект = СоздатьГруппу();
				Иначе
					лОбъект = СоздатьЭлемент();
				КонецЕсли;
				лОбъект.УстановитьСсылкуНового(лСсылкаНаОбъект);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(лОбъект, ОбъектXDTO, "Наименование,ПометкаУдаления");
			Если Не лОбъект.ЭтоГруппа Тогда 
				ЗаполнитьЗначенияСвойств(лОбъект, ОбъектXDTO, "Телефон,ДатаУвольнения,ID,Служебный,МаркаАвтомобиля");
				Если Не ПустаяСтрока(ОбъектXDTO.ТранспортнаяКомпания) Тогда 
					лОбъект.ТранспортнаяКомпания = Справочники.ТорговыеТочки.ПолучитьСсылку(Новый УникальныйИдентификатор(ОбъектXDTO.ТранспортнаяКомпания)).Владелец;
				Иначе
					лОбъект.ТранспортнаяКомпания = Неопределено;
				КонецЕсли;
				лОбъект.ГосударственныйНомер = ОбъектXDTO.ГосНомер;
			КонецЕсли;
			Если Не ПустаяСтрока(ОбъектXDTO.Родитель) Тогда 
				лОбъект.Родитель = ПолучитьСсылку(Новый УникальныйИдентификатор(ОбъектXDTO.Родитель));
			Иначе
				лОбъект.Родитель = Неопределено;	
			КонецЕсли;
			лОбъект.Записать();
			//Семенов И.П. 07.02.2019 XX-1768(
			ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(лОбъект.Ссылка, ОбъектXDTO);
			//)Семенов И.П.
		Исключение
			СтруктураОшибки = Новый Структура;
			СтруктураОшибки.Вставить("ОбъектXDTO", ОбъектXDTO.Тип().Имя);
			СтруктураОшибки.Вставить("GUID", ОбъектXDTO.Ссылка);
			СтруктураОшибки.Вставить("ИмяОбъектаМетаданных", "Водители");
			СтруктураОшибки.Вставить("СообщениеОбОшибке", ОписаниеОшибки());
			СтруктураОшибки.Вставить("НомерСообщения", Параметры.НомерСообщения);
			СтруктураОшибки.Вставить("ДатаЗагрузкиСообщения", ТекущаяДата());
			СтруктураОшибки.Вставить("НомерПотока", ?(лМетаданныеПланаОбмена = Метаданные.ПланыОбмена.ОбменПартКом83_TopLog, 0, 1));
			ОбменДаннымиКлиентСервер.ЗаписатьОшибкиПриОбменеСТопЛог(СтруктураОшибки);
			//Семенов И.П. 07.02.2019 XX-1768(
			лСсылкаНаОбъект = ПолучитьСсылку(Новый УникальныйИдентификатор(ОбъектXDTO.Ссылка));
			ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(лСсылкаНаОбъект, ОбъектXDTO,,Истина,СтруктураОшибки.СообщениеОбОшибке);
			//)Семенов И.П.
		КонецПопытки;
					
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьДанныеПланаОбменаОбменПартКом83_Сайт(МассивОбъектов, ОбъектыОбмена)
	
	URI = ПланыОбмена.ОбменПартКом83_Сайт.URIПространстваИмен();
	ТипОбъектаXDTO = ФабрикаXDTO.Тип(URI, "Справочники.Водители");
	ТипУдалениеОбъекта = ФабрикаXDTO.Тип(URI, "УдалениеОбъекта");
	
	Выборка = ОбъектыОбмена[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ОбъектXDTO.Ссылка = Выборка.Ссылка.УникальныйИдентификатор();
		ОбъектXDTO.parent_uuid = Выборка.Ссылка.Родитель.УникальныйИдентификатор();
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, Выборка,,"Ссылка");
		//Семенов И.П. 07.02.2019 XX-1768(
		ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Выборка.Ссылка, ОбъектXDTO);
		//)Семенов И.П.
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;	
		
	Выборка = ОбъектыОбмена[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипУдалениеОбъекта);
		ОбъектXDTO.ТипОбъекта = "Справочники.Водители";
		ОбъектXDTO.Ссылка = Выборка.Ссылка.УникальныйИдентификатор();
		//Семенов И.П. 07.02.2019 XX-1768(
		ОбменДаннымиКлиентСервер.ДобавитьСтрокуИсторииПоОбъекту(Выборка.Ссылка, ОбъектXDTO);
		//)Семенов И.П.
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;

	
КонецПроцедуры

Процедура ВыгрузитьДанныеПланаОбменПартКом83_TopLog(МассивОбъектов, ОбъектыОбмена)
	
	URI = ПланыОбмена.ОбменПартКом83_TopLog.URIПространстваИмен();
	ТипОбъектаXDTO = ФабрикаXDTO.Тип(URI, "Справочники.Водители");
	ТипУдалениеОбъекта = ФабрикаXDTO.Тип(URI, "УдалениеОбъекта");
	
	Выборка = ОбъектыОбмена[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипОбъектаXDTO);
		ОбъектXDTO.Ссылка = XMLСтрока(Выборка.Ссылка);
		ЗаполнитьЗначенияСвойств(ОбъектXDTO, Выборка,,"Ссылка");
		
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;	
		
	Выборка = ОбъектыОбмена[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектXDTO = ФабрикаXDTO.Создать(ТипУдалениеОбъекта);
		ОбъектXDTO.ТипОбъекта = "Справочники.Водители";
		ОбъектXDTO.Ссылка = XMLСтрока(Выборка.Ссылка);
		
		МассивОбъектов.Добавить(ОбъектXDTO);
	КонецЦикла;

	
КонецПроцедуры

Функция ДанныеЗарегистрированныхОбъектов(ТаблицаСсылокНаОбъекты)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВнешняяТаблица.Ссылка
	                      |ПОМЕСТИТЬ ЗарегистрированныеОбъекты
	                      |ИЗ
	                      |	&ТаблицаСсылокНаОбъекты КАК ВнешняяТаблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.Водители) КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.Водители).ВерсияДанных ЕСТЬ NULL
	                      |				И (ВЫРАЗИТЬ(ЗарегистрированныеОбъекты.Ссылка КАК Справочник.Водители)) <> ЗНАЧЕНИЕ(Справочник.Водители.ПустаяСсылка)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЭтоУдаление
	                      |ПОМЕСТИТЬ Объекты
	                      |ИЗ
	                      |	ЗарегистрированныеОбъекты КАК ЗарегистрированныеОбъекты
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Объекты.Ссылка,
	                      |	Объекты.Ссылка.Наименование КАК Наименование,
	                      |	Объекты.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	                      |	ЕСТЬNULL(Объекты.Ссылка.Автомобиль.Наименование, """") КАК Автомобиль,
	                      |	ЕСТЬNULL(Объекты.Ссылка.ГосударственныйНомер, """") КАК ГосударственныйНомер,
	                      |	ЕСТЬNULL(Объекты.Ссылка.ТранспортнаяКомпания.ОсновнаяТорговаяТочка.Наименование, """") КАК ТранспортнаяКомпания,
	                      |	Объекты.Ссылка.Код КАК driver_code,
	                      |	ЕСТЬNULL(Объекты.Ссылка.Телефон, """") КАК phone_number,
	                      |	Объекты.Ссылка.Наименование КАК name,
	                      |	ЕСТЬNULL(Объекты.Ссылка.МаркаАвтомобиля, """") КАК vehicle,
	                      |	ЕСТЬNULL(Объекты.Ссылка.ГосударственныйНомер, """") КАК vehicle_number,
	                      |	ВЫБОР
	                      |		КОГДА Объекты.Ссылка.ЭтоГруппа
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК is_folder,
	                      |	ЕСТЬNULL(Объекты.Ссылка.Родитель.Код, 0) КАК parent_code,
	                      |	ВЫБОР
	                      |		КОГДА Объекты.Ссылка.ПометкаУдаления
	                      |			ТОГДА ""delete""
	                      |		ИНАЧЕ ""change""
	                      |	КОНЕЦ КАК operation_type
	                      |ИЗ
	                      |	Объекты КАК Объекты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                      |		ПО Объекты.Ссылка.ФизЛицо.Ссылка = КонтактнаяИнформация.Объект
	                      |			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	                      |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛицаДомашний))
	                      |ГДЕ
	                      |	НЕ Объекты.ЭтоУдаление
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Объекты.Ссылка
	                      |ИЗ
	                      |	Объекты КАК Объекты
	                      |ГДЕ
	                      |	Объекты.ЭтоУдаление");
	Запрос.УстановитьПараметр("ТаблицаСсылокНаОбъекты", ТаблицаСсылокНаОбъекты);
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции
