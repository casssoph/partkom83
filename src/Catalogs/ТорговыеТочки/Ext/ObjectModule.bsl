Перем ЗарегистрироватьВОбмене_ДляСайта;
Перем ЗарегистрироватьВОбмене;

Перем ЗарегистрироватьВОбмене_ОбменПартКом83_77;

Процедура ПередЗаписью(Отказ)
	
	Если ЭтоНовый() Тогда
		ЗарегистрироватьВОбмене = Истина;
	Иначе
		ЗарегистрироватьВОбмене =	Владелец <> Ссылка.Владелец ИЛИ
									Код <> Ссылка.Код Или
									ВРЕГ(СокрЛП(Наименование)) <> ВРЕГ(СокрЛП(Ссылка.Наименование));
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьВОбмене_ДляСайта =	ГородПоставки <> Ссылка.ГородПоставки ИЛИ
										ГородПоставки2 <> Ссылка.ГородПоставки2;
	
	Если ТекущаяДата() > Константы.ДатаЗаявкиСоздаютсяВ83.Получить() Тогда
		ЗарегистрироватьВОбмене_ОбменПартКом83_77 = Истина;
	КонецЕсли;
	
	
	Если НЕ ЭтоНовый() И ЗначениеЗаполнено(Владелец) И ОбщегоНазначения.СсылкаСуществует(Владелец) тогда
		лРеквизитыВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, "Код,ОсновнаяТорговаяТочка");
		Если (лРеквизитыВладельца.ОсновнаяТорговаяТочка = Ссылка) тогда
			Если (лРеквизитыВладельца.Код <> Код) тогда
				// надо изменить код контрагента, потому что изменился код основной торговой точки
				лОбъект = Владелец.ПолучитьОбъект();
				лОбъект.Код = Код;
				лОбъект.ОбменДанными.Загрузка = Истина;
				лОбъект.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	МаршрутыДоставки.Очистить();
	Если ЗначениеЗаполнено(МаршрутДоставки) Тогда
		нс = МаршрутыДоставки.Добавить();
		нс.МаршрутДоставки = МаршрутДоставки;
	КонецЕсли;
	Если ЗначениеЗаполнено(МаршрутДоставки2) Тогда
		нс = МаршрутыДоставки.Добавить();
		нс.МаршрутДоставки = МаршрутДоставки2;
	КонецЕсли;
	Если ЗначениеЗаполнено(МаршрутДоставки3) Тогда
		нс = МаршрутыДоставки.Добавить();
		нс.МаршрутДоставки = МаршрутДоставки3;
	КонецЕсли;
	Если ЗначениеЗаполнено(МаршрутДоставки4) Тогда
		нс = МаршрутыДоставки.Добавить();
		нс.МаршрутДоставки = МаршрутДоставки4;
	КонецЕсли;
	
	Если ЗарегистрироватьВОбмене
		// 25.12.18 Строганов Роман > 
		И ДополнительныеСвойства.Свойство("ОтключитьМеханизмРегистрацииОбъектов") = Неопределено Тогда
		// 25.12.18 Строганов Роман <
		ОбменДаннымиКлиентСервер.ЗарегистрироватьКОбменуБИТ(Ссылка, ОбменДанными.Отправитель);
	КонецЕсли;
	
	Если ЗарегистрироватьВОбмене_ДляСайта 
		// 25.12.18 Строганов Роман > 
		И ДополнительныеСвойства.Свойство("ОтключитьМеханизмРегистрацииОбъектов") = Неопределено Тогда
		// 25.12.18 Строганов Роман <
		ПланыОбмена.ОбменПартКом83_Сайт.ЗарегистрироватьВОбмен(Владелец);
	КонецЕсли;
	
	_Филиал = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регион, "Филиал");
	
	Если ЗначениеЗаполнено(_Филиал) Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ФилиалыТорговыхТочек.ТорговаяТочка,
		|	ФилиалыТорговыхТочек.Филиал
		|ИЗ
		|	РегистрСведений.ФилиалыТорговыхТочек КАК ФилиалыТорговыхТочек
		|ГДЕ
		|	ФилиалыТорговыхТочек.ТорговаяТочка = &ТорговаяТочка");
		Запрос.УстановитьПараметр("ТорговаяТочка", Ссылка);
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			
			МЗ = РегистрыСведений.ФилиалыТорговыхТочек.СоздатьМенеджерЗаписи();
			МЗ.ТорговаяТочка = Ссылка;
			МЗ.Филиал = _Филиал;
			МЗ.Записать();
			
		Иначе
			
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			
			_ФилиалВРегистре = Выборка.Филиал;
			
			Если _ФилиалВРегистре <> _Филиал Тогда
				
				МЗ = РегистрыСведений.ФилиалыТорговыхТочек.СоздатьМенеджерЗаписи();
				МЗ.ТорговаяТочка = Ссылка;
				МЗ.Филиал = _Филиал;
				МЗ.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ЗарегистрироватьВОбмене_ОбменПартКом83_77 тогда
		ОбменДаннымиКлиентСервер.ЗарегистрироватьОбъект(ЭтотОбъект, ПланыОбмена.ОбменПартКом83_77.ПолучитьМетаданные());
	КонецЕсли;
	
КонецПроцедуры

//Углев 11.07.2018
Функция ВыгрузитьВОбменТоплог() Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	Ошибка = Ложь;
	СообщениеДиагностики = "";
		
	Узел = ОбменДаннымиКлиентСервер.ПолучитьИсходящийУзелОбмена(Метаданные.ПланыОбмена.ОбменПартКом83_TopLog, 3);
	Если НЕ ЗначениеЗаполнено(Узел) Тогда 
		СообщениеДиагностики = СообщениеДиагностики + "Не найден узел обмена для выгрузки в Топлог." + Символы.ПС;
		Ошибка = Истина;
	КонецЕсли;
	
	Если Ошибка = Ложь Тогда  
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
		СообщениеДиагностики = СообщениеДиагностики + "Торговая точка зарегистрирована в обмене с Топ Лог";		
	Иначе
		СообщениеДиагностики = "Не удалось зарегистрировать элемент справочника в обмене с Топлог, по причине:" + Символы.ПС + СообщениеДиагностики;
	КонецЕсли;
	
	СтруктураВозврата.Вставить("Ошибка", Ошибка);
	СтруктураВозврата.Вставить("СообщениеДиагностики", СообщениеДиагностики);
	Возврат СтруктураВозврата;
	
КонецФункции


ЗарегистрироватьВОбмене_ДляСайта = Ложь;
ЗарегистрироватьВОбмене_ОбменПартКом83_77 = Ложь;
