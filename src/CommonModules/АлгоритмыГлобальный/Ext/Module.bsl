Процедура Алгоритмы_УстановитьПараметрыСеанса() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураАлгоритмов = Новый Структура;
	Если Константы.АлгоритмыИспользовать.Получить() = Истина Тогда		
		Запрос = Новый Запрос;		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т1.Ссылка,
		|	Т1.Код,
		|	Т1.Наименование,
		|	Т1.Ключ,
		|	Т1.ТекстАлгоритмаХранилище
		|ИЗ
		|	Справочник.Алгоритмы КАК Т1
		|ГДЕ
		|	Активность = Истина";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Попытка
				СтруктураАлгоритмов.Вставить(Выборка.Ключ, Выборка.ТекстАлгоритмаХранилище);
			Исключение
				ЗаписьЖурналаРегистрации("КэшированиеАлгоритмовПриСтарте", УровеньЖурналаРегистрации.Ошибка, , Выборка.Ссылка, "Не удалось закэшировать алгоритм: "+СокрЛП(Выборка.Код)+" "+СокрЛП(Выборка.Наименование)+"; "+ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыСеанса.КэшАлгоритмов = Новый ФиксированнаяСтруктура(СтруктураАлгоритмов);

КонецПроцедуры

Функция АлгоритмыСуществуетЗамена(КлючЗамены) Экспорт
	Возврат ПараметрыСеанса.КэшАлгоритмов.Свойство(КлючЗамены);
КонецФункции

Функция АлгоритмыПолучитьЗамену(КлючЗамены) Экспорт
	КэшАлгоритма = Неопределено;
	ПараметрыСеанса.КэшАлгоритмов.Свойство(КлючЗамены, КэшАлгоритма);
	Если Не КэшАлгоритма = Неопределено Тогда
		Возврат КэшАлгоритма.Получить();
	КонецЕсли;	
КонецФункции


Процедура АлгоритмыВыполнитьЗаменуПроцедуры(КлючЗамены) Экспорт
	//КэшАлгоритма = Неопределено;
	//ПараметрыСеанса.КэшАлгоритмов.Свойство(КлючЗамены, КэшАлгоритма);
	//
	//Если Не КэшАлгоритма = Неопределено Тогда
	//	КэшАлгоритма = КэшАлгоритма.Получить();
	//	
	//	Выполнить(КэшАлгоритма);
	//КонецЕсли;
	
КонецПроцедуры

Функция АлгоритмыВыполнитьЗаменуФункции(КлючЗамены) Экспорт
	//КэшАлгоритма = Неопределено;
	//ПараметрыСеанса.КэшАлгоритмов.Свойство(КлючЗамены, КэшАлгоритма);
	//
	//Если Не КэшАлгоритма = Неопределено Тогда
	//	КэшАлгоритма = КэшАлгоритма.Получить();
	//	
	//	ЗначениеВозврата = Неопределено;
	//	
	//	Выполнить(КэшАлгоритма);
	//	
	//	Возврат ЗначениеВозврата;
	//КонецЕсли;
КонецФункции



	