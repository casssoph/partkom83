#Область СтатусыДокументов
Функция ПолучитьСледующийСтатус(Статус) Экспорт
	//заказ поставщику
	Если Статус = Справочники.СтатусыДокументов.НовыйЗаказПоставщику Тогда
		Возврат Справочники.СтатусыДокументов.ПроведенЗаказПоставщику;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПроведенЗаказПоставщику Тогда
		Возврат Справочники.СтатусыДокументов.ОтправленПоставщику;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ОтправленПоставщику Тогда
		Возврат Справочники.СтатусыДокументов.ПолученОтветПоставщика;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПолученОтветПоставщика Тогда
		Возврат Справочники.СтатусыДокументов.ОбработанПоставщиком;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ОбработанПоставщиком Тогда
		Возврат Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт;
		
	//перемещение
		
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПеремещениеТоваровНовый Тогда
		Если глЗначениеПеременной("ПеремещенияВыгружаютсяИз77") Тогда 
			Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровПоступил;
		Иначе
			Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровВыгруженВТопЛог;
		КонецЕсли;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПеремещениеТоваровВыгруженВТопЛог Тогда
		Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровПоступил;
		
	//поступление товаров, услуг
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровНовый Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровОтгружен;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровОтгружен Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровПринят;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровПринят Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен;
		
	//не нашли куда подвинуть
	Иначе
		Возврат Неопределено;		
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПредыдущийСтатус(Статус) Экспорт
	//заказ поставщику
	Если Статус = Справочники.СтатусыДокументов.ПроведенЗаказПоставщику Тогда
		Возврат Справочники.СтатусыДокументов.НовыйЗаказПоставщику;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ОтправленПоставщику Тогда
		Возврат Справочники.СтатусыДокументов.ПроведенЗаказПоставщику;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПолученОтветПоставщика Тогда
		Возврат Справочники.СтатусыДокументов.ОтправленПоставщику;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ОбработанПоставщиком Тогда
		Возврат Справочники.СтатусыДокументов.ПолученОтветПоставщика;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт Тогда
		Возврат Справочники.СтатусыДокументов.ОбработанПоставщиком;
		
	//перемещение
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПеремещениеТоваровВыгруженВТопЛог Тогда
		Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровНовый;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПеремещениеТоваровПоступил Тогда
		Если глЗначениеПеременной("ПеремещенияВыгружаютсяИз77") Тогда 
			Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровНовый;
		Иначе
			Возврат Справочники.СтатусыДокументов.ПеремещениеТоваровВыгруженВТопЛог;
		КонецЕсли;
	//поступление товаров, услуг
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровПринят;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровПринят Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровОтгружен;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровОтгружен Тогда
		Возврат Справочники.СтатусыДокументов.ПоступлениеТоваровНовый;
	ИначеЕсли Статус = Справочники.СтатусыДокументов.ПоступлениеТоваровДоставлен Тогда
		
	//не нашли куда подвинуть
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ОбновитьЗаписьСтрокПрихода_старая(СсылкаНаДокумент, ИдентификаторСтроки, ИдентификаторПартии77 = Неопределено, ТорговаяТочка = Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		НоваяЗапись = Справочники.ИдентификаторыСтрокПриходов.СоздатьЭлемент();
			СсылкаНаЭлемент = Справочники.ИдентификаторыСтрокПриходов.ПолучитьСсылку();
		НоваяЗапись.УстановитьСсылкуНового(СсылкаНаЭлемент);
		НоваяЗапись.Наименование = Строка(СсылкаНаЭлемент.УникальныйИдентификатор());
		НоваяЗапись.Дата = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаНаДокумент, "Дата");
		Попытка
			НоваяЗапись.ДоговорКонтрагента = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаНаДокумент, "ДоговорКонтрагента");
		Исключение
			НоваяЗапись.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			
		КонецПопытки;
		НоваяЗапись.Приход = СсылкаНаДокумент;
		Если ИдентификаторПартии77 <> Неопределено Тогда
			НоваяЗапись.ИдентификаторПартии77 = ИдентификаторПартии77;
		КонецЕсли;
		Если ТорговаяТочка <> Неопределено Тогда
			НоваяЗапись.ТорговаяТочка = ТорговаяТочка;
		КонецЕсли;
		НоваяЗапись.Записать();
		Возврат НоваяЗапись.Ссылка;
	Иначе
		НоваяЗапись = ИдентификаторСтроки.ПолучитьОбъект();
		НоваяЗапись.Дата = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаНаДокумент, "Дата");
		Если ИдентификаторПартии77 <> Неопределено Тогда
			НоваяЗапись.ИдентификаторПартии77 = ИдентификаторПартии77;
		КонецЕсли;
		Если ТорговаяТочка <> Неопределено Тогда
			НоваяЗапись.ТорговаяТочка = ТорговаяТочка;
		КонецЕсли;
		НоваяЗапись.Записать();
		Возврат ИдентификаторСтроки;
	КонецЕсли;
	
КонецФункции

//структура строки прихода:
//	- ИдентификаторСтроки (СправочникСсылка.ИдентификаторыСтрокПрихода; 
//				Строка, 36)
//	- Дата (дата образующего партию документа)
//	- Приход (ДокументСсылка.ОприходованиеТоваров; 
//				ДокументСсылка.ПерестикеровкаПереоценка; 
//				ДокументСсылка.ВводНачальныхОстатковПоРегиструТоварыНаСкладах;
//				ДокументСсылка.ВозвратТоваровОтПокупателя;
//				ДокументСсылка.ПоступлениеТоваровУслуг)
//	- СкладОтправитель (СправочникСсылка.Склады)
//	- СтрокаЗаявки (СправочникСсылка.ИдентификаторыСтрокЗаявок)
//	- ДоговорКонтрагента (СправочникСсылка.ДоговорыКонтрагентов)
//	- НомерГТД (СправочникСсылка.НомераГТД)
//	- СтранаПроисхождения (СправочникСсылка.СтраныМира)
//	- ИдентификаторПартии77 (Строка, 9)
//	- ТорговаяТочка (СправочникСсылка.ТорговыеТочки)
Функция ОбновитьЗаписьСтрокПрихода(СсылкаНаДокумент, СтруктураСтрокиПрихода) Экспорт
	Если НЕ ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если НЕ (ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ОприходованиеТоваров")
		ИЛИ ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПерестикеровкаПереоценка")
		ИЛИ ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ВводНачальныхОстатковПоРегиструТоварыНаСкладах")
		ИЛИ ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		ИЛИ ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")) Тогда
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если ТипЗнч(СтруктураСтрокиПрихода) <> Тип("Структура") Тогда
		Возврат Неопределено;
		
	КонецЕсли;
	
	ИдентификаторСтроки = Неопределено;
	Если СтруктураСтрокиПрихода.Свойство("ИдентификаторСтроки", ИдентификаторСтроки) = Неопределено Тогда
		НоваяЗапись = Справочники.ИдентификаторыСтрокПриходов.СоздатьЭлемент();
		СсылкаНаЭлемент = Справочники.ИдентификаторыСтрокПриходов.ПолучитьСсылку();
		НоваяЗапись.УстановитьСсылкуНового(СсылкаНаЭлемент);
		НоваяЗапись.Наименование = Строка(СсылкаНаЭлемент.УникальныйИдентификатор());
		
	Иначе
		Если ТипЗнч(ИдентификаторСтроки) = Тип("Строка") Тогда
			Попытка
				СсылкаНаЭлемент = Новый УникальныйИдентификатор(ИдентификаторСтроки);
				НоваяЗапись = Справочники.ИдентификаторыСтрокПриходов.ПолучитьСсылку(СсылкаНаЭлемент);
				Если ПустаяСтрока(НоваяЗапись.Наименование) Тогда
					Возврат Неопределено;
					
				КонецЕсли;
				
			Исключение
				Возврат Неопределено;
				
			КонецПопытки;
			
			НоваяЗапись = НоваяЗапись.ПолучитьОбъект();
			
		ИначеЕсли ТипЗнч(ИдентификаторСтроки) = Тип("СправочникСсылка.ИдентификаторыСтрокПриходов") Тогда
			Попытка
				НоваяЗапись = ИдентификаторСтроки.ПолучитьОбъект();
			Исключение
				Возврат Неопределено;
				
			КонецПопытки;
			
		Иначе
			Возврат Неопределено;
			
		КонецЕсли;
						
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.Дата) Тогда
		Если СтруктураСтрокиПрихода.Свойство("Дата") = Неопределено Тогда
			НоваяЗапись.Дата = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаНаДокумент, "Дата");
			
		Иначе
			НоваяЗапись.Дата = СтруктураСтрокиПрихода.Дата;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.Приход) Тогда
		НоваяЗапись.Приход = СсылкаНаДокумент;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.СкладОтправитель)
		И СтруктураСтрокиПрихода.Свойство("СкладОтправитель") <> Неопределено Тогда
		НоваяЗапись.СкладОтправитель = СтруктураСтрокиПрихода.СкладОтправитель;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НоваяЗапись.СтрокаЗаявки)
		И СтруктураСтрокиПрихода.Свойство("СтрокаЗаявки") <> Неопределено Тогда
		НоваяЗапись.СтрокаЗаявки = СтруктураСтрокиПрихода.СтрокаЗаявки;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.ДоговорКонтрагента) Тогда
		Если СтруктураСтрокиПрихода.Свойство("ДоговорКонтрагента") = Неопределено Тогда
			Попытка
				НоваяЗапись.ДоговорКонтрагента = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаНаДокумент, "ДоговорКонтрагента");
				
			Исключение
				НоваяЗапись.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			
			КонецПопытки;
			
		Иначе
			НоваяЗапись.ДоговорКонтрагента = СтруктураСтрокиПрихода.ДоговорКонтрагента;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.НомерГТД)
		И СтруктураСтрокиПрихода.Свойство("НомерГТД") <> Неопределено Тогда
		НоваяЗапись.НомерГТД = СтруктураСтрокиПрихода.НомерГТД;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.СтранаПроисхождения)
		И СтруктураСтрокиПрихода.Свойство("СтранаПроисхождения") <> Неопределено Тогда
		НоваяЗапись.СтранаПроисхождения = СтруктураСтрокиПрихода.СтранаПроисхождения;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.ИдентификаторПартии77)
		И СтруктураСтрокиПрихода.Свойство("ИдентификаторПартии77") <> Неопределено Тогда
		НоваяЗапись.ИдентификаторПартии77 = СтруктураСтрокиПрихода.ИдентификаторПартии77;
		
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(НоваяЗапись.ТорговаяТочка)
		И СтруктураСтрокиПрихода.Свойство("ТорговаяТочка") <> Неопределено Тогда
		НоваяЗапись.ТорговаяТочка = СтруктураСтрокиПрихода.ТорговаяТочка;
		
	КонецЕсли;
	
	НоваяЗапись.Записать();
	
	Возврат НоваяЗапись.Ссылка;
	
	
КонецФункции

Функция ПолучитьПоследнююКорректировку(СсылкаДокументОснование, Проведен = Истина) Экспорт
	Запрос = Новый Запрос;
	Если ТипЗнч(СсылкаДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Запрос.УстановитьПараметр("СтатусДокумента", ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаДокументОснование,"СтатусДокумента"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КорректировкаПоступленияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.КорректировкаПоступленияТоваровУслуг КАК КорректировкаПоступленияТоваровУслуг
		|ГДЕ
		|	КорректировкаПоступленияТоваровУслуг.Проведен
		|	И КорректировкаПоступленияТоваровУслуг.ДокументОснование = &ДокументОснование
		|	И КорректировкаПоступленияТоваровУслуг.СтатусДокумента = &СтатусДокумента";
		
	ИначеЕсли ТипЗнч(СсылкаДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.УстановитьПараметр("СтатусДокумента", ОбщегоНазначения.ПолучитьЗначениеРеквизита(СсылкаДокументОснование,"СтатусДокумента"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КорректировкаЗаказаПоставщику.Ссылка
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику КАК КорректировкаЗаказаПоставщику
		|ГДЕ
		|	КорректировкаЗаказаПоставщику.Проведен
		|	И КорректировкаЗаказаПоставщику.ДокументОснование = &ДокументОснование
		|	И КорректировкаЗаказаПоставщику.СтатусДокумента = &СтатусДокумента";
		
	ИначеЕсли ТипЗнч(СсылкаДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КорректировкаПеремещенияТоваров.Ссылка
		|ИЗ
		|	Документ.КорректировкаПеремещенияТоваров КАК КорректировкаПеремещенияТоваров
		|ГДЕ
		|	КорректировкаПеремещенияТоваров.ДокументОснование = &ДокументОснование";
		
		Если Проведен Тогда
			Запрос.Текст = Запрос.Текст + " И КорректировкаПеремещенияТоваров.Проведен";
		КонецЕсли;
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаДокументОснование);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
		
КонецФункции

Функция ПолучитьТекстДолгаПоВзаиморасчетам(ДоговорКонтрагента, Знач Долг) 

	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат "Введена не вся информация для расчета долга.";
	КонецЕсли;

	//ТекстПодписи = ?(ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом,
	//               "По договору","По сделке");
	
	ТекстПодписи = "По договору";

	Если ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
		ТекстПодписи = ТекстПодписи + " """ + Нрег(ДоговорКонтрагента.ВидДоговора) + """";
	Иначе
		ТекстПодписи = ТекстПодписи + " " + Нрег(ДоговорКонтрагента.ВидДоговора);
	КонецЕсли;

	Если Долг = Неопределено Тогда
		ТекстПодписи = ТекстПодписи + " долг не рассчитан";

	ИначеЕсли Долг = 0 Тогда
		ТекстПодписи = ТекстПодписи + " нет долга";

	Иначе
		Если Долг > 0 Тогда
			ТекстПодписи = ТекстПодписи + " долг контрагента";
		Иначе
			ТекстПодписи = ТекстПодписи + " долг компании";
			Долг = (-1) * Долг;
		КонецЕсли;

		ТекстПодписи = ТекстПодписи + " " +
		               ОбщегоНазначения.ФорматСумм(Долг, ДоговорКонтрагента.ВалютаВзаиморасчетов);

	КонецЕсли;

	Возврат ТекстПодписи;

КонецФункции

Функция ПолучитьОстатокПоВзаиморасчетам(лДоговор) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыОстатки.СуммаУпрОстаток КАК Долг
	|ИЗ
	|	РегистрНакопления.Взаиморасчеты.Остатки(, ДоговорКонтрагента = &Договор) КАК ВзаиморасчетыОстатки";
	Запрос.УстановитьПараметр("Договор", лДоговор);
	
	Возврат ПолучитьТекстДолгаПоВзаиморасчетам(лДоговор, Запрос.Выполнить().Выгрузить().Итог("Долг"));
	
КонецФункции
#КонецОбласти

#Область ИсторияСтрокЗаявок
Процедура СформироватьПолнуюИсторию(вхСтруктураСпискаСтрок, выхТаблицаИстории) Экспорт
	Если вхСтруктураСпискаСтрок.Свойство("ТекДокумент") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекДокумент) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекСостояние") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекСостояние) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекДатаРегистрации") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекДатаРегистрации) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекСтроки") Тогда
		Если вхСтруктураСпискаСтрок.ТекСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТабИстории = выхТаблицаИстории.СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	//1. новая заявка
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Заявки.Период, СЕКУНДА, -2)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Заявки.Период, СЕКУНДА, -3) КОНЕЦ КАК Период,
	|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	|	КОНЕЦ КАК Состояние,
	|	Заявки.КоличествоПриход КАК Количество,
	|	Заявки.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Заявки
	|;";
	
	//2. резервы
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.КоличествоПриход КАК Количество,
	|	Резервы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Резервы
	|;";
	
	//3. все отказы
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Период КАК Период,
	|	ОтказыПоЗаявкамОбороты.Регистратор КАК Регистратор,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК ОтказыПоЗаявкамОбороты
	|;";
	
	
	//4. новый заказ
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Заказы.Период КАК Период,
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	Заказы.КоличествоПриход КАК Количество,
	|	Заказы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Заказы
	|;";
	
	//5. отгружен поставщиком
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	Размещения.Период КАК Период,
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	Размещения.КоличествоПриход КАК Количество,
	|	Размещения.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Размещения
	|;";
	
	//6. принят на складе
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	Размещения.Период КАК Период,
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе) КАК Состояние,
	|	Размещения.КоличествоРасход КАК Количество,
	|	Размещения.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Размещения
	|;";
	
	//7. отгружен покупателю
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(Продажи.Период, СЕКУНДА, 1) КАК Период,
	|	Продажи.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	Продажи.КоличествоОборот КАК Количество,
	|	Продажи.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Продажи
	|;";

	//8. резервы минус (идет сборка на складе ПК)
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.КоличествоРасход КАК Количество,
	|	Резервы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Резервы
	|;";
	
	//9. проверить. есть ли записи в регистре
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	История.СтрокаЗаявки КАК СтрокаЗаявки
	|ИЗ
	|	РегистрСведений._ИсторияСтрокЗаявок КАК История
	|ГДЕ
	|	История.СтрокаЗаявки В (&тСтроки)
	|;";
	
	Запрос.УстановитьПараметр("тСтроки", вхСтруктураСпискаСтрок.ТекСтроки);
	Р = Запрос.ВыполнитьПакет();
	
	Если вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
		//в состояние новая неподтвержденная заявка пишем все количество из регистра заявки покупателей 
		//минус отказы по заявке, потому что заявку можно вернуть в статус "не подтверждена"
		Выборка = Р[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = Выборка.Период;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Выборка.Состояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Новый Тогда
		//в этом статусе могут быть отказы 
		//тогда пишем все заявки, добавляем все отказы но со статусом НоваяЗаявка и отрицательным количеством (потом свернем по этому количеству)
		//и добавляем все отказы с реальным количеством и реальной причиной
		//тПериод = Неопределено; //период для отказов
		//требуется проверить на наличие резерва, в случае когда был поставлен отказ после того, как был резерв
		НетЗаписей = Истина;
		Выборка = Р[8].Выбрать();
		Если Выборка.Количество() > 0 Тогда
			НетЗаписей = Ложь;
		КонецЕсли;
			
		ЕстьРезерв = Ложь;
		КоличествоВРезерве = 0;
		Если НЕ НетЗаписей Тогда
			Выборка = Р[1].Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации + 2 Тогда
					//регистрация происходит на две секунды позже даты документа
					ЕстьРезерв = Истина;
					КоличествоВРезерве = КоличествоВРезерве + Выборка.Количество;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Выборка = Р[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			//Если тПериод = Неопределено Тогда
			//	тПериод = Выборка.Период;
			//КонецЕсли;
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = Выборка.Период;//???
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			Если ЕстьРезерв Тогда
				СостояниеЗаявки = Справочники.СостоянияСтрокДокументов.ВРезерве;
			Иначе
				СостояниеЗаявки = Выборка.Состояние;
			КонецЕсли;
			нс.Количество = Выборка.Количество;
			нс.Состояние = СостояниеЗаявки;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации + 2 Тогда
				//вычесть из заявленого
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				Если СостояниеЗаявки = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
					нс.Состояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден;
				Иначе
					Если ЕстьРезерв Тогда
						нс.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
					Иначе 
						нс.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
					КонецЕсли;
				КонецЕсли;
				нс.Количество = -Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
				//добавить реальное
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
		//Выборка = Р[1].Выбрать();//возможно есть резерв
		//Если Выборка.Количество() > 0 Тогда
		//	тПериод = Неопределено;
		//	Пока Выборка.Следующий() Цикл
		//		Если тПериод = Неопределено Тогда
		//			тПериод = Выборка.Период;
		//		КонецЕсли;
		//		нс = ТабИстории.Добавить();
		//		нс.Период = тПериод;//Выборка.Период;	
		//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		//		нс.Состояние = Выборка.Состояние;
		//		нс.Количество = Выборка.Количество;
		//		нс.IDSite = Выборка.IDSite;
		//	
		//	КонецЦикла;
		//	
		//	//отказы уже добавлены на предыдущем шаге????
		//	//Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		//	//Пока Выборка.Следующий() Цикл
		//	//	Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
		//	//		нс = ТабИстории.Добавить();
		//	//		нс.Период = тПериод;
		//	//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//	//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		//	//		нс.Состояние = Выборка.Состояние;
		//	//		нс.Количество = Выборка.Количество;
		//	//		нс.IDSite = Выборка.IDSite;
		//	//	
		//	//	КонецЕсли;
		//	//	
		//	//КонецЦикла;
		//	
		//КонецЕсли;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВРезерве Тогда
		Выборка = Р[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации + 1 Тогда
				//резервы пишутся с разбегом в 1 сек
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		//резервы пишутся с разбегом в 1 сек
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации + 1 Тогда
				//вычесть из заявленого: не нужно, в резервах уже есть сторно
				//нс = ТабИстории.Добавить();
				//нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				//нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				//нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				//нс.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
				//нс.Количество = -Выборка.Количество;
				//нс.IDSite = Выборка.IDSite;
				
				//добавить реальное
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Заказано 
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Выкуплено
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВыкупленоЧастично Тогда
		//в этом статусе могут быть отказы 
		//тогда пишем все заказы, добавляем все отказы но со статусом ТекущееСостояние
		//и с регистратором ЗаказПоставщику или КорректировкаЗаказаПоставщику
		//и отрицательным количеством (потом свернем по этому количеству)
		//и добавляем все отказы, начиная с отказов по заявкам, с реальным количеством и реальной причиной
		//тПериод = Неопределено; //период для отказов
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			//Если тПериод = Неопределено Тогда
			//	тПериод = Выборка.Период;
			//КонецЕсли;
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = Выборка.Период;???
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;		
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ОтгруженПоставщиком
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВПутиПК Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//то, что размещено
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//добавить к отгруженному
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//вычесть отказы по заказам и поступлению из заказов, отказы по поступлению еще и из размещения
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
					//отказы по поступлению из заказов не вычитаем, потому что уже вычли всё количество отгруженного поставщиком
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно только отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ПринятНаСкладе Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//то, что было отгружено = остатки по регистру размещения
		//сначала сформируем остатки по заказам и начальное количество к размещению
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			//добавлять не нужно, потому что при размещении остатко по регистру размещения Ноль
		//	нс = ТабИстории.Добавить();
		//	нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
		//	нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//	нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			//до этого только два статуса - отгружен поставщиком и в пути на склад ПК
			//если началось размещение - то товар уже доставлен на склад
		//	нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
		//	нс.Количество = Выборка.Количество;
		//	нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//теперь вычтем из начального количества к размещению то, что размещено (потом еще и отказы)
		//по тому, как проводится поступление - это всегда будет ноль, не ноль только в случае ошибки
		//пока это не пишем
		Выборка = Р[5].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
	//		нс = ТабИстории.Добавить();
	//		нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
	//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
	//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
	//		нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
	//		нс.Количество = -Выборка.Количество;
	//		нс.IDSite = Выборка.IDSite;
			
			//всего было размещено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//вычесть отказы по заказам и поступлению из заказов, 
		//отказы по поступлению из размещения
		//отказы по перемещению из того, что было размещено
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда //
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[7].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из доставлено на склад
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего собирается на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из идет сборка нужно отказы по реализации
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Выдано Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[7].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из доставлено на склад
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего собирается на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[6].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из идет сборка на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего выдано покупателю
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из идет сборка нужно отказы по реализации
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТабИстории.Свернуть("Период,Документ,СтрокаЗаявки,Состояние,IDSite", "Количество");
	
	Для Каждого СтрокаИстории Из ТабИстории Цикл
		Если СтрокаИстории.Количество > 0 Тогда
			нс = выхТаблицаИстории.Добавить();
			ЗаполнитьЗначенияСвойств(нс, СтрокаИстории);
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

Процедура СформироватьПолнуюИсторию__20180426(вхСтруктураСпискаСтрок, выхТаблицаИстории) Экспорт
	Если вхСтруктураСпискаСтрок.Свойство("ТекДокумент") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекДокумент) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекСостояние") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекСостояние) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекДатаРегистрации") Тогда
		Если НЕ ЗначениеЗаполнено(вхСтруктураСпискаСтрок.ТекДатаРегистрации) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если вхСтруктураСпискаСтрок.Свойство("ТекСтроки") Тогда
		Если вхСтруктураСпискаСтрок.ТекСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТабИстории = выхТаблицаИстории.СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	//1. новая заявка
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Заявки.Период, СЕКУНДА, -2)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Заявки.Период, СЕКУНДА, -3) КОНЕЦ КАК Период,
	|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	|	КОНЕЦ КАК Состояние,
	|	Заявки.КоличествоПриход КАК Количество,
	|	Заявки.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Заявки
	|;";
	
	//2. резервы
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.КоличествоПриход КАК Количество,
	|	Резервы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Резервы
	|;";
	
	//3. все отказы
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Период КАК Период,
	|	ОтказыПоЗаявкамОбороты.Регистратор КАК Регистратор,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК ОтказыПоЗаявкамОбороты
	|;";
	
	
	//4. новый заказ
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Заказы.Период КАК Период,
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	Заказы.КоличествоПриход КАК Количество,
	|	Заказы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Заказы
	|;";
	
	//5. отгружен поставщиком
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	Размещения.Период КАК Период,
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	Размещения.КоличествоПриход КАК Количество,
	|	Размещения.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Размещения
	|;";
	
	//6. принят на складе
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|	Размещения.Период КАК Период,
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе) КАК Состояние,
	|	Размещения.КоличествоРасход КАК Количество,
	|	Размещения.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Размещения
	|;";
	
	//7. отгружен покупателю
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(Продажи.Период, СЕКУНДА, 1) КАК Период,
	|	Продажи.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	Продажи.КоличествоОборот КАК Количество,
	|	Продажи.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(, , Регистратор, СтрокаЗаявки В (&тСтроки)) КАК Продажи
	|;";

	//8. резервы минус (идет сборка на складе ПК)
	Запрос.Текст = Запрос.Текст + 
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.КоличествоРасход КАК Количество,
	|	Резервы.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки В (&тСтроки)) КАК Резервы
	|;";
	
	Запрос.УстановитьПараметр("тСтроки", вхСтруктураСпискаСтрок.ТекСтроки);
	Р = Запрос.ВыполнитьПакет();
	
	Если вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
		//в состояние новая неподтвержденная заявка пишем все количество из регистра заявки покупателей 
		//минус отказы по заявке, потому что заявку можно вернуть в статус "не подтверждена"
		Выборка = Р[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = Выборка.Период;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Выборка.Состояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Новый Тогда
		//в этом статусе могут быть отказы 
		//тогда пишем все заявки, добавляем все отказы но со статусом НоваяЗаявка и отрицательным количеством (потом свернем по этому количеству)
		//и добавляем все отказы с реальным количеством и реальной причиной
		//тПериод = Неопределено; //период для отказов
		//требуется проверить на наличие резерва, в случае когда был поставлен отказ после того, как был резерв
		ЕстьРезерв = Ложь;
		Выборка = Р[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период < вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				ЕстьРезерв = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		Выборка = Р[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			//Если тПериод = Неопределено Тогда
			//	тПериод = Выборка.Период;
			//КонецЕсли;
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = Выборка.Период;//???
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			Если ЕстьРезерв Тогда
				СостояниеЗаявки = Справочники.СостоянияСтрокДокументов.ВРезерве;
			Иначе
				СостояниеЗаявки = Выборка.Состояние;
			КонецЕсли;
			нс.Состояние = Выборка.Состояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заявленого
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				Если СостояниеЗаявки = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
					нс.Состояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден;
				Иначе
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				КонецЕсли;
				нс.Количество = -Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
				//добавить реальное
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
		//Выборка = Р[1].Выбрать();//возможно есть резерв
		//Если Выборка.Количество() > 0 Тогда
		//	тПериод = Неопределено;
		//	Пока Выборка.Следующий() Цикл
		//		Если тПериод = Неопределено Тогда
		//			тПериод = Выборка.Период;
		//		КонецЕсли;
		//		нс = ТабИстории.Добавить();
		//		нс.Период = тПериод;//Выборка.Период;	
		//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		//		нс.Состояние = Выборка.Состояние;
		//		нс.Количество = Выборка.Количество;
		//		нс.IDSite = Выборка.IDSite;
		//	
		//	КонецЦикла;
		//	
		//	//отказы уже добавлены на предыдущем шаге????
		//	//Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		//	//Пока Выборка.Следующий() Цикл
		//	//	Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
		//	//		нс = ТабИстории.Добавить();
		//	//		нс.Период = тПериод;
		//	//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//	//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
		//	//		нс.Состояние = Выборка.Состояние;
		//	//		нс.Количество = Выборка.Количество;
		//	//		нс.IDSite = Выборка.IDSite;
		//	//	
		//	//	КонецЕсли;
		//	//	
		//	//КонецЦикла;
		//	
		//КонецЕсли;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВРезерве Тогда
		Выборка = Р[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заявленого: не нужно, в резервах уже есть сторно
				//нс = ТабИстории.Добавить();
				//нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				//нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				//нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				//нс.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
				//нс.Количество = -Выборка.Количество;
				//нс.IDSite = Выборка.IDSite;
				
				//добавить реальное
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//тПериод;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Заказано 
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Выкуплено
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВыкупленоЧастично Тогда
		//в этом статусе могут быть отказы 
		//тогда пишем все заказы, добавляем все отказы но со статусом ТекущееСостояние
		//и с регистратором ЗаказПоставщику или КорректировкаЗаказаПоставщику
		//и отрицательным количеством (потом свернем по этому количеству)
		//и добавляем все отказы, начиная с отказов по заявкам, с реальным количеством и реальной причиной
		//тПериод = Неопределено; //период для отказов
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			//Если тПериод = Неопределено Тогда
			//	тПериод = Выборка.Период;
			//КонецЕсли;
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = Выборка.Период;???
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;		
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ОтгруженПоставщиком
		ИЛИ вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ВПутиПК Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//то, что размещено
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//добавить к отгруженному
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//вычесть отказы по заказам и поступлению из заказов, отказы по поступлению еще и из размещения
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
					//отказы по поступлению из заказов не вычитаем, потому что уже вычли всё количество отгруженного поставщиком
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;//нс.Период = тПериод;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно только отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.ПринятНаСкладе Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//то, что было отгружено = остатки по регистру размещения
		//сначала сформируем остатки по заказам и начальное количество к размещению
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			//добавлять не нужно, потому что при размещении остатко по регистру размещения Ноль
		//	нс = ТабИстории.Добавить();
		//	нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
		//	нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
		//	нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			//до этого только два статуса - отгружен поставщиком и в пути на склад ПК
			//если началось размещение - то товар уже доставлен на склад
		//	нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
		//	нс.Количество = Выборка.Количество;
		//	нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//теперь вычтем из начального количества к размещению то, что размещено (потом еще и отказы)
		//по тому, как проводится поступление - это всегда будет ноль, не ноль только в случае ошибки
		//пока это не пишем
		Выборка = Р[5].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
	//		нс = ТабИстории.Добавить();
	//		нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
	//		нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
	//		нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
	//		нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
	//		нс.Количество = -Выборка.Количество;
	//		нс.IDSite = Выборка.IDSite;
			
			//всего было размещено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		//вычесть отказы по заказам и поступлению из заказов, 
		//отказы по поступлению из размещения
		//отказы по перемещению из того, что было размещено
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					//ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда //
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[7].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из доставлено на склад
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего собирается на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли вхСтруктураСпискаСтрок.ТекСостояние = Справочники.СостоянияСтрокДокументов.Выдано Тогда
		//заказы - (размещено + отказы по поступлению) = остатки по заказам //это не меняется
		Выборка = Р[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из заказов
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего было отгружено
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[7].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из доставлено на склад
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего собирается на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[6].Выбрать();
		Пока Выборка.Следующий() Цикл
			//вычесть из идет сборка на складе ПК
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = Справочники.СостоянияСтрокДокументов.СборкаПК;
			нс.Количество = -Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
			//всего выдано покупателю
			нс = ТабИстории.Добавить();
			нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
			нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
			нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
			нс.Состояние = вхСтруктураСпискаСтрок.ТекСостояние;
			нс.Количество = Выборка.Количество;
			нс.IDSite = Выборка.IDSite;
			
		КонецЦикла;
		
		Выборка = Р[2].Выбрать(); //все отказы, но нам нужны только до даты регистрации изменений
		Пока Выборка.Следующий() Цикл
			Если Выборка.Период <= вхСтруктураСпискаСтрок.ТекДатаРегистрации Тогда
				//вычесть из заказаного нужно только отказы по заказам и отказы по поступлению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПоставщику")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Выкуплено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//вычесть из отгруженного поставщиком нужно отказы по поступлению и отказы по перемещению
				Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					нс = ТабИстории.Добавить();
					нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
					нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
					нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
					нс.Состояние = Справочники.СостоянияСтрокДокументов.Доставлено;
					нс.Количество = -Выборка.Количество;
					нс.IDSite = Выборка.IDSite;
				КонецЕсли;
				
				//добавить все отказы до даты регистрации изменения состояния, включая отказы по заявкам
				нс = ТабИстории.Добавить();
				нс.Период = вхСтруктураСпискаСтрок.ТекДатаРегистрации;
				нс.Документ = вхСтруктураСпискаСтрок.ТекДокумент;
				нс.СтрокаЗаявки = Выборка.СтрокаЗаявки;
				нс.Состояние = Выборка.Состояние;
				нс.Количество = Выборка.Количество;
				нс.IDSite = Выборка.IDSite;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТабИстории.Свернуть("Период,Документ,СтрокаЗаявки,Состояние,IDSite", "Количество");
	
	Для Каждого СтрокаИстории Из ТабИстории Цикл
		Если СтрокаИстории.Количество > 0 Тогда
			нс = выхТаблицаИстории.Добавить();
			ЗаполнитьЗначенияСвойств(нс, СтрокаИстории);
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

Процедура _ЗаписатьИсториюСтрокЗаявокПриЗаписи(Источник, Отказ, Замещение) Экспорт
	//09.04.2018 тестирование
	Возврат;
	
	ТаблицаИстории = Неопределено;
	ОбщегоНазначения.СоздатьСтруктуруРегистраСведений("_ИсторияСтрокЗаявок", ТаблицаИстории);
	
	тДокумент = Неопределено;
	тОсновноеСостояние = Неопределено;
	тДатаРегистрации = Неопределено;
	тСписокСтрокЗаявок = Новый СписокЗначений;
	Для Каждого Запись Из Источник Цикл
		Если тДокумент = Неопределено Тогда
			тДокумент = Запись.Документ;
			тОсновноеСостояние = Запись.ОсновноеСостояние;
			тДатаРегистрации = Запись.Период;
		Иначе
			Если тДокумент <> Запись.Документ Тогда
				//отправить письмо об ошибке формирования истории
				Сообщить("больше, чем один, текущий документ. история будет сформирована неверно.");
				
			КонецЕсли;
		КонецЕсли;
		
		тСписокСтрокЗаявок.Добавить(Запись.СтрокаЗаявки);
		
	КонецЦикла;
	
	тСтруктураИсторииСтрок = Новый Структура;
	тСтруктураИсторииСтрок.Вставить("ТекДокумент", тДокумент);
	тСтруктураИсторииСтрок.Вставить("ТекСостояние", тОсновноеСостояние);
	тСтруктураИсторииСтрок.Вставить("ТекДатаРегистрации", тДатаРегистрации);
	тСтруктураИсторииСтрок.Вставить("ТекСтроки", тСписокСтрокЗаявок);
	СформироватьПолнуюИсторию(тСтруктураИсторииСтрок, ТаблицаИстории); 
	
	//не проканало
	//НаборЗаписей = РегистрыСведений._ИсторияСтрокЗаявок.СоздатьНаборЗаписей();
	////период может меняться, поэтому отбор по нему не нужен
	////НаборЗаписей.Отбор.Период.ВидСравнения	= ВидСравнения.Равно;
	////НаборЗаписей.Отбор.Период.Значение		= тДатаРегистрации;
	////НаборЗаписей.Отбор.Период.Использование	= Истина;
	//
	//НаборЗаписей.Отбор.Документ.ВидСравнения	= ВидСравнения.Равно;
	//НаборЗаписей.Отбор.Документ.Значение		= тДокумент;
	//НаборЗаписей.Отбор.Документ.Использование	= Истина;
	//
	//НаборЗаписей.Загрузить(ТаблицаИстории);
	//НаборЗаписей.Записать(Истина);
	
	Для Каждого СтрокаИстории Из ТаблицаИстории Цикл
		аЗапись = РегистрыСведений._ИсторияСтрокЗаявок.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(аЗапись, СтрокаИстории);
		аЗапись.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

//__________________________________________
Процедура РегистрацияИзмененийСостоянияСтрокЗаявокОбработкаПроведения(Источник, Отказ) Экспорт
	ЗарегистрироватьИзмененияСтрокЗаявок(Источник.Ссылка);
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеСправочникаИсторииСостояний() Экспорт
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	МАКСИМУМ(ИсторияСтрокЗаявок.Ссылка) КАК Ссылка,
	//|	ИсторияСтрокЗаявок.ДатаВремя
	//|ИЗ
	//|	Справочник.ИсторияСтрокЗаявок КАК ИсторияСтрокЗаявок
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ИсторияСтрокЗаявок.ДатаВремя"
	//);
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(ИсторияСтрокЗаявок.ДатаВремя) КАК ДатаВремя
	|ИЗ
	|	Справочник.ИсторияСтрокЗаявок КАК ИсторияСтрокЗаявок"
	);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		ДатаНачала = '20170701000000';
	Иначе
		ДатаНачала = Результат[0].ДатаВремя;
		Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
			ДатаНачала = '20170701000000';
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьИсториюСтрокЗаявок(ДатаНачала);
	
КонецПроцедуры

Процедура ЗарегистрироватьИзмененияСтрокЗаявок(вхСсылкаНаДокумент, РежимТестирования = Ложь) Экспорт
	Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "Дата") < глЗначениеПеременной("ДатаЗаявкиСоздаютсяВ83")
		И НЕ РежимТестирования Тогда 
		Возврат; 
	КонецЕсли;
	
	Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "Дата") < Константы.ДатаНачалаПроведенияПоРегиструТоварыНаСкладах.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаЗаявкиПокупателя.Ссылка
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя КАК КорректировкаЗаявкиПокупателя
		|ГДЕ
		|	КорректировкаЗаявкиПокупателя.Проведен
		|	И КорректировкаЗаявкиПокупателя.ДокументОснование = &ДокументОснование";
		Запрос.УстановитьПараметр("ДокументОснование", вхСсылкаНаДокумент);
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() > 0 Тогда
			Возврат;
		КонецЕсли;
		//с 19.04.2018 двойная регистрация
		Запрос.Текст = 
		"ВЫБРАТЬ
		//|	ДОБАВИТЬКДАТЕ(ДокументТовары.Ссылка.Дата, СЕКУНДА, -2) КАК Период,
		|	ДОБАВИТЬКДАТЕ(ДокументТовары.Ссылка.Дата, СЕКУНДА, -1) КАК Период,
		|	ДокументТовары.Ссылка КАК Документ,
		|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ВЫБОР
		|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
		|	КОНЕЦ КАК ОсновноеСостояние
		|ИЗ
		|	Документ.ЗаявкаПокупателя.Товары КАК ДокументТовары
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		//|	ДОБАВИТЬКДАТЕ(Рег.Период, СЕКУНДА, -1),
		|	Рег.Период,
		|	Рег.Регистратор,
		|	ДокументТовары.СтрокаЗаявки,
		|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве)
		|ИЗ
		|	Документ.ЗаявкаПокупателя.Товары КАК ДокументТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров КАК Рег
		|		ПО ДокументТовары.Ссылка = Рег.Регистратор
		|			И ДокументТовары.СтрокаЗаявки = Рег.СтрокаЗаявки
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен
		|	И НЕ Рег.Регистратор ЕСТЬ NULL";
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ДокументТовары.Ссылка.Дата КАК Период,
		//|	ДокументТовары.Ссылка КАК Документ,
		//|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		//|	ВЫБОР
		//|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
		//|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
		//|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
		//|	КОНЕЦ КАК ОсновноеСостояние
		//|ИЗ
		//|	Документ.ЗаявкаПокупателя.Товары КАК ДокументТовары
		//|ГДЕ
		//|	ДокументТовары.Ссылка = &Ссылка
		//|	И ДокументТовары.Ссылка.Проведен";
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
		//с 19.04.2018 двойная регистрация
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(ДокументТовары.Ссылка.Дата, СЕКУНДА, -2) КАК Период,
		|	ДокументТовары.Ссылка КАК Документ,
		|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ВЫБОР
		|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
		|	КОНЕЦ КАК ОсновноеСостояние
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК ДокументТовары
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(Рег.Период, СЕКУНДА, -1),
		|	Рег.Регистратор,
		|	ДокументТовары.СтрокаЗаявки,
		|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве)
		|ИЗ
		|	Документ.ЗаявкаПокупателя.Товары КАК ДокументТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров КАК Рег
		|		ПО ДокументТовары.Ссылка = Рег.Регистратор
		|			И ДокументТовары.СтрокаЗаявки = Рег.СтрокаЗаявки
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен
		|	И НЕ Рег.Регистратор ЕСТЬ NULL";
		//Запрос.Текст =
		//"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//|	ДокументТовары.Ссылка.Дата КАК Период,
		//|	ДокументТовары.Ссылка КАК Документ,
		//|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		//|	ВЫБОР
		//|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
		//|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
		//|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
		//|	КОНЕЦ КАК ОсновноеСостояние
		//|ИЗ
		//|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК ДокументТовары
		//|ГДЕ
		//|	ДокументТовары.Ссылка = &Ссылка
		//|	И ДокументТовары.Ссылка.Проведен";
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументТовары.Ссылка.Дата КАК Период,	
		|	ДокументТовары.Ссылка КАК Документ,
		|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	Значение(Справочник.СостоянияСтрокДокументов.Заказано) КАК ОсновноеСостояние
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК ДокументТовары
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен";
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументТовары.Ссылка.Дата КАК Период,
		|	ДокументТовары.Ссылка КАК Документ,
		|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ВЫБОР
		|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПроведенЗаказПоставщику)
		|				ИЛИ ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ОтправленПоставщику)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДокументТовары.СостояниеСтрокиЗаказа = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПустаяСсылка)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выкуплено)
		|				ИНАЧЕ ДокументТовары.СостояниеСтрокиЗаказа
		|			КОНЕЦ
		|	КОНЕЦ КАК ОсновноеСостояние
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику.Товары КАК ДокументТовары
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|	И ДокументТовары.Ссылка.Проведен";
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		//добавить регистрацию при изменении статуса документа со сборки на отгружен покупателю
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "СтатусДокумента") = Справочники.СтатусыДокументов.РеализацияТоваровУслугНовый Тогда
			Возврат;
		ИначеЕсли ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "СтатусДокумента") = Справочники.СтатусыДокументов.РеализацияТоваровУслугСборка Тогда
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДокументТовары.Ссылка.Дата КАК Период,
			|	ДокументТовары.Ссылка КАК Документ,
			|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК ОсновноеСостояние
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
			|ГДЕ
			|	ДокументТовары.Ссылка = &Ссылка
			|	И ДокументТовары.Ссылка.Проведен
			|	И ДокументТовары.СтрокаЗаявки <> ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка)";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДокументТовары.Ссылка.Дата КАК Период,
			|	ДокументТовары.Ссылка КАК Документ,
			|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
			|	ВЫБОР
			|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.РеализацияТоваровУслугСборка)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано)
			|	КОНЕЦ КАК ОсновноеСостояние
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
			|ГДЕ
			|	ДокументТовары.Ссылка = &Ссылка
			|	И ДокументТовары.Ссылка.Проведен
			|	И ДокументТовары.СтрокаЗаявки <> ЗНАЧЕНИЕ(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка)";
			//"ВЫБРАТЬ
			//|	Р.Период,
			//|	Р.Документ,
			//|	Р.СтрокаЗаявки
			//|ПОМЕСТИТЬ Р
			//|ИЗ
			//|	РегистрСведений.ИзменениеСтрокЗаявок КАК Р
			//|ГДЕ
			//|	Р.Документ = &Ссылка
			//|	И Р.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано)
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	ДокументТовары.Ссылка.Дата КАК Период,
			//|	ДокументТовары.Ссылка КАК Документ,
			//|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
			//|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК ОсновноеСостояние
			//|ИЗ
			//|	Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
			//|ГДЕ
			//|	ДокументТовары.Ссылка = &Ссылка
			//|	И ДокументТовары.Ссылка.Проведен
			//|
			//|ОБЪЕДИНИТЬ
			//|
			//|ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	ЕСТЬNULL(Р.Период, &ТекущаяДата),
			//|	ДокументТовары.Ссылка,
			//|	ДокументТовары.СтрокаЗаявки,
			//|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано)
			//|ИЗ
			//|	Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
			//|		ЛЕВОЕ СОЕДИНЕНИЕ Р КАК Р
			//|		ПО ДокументТовары.Ссылка = Р.Документ
			//|			И ДокументТовары.СтрокаЗаявки = Р.СтрокаЗаявки
			//|ГДЕ
			//|	ДокументТовары.Ссылка = &Ссылка
			//|	И ДокументТовары.Ссылка.Проведен";
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		КонецЕсли;
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДокументТовары.Ссылка.Дата КАК Период,
		|	ДокументТовары.Ссылка КАК Документ,
		|	ДокументТовары.СтрокаЗаявки КАК СтрокаЗаявки,
		|	ВЫБОР
		|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПоступлениеТоваровНовый)
		|				ИЛИ ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПоступлениеТоваровОтгружен)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВПутиПК)
		|	КОНЕЦ КАК ОсновноеСостояние,
		|	СУММА(1) КАК Итератор
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.РазмещениеСтрокПрихода КАК ДокументТовары
		|ГДЕ
		|	ДокументТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументТовары.Ссылка.Дата,
		|	ДокументТовары.Ссылка,
		|	ДокументТовары.СтрокаЗаявки,
		|	ВЫБОР
		|		КОГДА ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПоступлениеТоваровНовый)
		|				ИЛИ ДокументТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПоступлениеТоваровОтгружен)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВПутиПК)
		|	КОНЕЦ";
	ИначеЕсли ТипЗнч(вхСсылкаНаДокумент) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСсылкаНаДокумент, "ВидОперации") = 
			Перечисления.ВидыОперацийПеремещенияТоваров.ПриемкаТопЛог Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДокументТовары.Ссылка.Дата КАК Период,
			|	ДокументТовары.Ссылка КАК Документ,
			|	РегистрРазмещения.СтрокаЗаявки КАК СтрокаЗаявки
			|ПОМЕСТИТЬ СписокЗаявок
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ДокументТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов КАК РегистрРазмещения
			|		ПО ДокументТовары.СтрокаПрихода = РегистрРазмещения.СтрокаПрихода
			|ГДЕ
			|	ДокументТовары.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СписокЗаявок.Период,
			|	СписокЗаявок.Документ,
			|	СписокЗаявок.СтрокаЗаявки,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе) КАК ОсновноеСостояние
			|ИЗ
			|	СписокЗаявок КАК СписокЗаявок
			|ГДЕ
			|	НЕ СписокЗаявок.СтрокаЗаявки ЕСТЬ NULL";
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", вхСсылкаНаДокумент);
	//НаборЗаписей = РегистрыСведений.ИзменениеСтрокЗаявок.СоздатьНаборЗаписей();
	Запись = РегистрыСведений.ИзменениеСтрокЗаявок.СоздатьМенеджерЗаписи();
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//НаборЗаписей.Отбор.Документ.ВидСравнения = ВидСравнения.Равно;
	//НаборЗаписей.Отбор.Документ.Значение = вхСсылкаНаДокумент;
	//НаборЗаписей.Отбор.Документ.Использование = Истина;
	
	//НаборЗаписей.Прочитать();
	//НачатьТранзакцию();
	Попытка
		//НаборЗаписей.Очистить();	
		//НаборЗаписей.Загрузить(Результат);
		//НаборЗаписей.Записать(Истина);
		Для Каждого Стр Из Результат Цикл
			Набор = РегистрыСведений.ИзменениеСтрокЗаявок.СоздатьНаборЗаписей();
			Набор.Отбор.Период.Установить(Стр.Период);
			Набор.Отбор.Документ.Установить(Стр.Документ);
			Набор.Отбор.СтрокаЗаявки.Установить(Стр.СтрокаЗаявки);
			Набор.Отбор.ОсновноеСостояние.Установить(Стр.ОсновноеСостояние);
			
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), Стр);
			
			Набор.Записать();
			
			//Запись.Период = Стр.Период;
			//Запись.Документ = Стр.Документ;
			//Запись.СтрокаЗаявки = Стр.СтрокаЗаявки;
			//Запись.ОсновноеСостояние = Стр.ОсновноеСостояние;
			//Запись.Записать(Истина);
			
		КонецЦикла;
		
		//ЗафиксироватьТранзакцию();
		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		
		//ОтменитьТранзакцию();
		Попытка
			НаборЗаписейОшибки = РегистрыСведений.ИзменениеСтрокЗаявокОшибки.СоздатьНаборЗаписей();
			НаборЗаписейОшибки.Отбор.Документ.ВидСравнения = ВидСравнения.Равно;
			НаборЗаписейОшибки.Отбор.Документ.Значение = вхСсылкаНаДокумент;
			НаборЗаписейОшибки.Отбор.Документ.Использование = Истина;
			НаборЗаписейОшибки.Загрузить(Результат);
			
			Для Каждого Запись из НаборЗаписейОшибки Цикл
				Запись.ОписаниеОшибки = ОписаниеОшибки;
			КонецЦикла;
			
			НаборЗаписейОшибки.Записать(Истина);
			
		Исключение
			ТекстСообщения = "не удалось записать изменение в регистре";
			ТекстСообщения = ТекстСообщения + Символы.ПС + "документ - " + Строка(вхСсылкаНаДокумент);
			ТекстСообщения = ТекстСообщения + Символы.ПС + " ----- регистр ИзменениеСтрокЗаявок";
			ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки;
			ТекстСообщения = ТекстСообщения + Символы.ПС + " ----- регистр ИзменениеСтрокЗаявокОшибки";
			ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки();
			
			РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаПриЗаписиИсторииСтрокЗаявок,
			ТекстСообщения, "ошибка при записи истории строк заявок");
			
		КонецПопытки;			
		
	КонецПопытки;
		
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок__Обработка(вхДатаНачала)
	ПолнаяИстория = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ПолнаяИстория.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ПолнаяИстория.Колонки.Добавить("Период", Новый ОписаниеТипов(Массив, , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СостоянияСтрокДокументов"));
	ПолнаяИстория.Колонки.Добавить("Состояние", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ПолнаяИстория.Колонки.Добавить("Количество", Новый ОписаниеТипов(Массив, , , Новый КвалификаторыЧисла(15,3)));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 10000
	|	Изменение.Период КАК Период,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ПОМЕСТИТЬ ТабИзменений
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период >= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//все отказы
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.Регистратор КАК Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период КАК Период,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК ОтказыПоЗаявкамОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//2. все изменения
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТабИзменений.Период КАК Период,
	|	ТабИзменений.Документ,
	|	ТабИзменений.СтрокаЗаявки,
	|	ТабИзменений.ОсновноеСостояние
	|ИЗ
	|	ТабИзменений КАК ТабИзменений
	|;";
	
	//3. новая заявка
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заявки.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	|	КОНЕЦ КАК Состояние,
	|	Заявки.КоличествоПриход КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Заявки
	|;";
		
	//4. новый заказ
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заказы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	Заказы.КоличествоПриход КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Заказы
	|;";
		
	//5. отгружен поставщиком
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Размещения.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	СУММА(Размещения.КоличествоПриход) КАК Количество
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Размещения
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещения.СтрокаЗаявки,
	|	Размещения.Период
	|;";
	
	//6. поступил на склад ПК
	//принят на складе ПК
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТовКРезерву.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ТовКРезерву.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе) КАК Состояние,
	|	СУММА(ТовКРезерву.КоличествоПриход) КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКРезервированию.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК ТовКРезерву
	|
	|СГРУППИРОВАТЬ ПО
	|	ТовКРезерву.СтрокаЗаявки,
	|	ТовКРезерву.Период
	|;";
			
	//7. размещен на складе ПК - значит уже в резерве
	//зарезервирован
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.КоличествоПриход КАК Количество
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Резервы
	|
	//|СГРУППИРОВАТЬ ПО
	//|	Резервы.СтрокаЗаявки,
	//|	Резервы.Период
	|;";
		
	//8. отгружен покупателю
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Продажи.СтрокаЗаявки,
	|	Продажи.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	Продажи.КоличествоОборот КАК Количество
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Продажи
	|;";
			
	//9. отказы по заявкам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	(Отказы.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя ИЛИ Отказы.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	|	
	|;";
	
	//10. отказы по заказам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	(Отказы.Регистратор ССЫЛКА Документ.ЗаказПоставщику ИЛИ Отказы.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	|	
	|;";
	
	//11. отказы по приходам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	
	|;";
	
	//12. отказы по размещению
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|	
	|;";
	
	//13. отказы по отгрузке
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	
	|;";
	
	//14. товары к отгрузке - для статуса Сборка на складе ПК
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отгрузки.СтрокаЗаявки,
	|	Отгрузки.Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК Состояние,
	|	Отгрузки.КоличествоОборот КАК Количество
	|ИЗ РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Отгрузки
	|;";
		
	Р = Запрос.ВыполнитьПакет();
	
	ВыборкаИзменений 		= Р[2].Выбрать();
	Заявки			 		= Р[3].Выгрузить();
	Заказы			 		= Р[4].Выгрузить();
	Отгружено				= Р[5].Выгрузить();
	Поступило		 		= Р[6].Выгрузить();
	Резерв			 		= Р[7].Выгрузить();
	Выдано			 		= Р[8].Выгрузить();
	ОтказыПоЗаявкам	 		= Р[9].Выгрузить();
	ОтказыПоЗаказам	 		= Р[10].Выгрузить();
	ОтказыПоПриходам 		= Р[11].Выгрузить();
	ОтказыПоРазмещению 		= Р[12].Выгрузить();
	ОтказыПоОтгрузке 		= Р[13].Выгрузить();
	СборкаНаСкладеПК 		= Р[14].Выгрузить();
	
	Пока ВыборкаИзменений.Следующий() Цикл
		ПараметрОтбора = Новый Структура("СтрокаЗаявки", ВыборкаИзменений.СтрокаЗаявки);
		
		Если ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ЗаявкаПокупателя")
			ИЛИ ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
			СтрокиСостояний = Заявки.НайтиСтроки(ПараметрОтбора);
			СтрокиРезервов = Резерв.НайтиСтроки(ПараметрОтбора);
			КоличествоРезерв = 0;
			ПериодРезерва = Неопределено;
			Для Каждого СтрокаРезерва Из СтрокиРезервов Цикл
				КоличествоРезерв = КоличествоРезерв + СтрокаРезерва.Количество;
				ПериодРезерва = СтрокаРезерва.Период;
			КонецЦикла;
			ВсегоОтказы = 0;
			СтрокиОтказов = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказов Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказы = ВсегоОтказы + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ДописатьОтказыПриРезерве = Ложь;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				Если СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период - 1;
					ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
					ЗаписьИстории.Количество = СтрокаСостояния.Количество;
				ИначеЕсли СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.Новый Тогда
					Если КоличествоРезерв > 0 И ВыборкаИзменений.Период <> ПериодРезерва Тогда
						ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
						ЗаписьИстории.Период = ВыборкаИзменений.Период;
						ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
						ЗаписьИстории.Количество = СтрокаСостояния.Количество - ВсегоОтказы;
					КонецЕсли;
				ИначеЕсли СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве Тогда
					//ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					//ЗаписьИстории.Период = ВыборкаИзменений.Период + 1;
					//ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
					//ЗаписьИстории.Количество = СтрокаСостояния.Количество - ВсегоОтказы;
					ДописатьОтказыПриРезерве = Истина;
				КонецЕсли;	
			КонецЦикла;
			Для Каждого СтрокаСостояния Из СтрокиРезервов Цикл
				Если СтрокаСостояния.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период + 1;
					ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
					ЗаписьИстории.Количество = СтрокаСостояния.Количество - ВсегоОтказы;
					ДописатьОтказыПриРезерве = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаОтказа Из СтрокиОтказов Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					Если КоличествоРезерв > 0 И ВыборкаИзменений.Период <> ПериодРезерва Тогда
						ЗаписьИстории = ПолнаяИстория.Добавить();
						ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
						ЗаписьИстории.Период = ВыборкаИзменений.Период;
						ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
						ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если ДописатьОтказыПриРезерве Тогда
				Для Каждого СтрокаОтказа Из СтрокиОтказов Цикл
					Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
						ЗаписьИстории = ПолнаяИстория.Добавить();
						ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					 	ЗаписьИстории.Период = ВыборкаИзменений.Период + 1;
						ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
						ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
						
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ЗаказПоставщику")
			ИЛИ ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
			СтрокиСостояний = Заказы.НайтиСтроки(ПараметрОтбора);
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоЗаказано = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние;
				КоличествоЗаказано = КоличествоЗаказано + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам;					
			КонецЦикла;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			СтрокиСостояний = Отгружено.НайтиСтроки(ПараметрОтбора);
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаказано = 0;
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузкам = 0;
			СтрокиОтказовОтгрузок = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузкам = ВсегоОтказыПоОтгрузкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоОтгружено = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние;
				КоличествоОтгружено = КоличествоОтгружено + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоОтгружено;					
			КонецЦикла;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоОтгрузкам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоОтгрузкам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
						
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СтрокиСостояний = Резерв.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			КоличествоЗаказано = 0;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоОтгружено = 0;
			СтрокиОтгружено = Отгружено.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиОтгружено Цикл
				КоличествоОтгружено = КоличествоОтгружено + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоПриход = 0;
			СтрокиПриход = Поступило.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаПрихода Из СтрокиПриход Цикл
				КоличествоПриход = КоличествоПриход + СтрокаПрихода.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузкам = 0;
			СтрокиОтказовОтгрузок = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузкам = ВсегоОтказыПоОтгрузкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоРазмещению = 0;
			СтрокиОтказовРазмещений = ОтказыПоРазмещению.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоРазмещению = ВсегоОтказыПоРазмещению + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоРезерв = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				//ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				//в этот момент ВыборкаИзменений.ОсновноеСостояние = Принят на складе, поменяем его на ВРезерве
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
				КоличествоРезерв = КоличествоРезерв + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоРезерв;					
			КонецЦикла;
			Если КоличествоПриход - ВсегоОтказыПоРазмещению > КоличествоРезерв Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				ЗаписьИстории.Количество = КоличествоПриход - ВсегоОтказыПоРазмещению - КоличествоРезерв;					
			КонецЕсли;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоОтгрузкам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоОтгрузкам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если ВыборкаИзменений.ОсновноеСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
				СтрокиСостояний = СборкаНаСкладеПК.НайтиСтроки(ПараметрОтбора);
			Иначе
				СтрокиСостояний = Выдано.НайтиСтроки(ПараметрОтбора);
			КонецЕсли;
			КоличествоЗаявлено = 0;
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			КоличествоЗаказано = 0;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоОтгружено = 0;
			СтрокиОтгружено = Отгружено.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиОтгружено Цикл
				КоличествоОтгружено = КоличествоОтгружено + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоПриход = 0;
			СтрокиПриход = Поступило.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаПрихода Из СтрокиПриход Цикл
				КоличествоПриход = КоличествоПриход + СтрокаПрихода.Количество;
			КонецЦикла;
			КоличествоРезерв = 0;
			СтрокиРезерв = Резерв.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаРезерва Из СтрокиРезерв Цикл
				КоличествоРезерв = КоличествоРезерв + СтрокаРезерва.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоПриходам = 0;
			СтрокиОтказовПоПриходам = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоПриходам Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоПриходам = ВсегоОтказыПоПриходам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоРазмещению = 0;
			СтрокиОтказовРазмещений = ОтказыПоРазмещению.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоРазмещению = ВсегоОтказыПоРазмещению + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузке = 0;
			СтрокиОтказовПоОтгрузке = ОтказыПоОтгрузке.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоОтгрузке Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузке = ВсегоОтказыПоОтгрузке + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоВыдано = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				КоличествоВыдано = КоличествоВыдано + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоВыдано;					
			КонецЦикла;
			Если КоличествоРезерв > КоличествоВыдано Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве; 
				ЗаписьИстории.Количество = КоличествоРезерв - КоличествоВыдано;					
			КонецЕсли;
			Если КоличествоПриход - ВсегоОтказыПоРазмещению > КоличествоРезерв Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				ЗаписьИстории.Количество = КоличествоПриход - ВсегоОтказыПоРазмещению - КоличествоРезерв;					
			КонецЕсли;
			Если КоличествоЗаказано > 0 И КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоОтгружено > 0 И КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоПриходам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоПриходам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоПриходам Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоОтгрузке Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//найдем то, чего еще нет в справочнике истории
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.Период КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	&ПолнаяИстория КАК ПолнаяИстория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	СУММА(ПолнаяИстория.Количество) КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	ПолнаяИстория.Количество > 0
	|	И СпрИстории.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяИстория.СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя,
	|	ПолнаяИстория.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя"
	);
	
	Запрос.УстановитьПараметр("ПолнаяИстория", ПолнаяИстория);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_как_бы_рабочий_вариант(вхДатаНачала)
	ПолнаяИстория = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ПолнаяИстория.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ПолнаяИстория.Колонки.Добавить("Период", Новый ОписаниеТипов(Массив, , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СостоянияСтрокДокументов"));
	ПолнаяИстория.Колонки.Добавить("Состояние", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ПолнаяИстория.Колонки.Добавить("Количество", Новый ОписаниеТипов(Массив, , , Новый КвалификаторыЧисла(15,3)));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изменение.Период КАК Период,
	|	ТИПЗНАЧЕНИЯ(Изменение.Документ) КАК Тип,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Тип";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Тип = Тип("ДокументСсылка.ЗаявкаПокупателя")
			ИЛИ Выборка.Тип = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
			//|			ТОГДА Заявки.Период
			
			//|ВЫБРАТЬ
			//|	Заявки.СтрокаЗаявки,
			//|	Заявки.Период,
			//|	Заявки.Состояние,
			//|	Заявки.Количество
			//|ИЗ
			//|	Заявки КАК Заявки
			
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	ВЫБОР
			|		КОГДА &Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
			|			ТОГДА &Период
			|		ИНАЧЕ &Период0
			|	КОНЕЦ КАК Период,
			|	&Состояние КАК Состояние,
			|	Заявки.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заявки
			|ИЗ
			|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
			|	Резервы.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ Резервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(&Период1, СтрокаЗаявки = &СтрокаЗаявки) КАК Резервы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиПоЗаявкам.СтрокаЗаявки,
			|	ОстаткиПоЗаявкам.Период,
			|	ОстаткиПоЗаявкам.Состояние,
			|	ОстаткиПоЗаявкам.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		ЕСТЬNULL(Резервы.Период, Заявки.Период) КАК Период,
			|		Заявки.Состояние КАК Состояние,
			|		Заявки.Количество - ЕСТЬNULL(Резервы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заявки КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
			|			ПО Заявки.СтрокаЗаявки = Резервы.СтрокаЗаявки
			|				И Заявки.Период = Резервы.Период
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заявки.Количество - ЕСТЬNULL(Резервы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиПоЗаявкам
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	Резервы.Период,
			|	Резервы.Состояние,
			|	Резервы.Количество
			|ИЗ
			|	Резервы КАК Резервы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	ЕСТЬNULL(Резервы.Период, Отказы.Период),
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
			|		ПО Отказы.СтрокаЗаявки = Резервы.СтрокаЗаявки"
			);
			ЗапросСостояния.УстановитьПараметр("Период0", Выборка.Период - 1);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ЗаказПоставщику")
			ИЛИ Выборка.Тип = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	&Состояние КАК Состояние,
			|	Заказы.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Заказы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.Регистратор КАК Документ,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ ИтогоПоЗаказам
			|ИЗ
			|	Отказы КАК Отказы
			|ГДЕ
			|	(Отказы.Документ ССЫЛКА Документ.ЗаказПоставщику
			|			ИЛИ Отказы.Документ ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки,
			|	Заказы.Период,
			|	Заказы.Состояние,
			|	Заказы.Количество - ЕСТЬNULL(ИтогоПоЗаказам.Количество, 0) КАК Количество
			|ИЗ
			|	Заказы КАК Заказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогоПоЗаказам КАК ИтогоПоЗаказам
			|		ПО Заказы.СтрокаЗаявки = ИтогоПоЗаказам.СтрокаЗаявки
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиЗаявок.СтрокаЗаявки,
			|	ОстаткиЗаявок.Период,
			|	ОстаткиЗаявок.Состояние,
			|	ОстаткиЗаявок.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		&Период КАК Период,
			|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
			|		Заявки.КоличествоПриход - ЕСТЬNULL(Заказы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
			|			ПО Заявки.СтрокаЗаявки = Заказы.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заявки.КоличествоПриход - ЕСТЬNULL(Заказы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиЗаявок"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
	
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			//непонятно как быть, если были отказы по заявке (при вычислении остатка по "заказано"), 
			//так будет работать только если будет работать принцип "одна заявка - один заказ"
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
			|	Заказы.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Заказы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Размещения.СтрокаЗаявки,
			|	&Период,
			|	&Состояние КАК Состояние,
			|	Размещения.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Отгружено
			|ИЗ
			|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Размещения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отгружено.СтрокаЗаявки,
			|	Отгружено.Период,
			|	Отгружено.Состояние,
			|	Отгружено.Количество
			|ИЗ
			|	Отгружено КАК Отгружено
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиПоЗаказам.СтрокаЗаявки,
			|	ОстаткиПоЗаказам.Период,
			|	ОстаткиПоЗаказам.Состояние,
			|	ОстаткиПоЗаказам.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|		&Период КАК Период,
			|		Заказы.Состояние КАК Состояние,
			|		Заказы.Количество - ЕСТЬNULL(Отгружено.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заказы КАК Заказы
			|			ЛЕВОЕ СОЕДИНЕНИЕ Отгружено КАК Отгружено
			|			ПО Заказы.СтрокаЗаявки = Отгружено.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заказы.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заказы.Количество - ЕСТЬNULL(Отгружено.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиПоЗаказам"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
			|	Заявки.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заявки
			|ИЗ
			|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКРезервированию.СтрокаЗаявки,
			|	&Период КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Доставлено) КАК Состояние,
			|	ТоварыКРезервированию.КоличествоКонечныйОстаток КАК Количество
			|ПОМЕСТИТЬ ТоварыКРезервированию
			|ИЗ
			|	РегистрНакопления.ТоварыКРезервированию.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК ТоварыКРезервированию
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
			|	Продажи.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Продажи
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Продажи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
			|	Резервы.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ ОстаткиРезервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(&Период1, СтрокаЗаявки = &СтрокаЗаявки) КАК Резервы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКРезервированию.СтрокаЗаявки,
			|	ТоварыКРезервированию.Период,
			|	ТоварыКРезервированию.Состояние,
			|	ТоварыКРезервированию.Количество
			|ИЗ
			|	ТоварыКРезервированию КАК ТоварыКРезервированию
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	Продажи.Период,
			|	Продажи.Состояние,
			|	Продажи.Количество
			|ИЗ
			|	Продажи КАК Продажи
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиРезервы.СтрокаЗаявки,
			|	ОстаткиРезервы.Период,
			|	ОстаткиРезервы.Состояние,
			|	ОстаткиРезервы.Количество
			|ИЗ
			|	ОстаткиРезервы КАК ОстаткиРезервы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы"
			//|
			//|ОБЪЕДИНИТЬ
			//|
			//|ВЫБРАТЬ
			//|	ОстаткиЗаявки.СтрокаЗаявки,
			//|	ОстаткиЗаявки.Период,
			//|	ОстаткиЗаявки.Состояние,
			//|	ОстаткиЗаявки.Количество
			//|ИЗ
			//|	(ВЫБРАТЬ
			//|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			//|		Заявки.Период КАК Период,
			//|		Заявки.Состояние КАК Состояние,
			//|		Заявки.Количество - ЕСТЬNULL(ТоварыКРезервированию.Количество, 0) - ЕСТЬNULL(Продажи.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			//|	ИЗ
			//|		Заявки КАК Заявки
			//|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКРезервированию КАК ТоварыКРезервированию
			//|			ПО Заявки.СтрокаЗаявки = ТоварыКРезервированию.СтрокаЗаявки
			//|			ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
			//|			ПО Заявки.СтрокаЗаявки = Продажи.СтрокаЗаявки
			//|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			//|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки) КАК ОстаткиЗаявки"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
			|	Заявки.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заявки
			|ИЗ
			|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	&Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
			|	Продажи.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Продажи
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Продажи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	&Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
			|	Резервы.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ ОстаткиРезервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(&Период1, СтрокаЗаявки = &СтрокаЗаявки) КАК Резервы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	Продажи.Период,
			|	Продажи.Состояние,
			|	Продажи.Количество
			|ИЗ
			|	Продажи КАК Продажи
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиРезервы.СтрокаЗаявки,
			|	ОстаткиРезервы.Период,
			|	ОстаткиРезервы.Состояние,
			|	ОстаткиРезервы.Количество
			|ИЗ
			|	ОстаткиРезервы КАК ОстаткиРезервы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиЗаявки.СтрокаЗаявки,
			|	ОстаткиЗаявки.Период,
			|	ОстаткиЗаявки.Состояние,
			|	ОстаткиЗаявки.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		Заявки.Период КАК Период,
			|		Заявки.Состояние КАК Состояние,
			|		Заявки.Количество - ЕСТЬNULL(Продажи.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заявки КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
			|			ПО Заявки.СтрокаЗаявки = Продажи.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки) КАК ОстаткиЗаявки"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Если Выборка.ОсновноеСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
				ИскомаяПодстрока = 
				"ВЫБРАТЬ
				|	Продажи.СтрокаЗаявки,
				|	&Период,
				|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
				|	Продажи.КоличествоОборот КАК Количество
				|ПОМЕСТИТЬ Продажи
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(, &Период, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Продажи
				|;";
				ПодстрокаЗамены = 
				"ВЫБРАТЬ
				|	Отгрузки.СтрокаЗаявки,
				|	&Период,
				|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК Состояние,
				|	Отгрузки.КоличествоОборот КАК Количество
				|ПОМЕСТИТЬ Продажи
				|ИЗ РегистрНакопления.ТоварыКОтгрузке.Обороты(, &Период, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Отгрузки
				|;";
				ЗапросСостояния.Текст = СтрЗаменить(Запрос.Текст, ИскомаяПодстрока, ПодстрокаЗамены);
				
			КонецЕсли;
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//найдем то, чего еще нет в справочнике истории
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.Период КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	&ПолнаяИстория КАК ПолнаяИстория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	СУММА(ПолнаяИстория.Количество) КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	ПолнаяИстория.Количество > 0
	|	И СпрИстории.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяИстория.СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя,
	|	ПолнаяИстория.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя"
	);
	
	Запрос.УстановитьПараметр("ПолнаяИстория", ПолнаяИстория);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

//тестовый вариант
Процедура ОбновитьИсториюСтрокЗаявок(вхДатаНачала)
	ПолнаяИстория = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ПолнаяИстория.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ПолнаяИстория.Колонки.Добавить("Период", Новый ОписаниеТипов(Массив, , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СостоянияСтрокДокументов"));
	ПолнаяИстория.Колонки.Добавить("Состояние", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ПолнаяИстория.Колонки.Добавить("Количество", Новый ОписаниеТипов(Массив, , , Новый КвалификаторыЧисла(15,3)));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	Изменение.Период КАК Период,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ПОМЕСТИТЬ ТабИзменений
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период >= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//все отказы
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.Регистратор КАК Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период КАК Период,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	СУММА(ОтказыПоЗаявкамОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК ОтказыПоЗаявкамОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//2. все изменения
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТабИзменений.Период КАК Период,
	|	ТабИзменений.Документ,
	|	ТабИзменений.СтрокаЗаявки,
	|	ТабИзменений.ОсновноеСостояние
	|ИЗ
	|	ТабИзменений КАК ТабИзменений
	|;";
	
	//3. новая заявка
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заявки.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Заявки.СтрокаЗаявки.СостояниеЗаявки = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	|	КОНЕЦ КАК Состояние,
	|	Заявки.КоличествоПриход КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Заявки
	|;";
		
	//4. новый заказ
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заказы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	Заказы.КоличествоПриход КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Заказы
	|;";
		
	//5. отгружен поставщиком
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Размещения.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	СУММА(Размещения.КоличествоПриход) КАК Количество
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Размещения
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещения.СтрокаЗаявки,
	|	Размещения.Период
	|;";
	
	//6. поступил на склад ПК
	//принят на складе ПК
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТовКРезерву.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ТовКРезерву.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе) КАК Состояние,
	|	СУММА(ТовКРезерву.КоличествоПриход) КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКРезервированию.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК ТовКРезерву
	|
	|СГРУППИРОВАТЬ ПО
	|	ТовКРезерву.СтрокаЗаявки,
	|	ТовКРезерву.Период
	|;";
			
	//7. размещен на складе ПК - значит уже в резерве
	//зарезервирован
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	СУММА(Резервы.КоличествоПриход) КАК Количество
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Резервы
	|
	|СГРУППИРОВАТЬ ПО
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период
	|;";
		
	//8. отгружен покупателю
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Продажи.СтрокаЗаявки,
	|	Продажи.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	Продажи.КоличествоОборот КАК Количество
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Продажи
	|;";
			
	//9. отказы по заявкам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	(Отказы.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя ИЛИ Отказы.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	|	
	|;";
	
	//10. отказы по заказам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	(Отказы.Регистратор ССЫЛКА Документ.ЗаказПоставщику ИЛИ Отказы.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
	|	
	|;";
	
	//11. отказы по приходам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	
	|;";
	
	//12. отказы по размещению
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|	
	|;";
	
	//13. отказы по отгрузке
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы
	|ГДЕ
	|	Отказы.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	
	|;";
	
	//14. товары к отгрузке - для статуса Сборка на складе ПК
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отгрузки.СтрокаЗаявки,
	|	Отгрузки.Период,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК Состояние,
	|	Отгрузки.КоличествоОборот КАК Количество
	|ИЗ РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТабИзменений.СтрокаЗаявки
	|				ИЗ
	|					ТабИзменений КАК ТабИзменений)) КАК Отгрузки
	|;";
		
	Р = Запрос.ВыполнитьПакет();
	
	ВыборкаИзменений 		= Р[2].Выбрать();
	Заявки			 		= Р[3].Выгрузить();
	Заказы			 		= Р[4].Выгрузить();
	Отгружено				= Р[5].Выгрузить();
	Поступило		 		= Р[6].Выгрузить();
	Резерв			 		= Р[7].Выгрузить();
	Выдано			 		= Р[8].Выгрузить();
	ОтказыПоЗаявкам	 		= Р[9].Выгрузить();
	ОтказыПоЗаказам	 		= Р[10].Выгрузить();
	ОтказыПоПриходам 		= Р[11].Выгрузить();
	ОтказыПоРазмещению 		= Р[12].Выгрузить();
	ОтказыПоОтгрузке 		= Р[13].Выгрузить();
	СборкаНаСкладеПК 		= Р[14].Выгрузить();
	
	Пока ВыборкаИзменений.Следующий() Цикл
		ПараметрОтбора = Новый Структура("СтрокаЗаявки", ВыборкаИзменений.СтрокаЗаявки);
		
		Если ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ЗаявкаПокупателя")
			ИЛИ ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
			СтрокиСостояний = Заявки.НайтиСтроки(ПараметрОтбора);
			ВсегоОтказы = 0;
			СтрокиОтказов = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказов Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказы = ВсегоОтказы + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ДописатьОтказыПриРезерве = Ложь;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				Если СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.НовыйНеподтвержден Тогда
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период - 1;
					ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
					ЗаписьИстории.Количество = СтрокаСостояния.Количество;
				ИначеЕсли СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.Новый Тогда
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
					ЗаписьИстории.Количество = СтрокаСостояния.Количество - ВсегоОтказы;
				ИначеЕсли СтрокаСостояния.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве Тогда
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период + 1;
					ЗаписьИстории.Состояние = СтрокаСостояния.Состояние;
					ЗаписьИстории.Количество = СтрокаСостояния.Количество;
					ДописатьОтказыПриРезерве = Истина;
				КонецЕсли;	
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказов Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					Если ДописатьОтказыПриРезерве Тогда
						ЗаписьИстории.Период = ВыборкаИзменений.Период + 1;
					Иначе
						ЗаписьИстории.Период = ВыборкаИзменений.Период;
					КонецЕсли;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
						
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ЗаказПоставщику")
			ИЛИ ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
			СтрокиСостояний = Заказы.НайтиСтроки(ПараметрОтбора);
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоЗаказано = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние;
				КоличествоЗаказано = КоличествоЗаказано + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам;					
			КонецЦикла;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			СтрокиСостояний = Отгружено.НайтиСтроки(ПараметрОтбора);
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаказано = 0;
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузкам = 0;
			СтрокиОтказовОтгрузок = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузкам = ВсегоОтказыПоОтгрузкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоОтгружено = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние;
				КоличествоОтгружено = КоличествоОтгружено + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоОтгружено;					
			КонецЦикла;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоОтгрузкам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоОтгрузкам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
						
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СтрокиСостояний = Резерв.НайтиСтроки(ПараметрОтбора);
			КоличествоЗаявлено = 0;
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			КоличествоЗаказано = 0;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоОтгружено = 0;
			СтрокиОтгружено = Отгружено.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиОтгружено Цикл
				КоличествоОтгружено = КоличествоОтгружено + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоПриход = 0;
			СтрокиПриход = Поступило.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаПрихода Из СтрокиПриход Цикл
				КоличествоПриход = КоличествоПриход + СтрокаПрихода.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузкам = 0;
			СтрокиОтказовОтгрузок = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузкам = ВсегоОтказыПоОтгрузкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоРазмещению = 0;
			СтрокиОтказовРазмещений = ОтказыПоРазмещению.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоРазмещению = ВсегоОтказыПоРазмещению + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоРезерв = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				//ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				//в этот момент ВыборкаИзменений.ОсновноеСостояние = Принят на складе, поменяем его на ВРезерве
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве;
				КоличествоРезерв = КоличествоРезерв + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоРезерв;					
			КонецЦикла;
			Если КоличествоПриход - ВсегоОтказыПоРазмещению > КоличествоРезерв Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				ЗаписьИстории.Количество = КоличествоПриход - ВсегоОтказыПоРазмещению - КоличествоРезерв;					
			КонецЕсли;
			Если КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоОтгрузкам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоОтгрузкам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовОтгрузок Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ВыборкаИзменений.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если ВыборкаИзменений.ОсновноеСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
				СтрокиСостояний = СборкаНаСкладеПК.НайтиСтроки(ПараметрОтбора);
			Иначе
				СтрокиСостояний = Выдано.НайтиСтроки(ПараметрОтбора);
			КонецЕсли;
			КоличествоЗаявлено = 0;
			СтрокиЗаявок = Заявки.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаявки Из СтрокиЗаявок Цикл
				КоличествоЗаявлено = КоличествоЗаявлено + СтрокаЗаявки.Количество;
			КонецЦикла;
			КоличествоЗаказано = 0;
			СтрокиЗаказов = Заказы.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				КоличествоЗаказано = КоличествоЗаказано + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоОтгружено = 0;
			СтрокиОтгружено = Отгружено.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаЗаказа Из СтрокиОтгружено Цикл
				КоличествоОтгружено = КоличествоОтгружено + СтрокаЗаказа.Количество;
			КонецЦикла;
			КоличествоПриход = 0;
			СтрокиПриход = Поступило.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаПрихода Из СтрокиПриход Цикл
				КоличествоПриход = КоличествоПриход + СтрокаПрихода.Количество;
			КонецЦикла;
			КоличествоРезерв = 0;
			СтрокиРезерв = Резерв.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаРезерва Из СтрокиРезерв Цикл
				КоличествоРезерв = КоличествоРезерв + СтрокаРезерва.Количество;
			КонецЦикла;
			ВсегоОтказыПоЗаявкам = 0;
			СтрокиОтказовЗаявки = ОтказыПоЗаявкам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаявкам = ВсегоОтказыПоЗаявкам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоЗаказам = 0;
			СтрокиОтказовЗаказы = ОтказыПоЗаказам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоЗаказам = ВсегоОтказыПоЗаказам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоПриходам = 0;
			СтрокиОтказовПоПриходам = ОтказыПоПриходам.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоПриходам Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоПриходам = ВсегоОтказыПоПриходам + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоРазмещению = 0;
			СтрокиОтказовРазмещений = ОтказыПоРазмещению.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоРазмещению = ВсегоОтказыПоРазмещению + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			ВсегоОтказыПоОтгрузке = 0;
			СтрокиОтказовПоОтгрузке = ОтказыПоОтгрузке.НайтиСтроки(ПараметрОтбора);
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоОтгрузке Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ВсегоОтказыПоОтгрузке = ВсегоОтказыПоОтгрузке + СтрокаОтказа.Количество;
				КонецЕсли;
			КонецЦикла;
			КоличествоВыдано = 0;
			Для Каждого СтрокаСостояния Из СтрокиСостояний Цикл
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				КоличествоВыдано = КоличествоВыдано + СтрокаСостояния.Количество;
				ЗаписьИстории.Количество = КоличествоВыдано;					
			КонецЦикла;
			Если КоличествоРезерв - ВсегоОтказыПоОтгрузке > КоличествоВыдано Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.ВРезерве; 
				ЗаписьИстории.Количество = КоличествоРезерв - ВсегоОтказыПоОтгрузке - КоличествоВыдано;					
			КонецЕсли;
			Если КоличествоПриход - ВсегоОтказыПоРазмещению > КоличествоРезерв Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = ВыборкаИзменений.ОсновноеСостояние; 
				ЗаписьИстории.Количество = КоличествоПриход - ВсегоОтказыПоРазмещению - КоличествоРезерв;					
			КонецЕсли;
			Если КоличествоЗаказано > 0 И КоличествоЗаявлено - ВсегоОтказыПоЗаявкам > КоличествоЗаказано - ВсегоОтказыПоЗаказам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Новый;
				ЗаписьИстории.Количество = КоличествоЗаявлено - ВсегоОтказыПоЗаявкам - КоличествоЗаказано - ВсегоОтказыПоЗаказам;
			КонецЕсли;
			Если КоличествоОтгружено > 0 И КоличествоЗаказано - ВсегоОтказыПоЗаказам > КоличествоОтгружено + ВсегоОтказыПоПриходам Тогда
				ЗаписьИстории = ПолнаяИстория.Добавить();
				ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
				ЗаписьИстории.Период = ВыборкаИзменений.Период;
				ЗаписьИстории.Состояние = Справочники.СостоянияСтрокДокументов.Заказано;
				ЗаписьИстории.Количество = КоличествоЗаказано - ВсегоОтказыПоЗаказам - КоличествоОтгружено - ВсегоОтказыПоПриходам;
			КонецЕсли;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаявки Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовЗаказы Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоПриходам Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовРазмещений Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаОтказа Из СтрокиОтказовПоОтгрузке Цикл
				Если СтрокаОтказа.Период <= ВыборкаИзменений.Период Тогда
					ЗаписьИстории = ПолнаяИстория.Добавить();
					ЗаписьИстории.СтрокаЗаявки = ВыборкаИзменений.СтрокаЗаявки;
					ЗаписьИстории.Период = ВыборкаИзменений.Период;
					ЗаписьИстории.Состояние = СтрокаОтказа.Состояние;
					ЗаписьИстории.Количество = СтрокаОтказа.Количество;						
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//найдем то, чего еще нет в справочнике истории
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.Период КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	&ПолнаяИстория КАК ПолнаяИстория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	СУММА(ПолнаяИстория.Количество) КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	ПолнаяИстория.Количество > 0
	|	И СпрИстории.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяИстория.СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя,
	|	ПолнаяИстория.Состояние
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя"
	);
	
	Запрос.УстановитьПараметр("ПолнаяИстория", ПолнаяИстория);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_v1(вхДатаНачала)
	ПолнаяИстория = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ПолнаяИстория.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ПолнаяИстория.Колонки.Добавить("Период", Новый ОписаниеТипов(Массив, , , , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Массив.Очистить();
	Массив.Добавить(Тип("СправочникСсылка.СостоянияСтрокДокументов"));
	ПолнаяИстория.Колонки.Добавить("Состояние", Новый ОписаниеТипов(Массив));
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ПолнаяИстория.Колонки.Добавить("Количество", Новый ОписаниеТипов(Массив, , , Новый КвалификаторыЧисла(15,3)));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изменение.Период КАК Период,
	|	ТИПЗНАЧЕНИЯ(Изменение.Документ) КАК Тип,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Тип";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Тип = Тип("ДокументСсылка.ЗаявкаПокупателя")
			ИЛИ Выборка.Тип = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
			//|			ТОГДА Заявки.Период
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	ВЫБОР
			|		КОГДА &Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
			|			ТОГДА &Период
			|		ИНАЧЕ &Период0
			|	КОНЕЦ КАК Период,
			|	&Состояние КАК Состояние,
			|	Заявки.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заявки
			|ИЗ
			|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, , Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	&Период1 КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
			|	Резервы.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ Резервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(&Период1, СтрокаЗаявки = &СтрокаЗаявки) КАК Резервы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки,
			|	Заявки.Период,
			|	Заявки.Состояние,
			|	Заявки.Количество
			|ИЗ
			|	Заявки КАК Заявки
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	Резервы.Период,
			|	Резервы.Состояние,
			|	Резервы.Количество
			|ИЗ
			|	Резервы КАК Резервы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиПоЗаявкам.СтрокаЗаявки,
			|	ОстаткиПоЗаявкам.Период,
			|	ОстаткиПоЗаявкам.Состояние,
			|	ОстаткиПоЗаявкам.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		Резервы.Период КАК Период,
			|		Заявки.Состояние КАК Состояние,
			|		Заявки.Количество - ЕСТЬNULL(Резервы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заявки КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
			|			ПО Заявки.СтрокаЗаявки = Резервы.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заявки.Количество - ЕСТЬNULL(Резервы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиПоЗаявкам"
			);
			ЗапросСостояния.УстановитьПараметр("Период0", Выборка.Период - 1);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ЗаказПоставщику")
			ИЛИ Выборка.Тип = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	&Состояние КАК Состояние,
			|	Заказы.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Заказы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.Регистратор КАК Документ,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ ИтогоПоЗаказам
			|ИЗ
			|	Отказы КАК Отказы
			|ГДЕ
			|	(Отказы.Документ ССЫЛКА Документ.ЗаказПоставщику
			|			ИЛИ Отказы.Документ ССЫЛКА Документ.КорректировкаЗаказаПоставщику)
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки,
			|	Заказы.Период,
			|	Заказы.Состояние,
			|	Заказы.Количество - ЕСТЬNULL(ИтогоПоЗаказам.Количество, 0) КАК Количество
			|ИЗ
			|	Заказы КАК Заказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогоПоЗаказам КАК ИтогоПоЗаказам
			|		ПО Заказы.СтрокаЗаявки = ИтогоПоЗаказам.СтрокаЗаявки
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиЗаявок.СтрокаЗаявки,
			|	ОстаткиЗаявок.Период,
			|	ОстаткиЗаявок.Состояние,
			|	ОстаткиЗаявок.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		&Период КАК Период,
			|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
			|		Заявки.КоличествоПриход - ЕСТЬNULL(Заказы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
			|			ПО Заявки.СтрокаЗаявки = Заказы.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заявки.КоличествоПриход - ЕСТЬNULL(Заказы.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиЗаявок"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
	
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			//непонятно как быть, если были отказы по заявке (при вычислении остатка по "заказано"), 
			//так будет работать только если будет работать принцип "одна заявка - один заказ"
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
			|	Заказы.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Заказы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Размещения.СтрокаЗаявки,
			|	&Период,
			|	&Состояние КАК Состояние,
			|	Размещения.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Отгружено
			|ИЗ
			|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Размещения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отгружено.СтрокаЗаявки,
			|	Отгружено.Период,
			|	Отгружено.Состояние,
			|	Отгружено.Количество
			|ИЗ
			|	Отгружено КАК Отгружено
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиПоЗаказам.СтрокаЗаявки,
			|	ОстаткиПоЗаказам.Период,
			|	ОстаткиПоЗаказам.Состояние,
			|	ОстаткиПоЗаказам.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
			|		&Период КАК Период,
			|		Заказы.Состояние КАК Состояние,
			|		Заказы.Количество - ЕСТЬNULL(Отгружено.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заказы КАК Заказы
			|			ЛЕВОЕ СОЕДИНЕНИЕ Отгружено КАК Отгружено
			|			ПО Заказы.СтрокаЗаявки = Отгружено.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заказы.СтрокаЗаявки = Итого.СтрокаЗаявки
			|	ГДЕ
			|		Заказы.Количество - ЕСТЬNULL(Отгружено.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) > 0) КАК ОстаткиПоЗаказам"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
		ИначеЕсли Выборка.Тип = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ЗапросСостояния = Новый Запрос(
			"ВЫБРАТЬ
			|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
			|	Заявки.КоличествоПриход КАК Количество
			|ПОМЕСТИТЬ Заявки
			|ИЗ
			|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(, &Период1, Регистратор, , СтрокаЗаявки = &СтрокаЗаявки) КАК Заявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
			|	&Период КАК Период,
			|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
			|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Отказы
			|ИЗ
			|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК ОтказыПоЗаявкамОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	СУММА(Отказы.Количество) КАК Количество
			|ПОМЕСТИТЬ Итого
			|ИЗ
			|	Отказы КАК Отказы
			|
			|СГРУППИРОВАТЬ ПО
			|	Отказы.СтрокаЗаявки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	&Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
			|	Продажи.КоличествоОборот КАК Количество
			|ПОМЕСТИТЬ Продажи
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(, &Период1, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Продажи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Резервы.СтрокаЗаявки,
			|	&Период,
			|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
			|	Резервы.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ ОстаткиРезервы
			|ИЗ
			|	РегистрНакопления.РезервыТоваров.Остатки(&Период1, СтрокаЗаявки = &СтрокаЗаявки) КАК Резервы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.СтрокаЗаявки,
			|	Продажи.Период,
			|	Продажи.Состояние,
			|	Продажи.Количество
			|ИЗ
			|	Продажи КАК Продажи
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиРезервы.СтрокаЗаявки,
			|	ОстаткиРезервы.Период,
			|	ОстаткиРезервы.Состояние,
			|	ОстаткиРезервы.Количество
			|ИЗ
			|	ОстаткиРезервы КАК ОстаткиРезервы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Отказы.СтрокаЗаявки,
			|	Отказы.Период,
			|	Отказы.Состояние,
			|	Отказы.Количество
			|ИЗ
			|	Отказы КАК Отказы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ОстаткиЗаявки.СтрокаЗаявки,
			|	ОстаткиЗаявки.Период,
			|	ОстаткиЗаявки.Состояние,
			|	ОстаткиЗаявки.Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
			|		Заявки.Период КАК Период,
			|		Заявки.Состояние КАК Состояние,
			|		Заявки.Количество - ЕСТЬNULL(Продажи.Количество, 0) - ЕСТЬNULL(Итого.Количество, 0) КАК Количество
			|	ИЗ
			|		Заявки КАК Заявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
			|			ПО Заявки.СтрокаЗаявки = Продажи.СтрокаЗаявки
			|			ЛЕВОЕ СОЕДИНЕНИЕ Итого КАК Итого
			|			ПО Заявки.СтрокаЗаявки = Итого.СтрокаЗаявки) КАК ОстаткиЗаявки"
			);
			ЗапросСостояния.УстановитьПараметр("Период", Выборка.Период);
			ЗапросСостояния.УстановитьПараметр("Период1", Выборка.Период + 1);
			ЗапросСостояния.УстановитьПараметр("СтрокаЗаявки", Выборка.СтрокаЗаявки);
			ЗапросСостояния.УстановитьПараметр("Состояние", Выборка.ОсновноеСостояние);
			
			Если Выборка.ОсновноеСостояние = Справочники.СостоянияСтрокДокументов.СборкаПК Тогда
				ИскомаяПодстрока = 
				"ВЫБРАТЬ
				|	Продажи.СтрокаЗаявки,
				|	&Период,
				|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
				|	Продажи.КоличествоОборот КАК Количество
				|ПОМЕСТИТЬ Продажи
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(, &Период, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Продажи
				|;";
				ПодстрокаЗамены = 
				"ВЫБРАТЬ
				|	Отгрузки.СтрокаЗаявки,
				|	&Период,
				|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.СборкаПК) КАК Состояние,
				|	Отгрузки.КоличествоОборот КАК Количество
				|ПОМЕСТИТЬ Продажи
				|ИЗ РегистрНакопления.ТоварыКОтгрузке.Обороты(, &Период, Регистратор, СтрокаЗаявки = &СтрокаЗаявки) КАК Отгрузки
				|;";
				ЗапросСостояния.Текст = СтрЗаменить(Запрос.Текст, ИскомаяПодстрока, ПодстрокаЗамены);
				
			КонецЕсли;
			
			Р = ЗапросСостояния.Выполнить();
			Если НЕ Р.Пустой() Тогда
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Р.Выгрузить(), ПолнаяИстория);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//найдем то, чего еще нет в справочнике истории
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.Период КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	&ПолнаяИстория КАК ПолнаяИстория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Состояние КАК Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	ПолнаяИстория.Количество > 0
	|	И СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя"
	);
	
	Запрос.УстановитьПараметр("ПолнаяИстория", ПолнаяИстория);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_26_02(вхДатаНачала)
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	История.Регистратор,
	//|	История.Период,
	//|	История.СтрокаЗаявки,
	//|	История.Состояние,
	//|	ПодтвЗаявки.Количество
	//|ИЗ
	//|	ПодтвЗаявки КАК ПодтвЗаявки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	//|		ПО ПодтвЗаявки.Регистратор = История.Регистратор
	//|			И ПодтвЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	//|ГДЕ
	//|	История.Количество = 0
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 3000
	|	Изменение.Период КАК Период,
	|	ТИПЗНАЧЕНИЯ(Изменение.Документ) КАК Тип,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Тип
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки,
	|	СУММА(Отказы.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогоОтказы
	|ИЗ
	|	Отказы КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.Период,
	|	Отказы.СтрокаЗаявки,
	|	ОтказыПлюс.Состояние,
	|	ОтказыПлюс.Количество
	|ПОМЕСТИТЬ ОтказыВременно
	|ИЗ
	|	Отказы КАК Отказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК ОтказыПлюс
	|		ПО Отказы.СтрокаЗаявки = ОтказыПлюс.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Период >= ОтказыПлюс.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ,
	|	СтрокиЗаявок.Период,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ОтказыВременно.Состояние,
	|	ОтказыВременно.Количество
	|ПОМЕСТИТЬ ОтказыДокументы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыВременно КАК ОтказыВременно
	|		ПО СтрокиЗаявок.Документ = ОтказыВременно.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ОтказыВременно.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ОтказыПоДокументам.Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ ОтказыПоДокументам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтказыДокументы.Документ КАК Регистратор,
	|		ОтказыДокументы.Период КАК Период,
	|		ОтказыДокументы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ОтказыДокументыПлюс.Состояние КАК Состояние,
	|		ЕСТЬNULL(ОтказыДокументыПлюс.Количество, 0) КАК Количество
	|	ИЗ
	|		ОтказыДокументы КАК ОтказыДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОтказыДокументы КАК ОтказыДокументыПлюс
	|			ПО ОтказыДокументы.СтрокаЗаявки = ОтказыДокументыПлюс.СтрокаЗаявки
	|	ГДЕ
	|		ОтказыДокументы.Период >= ОтказыДокументыПлюс.Период) КАК ОтказыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ЕСТЬNULL(ОтказыПоДокументам.Состояние, СтрокиЗаявок.ОсновноеСостояние) КАК Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ История
	|ИЗ
	|	ОтказыПоДокументам КАК ОтказыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиЗаявок КАК СтрокиЗаявок
	|		ПО ОтказыПоДокументам.Регистратор = СтрокиЗаявок.Документ
	|			И ОтказыПоДокументам.СтрокаЗаявки = СтрокиЗаявок.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.СтрокаЗаявки,
	|	СУММА(История.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогиПоОтказам
	|ИЗ
	|	История КАК История
	|
	|СГРУППИРОВАТЬ ПО
	|	История.Регистратор,
	|	История.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.СтрокаЗаявки,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ВсеЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|				,
	|				,
	|				Регистратор,
	|				,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заявки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заявки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.СтрокаЗаявки,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заказы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заказы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заказы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ОбработанныеЗаказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.Документ ССЫЛКА Документ.КорректировкаЗаказаПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.Регистратор,
	|	Размещения.СтрокаЗаявки,
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ОтгруженоПоставщиком
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Размещения
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Размещения.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Период,
	|	Продажи.Регистратор,
	|	Продажи.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Продажи
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Продажи.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Продажи.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) > 0
	|	И СтрокиЗаявок.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отгрузки.Регистратор,
	|	Отгрузки.СтрокаЗаявки,
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Отгрузки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Отгрузки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Отгрузки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Отгрузки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Резервы.Регистратор,
	|	Резервы.СтрокаЗаявки,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Резервы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Резервы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Резервы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор КАК Сортировка,
	|	История.Период КАК ДатаВремя,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ВсеЗаявки.Регистратор = История.Регистратор
	|			И ВсеЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	ВЫБОР
	|		КОГДА Р.КоличествоКонечныйОстаток ЕСТЬ NULL
	|			ТОГДА История.Состояние
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве)
	|	КОНЕЦ,
	|	ЕСТЬNULL(Р.КоличествоКонечныйОстаток, ПодтвЗаявки.Количество)
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ПодтвЗаявки.Регистратор = История.Регистратор
	|			И ПодтвЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.ОстаткиИОбороты(
	|				,
	|				,
	|				Регистратор,
	|				,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						История.СтрокаЗаявки
	|					ИЗ
	|						История КАК История)) КАК Р
	|		ПО (История.Регистратор = Р.Регистратор)
	|			И (История.СтрокаЗаявки = Р.СтрокаЗаявки)
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Заказы.Регистратор = История.Регистратор
	|			И Заказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОбработанныеЗаказы.Количество
	|ИЗ
	|	ОбработанныеЗаказы КАК ОбработанныеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОбработанныеЗаказы.Регистратор = История.Регистратор
	|			И ОбработанныеЗаказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОтгруженоПоставщиком.Количество - ИтогоОтказы.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогоОтказы КАК ИтогоОтказы
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогоОтказы.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогоОтказы.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО ОтгруженоПоставщиком.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогиПоОтказам.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|	И ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Продажи.Количество
	|ИЗ
	|	Продажи КАК Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Продажи.Период = История.Период
	|			И Продажи.Регистратор = История.Регистратор
	|			И Продажи.СтрокаЗаявки = История.СтрокаЗаявки
	|			И Продажи.Состояние = История.Состояние
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве),
	|	Резервы.Количество
	|ИЗ
	|	Резервы КАК Резервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Резервы.Регистратор = История.Регистратор
	|			И Резервы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Отгрузки.Количество
	|ИЗ
	|	Отгрузки КАК Отгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Отгрузки.Регистратор = История.Регистратор
	|			И Отгрузки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	История.Количество
	|ИЗ
	|	История КАК История
	|ГДЕ
	|	История.Количество > 0";	
	
	//---конец части "сформировать полную историю"
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем то, чего еще нет в справочнике истории
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Сортировка КАК Сортировка,
	|	ПолнаяИстория.Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_рв(вхДатаНачала)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 3000
	|	Изменение.Период,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки,
	|	СУММА(Отказы.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогоОтказы
	|ИЗ
	|	Отказы КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.Период,
	|	Отказы.СтрокаЗаявки,
	|	ОтказыПлюс.Состояние,
	|	ОтказыПлюс.Количество
	|ПОМЕСТИТЬ ОтказыВременно
	|ИЗ
	|	Отказы КАК Отказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК ОтказыПлюс
	|		ПО Отказы.СтрокаЗаявки = ОтказыПлюс.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Период >= ОтказыПлюс.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ,
	|	СтрокиЗаявок.Период,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ОтказыВременно.Состояние,
	|	ОтказыВременно.Количество
	|ПОМЕСТИТЬ ОтказыДокументы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыВременно КАК ОтказыВременно
	|		ПО СтрокиЗаявок.Документ = ОтказыВременно.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ОтказыВременно.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ОтказыПоДокументам.Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ ОтказыПоДокументам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтказыДокументы.Документ КАК Регистратор,
	|		ОтказыДокументы.Период КАК Период,
	|		ОтказыДокументы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ОтказыДокументыПлюс.Состояние КАК Состояние,
	|		ЕСТЬNULL(ОтказыДокументыПлюс.Количество, 0) КАК Количество
	|	ИЗ
	|		ОтказыДокументы КАК ОтказыДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОтказыДокументы КАК ОтказыДокументыПлюс
	|			ПО ОтказыДокументы.СтрокаЗаявки = ОтказыДокументыПлюс.СтрокаЗаявки
	|	ГДЕ
	|		ОтказыДокументы.Период >= ОтказыДокументыПлюс.Период) КАК ОтказыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ЕСТЬNULL(ОтказыПоДокументам.Состояние, СтрокиЗаявок.ОсновноеСостояние) КАК Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ История
	|ИЗ
	|	ОтказыПоДокументам КАК ОтказыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиЗаявок КАК СтрокиЗаявок
	|		ПО ОтказыПоДокументам.Регистратор = СтрокиЗаявок.Документ
	|			И ОтказыПоДокументам.СтрокаЗаявки = СтрокиЗаявок.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.СтрокаЗаявки,
	|	СУММА(История.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогиПоОтказам
	|ИЗ
	|	История КАК История
	|
	|СГРУППИРОВАТЬ ПО
	|	История.Регистратор,
	|	История.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.СтрокаЗаявки,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ВсеЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|				,
	|				,
	|				Регистратор,
	|				,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заявки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заявки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.СтрокаЗаявки,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заказы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заказы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заказы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ОбработанныеЗаказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.Документ ССЫЛКА Документ.КорректировкаЗаказаПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.Регистратор,
	|	Размещения.СтрокаЗаявки,
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ОтгруженоПоставщиком
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Размещения
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Размещения.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Период,
	|	Продажи.Регистратор,
	|	Продажи.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние,
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Продажи
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Продажи.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Продажи.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) > 0
	|	И СтрокиЗаявок.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отгрузки.Регистратор,
	|	Отгрузки.СтрокаЗаявки,
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Отгрузки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Отгрузки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Отгрузки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Отгрузки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Резервы.Регистратор,
	|	Резервы.СтрокаЗаявки,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Резервы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Резервы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Резервы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор КАК Сортировка,
	|	История.Период КАК ДатаВремя,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ВсеЗаявки.Регистратор = История.Регистратор
	|			И ВсеЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ПодтвЗаявки.Количество
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ПодтвЗаявки.Регистратор = История.Регистратор
	|			И ПодтвЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Заказы.Регистратор = История.Регистратор
	|			И Заказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОбработанныеЗаказы.Количество
	|ИЗ
	|	ОбработанныеЗаказы КАК ОбработанныеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОбработанныеЗаказы.Регистратор = История.Регистратор
	|			И ОбработанныеЗаказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОтгруженоПоставщиком.Количество - ИтогоОтказы.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогоОтказы КАК ИтогоОтказы
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогоОтказы.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогоОтказы.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО ОтгруженоПоставщиком.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогиПоОтказам.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|	И ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Продажи.Количество
	|ИЗ
	|	Продажи КАК Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Продажи.Период = История.Период
	|			И Продажи.Регистратор = История.Регистратор
	|			И Продажи.СтрокаЗаявки = История.СтрокаЗаявки
	|			И Продажи.Состояние = История.Состояние
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве),
	|	Резервы.Количество
	|ИЗ
	|	Резервы КАК Резервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Резервы.Регистратор = История.Регистратор
	|			И Резервы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Отгрузки.Количество
	|ИЗ
	|	Отгрузки КАК Отгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Отгрузки.Регистратор = История.Регистратор
	|			И Отгрузки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	История.Количество
	|ИЗ
	|	История КАК История
	|ГДЕ
	|	История.Количество > 0";	
	
	//---конец части "сформировать полную историю"
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем то, чего еще нет в справочнике истории
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Сортировка КАК Сортировка,
	|	ПолнаяИстория.Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_рв_до_теста(вхДатаНачала)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 3000
	|	Изменение.Период,
	|	Изменение.Документ,
	|	Изменение.СтрокаЗаявки,
	|	Изменение.ОсновноеСостояние
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки,
	|	СУММА(Отказы.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогоОтказы
	|ИЗ
	|	Отказы КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.Регистратор,
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.Регистратор,
	|	Отказы.Период,
	|	Отказы.СтрокаЗаявки,
	|	ОтказыПлюс.Состояние,
	|	ОтказыПлюс.Количество
	|ПОМЕСТИТЬ ОтказыВременно
	|ИЗ
	|	Отказы КАК Отказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК ОтказыПлюс
	|		ПО Отказы.СтрокаЗаявки = ОтказыПлюс.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Период >= ОтказыПлюс.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ,
	|	СтрокиЗаявок.Период,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ОтказыВременно.Состояние,
	|	ОтказыВременно.Количество
	|ПОМЕСТИТЬ ОтказыДокументы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыВременно КАК ОтказыВременно
	|		ПО СтрокиЗаявок.Документ = ОтказыВременно.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ОтказыВременно.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ОтказыПоДокументам.Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ ОтказыПоДокументам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтказыДокументы.Документ КАК Регистратор,
	|		ОтказыДокументы.Период КАК Период,
	|		ОтказыДокументы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ОтказыДокументыПлюс.Состояние КАК Состояние,
	|		ЕСТЬNULL(ОтказыДокументыПлюс.Количество, 0) КАК Количество
	|	ИЗ
	|		ОтказыДокументы КАК ОтказыДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОтказыДокументы КАК ОтказыДокументыПлюс
	|			ПО ОтказыДокументы.СтрокаЗаявки = ОтказыДокументыПлюс.СтрокаЗаявки
	|	ГДЕ
	|		ОтказыДокументы.Период >= ОтказыДокументыПлюс.Период) КАК ОтказыПоДокументам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоДокументам.Регистратор,
	|	ОтказыПоДокументам.Период,
	|	ОтказыПоДокументам.СтрокаЗаявки,
	|	ЕСТЬNULL(ОтказыПоДокументам.Состояние, СтрокиЗаявок.ОсновноеСостояние) КАК Состояние,
	|	ОтказыПоДокументам.Количество
	|ПОМЕСТИТЬ История
	|ИЗ
	|	ОтказыПоДокументам КАК ОтказыПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиЗаявок КАК СтрокиЗаявок
	|		ПО ОтказыПоДокументам.Регистратор = СтрокиЗаявок.Документ
	|			И ОтказыПоДокументам.СтрокаЗаявки = СтрокиЗаявок.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.СтрокаЗаявки,
	|	СУММА(История.Количество) КАК Количество
	|ПОМЕСТИТЬ ИтогиПоОтказам
	|ИЗ
	|	История КАК История
	|
	|СГРУППИРОВАТЬ ПО
	|	История.Регистратор,
	|	История.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.СтрокаЗаявки,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ВсеЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|				,
	|				,
	|				Регистратор,
	|				,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заявки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заявки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.ОсновноеСостояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.СтрокаЗаявки,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заказы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Заказы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Заказы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиЗаявок.Документ КАК Регистратор,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ОбработанныеЗаказы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО СтрокиЗаявок.Документ = ИтогиПоОтказам.Регистратор
	|			И СтрокиЗаявок.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|ГДЕ
	|	СтрокиЗаявок.Документ ССЫЛКА Документ.КорректировкаЗаказаПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.Регистратор,
	|	Размещения.СтрокаЗаявки,
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ОтгруженоПоставщиком
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Размещения
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Размещения.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Регистратор,
	|	Продажи.СтрокаЗаявки,
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Продажи
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Продажи.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Продажи.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Продажи.КоличествоОборот, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отгрузки.Регистратор,
	|	Отгрузки.СтрокаЗаявки,
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) КАК Количество
	|ПОМЕСТИТЬ Отгрузки
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Отгрузки
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Отгрузки.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Отгрузки.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Отгрузки.КоличествоОборот, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Резервы.Регистратор,
	|	Резервы.СтрокаЗаявки,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Резервы
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Резервы.СтрокаЗаявки
	|			И СтрокиЗаявок.Документ = Резервы.Регистратор
	|ГДЕ
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	История.Регистратор КАК Сортировка,
	|	История.Период КАК ДатаВремя,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество
	|ПОМЕСТИТЬ ПолнаяИстория
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ВсеЗаявки.Регистратор = История.Регистратор
	|			И ВсеЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ПодтвЗаявки.Количество
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ПодтвЗаявки.Регистратор = История.Регистратор
	|			И ПодтвЗаявки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Заказы.Регистратор = История.Регистратор
	|			И Заказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОбработанныеЗаказы.Количество
	|ИЗ
	|	ОбработанныеЗаказы КАК ОбработанныеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОбработанныеЗаказы.Регистратор = История.Регистратор
	|			И ОбработанныеЗаказы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ОтгруженоПоставщиком.Количество - ИтогоОтказы.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогоОтказы КАК ИтогоОтказы
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогоОтказы.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогоОтказы.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество
	|ИЗ
	|	ОтгруженоПоставщиком КАК ОтгруженоПоставщиком
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО ОтгруженоПоставщиком.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиПоОтказам КАК ИтогиПоОтказам
	|		ПО ОтгруженоПоставщиком.Регистратор = ИтогиПоОтказам.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = ИтогиПоОтказам.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО ОтгруженоПоставщиком.Регистратор = История.Регистратор
	|			И ОтгруженоПоставщиком.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|	И ВсеЗаявки.Количество - ЕСТЬNULL(ИтогиПоОтказам.Количество, 0) - ОтгруженоПоставщиком.Количество > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Продажи.Количество
	|ИЗ
	|	Продажи КАК Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Продажи.Регистратор = История.Регистратор
	|			И Продажи.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	Значение(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	Резервы.Количество
	|ИЗ
	|	Резервы КАК Резервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Резервы.Регистратор = История.Регистратор
	|			И Резервы.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	Отгрузки.Количество
	|ИЗ
	|	Отгрузки КАК Отгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ История КАК История
	|		ПО Отгрузки.Регистратор = История.Регистратор
	|			И Отгрузки.СтрокаЗаявки = История.СтрокаЗаявки
	|ГДЕ
	|	История.Количество = 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	История.Регистратор,
	|	История.Период,
	|	История.СтрокаЗаявки,
	|	История.Состояние,
	|	История.Количество
	|ИЗ
	|	История КАК История
	|ГДЕ
	|	История.Количество > 0";	
	
	//---конец части "сформировать полную историю"
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем то, чего еще нет в справочнике истории
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ПолнаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПолнаяИстория.ДатаВремя КАК ДатаВремя,
	|	ПолнаяИстория.Сортировка КАК Сортировка,
	|	ПолнаяИстория.Состояние,
	|	ПолнаяИстория.Количество КАК Количество
	|ИЗ
	|	ПолнаяИстория КАК ПолнаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО ПолнаяИстория.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И ПолнаяИстория.ДатаВремя = СпрИстории.ДатаВремя
	|			И ПолнаяИстория.Состояние = СпрИстории.Состояние
	|			И ПолнаяИстория.Количество = СпрИстории.Количество
	|ГДЕ
	|	СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_03(вхДатаНачала)
	
	Запрос = Новый Запрос;
	
	//получим все зарегистрированные изменения по строкам заявок
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Изменение.СтрокаЗаявки
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок.СрезПоследних КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//по этим изменениям получим начальное состояние ("Новая неподтвержденная заявка")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНЕподтвержден) КАК Состояние,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ВсеЗаявки
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|ГДЕ
	|	Заявки.КоличествоКонечныйОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//по полученному списку строк сформируем список подтвержденных заявок ("Новая заявка")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ВсеЗаявки.Регистратор,
	|	ЕСТЬNULL(Корр.Ссылка.Дата, ВсеЗаявки.Период) КАК Период,
	|	ВсеЗаявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
	|	ВсеЗаявки.Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.Товары КАК Корр
	|		ПО ВсеЗаявки.СтрокаЗаявки = Корр.СтрокаЗаявки
	|ГДЕ
	|	Корр.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем все стоковые в резерве ("Зарезервирован")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК Резервы
	|ГДЕ
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем таблицу всех отказов
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//из отказов отберем отказы по заявкам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Регистратор,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ПОМЕСТИТЬ ОтказыПозаявкам
	|ИЗ
	|	Отказы КАК Отказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодтвЗаявки КАК ПодтвЗаявки
	|		ПО Отказы.СтрокаЗаявки = ПодтвЗаявки.СтрокаЗаявки
	|ГДЕ
	|	(Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор
	|			ИЛИ Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор.ДокументОснование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем список оставшихся неподтвержденных заявок
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ПодтвЗаявки.СтрокаЗаявки,
	|	ПодтвЗаявки.Период,
	|	ПодтвЗаявки.Регистратор,
	|	ВсеЗаявки.Состояние,
	|	ВсеЗаявки.Количество - ПодтвЗаявки.Количество КАК Количество
	|ПОМЕСТИТЬ ОстаткиНеподтвЗаявок
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|ГДЕ
	|	ВсеЗаявки.Количество - ПодтвЗаявки.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтвЗаявки.СтрокаЗаявки,
	|	ПодтвЗаявки.Период,
	|	ПодтвЗаявки.Регистратор,
	|	ПодтвЗаявки.Состояние,
	|	ЕСТЬNULL(ПодтвЗаявки.Количество - ЕСТЬNULL(ВсегоОтказы.Количество, 0) - ЕСТЬNULL(ВсегоРезервы.Количество, 0), 0) КАК Количество
	|ПОМЕСТИТЬ ОстаткиПоЗаявкам
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|			СУММА(Резервы.Количество) КАК Количество
	|		ИЗ
	|			Резервы КАК Резервы
	|		ГДЕ
	|			(Резервы.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	|					ИЛИ Резервы.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Резервы.СтрокаЗаявки) КАК ВсегоРезервы
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсегоРезервы.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОтказыПоЗаявкам.СтрокаЗаявки КАК СтрокаЗаявки,
	|			СУММА(ОтказыПоЗаявкам.Количество) КАК Количество
	|		ИЗ
	|			ОтказыПозаявкам КАК ОтказыПоЗаявкам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОтказыПоЗаявкам.СтрокаЗаявки) КАК ВсегоОтказы
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсегоОтказы.СтрокаЗаявки
	|ГДЕ
	|	ЕСТЬNULL(ПодтвЗаявки.Количество - ЕСТЬNULL(ВсегоОтказы.Количество, 0) - ЕСТЬNULL(ВсегоРезервы.Количество, 0), 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//получим список заявок, размещенных в заказах ("Заказано у поставщика")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.Период,
	|	Заказы.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК Заказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//получим заявки, отгруженные поставщиком ("Отгружено поставщиком")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки,
	|	Размещения.Период,
	|	Размещения.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0)  КАК Количество
	|ПОМЕСТИТЬ Отгружено
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК Заявки)) КАК Размещения
	|ГДЕ
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем полную историю по заявкам
	//новая неподтвержденная заявка
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ВсеЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ВсеЗаявки.Период КАК ДатаВремя,
	|	ВсеЗаявки.Регистратор КАК Сортировка,
	|	ВсеЗаявки.Состояние,
	|	ВсеЗаявки.Количество КАК Количество
	|ПОМЕСТИТЬ История
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|ГДЕ
	|	ВсеЗаявки.Количество > 0";
	
	//новая заявка
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	ОстаткиНеподтвЗаявок.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|ГДЕ
	|	ОстаткиНеподтвЗаявок.Количество > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	ОстаткиПоЗаявкам.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество
	|ИЗ
	|	ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|ГДЕ
	|	ОстаткиПоЗаявкам.Количество > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкам.СтрокаЗаявки,
	|	ОтказыПоЗаявкам.Период,
	|	ОтказыПоЗаявкам.Регистратор,
	|	ОтказыПоЗаявкам.Состояние,
	|	ОтказыПоЗаявкам.Количество
	|ИЗ
	|	ОтказыПозаявкам КАК ОтказыПоЗаявкам";
	
	//в резерве
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	Резервы.Состояние,
	|	Резервы.Количество
	|ИЗ
	|	Резервы КАК Резервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодтвЗаявки КАК ПодтвЗаявки
	|		ПО Резервы.СтрокаЗаявки = ПодтвЗаявки.СтрокаЗаявки
	|ГДЕ
	|	(Резервы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор
	|			ИЛИ Резервы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор.ДокументОснование)";
	
	//заказано у поставщика
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	Заказы.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|		ПО Заказы.СтрокаЗаявки = ОстаткиНеподтвЗаявок.СтрокаЗаявки
	
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	Заказы.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество - Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|		ПО Заказы.СтрокаЗаявки = ОстаткиПоЗаявкам.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки,
	|	Заказы.Период,
	|	Заказы.Регистратор,
	|	Заказы.Состояние,
	|	Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|ГДЕ
	|	Заказы.Количество > 0";
	
	//отгружено поставщиком
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	Отгружено.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|		ПО Отгружено.СтрокаЗаявки = ОстаткиНеподтвЗаявок.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	Отгружено.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество - Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|		ПО Отгружено.СтрокаЗаявки = ОстаткиПоЗаявкам.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отгружено.СтрокаЗаявки,
	|	Отгружено.Период,
	|	Заказы.Регистратор,
	|	Заказы.Состояние,
	|	Заказы.Количество - Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
	|		ПО Отгружено.СтрокаЗаявки = Заказы.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отгружено.СтрокаЗаявки,
	|	Отгружено.Период,
	|	Отгружено.Регистратор,
	|	Отгружено.Состояние,
	|	Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Регистратор,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы";
	
	
	//---конец части "сформировать полную историю"
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем то, чего еще нет в справочнике истории
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	История.СтрокаЗаявки КАК СтрокаЗаявки,
	|	История.ДатаВремя КАК ДатаВремя,
	|	История.Сортировка КАК Сортировка,
	|	История.Состояние,
	|	История.Количество КАК Количество
	|ИЗ
	|	История КАК История
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО История.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И История.ДатаВремя = СпрИстории.ДатаВремя
	|			И История.Состояние = СпрИстории.Состояние
	|			И История.Количество = СпрИстории.Количество
	|ГДЕ
	|	СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_02(вхДатаНачала)
	
	Запрос = Новый Запрос;
	
	//получим все зарегистрированные изменения по строкам заявок
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Изменение.СтрокаЗаявки
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок.СрезПоследних КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//по этим изменениям получим начальное состояние ("Новая неподтвержденная заявка")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНЕподтвержден) КАК Состояние,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ ВсеЗаявки
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|ГДЕ
	|	Заявки.КоличествоКонечныйОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//по полученному списку строк сформируем список подтвержденных заявок ("Новая заявка")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ВсеЗаявки.Регистратор,
	|	ЕСТЬNULL(Корр.Ссылка.Дата, ВсеЗаявки.Период) КАК Период,
	|	ВсеЗаявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
	|	ВсеЗаявки.Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.Товары КАК Корр
	|		ПО ВсеЗаявки.СтрокаЗаявки = Корр.СтрокаЗаявки
	|ГДЕ
	|	Корр.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем все стоковые в резерве ("Зарезервирован")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем таблицу всех отказов
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//из отказов отберем отказы по заявкам
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Регистратор,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ПОМЕСТИТЬ ОтказыПозаявкам
	|ИЗ
	|	Отказы КАК Отказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодтвЗаявки КАК ПодтвЗаявки
	|		ПО Отказы.СтрокаЗаявки = ПодтвЗаявки.СтрокаЗаявки
	|ГДЕ
	|	(Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор
	|			ИЛИ Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор.ДокументОснование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем список оставшихся неподтвержденных заявок
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ПодтвЗаявки.СтрокаЗаявки,
	|	ПодтвЗаявки.Период,
	|	ПодтвЗаявки.Регистратор,
	|	ВсеЗаявки.Состояние,
	|	ВсеЗаявки.Количество - ПодтвЗаявки.Количество КАК Количество
	|ПОМЕСТИТЬ ОстаткиНеподтвЗаявок
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеЗаявки КАК ВсеЗаявки
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсеЗаявки.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтвЗаявки.СтрокаЗаявки,
	|	ПодтвЗаявки.Период,
	|	ПодтвЗаявки.Регистратор,
	|	ПодтвЗаявки.Состояние,
	|	ЕСТЬNULL(ПодтвЗаявки.Количество - ЕСТЬNULL(ВсегоОтказы.Количество, 0) - ЕСТЬNULL(ВсегоРезервы.Количество, 0), 0) КАК Количество
	|ПОМЕСТИТЬ ОстаткиПоЗаявкам
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Резервы.СтрокаЗаявки КАК СтрокаЗаявки,
	|			СУММА(Резервы.Количество) КАК Количество
	|		ИЗ
	|			Резервы КАК Резервы
	|		ГДЕ
	|			(Резервы.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	|					ИЛИ Резервы.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Резервы.СтрокаЗаявки) КАК ВсегоРезервы
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсегоРезервы.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОтказыПоЗаявкам.СтрокаЗаявки КАК СтрокаЗаявки,
	|			СУММА(ОтказыПоЗаявкам.Количество) КАК Количество
	|		ИЗ
	|			ОтказыПозаявкам КАК ОтказыПоЗаявкам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОтказыПоЗаявкам.СтрокаЗаявки) КАК ВсегоОтказы
	|		ПО ПодтвЗаявки.СтрокаЗаявки = ВсегоОтказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//получим список заявок, размещенных в заказах ("Заказано у поставщика")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.Период,
	|	Заказы.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					ПодтвЗаявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК ПодтвЗаявки)) КАК Заказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//получим заявки, отгруженные поставщиком ("Отгружено поставщиком")
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки,
	|	Размещения.Период,
	|	Размещения.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком) КАК Состояние,
	|	ЕСТЬNULL(Размещения.КоличествоПриход, 0)  КАК Количество
	|ПОМЕСТИТЬ Отгружено
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					ПодтвЗаявки КАК Заявки)) КАК Размещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//сформируем полную историю по заявкам
	//новая неподтвержденная заявка
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ВсеЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ВсеЗаявки.Период КАК ДатаВремя,
	|	ВсеЗаявки.Регистратор КАК Сортировка,
	|	ВсеЗаявки.Состояние,
	|	ВсеЗаявки.Количество КАК Количество
	|ПОМЕСТИТЬ История
	|ИЗ
	|	ВсеЗаявки КАК ВсеЗаявки";
	
	//новая заявка
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	ОстаткиНеподтвЗаявок.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	ОстаткиПоЗаявкам.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество
	|ИЗ
	|	ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкам.СтрокаЗаявки,
	|	ОтказыПоЗаявкам.Период,
	|	ОтказыПоЗаявкам.Регистратор,
	|	ОтказыПоЗаявкам.Состояние,
	|	ОтказыПоЗаявкам.Количество
	|ИЗ
	|	ОтказыПозаявкам КАК ОтказыПоЗаявкам";
	
	//в резерве
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	Резервы.Состояние,
	|	Резервы.Количество
	|ИЗ
	|	Резервы КАК Резервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодтвЗаявки КАК ПодтвЗаявки
	|		ПО Резервы.СтрокаЗаявки = ПодтвЗаявки.СтрокаЗаявки
	|ГДЕ
	|	(Резервы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор
	|			ИЛИ Резервы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор.ДокументОснование)";
	
	//заказано у поставщика
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	Заказы.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|		ПО Заказы.СтрокаЗаявки = ОстаткиНеподтвЗаявок.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	Заказы.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество - Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|		ПО Заказы.СтрокаЗаявки = ОстаткиПоЗаявкам.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки,
	|	Заказы.Период,
	|	Заказы.Регистратор,
	|	Заказы.Состояние,
	|	Заказы.Количество
	|ИЗ
	|	Заказы КАК Заказы";
	
	//отгружено поставщиком
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиНеподтвЗаявок.СтрокаЗаявки,
	|	Отгружено.Период,
	|	ОстаткиНеподтвЗаявок.Регистратор,
	|	ОстаткиНеподтвЗаявок.Состояние,
	|	ОстаткиНеподтвЗаявок.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНеподтвЗаявок КАК ОстаткиНеподтвЗаявок
	|		ПО Отгружено.СтрокаЗаявки = ОстаткиНеподтвЗаявок.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиПоЗаявкам.СтрокаЗаявки,
	|	Отгружено.Период,
	|	ОстаткиПоЗаявкам.Регистратор,
	|	ОстаткиПоЗаявкам.Состояние,
	|	ОстаткиПоЗаявкам.Количество - Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоЗаявкам КАК ОстаткиПоЗаявкам
	|		ПО Отгружено.СтрокаЗаявки = ОстаткиПоЗаявкам.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отгружено.СтрокаЗаявки,
	|	Отгружено.Период,
	|	Заказы.Регистратор,
	|	Заказы.Состояние,
	|	Заказы.Количество - Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
	|		ПО Отгружено.СтрокаЗаявки = Заказы.СтрокаЗаявки
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отгружено.СтрокаЗаявки,
	|	Отгружено.Период,
	|	Отгружено.Регистратор,
	|	Отгружено.Состояние,
	|	Отгружено.Количество
	|ИЗ
	|	Отгружено КАК Отгружено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	Отказы.Период,
	|	Отказы.Регистратор,
	|	Отказы.Состояние,
	|	Отказы.Количество
	|ИЗ
	|	Отказы КАК Отказы";
	
	
	//---конец части "сформировать полную историю"
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	//найдем то, чего еще нет в справочнике истории
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	История.СтрокаЗаявки КАК СтрокаЗаявки,
	|	История.ДатаВремя КАК ДатаВремя,
	|	История.Сортировка КАК Сортировка,
	|	История.Состояние,
	|	История.Количество КАК Количество
	|ИЗ
	|	История КАК История
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК СпрИстории
	|		ПО История.СтрокаЗаявки = СпрИстории.СтрокаЗаявки
	|			И История.ДатаВремя = СпрИстории.ДатаВремя
	|			И История.Состояние = СпрИстории.Состояние
	|			И История.Количество = СпрИстории.Количество
	|ГДЕ
	|	СпрИстории.Количество ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	СтрокаЗаявки,
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаСтрокаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтрокаЗаявки");
		Пока ВыборкаСтрокаЗаявки.Следующий() Цикл
			ВыборкаДатаВремя = ВыборкаСтрокаЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
			Пока ВыборкаДатаВремя.Следующий() Цикл
				
				НачатьТранзакцию();
				Попытка
					ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
					Пока ВыборкаДетальных.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
							НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
							НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
							НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
							НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
							НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
							НоваяЗапись.Количество = ВыборкаДетальных.Количество;
							НоваяЗапись.Записать();
							
						КонецЕсли;
						
					КонецЦикла;
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
				КонецПопытки;
			КонецЦикла;		
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_01(вхДатаНачала)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Изменение.СтрокаЗаявки
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок.СрезПоследних КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден) КАК Состояние,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заявки
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|ГДЕ
	|	Заявки.КоличествоКонечныйОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	МИНИМУМ(Корр.Ссылка.Дата) КАК Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
	|	ЕСТЬNULL(Корр.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	Заявки КАК Заявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.Товары КАК Корр
	|		ПО Заявки.СтрокаЗаявки = Корр.СтрокаЗаявки
	|ГДЕ
	|	Корр.Ссылка.Подтверждена
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявки.Регистратор,
	|	Заявки.СтрокаЗаявки,
	|	Корр.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.Период,
	|	Заказы.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК Заказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтвЗаявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ПодтвЗаявки.Регистратор КАК РегистраторЗаявки,
	|	Отказы.Регистратор КАК РегистраторОтказа,
	|	ЕСТЬNULL(ПодтвЗаявки.Количество, 0) КАК КоличествоНачальное,
	|	ЕСТЬNULL(Отказы.Количество, 0) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ОтказыПоЗаявкам
	|ИЗ
	|	ПодтвЗаявки КАК ПодтвЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО ПодтвЗаявки.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|ГДЕ
	|	(Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор
	|			ИЛИ Отказы.Регистратор.ДокументОснование = ПодтвЗаявки.Регистратор.ДокументОснование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заказы.Регистратор КАК РегистраторЗаказа,
	|	Отказы.Регистратор КАК РегистраторОтказа,
	|	ЕСТЬNULL(Заказы.Количество, 0) КАК КоличествоНачальное,
	|	ЕСТЬNULL(Отказы.Количество, 0) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ОтказыПоЗаказам
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Заказы.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Регистратор.ДокументОснование = Заказы.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаявки,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное,
	|	СУММА(ОтказыСправа.КоличествоОтказ) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ЗаявкиИОтказы
	|ИЗ
	|	ОтказыПоЗаявкам КАК ОтказыСлева
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыПоЗаявкам КАК ОтказыСправа
	|		ПО ОтказыСлева.РегистраторЗаявки = ОтказыСправа.РегистраторЗаявки
	|ГДЕ
	|	ОтказыСлева.РегистраторОтказа >= ОтказыСправа.РегистраторОтказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаявки,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаказа,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное,
	|	СУММА(ОтказыСправа.КоличествоОтказ) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ЗаказыИОтказы
	|ИЗ
	|	ОтказыПоЗаказам КАК ОтказыСлева
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыПоЗаказам КАК ОтказыСправа
	|		ПО ОтказыСлева.РегистраторЗаказа = ОтказыСправа.РегистраторЗаказа
	|ГДЕ
	|	ОтказыСлева.РегистраторОтказа >= ОтказыСправа.РегистраторОтказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаказа,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияЗаявок.СтрокаЗаявки,
	|	ИсторияЗаявок.ДатаВремя КАК ДатаВремя,
	|	ИсторияЗаявок.Сортировка КАК Сортировка,
	|	ИсторияЗаявок.Состояние,
	|	ИсторияЗаявок.Количество
	|ПОМЕСТИТЬ ИсторияУзлы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|		Заявки.Период КАК ДатаВремя,
	|		Заявки.Регистратор КАК Сортировка,
	|		Заявки.Состояние КАК Состояние,
	|		Заявки.Количество КАК Количество
	|	ИЗ
	|		Заявки КАК Заявки
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ПодтвЗаявки.СтрокаЗаявки,
	|		ПодтвЗаявки.Период,
	|		ПодтвЗаявки.Регистратор,
	|		ПодтвЗаявки.Состояние,
	|		ПодтвЗаявки.Количество - ЕСТЬNULL(ОтказыПоЗаявкамВсего.Отказано, 0) - ЕСТЬNULL(Резервы.Количество, 0)
	|	ИЗ
	|		ПодтвЗаявки КАК ПодтвЗаявки
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ОтказыПоЗаявкам.СтрокаЗаявки КАК СтрокаЗаявки,
	|				СУММА(ОтказыПоЗаявкам.КоличествоОтказ) КАК Отказано
	|			ИЗ
	|				ОтказыПоЗаявкам КАК ОтказыПоЗаявкам
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОтказыПоЗаявкам.СтрокаЗаявки) КАК ОтказыПоЗаявкамВсего
	|			ПО ПодтвЗаявки.СтрокаЗаявки = ОтказыПоЗаявкамВсего.СтрокаЗаявки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
	|			ПО ПодтвЗаявки.СтрокаЗаявки = Резервы.СтрокаЗаявки
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Резервы.СтрокаЗаявки,
	|		Резервы.Период,
	|		Резервы.Регистратор,
	|		Резервы.Состояние,
	|		Резервы.Количество
	|	ИЗ
	|		Резервы КАК Резервы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Заказы.СтрокаЗаявки,
	|		Заказы.Период,
	|		Заказы.Регистратор,
	|		Заказы.Состояние,
	|		Заказы.Количество
	|	ИЗ
	|		Заказы КАК Заказы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыИОтказы.СтрокаЗаявки,
	|		ЗаказыИОтказы.РегистраторОтказа.Дата,
	|		ЗаказыИОтказы.РегистраторОтказа,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано),
	|		ЗаказыИОтказы.КоличествоНачальное - ЗаказыИОтказы.КоличествоОтказ
	|	ИЗ
	|		ЗаказыИОтказы КАК ЗаказыИОтказы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Размещения.СтрокаЗаявки,
	|		Размещения.Период,
	|		Размещения.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком),
	|		ЕСТЬNULL(Размещения.КоличествоПриход, 0)
	|	ИЗ
	|		РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Размещения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Размещения.СтрокаЗаявки,
	|		Размещения.Период,
	|		Размещения.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе),
	|		ЕСТЬNULL(Размещения.КоличествоРасход, 0)
	|	ИЗ
	|		РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Размещения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Продажи.СтрокаЗаявки,
	|		Продажи.Период,
	|		Продажи.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Закрыт),
	|		ЕСТЬNULL(Продажи.КоличествоОборот, 0)
	|	ИЗ
	|		РегистрНакопления.Продажи.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Продажи) КАК ИсторияЗаявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОбщаяИстория.ДатаВремя КАК ДатаВремя,
	|	ОбщаяИстория.Сортировка КАК Сортировка,
	|	ОбщаяИстория.Состояние,
	|	ОбщаяИстория.Количество КАК Количество,
	|	ЕСТЬNULL(Справочник.Количество, 0) КАК КоличествоВСправочнике
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсторияУзлы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ИсторияУзлы.ДатаВремя КАК ДатаВремя,
	|		ИсторияУзлы.Сортировка КАК Сортировка,
	|		ИсторияУзлы.Состояние КАК Состояние,
	|		ИсторияУзлы.Количество КАК Количество
	|	ИЗ
	|		ИсторияУзлы КАК ИсторияУзлы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ИсторияУзлы.СтрокаЗаявки,
	|		ИсторияУзлы.ДатаВремя,
	|		ИсторияУзлы.Сортировка,
	|		Отказы.Состояние,
	|		ЕСТЬNULL(Отказы.Количество, 0)
	|	ИЗ
	|		ИсторияУзлы КАК ИсторияУзлы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|			ПО ИсторияУзлы.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|				И ИсторияУзлы.ДатаВремя >= Отказы.Период
	|	ГДЕ
	|		ЕСТЬNULL(Отказы.Количество, 0) > 0) КАК ОбщаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК Справочник
	|		ПО ОбщаяИстория.СтрокаЗаявки = Справочник.СтрокаЗаявки
	|			И ОбщаяИстория.ДатаВремя = Справочник.ДатаВремя
	|			И ОбщаяИстория.Состояние = Справочник.Состояние
	|ГДЕ
	|	ЕСТЬNULL(Справочник.Количество, 0) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	//НаборЗаписей = РегистрыСведений.ИзменениеСтрокЗаявок.СоздатьНаборЗаписей();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДатаВремя = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
		Пока ВыборкаДатаВремя.Следующий() Цикл
				
			НачатьТранзакцию();
			Попытка
				ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
				Пока ВыборкаДетальных.Следующий() Цикл
					Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
						НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
						НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
						НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
						НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
						НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
						НоваяЗапись.Количество = ВыборкаДетальных.Количество;
						НоваяЗапись.Записать();
						
						//НаборЗаписей = РегистрыСведений.ИзменениеСтрокЗаявок.СоздатьНаборЗаписей();
						//НаборЗаписей.Отбор.Документ.ВидСравнения = ВидСравнения.Равно;
						//НаборЗаписей.Отбор.Документ.Значение = ВыборкаДетальных.Сортировка;
						//НаборЗаписей.Отбор.Документ.Использование = Истина;
						//НаборЗаписей.Прочитать();
						//НаборЗаписей.Очистить();
						//НаборЗаписей.Записать(Истина);
					КонецЕсли;
					
				КонецЦикла;
				
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				
			КонецПопытки;
				
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьИсториюСтрокЗаявок_00(вхДатаНачала)
	//|	ВЫБОР
	//|		КОГДА Заявки.Регистратор.Подтверждена
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	//|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	//|	КОНЕЦ КАК Состояние,
	
	//|	ВЫБРАТЬ
	//|		ПодтвЗаявки.СтрокаЗаявки,
	//|		ПодтвЗаявки.Период,
	//|		ПодтвЗаявки.Регистратор,
	//|		ПодтвЗаявки.Состояние,
	//|		ПодтвЗаявки.Количество - ЕСТЬNULL(ОтказыПоЗаявкамВсего.Отказано, 0) - ЕСТЬNULL(Заказы.Количество, 0) - ЕСТЬNULL(Резервы.Количество, 0)
	//|	ИЗ
	//|		ПодтвЗаявки КАК ПодтвЗаявки
	//|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|				ОтказыПоЗаявкам.СтрокаЗаявки КАК СтрокаЗаявки,
	//|				СУММА(ОтказыПоЗаявкам.КоличествоОтказ) КАК Отказано
	//|			ИЗ
	//|				ОтказыПоЗаявкам КАК ОтказыПоЗаявкам
	//|			
	//|			СГРУППИРОВАТЬ ПО
	//|				ОтказыПоЗаявкам.СтрокаЗаявки) КАК ОтказыПоЗаявкамВсего
	//|			ПО ПодтвЗаявки.СтрокаЗаявки = ОтказыПоЗаявкамВсего.СтрокаЗаявки
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы
	//|			ПО ПодтвЗаявки.СтрокаЗаявки = Заказы.СтрокаЗаявки
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
	//|			ПО ПодтвЗаявки.СтрокаЗаявки = Резервы.СтрокаЗаявки

	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Изменение.СтрокаЗаявки
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	РегистрСведений.ИзменениеСтрокЗаявок.СрезПоследних КАК Изменение
	|ГДЕ
	|	Изменение.Период > &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	Заявки.Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден) КАК Состояние,
	|	ЕСТЬNULL(Заявки.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заявки
	|ИЗ
	|	РегистрНакопления.ЗаявкиПокупателей.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					СтрокиЗаявок.СтрокаЗаявки
	|				ИЗ
	|					СтрокиЗаявок КАК СтрокиЗаявок)) КАК Заявки
	|ГДЕ
	|	Заявки.КоличествоКонечныйОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Регистратор,
	|	МИНИМУМ(Корр.Ссылка.Дата) КАК Период,
	|	Заявки.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый) КАК Состояние,
	|	ЕСТЬNULL(Корр.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ПодтвЗаявки
	|ИЗ
	|	Заявки КАК Заявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя.Товары КАК Корр
	|		ПО Заявки.СтрокаЗаявки = Корр.СтрокаЗаявки
	|ГДЕ
	|	Корр.Ссылка.Подтверждена
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявки.Регистратор,
	|	Заявки.СтрокаЗаявки,
	|	Корр.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.Регистратор,
	|	Заказы.Период,
	|	Заказы.СтрокаЗаявки,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано) КАК Состояние,
	|	ЕСТЬNULL(Заказы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК Заказы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыПоЗаявкамОбороты.Регистратор,
	|	ОтказыПоЗаявкамОбороты.Период,
	|	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	|	ОтказыПоЗаявкамОбороты.ПричинаОтказа КАК Состояние,
	|	ОтказыПоЗаявкамОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК ОтказыПоЗаявкамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заявки.Регистратор КАК РегистраторЗаявки,
	|	Отказы.Регистратор КАК РегистраторОтказа,
	|	ЕСТЬNULL(Заявки.Количество, 0) КАК КоличествоНачальное,
	|	ЕСТЬNULL(Отказы.Количество, 0) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ОтказыПоЗаявкам
	|ИЗ
	|	Заявки КАК Заявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Заявки.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Регистратор.ДокументОснование = Заявки.Регистратор.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.СтрокаЗаявки КАК СтрокаЗаявки,
	|	Заказы.Регистратор КАК РегистраторЗаказа,
	|	Отказы.Регистратор КАК РегистраторОтказа,
	|	ЕСТЬNULL(Заказы.Количество, 0) КАК КоличествоНачальное,
	|	ЕСТЬNULL(Отказы.Количество, 0) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ОтказыПоЗаказам
	|ИЗ
	|	Заказы КАК Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Заказы.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|ГДЕ
	|	Отказы.Регистратор.ДокументОснование = Заказы.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаявки,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное,
	|	СУММА(ОтказыСправа.КоличествоОтказ) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ЗаявкиИОтказы
	|ИЗ
	|	ОтказыПоЗаявкам КАК ОтказыСлева
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыПоЗаявкам КАК ОтказыСправа
	|		ПО ОтказыСлева.РегистраторЗаявки = ОтказыСправа.РегистраторЗаявки
	|ГДЕ
	|	ОтказыСлева.РегистраторОтказа >= ОтказыСправа.РегистраторОтказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаявки,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаказа,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное,
	|	СУММА(ОтказыСправа.КоличествоОтказ) КАК КоличествоОтказ
	|ПОМЕСТИТЬ ЗаказыИОтказы
	|ИЗ
	|	ОтказыПоЗаказам КАК ОтказыСлева
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтказыПоЗаказам КАК ОтказыСправа
	|		ПО ОтказыСлева.РегистраторЗаказа = ОтказыСправа.РегистраторЗаказа
	|ГДЕ
	|	ОтказыСлева.РегистраторОтказа >= ОтказыСправа.РегистраторОтказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтказыСлева.СтрокаЗаявки,
	|	ОтказыСлева.РегистраторЗаказа,
	|	ОтказыСлева.РегистраторОтказа,
	|	ОтказыСлева.КоличествоНачальное
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Резервы.СтрокаЗаявки,
	|	Резервы.Период,
	|	Резервы.Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние,
	|	ЕСТЬNULL(Резервы.КоличествоПриход, 0) КАК Количество
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ
	|					Заявки.СтрокаЗаявки
	|				ИЗ
	|					Заявки КАК Заявки)) КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияЗаявок.СтрокаЗаявки,
	|	ИсторияЗаявок.ДатаВремя КАК ДатаВремя,
	|	ИсторияЗаявок.Сортировка КАК Сортировка,
	|	ИсторияЗаявок.Состояние,
	|	ИсторияЗаявок.Количество
	|ПОМЕСТИТЬ ИсторияУзлы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Заявки.СтрокаЗаявки КАК СтрокаЗаявки,
	|		Заявки.Период КАК ДатаВремя,
	|		Заявки.Регистратор КАК Сортировка,
	|		Заявки.Состояние КАК Состояние,
	|		Заявки.Количество КАК Количество
	|	ИЗ
	|		Заявки КАК Заявки
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗаявкиИОтказы.СтрокаЗаявки,
	|		ЗаявкиИОтказы.РегистраторОтказа.Дата,
	|		ЗаявкиИОтказы.РегистраторОтказа,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый),
	|		ЗаявкиИОтказы.КоличествоНачальное - ЗаявкиИОтказы.КоличествоОтказ - ЕСТЬNULL(Резервы.Количество, 0)
	|	ИЗ
	|		ЗаявкиИОтказы КАК ЗаявкиИОтказы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
	|			ПО ЗаявкиИОтказы.СтрокаЗаявки = Резервы.СтрокаЗаявки
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Резервы.СтрокаЗаявки,
	|		Резервы.Период,
	|		Резервы.Регистратор,
	|		Резервы.Состояние,
	|		Резервы.Количество
	|	ИЗ
	|		Резервы КАК Резервы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Заказы.СтрокаЗаявки,
	|		Заказы.Период,
	|		Заказы.Регистратор,
	|		Заказы.Состояние,
	|		Заказы.Количество
	|	ИЗ
	|		Заказы КАК Заказы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыИОтказы.СтрокаЗаявки,
	|		ЗаказыИОтказы.РегистраторОтказа.Дата,
	|		ЗаказыИОтказы.РегистраторОтказа,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Заказано),
	|		ЗаказыИОтказы.КоличествоНачальное - ЗаказыИОтказы.КоличествоОтказ
	|	ИЗ
	|		ЗаказыИОтказы КАК ЗаказыИОтказы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Размещения.СтрокаЗаявки,
	|		Размещения.Период,
	|		Размещения.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ОтгруженПоставщиком),
	|		ЕСТЬNULL(Размещения.КоличествоПриход, 0)
	|	ИЗ
	|		РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Размещения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Размещения.СтрокаЗаявки,
	|		Размещения.Период,
	|		Размещения.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПринятНаСкладе),
	|		ЕСТЬNULL(Размещения.КоличествоРасход, 0)
	|	ИЗ
	|		РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Размещения
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Продажи.СтрокаЗаявки,
	|		Продажи.Период,
	|		Продажи.Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Закрыт),
	|		ЕСТЬNULL(Продажи.КоличествоОборот, 0)
	|	ИЗ
	|		РегистрНакопления.Продажи.Обороты(
	|				,
	|				,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ
	|						Заявки.СтрокаЗаявки
	|					ИЗ
	|						Заявки КАК Заявки)) КАК Продажи) КАК ИсторияЗаявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщаяИстория.СтрокаЗаявки КАК СтрокаЗаявки,
	|	ОбщаяИстория.ДатаВремя КАК ДатаВремя,
	|	ОбщаяИстория.Сортировка КАК Сортировка,
	|	ОбщаяИстория.Состояние,
	|	ОбщаяИстория.Количество КАК Количество,
	|	ЕСТЬNULL(Справочник.Количество, 0) КАК КоличествоВСправочнике
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсторияУзлы.СтрокаЗаявки КАК СтрокаЗаявки,
	|		ИсторияУзлы.ДатаВремя КАК ДатаВремя,
	|		ИсторияУзлы.Сортировка КАК Сортировка,
	|		ИсторияУзлы.Состояние КАК Состояние,
	|		ИсторияУзлы.Количество КАК Количество
	|	ИЗ
	|		ИсторияУзлы КАК ИсторияУзлы
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ИсторияУзлы.СтрокаЗаявки,
	|		ИсторияУзлы.ДатаВремя,
	|		ИсторияУзлы.Сортировка,
	|		Отказы.Состояние,
	|		ЕСТЬNULL(Отказы.Количество, 0)
	|	ИЗ
	|		ИсторияУзлы КАК ИсторияУзлы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|			ПО ИсторияУзлы.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|				И ИсторияУзлы.ДатаВремя >= Отказы.Период
	|	ГДЕ
	|		ЕСТЬNULL(Отказы.Количество, 0) > 0) КАК ОбщаяИстория
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсторияСтрокЗаявок КАК Справочник
	|		ПО ОбщаяИстория.СтрокаЗаявки = Справочник.СтрокаЗаявки
	|			И ОбщаяИстория.ДатаВремя = Справочник.ДатаВремя
	|			И ОбщаяИстория.Состояние = Справочник.Состояние
	|ГДЕ
	|	ЕСТЬNULL(Справочник.Количество, 0) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокаЗаявки,
	|	ДатаВремя,
	|	Сортировка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ДатаВремя";
	
	Запрос.УстановитьПараметр("Период", вхДатаНачала);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДатаВремя = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаВремя");
		Пока ВыборкаДатаВремя.Следующий() Цикл
				
			НачатьТранзакцию();
			Попытка
				ВыборкаДетальных = ВыборкаДатаВремя.Выбрать();
				Пока ВыборкаДетальных.Следующий() Цикл
					Если ЗначениеЗаполнено(ВыборкаДетальных.Состояние) Тогда
						НоваяЗапись = Справочники.ИсторияСтрокЗаявок.СоздатьЭлемент();
						НоваяЗапись.СтрокаЗаявки = ВыборкаДетальных.СтрокаЗаявки;
						НоваяЗапись.Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальных.СтрокаЗаявки, "Наименование");
						НоваяЗапись.ДатаВремя = ВыборкаДетальных.ДатаВремя;
						НоваяЗапись.Состояние = ВыборкаДетальных.Состояние;
						НоваяЗапись.Количество = ВыборкаДетальных.Количество;
						НоваяЗапись.Записать();
					КонецЕсли;
					
				КонецЦикла;
				
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				
			КонецПопытки;
				
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ПризнакДокументаПроверен
Процедура ИзменитьПризнакДокументПроверен(вхСсылкаНаДокумент, ПризнакПроверен, вхОтветственный) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Р.Период,
	|	Р.Объект,
	|	Р.КтоПроверил,
	|	Р.ПризнакПроверен,
	|	Р.КтоОтменилПроверку,
	|	Р.ДатаОтменыПризнакаПроверен
	|ИЗ
	|	РегистрСведений.СведенияОПроверкеДокументов.СрезПоследних(, Объект = &Объект) КАК Р"
	);
	Запрос.УстановитьПараметр("Объект", вхСсылкаНадокумент);
	
	Р = Запрос.Выполнить();
	
	Если Р.Пустой() Тогда
		Если  ПризнакПроверен Тогда
			//первый раз проверили документ
			аЗапись = РегистрыСведений.СведенияОПроверкеДокументов.СоздатьМенеджерЗаписи();
			аЗапись.Период = ТекущаяДата();
			аЗапись.Объект = вхСсылкаНадокумент;
			аЗапись.КтоПроверил = вхОтветственный;
			аЗапись.ПризнакПроверен = Истина;
			аЗапись.Записать();
			
		Иначе
			//невероятно, но факт попало туда. куда не надо
				
		КонецЕсли;
		
	Иначе
		Выборка = Р.Выбрать();
		Выборка.Следующий();
		
		Если ПризнакПроверен Тогда
			Если Выборка.ПризнакПроверен Тогда
				//признак проверен у документа уже стоит
				
			Иначе
				//у документа был снят признак проверен
				//нужно создать новую запись
				аЗапись = РегистрыСведений.СведенияОПроверкеДокументов.СоздатьМенеджерЗаписи();
				аЗапись.Период = ТекущаяДата();
				аЗапись.Объект = вхСсылкаНадокумент;
				аЗапись.КтоПроверил = вхОтветственный;
				аЗапись.ПризнакПроверен = Истина;
				аЗапись.Записать();
				
			КонецЕсли;
			
		Иначе
			Если Выборка.ПризнакПроверен Тогда
				//нужно снять признак проверен
				аНабор = РегистрыСведений.СведенияОПроверкеДокументов.СоздатьНаборЗаписей();
				
				аНабор.Отбор.Период.ВидСравнения = ВидСравнения.Равно;
				аНабор.Отбор.Период.Значение = Выборка.Период;
				аНабор.Отбор.Период.Использование = Истина;
				
				аНабор.Отбор.Объект.ВидСравнения = ВидСравнения.Равно;
				аНабор.Отбор.Объект.Значение = Выборка.Объект;
				аНабор.Отбор.Объект.Использование = Истина;
				
				аНабор.Прочитать();
				Для Каждого аЗапись из аНабор Цикл
					аЗапись.КтоОтменилПроверку = вхОтветственный;
					аЗапись.ДатаОтменыПризнакаПроверен = ТекущаяДата();
					азапись.ПризнакПроверен = Ложь;
				КонецЦикла;
				
				аНабор.Записать(Истина);
				
			Иначе
				//невероятно, но факт попало туда. куда не надо
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьПризнакПроверен(вхСсылкаНаДокумент) Экспорт
	Если НЕ ЗначениеЗаполнено(вхСсылкаНаДокумент) Тогда
		Возврат Неопределено;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Р.Период КАК ДатаПроверки,
	|	Р.КтоПроверил,
	|	Р.ПризнакПроверен,
	|	Р.КтоОтменилПроверку КАК КтоОтменил,
	|	Р.ДатаОтменыПризнакаПроверен КАК ДатаОтмены
	|ИЗ
	|	РегистрСведений.СведенияОПроверкеДокументов.СрезПоследних(, Объект = &Объект) КАК Р"
	);
	Запрос.УстановитьПараметр("Объект", вхСсылкаНадокумент);
	
	Р = Запрос.Выполнить();
	Если Р.Пустой() Тогда
		Возврат Неопределено;
		
	Иначе
		Выборка = Р.Выбрать();
		Выборка.Следующий();
		
		Возврат Новый Структура("ДатаПроверки,КтоПроверил,ПризнакПроверен,КтоОтменил,ДатаОтмены",
			Выборка.ДатаПроверки, Выборка.КтоПроверил, Выборка.ПризнакПроверен, Выборка.КтоОтменил, Выборка.ДатаОтмены);
		
	КонецЕсли;
	
КонецФункции
#КонецОбласти

#Область АвторазмещениеПоступления
Функция ПолучитьСтруктуруРеквизитовОтбора(вхДокумент)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ(Д.ПоставщикЗаказовДругой ЕСТЬ NULL
	|					ИЛИ Д.ПоставщикЗаказовДругой = ЗНАЧЕНИЕ(Справочник.ТорговыеТочки.ПустаяСсылка))
	|			ТОГДА Д.ПоставщикЗаказовДругой.Владелец
	|		ИНАЧЕ Д.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	Д.Ссылка КАК Ссылка,
	|	Д.ДокументОснование,
	|	Д.Организация
	|ПОМЕСТИТЬ ТекКА
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Д
	|ГДЕ
	|	Д.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпрД.Ссылка КАК Договор
	|ПОМЕСТИТЬ СпрД
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК СпрД
	|ГДЕ
	|	СпрД.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	|	И НЕ СпрД.ПометкаУдаления
	|	И (СпрД.Владелец,СпрД.Организация) В (ВЫБРАТЬ ТекКА.Контрагент, ТекКА.Организация ИЗ ТекКА КАК ТекКА)
	//|ВЫБРАТЬ
	//|	ТекКА.Контрагент,
	//|	ЕСТЬNULL(СпрД.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор
	//|ПОМЕСТИТЬ СпрД
	//|ИЗ
	//|	ТекКА КАК ТекКА
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СпрД
	//|		ПО ТекКА.Контрагент = СпрД.Владелец
	//|			И ТекКА.Организация = СпрД.Организация
	//|ГДЕ
	//|	СпрД.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	//|	И НЕ СпрД.ПометкаУдаления
	//|	И НЕ СпрД.СлужебныйДоговор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекКА.Контрагент,
	|	СпрД.Договор,
	|	К.ЗаказРавенПриходу КАК ЗаказРавенПриходу,
	|	К.АвтоОтказВОкнеПоставщика КАК Автоотказ,
	|	К.РаботатьСОкномПоставщика КАК РаботаетЧерезОП,
	|	К.ПроцентОтклоненияЦенПрихода КАК МаксОтклонение,
	|	ТекКА.Ссылка,
	|	ТекКА.ДокументОснование
	|ПОМЕСТИТЬ РеквКА
	|ИЗ
	|	ТекКА КАК ТекКА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК К
	|		ПО ТекКА.Контрагент = К.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпрД КАК СпрД
	|		ПО ТекКА.Контрагент = СпрД.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Д.Контрагент = РеквКА.Контрагент
	|			ТОГДА Д.ДоговорКонтрагента
	|		ИНАЧЕ РеквКА.Договор
	|	КОНЕЦ КАК Договор,
	|	РеквКА.ЗаказРавенПриходу,
	|	РеквКА.Автоотказ,
	|	РеквКА.РаботаетЧерезОП,
	|	РеквКА.МаксОтклонение,
	|	РеквКА.ДокументОснование,
	|	Д.Склад КАК Склад,
	|	Д.Склад.СкладVMI КАК СкладВМИ,
	|	С.Сувенирный КАК Сувенирный,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Ссылка.Дата КАК Дата,
	|	Д.МожноПровести
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Д
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеквКА КАК РеквКА
	|		ПО Д.Ссылка = РеквКА.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК С
	|		ПО Д.Склад = С.Ссылка
	|ГДЕ
	|	Д.Ссылка = &Ссылка"
	);
	
	Запрос.УстановитьПараметр("Ссылка", вхДокумент);
	Р = Запрос.Выполнить();
	Если Р.Пустой() Тогда
		Возврат Неопределено;
		
	Иначе
		СкладыРегионов = Новый СписокЗначений;
		ЗапросПоСкладамРегионов = Новый Запрос(
		"ВЫБРАТЬ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.ОсновнойСкладРегиона"
		);
		Скл = ЗапросПоСкладамРегионов.Выполнить().Выбрать();
		Пока Скл.Следующий() Цикл
			Если Скл.Ссылка = Константы.СкладОсновной.Получить() Тогда
				Продолжить;
			КонецЕсли;
			СкладыРегионов.Добавить(Скл.Ссылка);
		КонецЦикла;
		
		Выборка = Р.Выбрать();
		Выборка.Следующий();
		Возврат Новый Структура("Договор,ЗаказРавенПриходу,Автоотказ,РаботаетЧерезОП,МаксОтклонение,ДокументОснование,
			|Склад,СкладВМИ,Сувенирный,Ссылка,Дата,МожноПровести,СкладыРегионов",
			Выборка.Договор, Выборка.ЗаказРавенПриходу, Выборка.Автоотказ, Выборка.РаботаетЧерезОП, Выборка.МаксОтклонение,Выборка.ДокументОснование, 
			Выборка.Склад, Выборка.СкладВМИ, Выборка.Сувенирный, Выборка.Ссылка, Выборка.Дата, Выборка.МожноПровести, СкладыРегионов);
		
	КонецЕсли;
	
КонецФункции

Функция РазместитьПоОдномуЗаказу_в_разработке(вхСтруктураОтбора, вхТаблицаТоваров)
	Если НЕ ЗначениеЗаполнено(вхСтруктураОтбора.ДокументОснование) Тогда
		//найти максимально подходящий заказ по sku из необработанных заказов
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА Остатки.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ТОГДА Остатки.Регистратор
		|		ИНАЧЕ Остатки.Регистратор.ДокументОснование
		|	КОНЕЦ КАК Заказ
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(
		|			,
		|			&МоментВремени,
		|			Регистратор,
		|			,
		|			ДоговорКонтрагента = &Договор
		|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоКонечныйОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Ссылка КАК Заказ,
		|	Товары.Ссылка.Дата КАК ДатаЗаказа,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Количество,
		|	0 КАК Подходит,
		|	0 КАК Разница
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка В
		|			(ВЫБРАТЬ
		|				Остатки.Заказ
		|			ИЗ
		|				Остатки КАК Остатки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаЗаказа,
		|	Номенклатура"
		);
		 Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Договор", вхСтруктураОтбора.Договор);
		Если вхСтруктураОтбора.Склад = Константы.СкладОсновной.Получить() Тогда
			Запрос.УстановитьПараметр("СкладыРегионов", вхСтруктураОтбора.СкладыРегионов);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ Склад В (&СкладыРегионов)", "И Склад = &Склад");
			Запрос.УстановитьПараметр("Склад", вхСтруктураОтбора.Склад);
		
		КонецЕсли;
		
		ВремТабЗаказов = Запрос.Выполнить().Выгрузить();
		
		СписокНоменклатурыНаПовторнуюИтерацию = Новый СписокЗначений;
		Для Каждого Товар Из вхТаблицаТоваров Цикл
			пар = Новый Структура("Номенклатура", Товар.Номенклатура);
			СтрокиЗаказов = ВремТабЗаказов.НайтиСтроки(пар);
			Для Каждого СтрЗаказ Из СтрокиЗаказов Цикл
				Если Товар.Количество <= СтрЗаказ.Количество Тогда
					Если СтрЗаказ.Подходит = 1 Тогда
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;						
					
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Номенклатура,
		|	Т.Количество
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	&Т КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Номенклатура,
		|	СУММА(Т.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Т КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Остатки.Регистратор ССЫЛКА Документ.ЗаказПоставщику
		|			ТОГДА Остатки.Регистратор
		|		ИНАЧЕ Остатки.Регистратор.ДокументОснование
		|	КОНЕЦ КАК Заказ,
		|	Остатки.Номенклатура,
		|	Остатки.КоличествоКонечныйОстаток КАК КоличествоЗаказ
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(
		|			,
		|			&МоментВремени,
		|			Регистратор,
		|			,
		|			ДоговорКонтрагента = &Договор
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						Т.Номенклатура
		|					ИЗ
		|						Товары КАК Т)
		|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоКонечныйОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Заказ,
		|	Остатки.Номенклатура,
		|	СУММА(Остатки.КоличествоЗаказ) КАК КоличествоЗаказ
		|ПОМЕСТИТЬ Заказы
		|ИЗ
		|	Остатки КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Заказ,
		|	Остатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Остатки.Заказ, ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) КАК Заказ,
		|	Т.Номенклатура,
		|	ВЫБОР
		|		КОГДА Остатки.Заказ ЕСТЬ NULL
		|			ТОГДА Т.Количество
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Т.Количество - Остатки.КоличествоЗаказ >= 0
		|					ТОГДА Т.Количество - Остатки.КоличествоЗаказ
		|				ИНАЧЕ Остатки.КоличествоЗаказ - Т.Количество
		|			КОНЕЦ
		|	КОНЕЦ КАК КоличествоРасхождение
		|ПОМЕСТИТЬ Расхождения
		|ИЗ
		|	Товары КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
		|		ПО Т.Номенклатура = Остатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Расхождения.Заказ,
		|	СУММА(Расхождения.КоличествоРасхождение) КАК КоличествоРасхождение
		|ИЗ
		|	Расхождения КАК Расхождения
		|
		|СГРУППИРОВАТЬ ПО
		|	Расхождения.Заказ
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоличествоРасхождение УБЫВ"
		);
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки,
	|	Т.СтрокаПрихода,
	|	Т.Номенклатура,
	|	Т.Количество,
	|	Т.Цена
	|ПОМЕСТИТЬ Т
	|ИЗ
	|	&Т КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.СтрокаЗаявки,
	|	Остатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			&МоментВремени,
	|			ДоговорКонтрагента = &Договор
	|				И Номенклатура В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Т.Номенклатура
	|					ИЗ
	|						Т КАК Т)
	|				И СтрокаЗаявки.Заказ = &ДокументОснование
	|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Отказы.КоличествоОборот, 0)) КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			&МоментВремени,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Размещения.КоличествоПриход, 0)) КАК Количество
	|ПОМЕСТИТЬ Размещения
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			&МоментВремени,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Размещения
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещения.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.СтрокаЗаявки,
	|	Остатки.Количество - Отказы.Количество - Размещения.Количество КАК Количество
	|ПОМЕСТИТЬ СтрокиЗаявок
	|ИЗ
	|	Остатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Остатки.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещения КАК Размещения
	|		ПО Остатки.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|ГДЕ
	|	Остатки.Количество - Отказы.Количество - Размещения.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обороты.Регистратор КАК Заказ,
	|	СтрокиЗаявок.СтрокаЗаявки,
	|	Обороты.Номенклатура,
	|	ЕСТЬNULL(Замены.НоменклатураЗамена, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК НоменклатураЗамена,
	|	СтрокиЗаявок.Количество КАК КоличествоЗаказ
	|ПОМЕСТИТЬ Общая
	|ИЗ
	|	СтрокиЗаявок КАК СтрокиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|				,
	|				&МоментВремени,
	|				Регистратор,
	|				СтрокаЗаявки В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СтрокиЗаявок.СтрокаЗаявки
	|					ИЗ
	|						СтрокиЗаявок КАК СтрокиЗаявок)) КАК Обороты
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Обороты.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВозможныеЗаменыНоменклатуры КАК Замены
	|		ПО СтрокиЗаявок.СтрокаЗаявки = Замены.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Общая.Заказ КАК Заказ,
	|	Общая.Номенклатура КАК Номенклатура,
	|	Т.СтрокаПрихода,
	|	Общая.СтрокаЗаявки,
	|	Т.Количество КАК Количество,
	|	Общая.КоличествоЗаказ КАК КоличествоЗаказ,
	|	Т.НомерСтроки,
	|	Т.Цена
	|ИЗ
	|	Общая КАК Общая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т КАК Т
	|		ПО Общая.Номенклатура = Т.Номенклатура
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Общая.Заказ,
	|	Общая.НоменклатураЗамена,
	|	Т.СтрокаПрихода,
	|	Общая.СтрокаЗаявки,
	|	Т.Количество,
	|	Общая.КоличествоЗаказ,
	|	Т.НомерСтроки,
	|	Т.Цена
	|ИЗ
	|	Общая КАК Общая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т КАК Т
	|		ПО Общая.НоменклатураЗамена = Т.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заказ,
	|	Номенклатура
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоЗаказ)
	|ПО
	|	Заказ,
	|	Номенклатура"
	);
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Договор", вхСтруктураОтбора.Договор);
	Запрос.УстановитьПараметр("Т", вхТаблицаТоваров);
	Если ЗначениеЗаполнено(вхСтруктураОтбора.ДокументОснование) Тогда
		Запрос.УстановитьПараметр("ДокументОснование", вхСтруктураОтбора.ДокументОснование);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СтрокаЗаявки.Заказ = &ДокументОснование", "");
	КонецЕсли;
	Если вхСтруктураОтбора.Склад = Константы.СкладОсновной.Получить() Тогда
		Запрос.УстановитьПараметр("СкладыРегионов", вхСтруктураОтбора.СкладыРегионов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ Склад В (&СкладыРегионов)", "И Склад = &Склад");
		Запрос.УстановитьПараметр("Склад", вхСтруктураОтбора.Склад);
		
	КонецЕсли;
	
	ТаблицаЗаказов = Новый ТаблицаЗначений;
	ТаблицаЗаказов.Колонки.Добавить("Заказ");
	ТаблицаЗаказов.Колонки.Добавить("Отклонение");
	
	Р = Запрос.Выполнить();
	
	Если Р.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаПоЗаказу = Р.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Заказ");
	Пока ВыборкаПоЗаказу.Следующий() Цикл
		нс = ТаблицаЗаказов.Добавить();
		нс.Заказ = ВыборкаПоЗаказу.Заказ;
		нс.Отклонение = ВыборкаПоЗаказу.Количество - ВыборкаПоЗаказу.КоличествоЗаказ;
		Если нс.Отклонение < 0 Тогда
			нс.Отклонение = - нс.Отклонение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗаказов.Сортировать("Отклонение Убыв");
	МаксимальноПодходящийЗаказ = ТаблицаЗаказов.Получить(0).Заказ;
	
	ВыборкаПоЗаказу.Сбросить();
	Пока ВыборкаПоЗаказу.Следующий() Цикл
		ТекущийЗаказ = ВыборкаПоЗаказу.Заказ;
		Если ТекущийЗаказ = МаксимальноПодходящийЗаказ Тогда
			ВыборкаПоНоменклатуре = ВыборкаПоЗаказу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			
			//добавить строку
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСписокЗаказовПоСтрокеПрихода(вхСтруктураОтбора, вхСтруктураСтроки)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТДоговоры.Ссылка
	|ПОМЕСТИТЬ ТДоговоры
	|ИЗ 
	|	&ТДоговоры КАК ТДоговоры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.СтрокаЗаявки,
	|	ЕСТЬNULL(Остатки.СтрокаЗаявки.ПрайсПоставщика, ЗНАЧЕНИЕ(Справочник.ПрайсыПоставщиков.ПустаяСсылка)) КАК ПрайсПоставщика,
	|	ЕСТЬNULL(Остатки.СтрокаЗаявки.Цена, 0) КАК ЦенаПродажи,
	|	ВЫБОР
	|		КОГДА Остатки.СтрокаЗаявки.Заявка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаявкаПокупателя.ЗаявкаПокупателя)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВидПокупателя,
	|	Остатки.СтрокаЗаявки.СрокГарантированный КАК СрокПоставки,
	|	Остатки.СтрокаЗаявки.СрокГарантированныйЗаказа КАК Срок,
	|	Остатки.СтрокаЗаявки.Заявка.Дата КАК ДатаНач,
	|	Остатки.Склад,
	|	Остатки.КоличествоОстаток КАК Количество,
	|	Остатки.СуммаРеглОстаток / Остатки.КоличествоОстаток КАК Цена
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			&МоментВремени,
	|			ДоговорКонтрагента В (ВЫБРАТЬ ТДоговоры.Ссылка ИЗ ТДоговоры КАК ТДоговоры)
	|				И Номенклатура = &Номенклатура
	|				И СтрокаЗаявки.Заказ = &ДокументОснование
	|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Отказы.КоличествоОборот, 0)) КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			&МоментВремени,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Размещения.КоличествоПриход, 0)) КАК Количество
	|ПОМЕСТИТЬ Размещения
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			&МоментВремени,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Размещения
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещения.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.СтрокаЗаявки,
	|	Остатки.ПрайсПоставщика,
	|	Остатки.ЦенаПродажи,
	|	Остатки.ВидПокупателя,
	|	Остатки.СрокПоставки,
	|	Остатки.Срок,
	|	Остатки.ДатаНач,
	|	Остатки.Склад,
	|	Остатки.Количество - ЕСТЬNULL(Отказы.Количество, 0) - ЕСТЬNULL(Размещения.Количество, 0) КАК Количество,
	|	Остатки.Цена
	|ИЗ
	|	Остатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Остатки.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещения КАК Размещения
	|		ПО Остатки.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|ГДЕ
	|	Остатки.Количество - ЕСТЬNULL(Отказы.Количество, 0) - ЕСТЬNULL(Размещения.Количество, 0) > 0"
	);
	
	Попытка
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	Исключение
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Дата, ВидГраницы.Исключая));
	КонецПопытки;
	//Запрос.УстановитьПараметр("Договор", вхСтруктураОтбора.Договор);
	//заменено на список из-за дублей договоров
	Запрос.УстановитьПараметр("ТДоговоры", вхСтруктураОтбора.Договор);
	Запрос.УстановитьПараметр("Номенклатура", вхСтруктураСтроки.Номенклатура);
	Если ЗначениеЗаполнено(вхСтруктураОтбора.ДокументОснование) Тогда
		Запрос.УстановитьПараметр("ДокументОснование", вхСтруктураОтбора.ДокументОснование);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СтрокаЗаявки.Заказ = &ДокументОснование", "");
	КонецЕсли;
	Если вхСтруктураОтбора.Склад = Константы.СкладОсновной.Получить() Тогда
		Запрос.УстановитьПараметр("СкладыРегионов", вхСтруктураОтбора.СкладыРегионов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ Склад В (&СкладыРегионов)", "И Склад = &Склад");
		Запрос.УстановитьПараметр("Склад", вхСтруктураОтбора.Склад);
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьВозможныеЗаменыНоменклатуры(вхСтруктураОтбора, вхСтруктураСтроки)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	//|	Замены.СтрокаЗаявки,
	|	Замены.Номенклатура
	|ИЗ
	|	РегистрСведений.ВозможныеЗаменыНоменклатуры.СрезПоследних(&МоментВремени, НоменклатураЗамена = &НоменклатураЗамена) КАК Замены
	|
	|УПОРЯДОЧИТЬ ПО
	|	Замены.Период УБЫВ"
	);
	
	Попытка
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	Исключение
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Дата, ВидГраницы.Исключая));
	КонецПопытки;
	Запрос.УстановитьПараметр("НоменклатураЗамена", вхСтруктураСтроки.Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция РазместитьПоСпискуЗаказов(вхСтруктураОтбора, вхСтруктураСтроки, вхЕдиныйСписокЗаказов, вхСписокЗаказов, вхАвторазмещение, вхОписаниеОшибки)
	тхтОш = "";
	
	// Криво названо КоличествоРазмещено на самом деле сколько не размещено	
	
	Если вхСписокЗаказов.Количество() = 0 Тогда
		
		Возврат Новый Структура("КоличествоРазмещено,Ошибка", вхСтруктураСтроки.Количество, "");
		
	КонецЕсли;
	
	вхСписокЗаказов.Колонки.Добавить("ОтклонениеЦены");
	вхСписокЗаказов.Колонки.Добавить("ОтклонениеДатыПоставки");
	Для Каждого Заказ Из вхСписокЗаказов Цикл
		Если вхСтруктураСтроки.Цена > 0 Тогда
			Заказ.ОтклонениеЦены = (вхСтруктураСтроки.Цена - Заказ.Цена)/вхСтруктураСтроки.Цена * 100;
		Иначе
			Заказ.ОтклонениеЦены = 100;
		КонецЕсли;
		Если Заказ.ОтклонениеЦены < 0 Тогда
			// Сергеев Если отклонение < 0 тогда не контролируем
			Заказ.ОтклонениеЦены = 0;
		КонецЕсли;
		Если НЕ вхСтруктураОтбора.РаботаетЧерезОП Тогда
			Заказ.ОтклонениеЦены = Макс(Заказ.ОтклонениеЦены, 5);
		КонецЕсли;
		Заказ.ОтклонениеДатыПоставки = Заказ.СрокПоставки - ТекущаяДата();
		Заказ.ОтклонениеДатыПоставки = ?(Заказ.ВидПокупателя = 0, 999999, Заказ.ОтклонениеДатыПоставки);
		
	КонецЦикла;
	
	//вхСписокЗаказов.Сортировать("ОтклонениеЦены Убыв, Срок Возр, ОтклонениеДатыПоставки Убыв, ДатаНач Возр");
	вхСписокЗаказов.Сортировать("ОтклонениеЦены Возр, Срок Возр, ОтклонениеДатыПоставки Убыв, ДатаНач Возр");
	
	КоличествоКРаспределению = вхСтруктураСтроки.Количество;
	КолНач = КоличествоКРаспределению;
	Индекс = 0;
	
	СкладВМИ = вхСтруктураОтбора.СкладВМИ;
	
	//Добавлено Валиахметов А.А. 24.04.2018
	Пока КоличествоКРаспределению > 0 И Индекс < вхСписокЗаказов.Количество() Цикл 
		СтрокаОст = вхСписокЗаказов.Получить(Индекс);
		Если НЕ СкладВМИ Тогда
			Если СтрокаОст.ОтклонениеЦены > 5 И НЕ вхСтруктураОтбора.МожноПровести Тогда 
				Если Индекс = 0 Тогда
					//первая же строка с отклонением больше допустимого
					тхтОш = ?(ПустаяСтрока(тхтОш), тхтОш, тхтОш + "; ");
					тхтОш = тхтОш + "отклонение цены более 5%";
				КонецЕсли;
				Индекс = Индекс + 1;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СписываемоеКоличество = Мин(КоличествоКРаспределению, СтрокаОст.Количество);
		Если СписываемоеКоличество > 0 Тогда 
			СтрокаРаспредения = вхАвторазмещение.Добавить();
			СтрокаРаспредения.Номенклатура = вхСтруктураСтроки.Номенклатура;
			СтрокаРаспредения.СтрокаПрихода = вхСтруктураСтроки.СтрокаПрихода;
			СтрокаРаспредения.СтрокаЗаявки = СтрокаОст.СтрокаЗаявки;
			СтрокаРаспредения.Количество = СписываемоеКоличество;
			СтрокаОст.Количество = СтрокаОст.Количество - СписываемоеКоличество;
			КоличествоКРаспределению = КоличествоКРаспределению - СписываемоеКоличество;
			
			СтрокаОстВЕдинойТаблице = вхЕдиныйСписокЗаказов.Найти(СтрокаОст.КлючСтроки, "КлючСтроки");
			СтрокаОстВЕдинойТаблице.Количество = СтрокаОстВЕдинойТаблице.Количество - СписываемоеКоличество; 
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	//Конец Добавлено Валиахметов А.А. 24.04.2018
	
	//Для Каждого Заказ Из вхСписокЗаказов Цикл
	//	Если КоличествоКРаспределению = 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	Если КоличествоКРаспределению <= Заказ.Количество Тогда
	//		СтрокаРаспредения = вхАвторазмещение.Добавить();
	//		СтрокаРаспредения.Номенклатура = вхСтруктураСтроки.Номенклатура;
	//		СтрокаРаспредения.СтрокаПрихода = вхСтруктураСтроки.СтрокаПрихода;
	//		СтрокаРаспредения.СтрокаЗаявки = Заказ.СтрокаЗаявки;
	//		СтрокаРаспредения.Количество = КоличествоКРаспределению;
	//		КоличествоКРаспределению = 0;
	//	Иначе
	//		СтрокаРаспредения = вхАвторазмещение.Добавить();
	//		СтрокаРаспредения.Номенклатура = вхСтруктураСтроки.Номенклатура;
	//		СтрокаРаспредения.СтрокаПрихода = вхСтруктураСтроки.СтрокаПрихода;
	//		СтрокаРаспредения.СтрокаЗаявки = Заказ.СтрокаЗаявки;
	//		СтрокаРаспредения.Количество = Заказ.Количество;
	//		КоличествоКРаспределению = КоличествоКРаспределению - Заказ.Количество;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	Если КоличествоКРаспределению > 0 Тогда
		тхтОш = ?(ПустаяСтрока(тхтОш), тхтОш, тхтОш + "; ");
		тхтОш = тхтОш + "не распределилось " + Строка(КоличествоКРаспределению) + " из " + Строка(КолНач) + " шт.";			
	КонецЕсли;
	
	Возврат Новый Структура("КоличествоРазмещено,Ошибка", КоличествоКРаспределению, тхтОш);
	
КонецФункции

Функция НайтиАналогиНоменклатуры(вхСтруктураОтбора, вхСтруктураСтроки)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка <> &ЭтаНоменклатура
	|	И Номенклатура.Артикул = &Артикул
	|	И НЕ Номенклатура.ПометкаУдаления"
	);
	Запрос.УстановитьПараметр("ЭтаНоменклатура", вхСтруктураСтроки.Номенклатура);
	Запрос.УстановитьПараметр("Артикул", ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхСтруктураСтроки.Номенклатура, "Артикул"));
	
	Р = Запрос.Выполнить();
	
	ЕстьАналоги = НЕ Р.Пустой();
	Аналоги = ?(Р.Пустой(), Неопределено, Р.Выгрузить());
	ЕстьОстатки = Ложь;
	Если ЕстьАналоги Тогда
		ЗапросПоОстаткам = Новый Запрос(
		"ВЫБРАТЬ
		|	ТДоговоры.Ссылка
		|ПОМЕСТИТЬ ТДоговоры
		|ИЗ 
		|	&ТДоговоры КАК ТДоговоры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Аналоги.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ Аналоги
		|ИЗ
		|	&Аналоги КАК Аналоги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.СтрокаЗаявки,
		|	Остатки.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			&МоментВремени,
		|			ДоговорКонтрагента В (ВЫБРАТЬ ТДоговоры.Ссылка ИЗ ТДоговоры КАК ТДоговоры)
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						Аналоги.Номенклатура КАК Аналоги
		|					ИЗ
		|						Аналоги)
		|				И СтрокаЗаявки.Заказ = &ДокументОснование
		|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отказы.СтрокаЗаявки,
		|	СУММА(ЕСТЬNULL(Отказы.КоличествоОборот, 0)) КАК Количество
		|ПОМЕСТИТЬ Отказы
		|ИЗ
		|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
		|			,
		|			&МоментВремени,
		|			Регистратор,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Остатки.СтрокаЗаявки
		|				ИЗ
		|					Остатки КАК Остатки)) КАК Отказы
		|
		|СГРУППИРОВАТЬ ПО
		|	Отказы.СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Размещения.СтрокаЗаявки,
		|	СУММА(ЕСТЬNULL(Размещения.КоличествоПриход, 0)) КАК Количество
		|ПОМЕСТИТЬ Размещения
		|ИЗ
		|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
		|			,
		|			&МоментВремени,
		|			,
		|			СтрокаЗаявки В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Остатки.СтрокаЗаявки
		|				ИЗ
		|					Остатки КАК Остатки)) КАК Размещения
		|
		|СГРУППИРОВАТЬ ПО
		|	Размещения.СтрокаЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.СтрокаЗаявки,
		|	Остатки.Количество - Отказы.Количество - Размещения.Количество КАК Количество
		|ИЗ
		|	Остатки КАК Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
		|		ПО Остатки.СтрокаЗаявки = Отказы.СтрокаЗаявки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Размещения КАК Размещения
		|		ПО Остатки.СтрокаЗаявки = Размещения.СтрокаЗаявки
		|ГДЕ
		|	Остатки.Количество - Отказы.Количество - Размещения.Количество > 0"
		);
	    Попытка
			ЗапросПоОстаткам.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
		Исключение
			ЗапросПоОстаткам.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Дата, ВидГраницы.Исключая));
		КонецПопытки;
		//ЗапросПоОстаткам.УстановитьПараметр("Договор", вхСтруктураОтбора.Договор);
		ЗапросПоОстаткам.УстановитьПараметр("ТДоговоры", вхСтруктураОтбора.Договор);
		ЗапросПоОстаткам.УстановитьПараметр("Номенклатура", вхСтруктураСтроки.Номенклатура);
		Если ЗначениеЗаполнено(вхСтруктураОтбора.ДокументОснование) Тогда
			ЗапросПоОстаткам.УстановитьПараметр("ДокументОснование", вхСтруктураОтбора.ДокументОснование);
		Иначе
			ЗапросПоОстаткам.Текст = СтрЗаменить(ЗапросПоОстаткам.Текст, "И СтрокаЗаявки.Заказ = &ДокументОснование", "");
		КонецЕсли;
		Если вхСтруктураОтбора.Склад = Константы.СкладОсновной.Получить() Тогда
			ЗапросПоОстаткам.УстановитьПараметр("СкладыРегионов", вхСтруктураОтбора.СкладыРегионов);
		Иначе
			ЗапросПоОстаткам.Текст = СтрЗаменить(ЗапросПоОстаткам.Текст, "И НЕ Склад В (&СкладыРегионов)", "И Склад = &Склад");
			ЗапросПоОстаткам.УстановитьПараметр("Склад", вхСтруктураОтбора.Склад);
		
		КонецЕсли;
		ЗапросПоОстаткам.УстановитьПараметр("Аналоги", Р.Выгрузить());
		
		Остатки = ЗапросПоОстаткам.Выполнить();
		
		ЕстьОстатки = НЕ Остатки.Пустой();
		
	КонецЕсли;
	
	Возврат Новый Структура("ЕстьАналоги,Аналоги,ЕстьОстатки", ЕстьАналоги, Аналоги, ЕстьОстатки);
	
КонецФункции

Функция ПолучитьТаблицуРазмещения(вхДокумент, вхАвторазмещение, Очищать = Ложь) Экспорт
	
	ОписаниеОшибки = "";
	Если вхАвторазмещение.Количество() > 0 Тогда
		Если Очищать Тогда
			вхАвторазмещение.Очистить();
		Иначе
			ОписаниеОшибки = "табличная часть ""РазмещениеСтрокПрихода"" не пустая. переразместить нельзя";
			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", вхАвторазмещение, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
	КонецЕсли;
		
	ВсегоНужноРазместить = 0;
	
	Если ТипЗнч(вхДокумент) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ОписаниеОшибки = СокрЛП(вхДокумент) + Символы.ПС;  //#PK83-656 Kalinin V.A. ( 2018-06-01 )
		
		СтруктураОтбора = ПолучитьСтруктуруРеквизитовОтбора(вхДокумент);
		Если СтруктураОтбора = Неопределено Тогда
			ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
			ОписаниеОшибки = ОписаниеОшибки + "не удалось получить реквизиты поставщика. размещение не было сделано";
			#Если Клиент Тогда
				Сообщить("не удалось получить реквизиты поставщика. размещение не было сделано");
			#КонецЕсли
			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", Неопределено, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.НомерСтроки,
		|	Т.СтрокаПрихода,
		|	Т.Номенклатура,
		|	Т.Количество,
		|	Т.Цена
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Т
		|ГДЕ
		|	Т.Ссылка = &Ссылка"
		);
		
		Запрос.УстановитьПараметр("Ссылка", вхДокумент);
		Р = Запрос.Выполнить();
		Если Р.Пустой() Тогда
			ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
			ОписаниеОшибки = ОписаниеОшибки + "табличная часть ""Товары"" пустая. нечего размещать";
			#Если Клиент Тогда
				Сообщить("табличная часть ""Товары"" пустая. нечего размещать");
			#КонецЕсли
			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", Неопределено, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
		Выборка = Р.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ВсегоНужноРазместить = ВсегоНужноРазместить + Выборка.Количество;
		КонецЦикла;
		Выборка.Сбросить();
		
	ИначеЕсли ТипЗнч(вхДокумент) = Тип("Структура") Тогда
		Если вхДокумент.Свойство("СтруктураОтбора") Тогда
			СтруктураОтбора = вхДокумент.СтруктураОтбора;
			
		Иначе
			ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
			ОписаниеОшибки = ОписаниеОшибки + "неверно передан параметр отбора в структуре.";
			#Если Клиент Тогда
				Сообщить("неверно передан параметр отбора в структуре.");
			#КонецЕсли
			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", Неопределено, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
		//#PK83-656 Kalinin V.A. ( 2018-06-01 )
		Если вхДокумент.Свойство("Ссылка") Тогда
		  ОписаниеОшибки = СокрЛП(вхДокумент.Ссылка) + Символы.ПС;	
		КонецЕсли;   
			
		
		//пробуем разместить снова, проверка перенесена в авторазмещение строки (влияет только на процент отклонения)
		//Если СтруктураОтбора.Свойство("МожноПровести") Тогда
		//	Если СтруктураОтбора.МожноПровести Тогда
		//		//значит в форме документа установили признак "провести без всего авторазмещения"
		//		Если вхАвторазмещение.Количество() > 0 Тогда
		//			//значит уже пробовали разместить, иначе пробуем разместить снова
		//			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", вхАвторазмещение, ОписаниеОшибки, СтруктураОтбора.МожноПровести);
		//			
		//		КонецЕсли;
		//		
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
		
		Если вхДокумент.Свойство("ТаблицаТоваров") Тогда
			Выборка = вхДокумент.ТаблицаТоваров;
			
		Иначе
			ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
			ОписаниеОшибки = ОписаниеОшибки + "неверно передан параметр таблицы товаров в структуре.";
			#Если Клиент Тогда
				Сообщить("неверно передан параметр таблицы товаров в структуре.");
			#КонецЕсли
			Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", Неопределено, ОписаниеОшибки, Ложь);
			
		КонецЕсли;
		
		
		Пока вхДокумент.ТаблицаТоваров.Следующий() Цикл
			ВсегоНужноРазместить = ВсегоНужноРазместить + вхДокумент.ТаблицаТоваров.Количество;
		КонецЦикла;
		
		вхДокумент.ТаблицаТоваров.Сбросить();
		
	Иначе
		ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
		ОписаниеОшибки = ОписаниеОшибки + " неверный параметр 1.";
		#Если Клиент Тогда
			Сообщить("неверный параметр 1.");
		#КонецЕсли
		Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", Неопределено, ОписаниеОшибки, Ложь);
		
	КонецЕсли;
	
	вхАвторазмещение.Очистить();
	
	Если СтруктураОтбора.Сувенирный Тогда
		ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
		ОписаниеОшибки = ОписаниеОшибки + "поступление на склад с признаком ""Сувенирный""";
		
	КонецЕсли;
	
	//Если СтруктураОтбора.ЗаказРавенПриходу Тогда
	// ветка находится в разработке
	//согласно кода 1с7 - фл_ЗаказРавенПриходу работает только при загрузке из ОП при подборе документа основания
	//в модуле авторазмещения она не участвует, если ДокументОснование указан - то размещение идет только по нему
	//для нас это условие в выборке строк заказа по параметрам, описано ниже
	//	РазместитьПоОдномуЗаказу(СтруктураОтбора, Р.Выгрузить());
	//Иначе
	
	//Добавлено Валиахметов А.А. 24.04.2018 PK83-556
	ЕдиныйСписокЗаказов = ПолучитьСписокЗаказов(СтруктураОтбора, Выборка); 
	//Конец Добавлено Валиахметов А.А. 24.04.2018 PK83-556
	
	Пока Выборка.Следующий() Цикл
		СтруктураСтроки = Новый Структура("НомерСтроки,СтрокаПрихода,Номенклатура,Количество,Цена",
		Выборка.НомерСтроки, Выборка.СтрокаПрихода, Выборка.Номенклатура, Выборка.Количество, Выборка.Цена);
		
		//Добавлено Валиахметов А.А. 24.04.2018 PK83-556
		//СписокЗаказов = ПолучитьСписокЗаказовПоСтрокеПрихода(СтруктураОтбора, СтруктураСтроки);
		Строки = ЕдиныйСписокЗаказов.НайтиСтроки(Новый Структура("Номенклатура", Выборка.Номенклатура));
		СписокЗаказов = ЕдиныйСписокЗаказов.Скопировать(Строки);
		//Конец Добавлено Валиахметов А.А. 24.04.2018 PK83-556
		
		тхтОш = "";
		Если СписокЗаказов.Количество() = 0 Тогда
			тхтОш = Символы.ПC + тхтОш + "<<< строка " + Строка(СтруктураСтроки.НомерСтроки) + " не была размещена";
			//Если СтруктураОтбора.Сувенирный Тогда
			//	ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
			//	ОписаниеОшибки = ОписаниеОшибки + "строка " + Строка(СтруктураСтроки.НомерСтроки) + " не была размещена";
			//	
			//КонецЕсли;
			
			СписокЗамен = ПолучитьВозможныеЗаменыНоменклатуры(СтруктураОтбора, СтруктураСтроки);
			
			Если СписокЗамен.Количество() = 0 Тогда	
				Номенклатура = СтруктураСтроки.Номенклатура;
				тхтОш = тхтОш + Символы.ПС + "    товар " + Строка(Номенклатура) + " (код: "+ СокрЛП(Номенклатура.код) + ", артикул: " +СокрЛП(Номенклатура.Артикул) +", изготовитель "+ СокрЛП(Номенклатура.Изготовитель)+ "не найден в заказах и в заменах номенклатуры";
				
			КонецЕсли;
			КоличествоКРазмещению = Выборка.Количество;
			Для Каждого Замена Из СписокЗамен Цикл
				СтруктураСтроки = Новый Структура("НомерСтроки,СтрокаПрихода,Номенклатура,Количество,Цена",
				Выборка.НомерСтроки, Выборка.СтрокаПрихода, Замена.Номенклатура, КоличествоКРазмещению, Выборка.Цена);
				
				//Добавлено Валиахметов А.А. 24.04.2018 PK83-556
				//СписокЗаказов = ПолучитьСписокЗаказовПоСтрокеПрихода(СтруктураОтбора, СтруктураСтроки);
				Строки = ЕдиныйСписокЗаказов.НайтиСтроки(Новый Структура("Номенклатура", Замена.Номенклатура));
				СписокЗаказов = ЕдиныйСписокЗаказов.Скопировать(Строки);
				//Конец Добавлено Валиахметов А.А. 24.04.2018 PK83-556
				
				СтруктураРазмещения = РазместитьПоСпискуЗаказов(СтруктураОтбора, СтруктураСтроки, ЕдиныйСписокЗаказов, СписокЗаказов, вхАвторазмещение, ОписаниеОшибки);
				
				КоличествоКРазмещению = СтруктураРазмещения.КоличествоРазмещено;
				
				Если СтруктураРазмещения.КоличествоРазмещено = 0 Тогда
					Прервать;
				Иначе
					тхтОш = тхтОш + Символы.ПС + "среди замен не было найдено нужного количества товара: " + СтруктураРазмещения.Ошибка;
				КонецЕсли;
			КонецЦикла;
			Если КоличествоКРазмещению > 0 Тогда
				НайденоВАналогах = НайтиАналогиНоменклатуры(СтруктураОтбора, СтруктураСтроки);
				Если НайденоВАналогах.ЕстьАналоги Тогда
					//тхтОш = тхтОш + Символы.ПС + "    товар " + Строка(СтруктураСтроки.Номенклатура) + " не найден в заказах и в заменах номенклатуры.";
					Для Каждого Аналог Из НайденоВАналогах.Аналоги Цикл
						тхтОш = Символы.ПC + тхтОш + Символы.ПС + "    - есть аналог номенклатуры по артикулу: " + Аналог.Ссылка;
					КонецЦикла;
					Если НайденоВАналогах.ЕстьОстатки Тогда
						тхтОш = Символы.ПC + тхтОш + Символы.ПС + "    - по аналогам есть остатки в заказах.";
						
					КонецЕсли;
					
					//ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
					//ОписаниеОшибки = ОписаниеОшибки + тхтОш;
					//#Если Клиент Тогда
					//	Сообщить(тхтОш);
					//#КонецЕсли
					
				Иначе
					//тхтОш = тхтОш + Символы.ПС + "    товар " + Строка(СтруктураСтроки.Номенклатура) + " не найден в заказах и в заменах номенклатуры.";
					тхтОш = Символы.ПC + тхтОш  + Символы.ПС +  "    аналогов по артикулу номенклатуры нет";
					
					//ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
					//ОписаниеОшибки = ОписаниеОшибки + тхтОш;
					//#Если Клиент Тогда
					//	Сообщить(тхтОш);
					//#КонецЕсли
					
				КонецЕсли;
				
			КонецЕсли;
			
			//#Если Клиент Тогда
			//	Сообщить(тхтОш);
			//#КонецЕсли
			
		Иначе
			СтруктураРазмещения = РазместитьПоСпискуЗаказов(СтруктураОтбора, СтруктураСтроки, ЕдиныйСписокЗаказов, СписокЗаказов, вхАвторазмещение, ОписаниеОшибки);
			Если СтруктураРазмещения.КоличествоРазмещено > 0 Тогда
				тхтОш = ?(ПустаяСтрока(тхтОш), тхтОш, тхтОш + Символы.ПС);
				тхтОш = Символы.ПC + тхтОш + "строка " + Строка(СтруктураСтроки.НомерСтроки) + " была размещена не полностью: " + СтруктураРазмещения.Ошибка;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//ОписаниеОшибки = ?(ПустаяСтрока(ОписаниеОшибки), ОписаниеОшибки, ОписаниеОшибки + Символы.ПС);
		ОписаниеОшибки = ОписаниеОшибки + тхтОш;
		
	КонецЦикла;
	//КонецЕсли;
	
	Если СтруктураОтбора.Сувенирный Тогда
		//МожноПровести всегда = Истина
		Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", вхАвторазмещение, ОписаниеОшибки, Истина);
		
	Иначе
		Если СтруктураОтбора.МожноПровести Тогда
			МожноПровести = СтруктураОтбора.МожноПровести;
			
		Иначе
			ВсегоРазмещено = 0;
			Для Каждого Товар Из вхАвторазмещение Цикл
				ВсегоРазмещено = ВсегоРазмещено + Товар.Количество;
			КонецЦикла;
			МожноПровести = ?(ВсегоРазмещено = ВсегоНужноРазместить, Истина, Ложь);
			
		КонецЕсли;
		
		Возврат Новый Структура("Авторазмещение,ОписаниеОшибки,МожноПровести", вхАвторазмещение, ОписаниеОшибки, МожноПровести);
		
	КонецЕсли;
	
КонецФункции

//Добавлено Валиахметов А.А. 24.04.2018 PK83-556 На основании функции ПолучитьСписокЗаказовПоСтрокеПрихода
Функция ПолучитьСписокЗаказов(вхСтруктураОтбора, Выборка)
	
	Выборка.Сбросить();	
	МассивНоменклатуры = Новый Массив;
	Пока Выборка.Следующий() Цикл 
		МассивНоменклатуры.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВозможныеЗаменыНоменклатурыСрезПоследних.Номенклатура
	               |ИЗ
	               |	РегистрСведений.ВозможныеЗаменыНоменклатуры.СрезПоследних(&МоментВремени, НоменклатураЗамена В (&МассивНоменклатуры)) КАК ВозможныеЗаменыНоменклатурыСрезПоследних
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВозможныеЗаменыНоменклатурыСрезПоследних.Период УБЫВ";
	Попытка
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	Исключение
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Дата, ВидГраницы.Исключая));
	КонецПопытки;
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	мВыборка = Запрос.Выполнить().Выбрать();
	Пока мВыборка.Следующий() Цикл 
		МассивНоменклатуры.Добавить(мВыборка.Номенклатура);	
	КонецЦикла;
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТДоговоры.Ссылка
	|ПОМЕСТИТЬ ТДоговоры
	|ИЗ
	|	&ТДоговоры КАК ТДоговоры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура,
	|	Остатки.СтрокаЗаявки,
	|	ЕСТЬNULL(Остатки.СтрокаЗаявки.ПрайсПоставщика, ЗНАЧЕНИЕ(Справочник.ПрайсыПоставщиков.ПустаяСсылка)) КАК ПрайсПоставщика,
	|	ЕСТЬNULL(Остатки.СтрокаЗаявки.Цена, 0) КАК ЦенаПродажи,
	|	ВЫБОР
	|		КОГДА Остатки.СтрокаЗаявки.Заявка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаявкаПокупателя.ЗаявкаПокупателя)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВидПокупателя,
	|	Остатки.СтрокаЗаявки.СрокГарантированный КАК СрокПоставки,
	|	Остатки.СтрокаЗаявки.СрокГарантированныйЗаказа КАК Срок,
	|	Остатки.СтрокаЗаявки.Заявка.Дата КАК ДатаНач,
	|	Остатки.Склад,
	|	Остатки.КоличествоОстаток КАК Количество,
	|	Остатки.СуммаРеглОстаток / Остатки.КоличествоОстаток КАК Цена
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			&МоментВремени,
	|			ДоговорКонтрагента В
	|					(ВЫБРАТЬ
	|						ТДоговоры.Ссылка
	|					ИЗ
	|						ТДоговоры КАК ТДоговоры)
	|				И Номенклатура В (&МассивНоменклатуры)
	|				И СтрокаЗаявки.Заказ = &ДокументОснование
	|				И НЕ Склад В (&СкладыРегионов)) КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отказы.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Отказы.КоличествоОборот, 0)) КАК Количество
	|ПОМЕСТИТЬ Отказы
	|ИЗ
	|	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	|			,
	|			&МоментВремени,
	|			Регистратор,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Отказы
	|
	|СГРУППИРОВАТЬ ПО
	|	Отказы.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Размещения.СтрокаЗаявки,
	|	СУММА(ЕСТЬNULL(Размещения.КоличествоПриход, 0)) КАК Количество
	|ПОМЕСТИТЬ Размещения
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
	|			,
	|			&МоментВремени,
	|			,
	|			СтрокаЗаявки В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Остатки.СтрокаЗаявки
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Размещения
	|
	|СГРУППИРОВАТЬ ПО
	|	Размещения.СтрокаЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура,
	|	Остатки.СтрокаЗаявки,
	|	Остатки.ПрайсПоставщика,
	|	Остатки.ЦенаПродажи,
	|	Остатки.ВидПокупателя,
	|	Остатки.СрокПоставки,
	|	Остатки.Срок,
	|	Остатки.ДатаНач,
	|	Остатки.Склад,
	|	Остатки.Количество - ЕСТЬNULL(Отказы.Количество, 0) - ЕСТЬNULL(Размещения.Количество, 0) КАК Количество,
	|	Остатки.Цена
	|ИЗ
	|	Остатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Отказы КАК Отказы
	|		ПО Остатки.СтрокаЗаявки = Отказы.СтрокаЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Размещения КАК Размещения
	|		ПО Остатки.СтрокаЗаявки = Размещения.СтрокаЗаявки
	|ГДЕ
	|	Остатки.Количество - ЕСТЬNULL(Отказы.Количество, 0) - ЕСТЬNULL(Размещения.Количество, 0) > 0"
	);
	
	Попытка
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Ссылка.МоментВремени(), ВидГраницы.Исключая));
	Исключение
		Запрос.УстановитьПараметр("МоментВремени", Новый Граница(вхСтруктураОтбора.Дата, ВидГраницы.Исключая));
	КонецПопытки;
	Запрос.УстановитьПараметр("ТДоговоры", вхСтруктураОтбора.Договор);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Если ЗначениеЗаполнено(вхСтруктураОтбора.ДокументОснование) Тогда
		Запрос.УстановитьПараметр("ДокументОснование", вхСтруктураОтбора.ДокументОснование);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СтрокаЗаявки.Заказ = &ДокументОснование", "");
	КонецЕсли;
	Если вхСтруктураОтбора.Склад = Константы.СкладОсновной.Получить() Тогда
		Запрос.УстановитьПараметр("СкладыРегионов", вхСтруктураОтбора.СкладыРегионов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ Склад В (&СкладыРегионов)", "И Склад = &Склад");
		Запрос.УстановитьПараметр("Склад", вхСтруктураОтбора.Склад);
		
	КонецЕсли;
	
	Выборка.Сбросить();
	
	ЕдиныйСписокЗаказов = Запрос.Выполнить().Выгрузить();
	ЕдиныйСписокЗаказов.Колонки.Добавить("КлючСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(15));
	мКлючСтроки = 1;
	Для Каждого СтрокаТЧ Из ЕдиныйСписокЗаказов Цикл 
		СтрокаТЧ.КлючСтроки = мКлючСтроки;
		мКлючСтроки = мКлючСтроки + 1;
	КонецЦикла;
	
	Возврат ЕдиныйСписокЗаказов;
	
КонецФункции

#КонецОбласти