
////////////////////////////////////////////////////////////////////////////////
//  Методы, позволяющие начать и закончить замер времени выполнения ключевой операции
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция вызывается при старте замера времени и его завершении.
// ТекущаяДата вместо ТекущаяДатаСеанса используется осмысленно.
// Но нужно помнить, что если время начала замера получено на клиенте, 
// то и время конца замера нужно вычислять на клиенте. Для сервера то же самое.
//
// Возвращаемое значение:
//  Дата - время начала замера.
Функция ЗначениеТаймера(ВысокаяТочность = Истина) Экспорт
	
	Перем ЗначениеТаймера;
	Если ВысокаяТочность Тогда
		
		ЗначениеТаймера = Вычислить("ТекущаяУниверсальнаяДатаВМиллисекундах()")/1000.0;
		Возврат ЗначениеТаймера;
		
	Иначе
		
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		//Возврат ТекущаяДатаСеанса(); // ЛНА
		Возврат ТекущаяДата();
#Иначе
		Возврат ТекущаяДата();
#КонецЕсли
		
	КонецЕсли;
	
КонецФункции

// Ключ параметра регламентного задания, соответствующий локальному каталогу экспорта
Функция ЛокальныйКаталогЭкспортаКлючЗадания() Экспорт
	Возврат "ЛокальныйКаталогЭкспорта";		
КонецФункции

// Ключ параметра регламентного задания, соответствующий ftp каталогу экспорта
Функция FTPКаталогЭкспортаКлючЗадания() Экспорт
	Возврат "FTPКаталогЭкспорта";		
КонецФункции

#Если Сервер Тогда
// Процедура записывает данные в журнал регистрации
//
// Параметры:
//  ИмяСобытия - Строка
//  Уровень - УровеньЖурналаРегистрации
//  ТекстСообщения - Строка
//
Процедура ЗаписатьВЖурналРегистрации(ИмяСобытия, Уровень, ТекстСообщения) Экспорт
	
	ЗаписьЖурналаРегистрации(ИмяСобытия,
		Уровень,
		,
		"Оценка производительности",
		ТекстСообщения);
	
КонецПроцедуры
#КонецЕсли

// Получает имя дополнительного свойства не проверять приоритеты при записи ключевой операции
//
// Возвращаемое значение:
//  Строка - имя дополнительного свойства
//
Функция НеПроверятьПриоритет() Экспорт
	Возврат "НеПроверятьПриоритет";	
КонецФункции

// ЛНА
Процедура СообщитьПользователю(
		Знач ТекстСообщенияПользователю,
		Знач КлючДанных = Неопределено,
		Знач Поле = "",
		Знач ПутьКДанным = "",
		Отказ = Ложь) Экспорт
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщенияПользователю;
	Сообщение.Поле = Поле;
	
	ЭтоОбъект = Ложь;
	
#Если НЕ (ТонкийКлиент ИЛИ ВебКлиент) Тогда
	Если КлючДанных <> Неопределено
	   И XMLТипЗнч(КлючДанных) <> Неопределено Тогда
		ТипЗначенияСтрокой = XMLТипЗнч(КлючДанных).ИмяТипа;
		ЭтоОбъект = Найти(ТипЗначенияСтрокой, "Object.") > 0;
	КонецЕсли;
#КонецЕсли
	
	Если ЭтоОбъект Тогда
		Сообщение.УстановитьДанные(КлючДанных);
	Иначе
		Сообщение.КлючДанных = КлючДанных;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ПутьКДанным) Тогда
		Сообщение.ПутьКДанным = ПутьКДанным;
	КонецЕсли;
		
	Сообщение.Сообщить();
	
	Отказ = Истина;
	
КонецПроцедуры


