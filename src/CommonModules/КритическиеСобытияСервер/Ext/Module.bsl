#Область Регистрация_КритическогоСобытия
Процедура ЗарегистрироватьКритическоеСобытие(ОбъектСобытия,ОписаниеОшибки,СтруктураПараметровВызова = неопределено,Оповестить = ложь)
	   СтруктураПараметров = ПолучитьТиповуюСтркутруВызова();
	   
	   Если  НЕ СтруктураПараметровВызова = Неопределено тогда    
		   Для Каждого ЭлементПараметров из СтруктураПараметровВызова цикл 
			    СтруктураПараметров.Вставить(ЭлементПараметров.ключ,ЭлементПараметров.Значение);
			КонецЦикла;	   
		конецесли; 
		
		КритическоеСобытиеЗапись = РегистрыСведений.КритическиеСобытияСистемы.СоздатьМенеджерЗаписи();
		КритическоеСобытиеЗапись.Период = ТекущаяДата();
		КритическоеСобытиеЗапись.ИсточникКритическогоСобытия = ОбъектСобытия;
		КритическоеСобытиеЗапись.ОписаниеОшибки = ОписаниеОшибки;
		КритическоеСобытиеЗапись.ПараметрыВызова = новый ХранилищеЗначения(СтруктураПараметров);
		КритическоеСобытиеЗапись.ФлагОтправкиОпопвещения =  НеобходимоОпопвещение(ОбъектСобытия,Оповестить);	
		КритическоеСобытиеЗапись.Записать();
	
	КонецПроцедуры
	
	

Функция ПолучитьТиповуюСтркутруВызова()
	   СтруктураПараметровВызова = новый Структура();
	   СтруктураПараметровВызова.Вставить("Пользователь",ПараметрыСеанса.ТекущийПользователь);
	   СтруктураПараметровВызова.Вставить("ДатаСеанса",ТекущаяДатаСеанса());
		СтруктураПараметровВызова.Вставить("НомерСеанса",НомерСеансаИнформационнойБазы());
		   
	   Возврат  СтруктураПараметровВызова;
   КонецФункции	
   
   
   Функция НеобходимоОпопвещение(ОбъектСобытия,Оповестить = ложь)
	   если Оповестить тогда 
		   Возврат Истина
	   КонецЕсли;
	   
	   Если ТипЗнч(ОбъектСобытия) = Тип("СправочникСсылка.РегламентныеЗадания") тогда 
		     Возврат ОбъектСобытия.ОповещатьООшибках ;
	   Иначе 
		   Возврат Ложь;
		   
		КонецЕсли;   
	   
	КонецФункции   
#КонецОбласти

#Область Работа_Кластера_1с


Функция ТекущаяЗагрузкаКластера(СтрокаСоединения = Неопределено,НомерСеанса = Неопределено)
	Если СтрокаСоединения = Неопределено тогда 
		СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;	
	
	ИмяСервера  = НСтр(СтрокаСоединения,"Srvr");
	ИмяБазы =  НСтр(СтрокаСоединения,"Ref");

	  
	Коннектор = Новый COMОбъект("v83.COMConnector");
	Агент = Коннектор.ConnectAgent(ИмяСервера);
	Кластеры = Агент.GetClusters();
	Для каждого Кластер из Кластеры Цикл
	    Агент.Authenticate(Кластер, , );
	
			Базы = Агент.GetInfoBases(Кластер);
			Для каждого База из Базы Цикл
					
		        Сеансы = Агент.GetInfoBaseSessions(Кластер, База);
				
				Если не  НомерСеанса  = Неопределено тогда 
					
				иначе 
					
		        Для каждого Сеанс из Сеансы Цикл
		            Если нРег(Сеанс.AppID) = "srvrconsole" или нРег(Сеанс.AppID) = "comconsole"  Тогда
		                // если это сеансы конфигуратора или фонового задания, то не отключаем
		                Продолжить;
					КонецЕсли;
									
					Сообщение = ""+Сеанс.infoBase.Name+", "+Сеанс.userName+" , Время вызова:"+Сеанс.durationCurrent+", Время вызова сервера:"+Сеанс.durationCurrentDBMS + ", Память текущая: "+ Сеанс.MemoryCurrent+
					 ", заблокировано объектов (упр):"+ Сеанс.blockedByLS + "";
					
										КонецЦикла;
				
				КонецЕсли;
			КонецЦикла;
	
	КонецЦикла;

	
КонецФункции
#конецОбласти
