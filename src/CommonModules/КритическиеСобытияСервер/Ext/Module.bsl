#Область Регистрация_КритическогоСобытия
Процедура ЗарегистрироватьКритическоеСобытие(Знач ОбъектСобытия,знач Событие,ОписаниеОшибки,СтруктураПараметровВызова = неопределено,Оповестить = ложь, ДополнительноеОписаниеОшибки = "", МестоВозникновения = "") Экспорт 

	КритическоеСобытиеЗапись = РегистрыСведений.КритическиеСобытияСистемы.СоздатьМенеджерЗаписи();
	КритическоеСобытиеЗапись.Период 						= ТекущаяДата();
	КритическоеСобытиеЗапись.Событие 						= Событие;
	КритическоеСобытиеЗапись.ИсточникКритическогоСобытия 	= ОбъектСобытия;
	КритическоеСобытиеЗапись.ОписаниеОшибки 				= ОписаниеОшибки;
	КритическоеСобытиеЗапись.ДополнительноеОписаниеОшибки 	= ДополнительноеОписаниеОшибки;
	КритическоеСобытиеЗапись.МестоВозникновения 			= МестоВозникновения;
	КритическоеСобытиеЗапись.ОтправлятьОповещение 			= КритическиеСобытияПовтИсп.НеобходимоОпопвещение(Событие,Оповестить);	
	ЗаполнитьДополнительныеРеквизитыЗаписи(КритическоеСобытиеЗапись,СтруктураПараметровВызова);
	КритическоеСобытиеЗапись.Записать();
		
КонецПроцедуры

Процедура ЗаполнитьДополнительныеРеквизитыЗаписи(КритическоеСобытиеЗапись,СтруктураПараметровВызова = неопределено)
	КритическоеСобытиеЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КритическоеСобытиеЗапись.ДатаСеанса= ТекущаяДатаСеанса();
	КритическоеСобытиеЗапись.НомерСеанса = НомерСеансаИнформационнойБазы();
	КритическоеСобытиеЗапись.Компьютер = ИмяКомпьютера() ;
	Если не СтруктураПараметровВызова = Неопределено тогда
		КритическоеСобытиеЗапись.ПараметрыВызова = ЗначениеВСтрокуВнутр(СтруктураПараметровВызова);
	КонецЕсли;	
КонецПроцедуры	

#КонецОбласти

#Область Работа_Кластера_1с


Функция ТекущаяЗагрузкаКластера(СтрокаСоединения = Неопределено,НомерСеанса = Неопределено)
	Если СтрокаСоединения = Неопределено тогда 
		СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;	
	
	ИмяСервера  = НСтр(СтрокаСоединения,"Srvr");
	ИмяБазы =  НСтр(СтрокаСоединения,"Ref");
	
	
	Коннектор = Новый COMОбъект("v83.COMConnector");
	Агент = Коннектор.ConnectAgent(ИмяСервера);
	Кластеры = Агент.GetClusters();
	Для каждого Кластер из Кластеры Цикл
		Агент.Authenticate(Кластер, , );
		
		Базы = Агент.GetInfoBases(Кластер);
		Для каждого База из Базы Цикл
			
			Сеансы = Агент.GetInfoBaseSessions(Кластер, База);
			
			Если не  НомерСеанса  = Неопределено тогда 
				
			иначе 
				
				Для каждого Сеанс из Сеансы Цикл
					Если нРег(Сеанс.AppID) = "srvrconsole" или нРег(Сеанс.AppID) = "comconsole"  Тогда
						// если это сеансы конфигуратора или фонового задания, то не отключаем
						Продолжить;
					КонецЕсли;
					
					Сообщение = ""+Сеанс.infoBase.Name+", "+Сеанс.userName+" , Время вызова:"+Сеанс.durationCurrent+", Время вызова сервера:"+Сеанс.durationCurrentDBMS + ", Память текущая: "+ Сеанс.MemoryCurrent+
					", заблокировано объектов (упр):"+ Сеанс.blockedByLS + "";
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	
КонецФункции
#конецОбласти
