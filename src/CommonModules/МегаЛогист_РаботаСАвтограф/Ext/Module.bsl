
//&НаСервере
Функция ОтправитьЗапросPOST(СтрокаЗапроса, ВыводитьСообщения = Истина) Экспорт 
	
	Если Не Константы.МегаЛогист_Автограф_ПодключениеРазрешено.Получить() Тогда
	
		Сообщить("Соединение с Автограф запрещено!");
		Возврат "Запрещено";
	
	КонецЕсли;
	АдресРесурса = СтрЗаменить(Константы.МегаЛогист_Автограф_URLСервиса.Получить(), "http://", "");
	Порт = Формат(Константы.МегаЛогист_Автограф_ПортСервиса.Получить(), "ЧГ=0");
	Соединение	= Новый HTTPСоединение(СокрЛП(АдресРесурса), Порт);
	
	Заголовки	= Новый Соответствие;
	Заголовки.Вставить("name", СтрокаЗапроса);
	
	ЗапросHttp	= Новый HTTPЗапрос(СокрЛП(АдресРесурса), Заголовки);
	ЗапросHttp.УстановитьТелоИзСтроки(СтрокаЗапроса, "UTF-8");
	
	Попытка
		ОтветHttp	= Соединение.ОтправитьДляОбработки(ЗапросHttp);
		Соединение	= Неопределено;
	Исключение
		Если ВыводитьСообщения Тогда
			Сообщить("Не удалось отправить Http запрос " + ИнформацияОбОшибке().Описание);
		КонецЕсли;
		Возврат Неопределено;
	КонецПопытки;
	
	ЧтениеХМЛ = Новый ЧтениеXML;
	ЧтениеХМЛ.УстановитьСтроку(ОтветHttp.ПолучитьТелоКакСтроку("UTF-8"));
	
	ОбъектХДТО = ФабрикаXDTO.ПрочитатьXML(ЧтениеХМЛ);
	
	//Добавить проверку на ошибки
	
	Возврат ОбъектХДТО;
КонецФункции

//&НаКлиенте
Функция ПроверитьСоединение() Экспорт 

	ОтветХДТО = ОтправитьЗапросPOST("name=AllGroups", Ложь);
	
	Попытка
		Если ОтветХДТО.ArrayOfResponse.Количество() = 0 Тогда
		
			Возврат Неопределено;
			
		Иначе 
			Возврат Истина;
		КонецЕсли;
	Исключение
		Возврат Неопределено;
	КонецПопытки;

КонецФункции // ПроверитьСоединение()

//&НаСервере
Функция ПолучитьДанныеПоМашине(РегНомер, НачалоПериода, КонецПериода, МаршрутныйЛист) Экспорт 
	
	//Получить группы
	//Request: name=AllGroups
	ОбъектХДТО = ОтправитьЗапросPOST("name=AllGroups");
	Если ОбъектХДТО = "" ИЛИ ОбъектХДТО = Неопределено Тогда
		Сообщить("Не удается загрузить данные из Автограф");
		Возврат "";
	ИначеЕсли ОбъектХДТО = "Запрещено" Тогда
		Возврат "";
	КонецЕсли;
	Если ТипЗнч(ОбъектХДТО.ArrayOfResponse) = Тип("ОбъектXDTO") Тогда
		Группы = Новый Массив;
		Группы.Добавить(ОбъектХДТО.ArrayOfResponse);
	Иначе
		Группы = ОбъектХДТО.ArrayOfResponse;
	КонецЕсли;
	
	//Обход всех групп
	Для каждого СтрокаРезультата Из Группы Цикл
	
		Если СтрокаРезультата.Response[5].Value = 0 Тогда
			Продолжить;
		КонецЕсли;
		//Получить все машины
		//Request: name=AllCars&arg0=2
		ОбъектХДТО_Машины = ОтправитьЗапросPOST("name=AllCars&arg0=" + СтрокаРезультата.Response[0].Value);
		Если ОбъектХДТО_Машины = "" ИЛИ ОбъектХДТО_Машины = Неопределено Тогда
			Сообщить("Не удается загрузить данные из Автограф");
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(ОбъектХДТО_Машины.ArrayOfResponse) = Тип("ОбъектXDTO") Тогда
			Машины = Новый Массив;
			Машины.Добавить(ОбъектХДТО_Машины.ArrayOfResponse);
		Иначе
			Машины = ОбъектХДТО_Машины.ArrayOfResponse;
		КонецЕсли;
		Для каждого Машина Из Машины Цикл
			
			//Найти нужную машину
			Если Машина.Response[3].Value <> РегНомер Тогда
				Продолжить;
			КонецЕсли;
			//Получить по машине данные
			//Request: name=WaitForComputing&arg0=Европласт ДВ.ini&arg1=145300&arg2=17.04.2017 00:00:00&arg3=17.04.2017 23:59:59&arg4=GSM&arg5=
			ОбъектХДТО_Ответ = ОтправитьЗапросPOST("name=WaitForComputing&arg0=" 
												+ СтрокаРезультата.Response[4].Value 
												+ "&arg1=" + Формат(Машина.Response[1].Value, "ЧГ=0")
												+ "&arg2=" + НачалоПериода 
												+ "&arg3=" + КонецПериода
												+ "&arg4=GSM&arg5=1");
			//Request: name=TripEntriesListTypeName&arg0=checkpoints
			ОбъектХДТО_Ответ = ОтправитьЗапросPOST("name=TripEntriesListTypeName&arg0=checkpoints");
			//Request: name=TripEntriesListKindName&arg0=points
			ОбъектХДТО_Ответ = ОтправитьЗапросPOST("name=TripEntriesListKindName&arg0=points");
			
			//Определение номера маршрута в 1С
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	МегаЛогист_МаршрутныйЛист.Ссылка
			               |ИЗ
			               |	Документ.МегаЛогист_МаршрутныйЛист КАК МегаЛогист_МаршрутныйЛист
			               |ГДЕ
			               |	МегаЛогист_МаршрутныйЛист.Транспорт.Код = &Код
			               |	И МегаЛогист_МаршрутныйЛист.ДатаДоставки МЕЖДУ &НачалоПериода И &КонецПериода
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	МегаЛогист_МаршрутныйЛист.НомерРейса";
			
			Запрос.УстановитьПараметр("Код", 			РегНомер);
			Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(МаршрутныйЛист.ДатаДоставки));
			Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(МаршрутныйЛист.ДатаДоставки));
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			НомерРейса = 1;
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.Ссылка = МаршрутныйЛист Тогда
					Прервать;
				КонецЕсли;
				НомерРейса = НомерРейса + 1;
			КонецЦикла;
			
			
			//Получение маршрута
			//Request: name=AllTrips
			ОбъектХДТО_Маршруты = ОтправитьЗапросPOST("name=AllTrips");
			Если ОбъектХДТО_Маршруты = "" ИЛИ ОбъектХДТО_Маршруты = Неопределено Тогда
				Сообщить("Не удается загрузить данные из Автограф");
				Продолжить;
			КонецЕсли;
			Если ТипЗнч(ОбъектХДТО_Маршруты.ArrayOfResponse) = Тип("ОбъектXDTO") Тогда
				Маршруты = Новый Массив;
				Маршруты.Добавить(ОбъектХДТО_Маршруты.ArrayOfResponse);
			Иначе
				Маршруты = ОбъектХДТО_Маршруты.ArrayOfResponse;
			КонецЕсли;
			Стр = 1;
			Для каждого Маршрут Из Маршруты Цикл
				Если Окр(Маршрут.Response[22].Value / 1000, 2) = 0 Тогда
					Продолжить;
				КонецЕсли;
					
				Если Стр <> НомерРейса Тогда
					Стр = Стр + 1;
					Продолжить;
				КонецЕсли;
					
				//Запись данных в маршрутный лист
				МЛОбъект = МаршрутныйЛист.ПолучитьОбъект();
				МЛОбъект.ФактическийПробег 	= Окр(Маршрут.Response[22].Value / 1000, 2); // TripDistance
				МЛОбъект.РасходТоплива 		= Маршрут.Response[40].Value + Маршрут.Response[44].Value; //TripMotor1Fuel + TripMotor2Fuel;
				МЛОбъект.Записать();
				//Получение данных по маршруту
				//Получение контрольных точек
				//Request: name=AllEntries&arg0=1
				
				//НС = тзТреки.Добавить();
				//НС.ТС				= уатТС;
				//НС.Пункт			= ?(ПустаяСтрока(РезультатСркт.EntryStartAddress),РезультатСркт.EntryStartName,СокрЛП(РезультатСркт.EntryStartAddress));
				//НС.IDПункта			= СокрЛП(РезультатСркт.EntryStartIDP);
				//НС.ВПрибытие		= АвтографПолучитьВремяИзСтроки(РезультатСркт.EntryStartRealTime);
				//НС.ВОтправление		= АвтографПолучитьВремяИзСтроки(РезультатСркт.EntryEndRealTime);
				//НС.Рейс				= НомерРейса;
				//НС.Пробег			= РезультатСркт.EntryDistance;
				//НС.ВремяРейса		= РезультатСркт.EntryRealCont;
				//Скорость			= РезультатСркт.EntryAverSpeed;
				//Если Скорость = -1 Тогда Скорость = 0 КонецЕсли;
				//НС.Скорость			= Скорость;
				//НС.СкорМакс			= РезультатСркт.EntryMaxSpeed;
				//НС.МЧ1				= Окр(РезультатСркт.EntryMotor1Hours, 2);		// Время работы двигателя 1, (час)
				//НС.МЧ2				= Окр(РезультатСркт.EntryMotor2Hours, 2);
				//НС.Расход1			= РезультатСркт.EntryMotor1Fuel;
				//НС.Расход2			= РезультатСркт.EntryMotor2Fuel;
				//НС.Бак1				= РезультатСркт.EntryTank1StartLevel;
				//НС.Бак2				= РезультатСркт.EntryTank1EndLevel;
				//Нс.Лат				= РезультатСркт.EntryStartLatitude;
				//Нс.Лон				= РезультатСркт.EntryStartLongitude;
				
				Попытка
					
					//ОбъектХДТО_Маршрут = ОтправитьЗапросPOST("name=AllEntries&arg0=" + Маршрут.Response[1].Value);
					
					ОбъектХДТО_Маршрут = ОтправитьЗапросPOST("name=TripAll&arg0=" + Маршрут.Response[1].Value);

					ОбъектХДТО_Маршрут = ОтправитьЗапросPOST("name=TrackCrdsStr");
					МассивКоординат = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ОбъектХДТО_Маршрут.Value, ",");
					
					НаборЗаписей = РегистрыСведений.Мегалогист_Автограф_ТочкиМаршрута.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.МаршрутныйЛист.Значение 		= МаршрутныйЛист;
					НаборЗаписей.Отбор.МаршрутныйЛист.Использование = Истина;
					НаборЗаписей.Прочитать();
					НаборЗаписей.Очистить();
					Стр = 1;
					Для каждого Точка Из МассивКоординат Цикл
						
						МассивТочки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Точка, " ");
						Если МассивТочки.Количество() <> 2 Тогда
							Продолжить;
						КонецЕсли;
						НоваяСтрока = НаборЗаписей.Добавить();
						НоваяСтрока.МаршрутныйЛист 	= МаршрутныйЛист;
						НоваяСтрока.НомерТочки		= Стр;
						НоваяСтрока.Лат				= СтрЗаменить(МассивТочки[1], ".", ",");
						НоваяСтрока.Лон				= СтрЗаменить(МассивТочки[0], ".", ",");
						
						Стр = Стр + 1;
					КонецЦикла;
					
					НаборЗаписей.Записать();
				Исключение
					
				КонецПопытки;
				//При успешном поиске маршрута проходим только один раз
				Прервать;
				
			КонецЦикла;
		
		КонецЦикла;
	
	КонецЦикла;
		
КонецФункции

