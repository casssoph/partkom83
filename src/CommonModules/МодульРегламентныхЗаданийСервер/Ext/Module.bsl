//Для Загрузки номенклатуры из СПБ

Процедура СоздатьНоменклатуру(Таблица) Экспорт
	Для Каждого СтрокаТЧ Из Таблица Цикл 
		UUID = СтрокаТЧ.УИД;
		
		НоменклатураСсылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(UUID));
		Если ОбменДаннымиКлиентСервер.ЭтоБитаяСсылка(НоменклатураСсылка) Тогда 
			Отказ = Ложь;
			//Получили реквизиты номенклатуры с WS Сайта//
			ДокументDOM  = ДанныеНоменклатурыПоUUID(UUID, Отказ);
			Если НЕ Отказ Тогда
				//Сайт выдал читаемый результат//
				Разыменователь = Новый РазыменовательПространствИменDOM(ДокументDOM);
				
				НоменклатураНайдена = (ЗначениеЭлементаDOM(ДокументDOM, "/response/success", Разыменователь, 0) = "1");
				Если НоменклатураНайдена Тогда
					
					Наименование = ЗначениеЭлементаDOM(ДокументDOM, "/response/data/name", Разыменователь, "");
					БрендНаименование = ЗначениеЭлементаDOM(ДокументDOM, "/response/data/brand/name", Разыменователь, "");
					БрендUUID = ЗначениеЭлементаDOM(ДокументDOM, "/response/data/brand/uuid", Разыменователь, "");
					Артикул = ЗначениеЭлементаDOM(ДокументDOM, "/response/data/number", Разыменователь, "");
					Бренд = БрендПоUUID(БрендUUID, Наименование);
					
					//Попытка
						//Создаем новый элемент с нужными реквизитами//
						ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
						ЕдиницаИзмерения.Владелец = НоменклатураСсылка;
						ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Константы.ОсновнаяЕдиницаПоКлассификатору.Получить();
						ЕдиницаИзмерения.Коэффициент = 1;
						ЕдиницаИзмерения.Наименование = ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Наименование;
						ЕдиницаИзмерения.ОбменДанными.Загрузка = Истина;
						ЕдиницаИзмерения.УстановитьНовыйКод();
						//ЕдиницаИзмерения.Записать();
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(ЕдиницаИзмерения);
						
						НовыйЭлемент = Справочники.Номенклатура.СоздатьЭлемент();
						НовыйЭлемент.УстановитьСсылкуНового(НоменклатураСсылка);
						// + 20181012 Пушкин XX-1114
						НовыйЭлемент.НаименованиеПолное = Наименование;
						// - 20181012 Пушкин XX-1114
						НовыйЭлемент.Наименование = Наименование;
						НовыйЭлемент.Изготовитель = Бренд;
						НовыйЭлемент.Артикул = Артикул;
						НовыйЭлемент.ЕдиницаХраненияОстатков = ЕдиницаИзмерения.Ссылка;
						НовыйЭлемент.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
						НовыйЭлемент.ДатаСоздания = ТекущаяДата();
						НовыйЭлемент.ОбменДанными.Загрузка = Истина;
						НовыйЭлемент.УстановитьНовыйКод();
						//НовыйЭлемент.Записать();
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйЭлемент);
						Менеджер = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
						Менеджер.Объект = НовыйЭлемент.Ссылка;
						Менеджер.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.Номенклатура_ЗагруженаИзСПБ;
						Менеджер.Значение = Истина;
						Менеджер.Записать();
					//Исключение
					//	
					//	Сообщить(ОписаниеОшибки());
					//	//СтруктураОтчета.Отказ = Истина;
					//	//ТекстОшибки = "Не записать номенклатуру: UUID = <" + UUID + ">" + ОписаниеОшибки();
					//	//ДополнитьОшибку(СтруктураОтчета.ТекстОшибки, ТекстОшибки);
					//КонецПопытки;
				Иначе
					Сообщить("Номенклатура не найдена по уиду " + UUID);
				КонецЕсли;
			Иначе
				Сообщить("Сайт выдал нечитаемое сообщение по уиду" + UUID);
			КонецЕсли;
		КонецЕсли;	
		//СтрокаТЧ.Номенклатура = НоменклатураСсылка;
	КонецЦикла;
КонецПроцедуры

Функция ДанныеНоменклатурыПоUUID(UUID, Отказ)
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	ПараметрыЗапроса = "uuid=" + UUID;
	
	HTTPСоединение = Новый HTTPСоединение(АдресWEBСервиса());
	HTTPЗапрос = Новый HTTPЗапрос("/uuid/part_by_uuid", Заголовки); 
	HTTPЗапрос.УстановитьТелоИзСтроки(ПараметрыЗапроса, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	Ответ = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		Текст = Ответ.ПолучитьТелоКакСтроку();
			
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Текст);

		ПостроительDOM = Новый ПостроительDOM;
		ДокументDOM  = ПостроительDOM.Прочитать(ЧтениеXML);
	Иначе
		Отказ = Истина;
		ДокументDOM = Неопределено;
	КонецЕсли;
	
	Возврат ДокументDOM;
	
КонецФункции

Функция БрендПоUUID(UUID, Наименование)
	
	БрендСсылка = Справочники.Изготовители.ПолучитьСсылку(Новый УникальныйИдентификатор(UUID));
	Если НЕ ЗначениеЗаполнено(БрендСсылка.ВерсияДанных) Тогда
		БС = Справочники.Номенклатура.НайтиПоНаименованию(Наименование);
		Если Не ЗначениеЗаполнено(БС) Тогда 
			НовыйЭлемент = Справочники.Изготовители.СоздатьЭлемент();
			НовыйЭлемент.УстановитьСсылкуНового(БрендСсылка);
			НовыйЭлемент.Наименование = Наименование;
			НовыйЭлемент.Записать();
			БрендСсылка = НовыйЭлемент.Ссылка;
		Иначе
			БрендСсылка = БС;
		КонецЕсли;
	КонецЕсли;
	
	Возврат БрендСсылка;
	
КонецФункции

Функция АдресWEBСервиса()
	
	Настройка = Справочники.НастройкиРеквизитовДляОбменов.API_Сайт;
	
	//Если ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() Тогда
		Адрес = Настройка.СтрокаДляРабочейБазы;
	//Иначе
	//	Адрес = Настройка.СтрокаДляТестовойБазы;
	//КонецЕсли;
	
	Возврат Адрес;
	
КонецФункции

Функция ЗначениеЭлементаDOM(ДокументDOM, Путь, Разыменователь, ЗначениеПоУмолчанию)
	
	РезультатXPath = ДокументDOM.ВычислитьВыражениеXPath (Путь, ДокументDOM, Разыменователь);
	ПолученныйЭлемент = РезультатXPath.ПолучитьСледующий();
	
	Возврат ?(ПолученныйЭлемент = Неопределено, ЗначениеПоУмолчанию, ПолученныйЭлемент.ТекстовоеСодержимое);
	
КонецФункции

//Конец Загрузки из СПБ
