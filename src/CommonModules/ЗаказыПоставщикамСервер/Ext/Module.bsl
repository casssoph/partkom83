

#Область Размещение_заказов_поставщику_в_ПТУ

//Процедура ОбновитьТаблицуРазмещения(ДокументПоступление,ТаблицаРазмещения,СтруктураПараметров)
//	ТаблицаДокумента = ДокументПоступление.РазмещениеСтрокПрихода;
//	Если СтруктураПараметров.ОтборНоменклатуры тогда 
//		МассивНоменклатуры = СтруктураПараметров.МассивОтбораНоменклатуры;
//		Для каждого ЭлементНоменклатуры из МассивНоменклатуры цикл 
//			
//			НайдСтроки = ТаблицаДокумента.НайтиСтроки(Новый Структура("Номенклатура",ЭлементНоменклатуры));
//			Для каждого НайденаяСтрока из НайдСтроки цикл 
//				ТаблицаДокумента.Удалить(НайденаяСтрока);
//			КонецЦикла;	
//		КонецЦикла;
//		
//		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРазмещения,ТаблицаДокумента);
//	Иначе 
//		ТаблицаДокумента.Очиствить();
//		ТаблицаДокумента.загрузить(ТаблицаРазмещения);	
//	КонецЕсли;	
//	
//КонецПроцедуры	

Процедура СоздатьВиртуальныеСтроки(СтруктураТаблицРазмещения,СтруктураПараметров)  Экспорт
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_СоздатьВиртуальныеСтроки";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	
	ТаблицаНеразмещенного = СтруктураТаблицРазмещения.ТаблицаНеразмещенного;	
	
	Если НЕ СтруктураПараметров.СоздаватьВиртуальныеСтроки 
		или ТаблицаНеразмещенного.количество() =0 тогда 
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаНеразмещенного из ТаблицаНеразмещенного цикл 
			//СтрокаВиртуальная = ДокументПоступление.РазмещениеСтрокПрихода.Добавить();
			//ЗаполнитьЗначенияСвойств(СтрокаВиртуальная,СтрокаНеразмещенного);
			СтрокаВиртуальная = ОбщегоНазначенияКлиентСервер.ВиртуальнаяСтрокаЗаявки();
			ДобавитьСтрокуРазмещениявТаблицу(СтруктураТаблицРазмещения.ТаблицаРазмещения,СтрокаНеразмещенного.Номенклатура,СтрокаВиртуальная,СтрокаНеразмещенного.СтрокаПрихода,СтрокаНеразмещенного.Количество);
	КонецЦикла;			
		
КонецПроцедуры	

//Процедура ПроставитьОтказыПоНеразмещенному(ДокументПоступление,ТаблицаНеразмещенного,СтруктураПараметров)
//	
//	Если СтруктураПараметров.ЗаказРавенПриходу и ТаблицаНеразмещенного.Количество() тогда 
//		ДокументПоступление.ДополнительныеСвойства.Вставить("ПроставитьПолныйОтказВЗаказе",СтруктураПараметров.ЗаказРаспределения);		
//	КонецЕсли;
//	
//КонецПроцедуры	

Функция ПолучитьСтруктуруПараметровЗаполнения(Знач СтруктураПараметров) экспорт
	
	Если СтруктураПараметров = Неопределено тогда 
		СтруктураПараметров = ПараметрыРазмещенияПоУмолчанию();
	иначе 
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПараметров,ПараметрыРазмещенияПоУмолчанию(),Ложь);
	КонецЕсли;			
	
	СтрокаРеквизитовДокумента = "Контрагент,Склад,ДоговорКонтрагента,ПоставщикЗаказовДругой,ТорговаяТочка";
	СтруктураРеквизитовДокумента = новый Структура(СтрокаРеквизитовДокумента); 	
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Документы,СтрокаРеквизитовДокумента);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПараметров,СтруктураРеквизитовДокумента,Ложь);
	
	СтруктураПараметров.вставить("ОтборНоменклатуры",?(СтруктураПараметров.МассивОтбораНоменклатуры.Количество()>0,Истина,Ложь));
	//
	//СтруктураПараметров.вставить("РаспределятьПоСпискуЗаказов",?(не СтруктураПараметров.ЗаказРавенПриходу 
	//и СтруктураПараметров.СписокЗаказовРаспределения>0,Истина,Ложь));
	
	СтруктураПараметров.Вставить("МоментВремени",ТекущаяДата());
	
	Возврат СтруктураПараметров
	
КонецФункции	

#КонецОбласти

#Область Формирование_заказов
Функция ПолучитьСкладЗаказаПоПрайсу(ПрайсПоставщика,СкладВЗаявке) Экспорт 	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_ПолучитьСкладЗаказаПоПрайсу";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	////////////////////////////////////////////////	
	
	ВладелецПрайса =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрайсПоставщика,"Владелец");
	Если (Типзнч(ВладелецПрайса) = Тип("СправочникСсылка.ТорговыеТочки") и  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецПрайса, "ГородПоставки") = Справочники.Города.СанктПетербург) тогда 
		ЭтоПитерскийПоставщик = истина;
	Иначе 
		ЭтоПитерскийПоставщик = Ложь;
	КонецЕсли; 
	
	//#XX-2173 Kalinin V.A. ( 2019-03-25 )
	Если РаботаСоСтатусамиДокументовПовтИсп.ЭтоПрайсПополнениеVMI(ПрайсПоставщика) тогда 
		Возврат СкладВЗаявке		
	ИначеЕсли РаботаСоСтатусамиДокументовПовтИсп.ЭтоКроссИлиПрайсПополнениеСток(ПрайсПоставщика) тогда 		
		Если ЭтоПитерскийПоставщик тогда 	
			Возврат Справочники.Филиалы.СанктПетербург.ОсновнойСклад ;
		ИначеЕсли ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецПрайса,"ОтгружаетсяВНесколькихГородах") тогда 
			Возврат СкладВЗаявке
		иначе 
			СкладЗамена =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецПрайса, "ГородПоставки.СкладЗамена");
			
			Если ЗначениеЗаполнено(СкладЗамена) тогда 
				Возврат СкладЗамена
			Иначе
				Возврат СкладВЗаявке
			КонецЕсли;				
		КонецЕсли;					
	КонецЕсли;		
	
	Возврат СкладВЗаявке
	
	
КонецФункции	



#КонецОбласти



#Область Запросы_к_Данным_Размещения


Функция ПолучитьСтруктуруТаблицРазмещения(СтруктураТаблицДокумента,СтруктураПараметров,ОшибкиРазмещения = Неопределено)  Экспорт
		
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_ПолучитьСтруктуруТаблицРазмещения";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	////////////////////////////////////////////////	
		
	ТаблицаРазмещения = ПолучитьПустуюТаблицуРазмещения();
	
	таблицаНеРазмещенного = ПолучитьПустуюТаблицуРазмещения();
	
	ЗапросПоОстаткам = Новый Запрос;
	МенеджерВремТаблиц = новый МенеджерВременныхТаблиц;
	ЗапросПоОстаткам.Текст =ТексЗапросаРазмещения_ПоступлениеТоваровУслуг();
	ЗапросПоОстаткам.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗапросПоОстаткам.Параметры,СтруктураПараметров,Истина);
	
	ЗапросПоОстаткам.установитьПараметр("ТаблицаТоваров",СтруктураТаблицДокумента.Товары);
		
	РезультатЗапроса = ЗапросПоОстаткам.ВыполнитьПакет();
	
	ВыборкаНоменклатуры = РезультатЗапроса[РезультатЗапроса.Количество()-3].Выбрать();
	ТаблицаЗаказов = РезультатЗапроса[РезультатЗапроса.Количество()-4].Выгрузить();	
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		НоменклатураПоиска = ВыборкаНоменклатуры.Номенклатура;
		КоличествоКРазмещению  = ВыборкаНоменклатуры.Количество;
		НетВЗаказе = Истина;
		ЕстьОшибкаВЦене = Ложь;
		
		НоваяСортировка = ЭтоАктивнаяЗадачаJirа(Справочники.ЗадачиJira.XX2452);
		Если НоваяСортировка Тогда
			
			//ХудинВВ 04062019 XX-2452
			ПараметрыУпорядочивания = Новый Структура;
			ПараметрыУпорядочивания.Вставить("Номенклатура", 		 	НоменклатураПоиска);
			ПараметрыУпорядочивания.Вставить("Цена", 		 		 	ВыборкаНоменклатуры.Цена);
			ПараметрыУпорядочивания.Вставить("Контрагент", 		 		СтруктураПараметров.Контрагент);
			
			ДанныеЗаказовРезультат =  УпорядочитьОстаткиЗаказовПоПравиламРазмещения(МенеджерВремТаблиц, ПараметрыУпорядочивания);
			ДанныеЗаказов = ДанныеЗаказовРезультат.Выбрать();
			
		Иначе
			
			ДанныеЗаказов =  ПолучитьВыборкуЗаказовПоСтроке(МенеджерВремТаблиц,НоменклатураПоиска,ВыборкаНоменклатуры.Цена);
			
		КонецЕсли;
		
		Пока ДанныеЗаказов.Следующий() и КоличествоКРазмещению > 0 цикл
			
			СтрокаЗаказа = ТаблицаЗаказов.Найти(ДанныеЗаказов.СтрокаЗаявки,"СтрокаЗаявки");
			
			НетВЗаказе = Ложь;
			
			СообщениеОшибки = "";
			Если СтрокаЗаказаНеКорректная(ВыборкаНоменклатуры,СтрокаЗаказа,СтруктураПараметров,ОшибкиРазмещения, СообщениеОшибки) тогда 
				// НП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
				Если НЕ ПустаяСтрока(СообщениеОшибки) Тогда
					ЕстьОшибкаВЦене = Истина;
					Если  КоличествоКРазмещению >= СтрокаЗаказа.Количество тогда 
						ДобавитьСтрокуРазмещениявТаблицу(ТаблицаНеРазмещенного,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,ВыборкаНоменклатуры.СтрокаПрихода,СтрокаЗаказа.Количество,ВыборкаНоменклатуры.НомерСтроки, СообщениеОшибки);
						КоличествоКРазмещению = КоличествоКРазмещению - СтрокаЗаказа.Количество;
						СтрокаЗаказа.Количество = 0;
					Иначе 
						ДобавитьСтрокуРазмещениявТаблицу(ТаблицаНеРазмещенного,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,ВыборкаНоменклатуры.СтрокаПрихода,КоличествоКРазмещению,ВыборкаНоменклатуры.НомерСтроки, СообщениеОшибки);
						СтрокаЗаказа.Количество = СтрокаЗаказа.Количество -КоличествоКРазмещению;
						КоличествоКРазмещению = 0;	 
					КонецЕсли;
				КонецЕсли;
				// КП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
				Продолжить;
			КонецЕсли;	
			
			Если КоличествоКРазмещению = 0  тогда 
				Прервать;
			КонецЕсли;	 
			
			Если  КоличествоКРазмещению >= СтрокаЗаказа.Количество тогда 
				ДобавитьСтрокуРазмещениявТаблицу(ТаблицаРазмещения,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,ВыборкаНоменклатуры.СтрокаПрихода,СтрокаЗаказа.Количество,ВыборкаНоменклатуры.НомерСтроки);
				КоличествоКРазмещению = КоличествоКРазмещению - СтрокаЗаказа.Количество;
				СтрокаЗаказа.Количество = 0;
			Иначе 
				ДобавитьСтрокуРазмещениявТаблицу(ТаблицаРазмещения,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,ВыборкаНоменклатуры.СтрокаПрихода,КоличествоКРазмещению,ВыборкаНоменклатуры.НомерСтроки);
				СтрокаЗаказа.Количество = СтрокаЗаказа.Количество -КоличествоКРазмещению;
				КоличествоКРазмещению = 0;	 
			КонецЕсли;	 
		КонецЦикла;
		
		
		Если КоличествоКРазмещению>0 тогда
			// НП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
			Если НетВЗаказе Тогда
				СообщениеОшибки = "**********"+Символы.ПС+"Строка №"+ВыборкаНоменклатуры.НомерСтроки+", Артикул "+НоменклатураПоиска.Артикул+Символы.ПС+
				"Нет в заказе!";
			Иначе
				Разделитель = ?(ЕстьОшибкаВЦене, ""+Символы.ПС, "**********"+Символы.ПС);
				СообщениеОшибки = Разделитель + "Строка №"+ВыборкаНоменклатуры.НомерСтроки+", Артикул "+НоменклатураПоиска.Артикул+Символы.ПС+
				"В заказе количество "+Строка(ВыборкаНоменклатуры.Количество-КоличествоКРазмещению)+Символы.ПС+
				"В ПТУ количество "+Строка(ВыборкаНоменклатуры.Количество)+Символы.ПС+
				"Не распределено  "+Строка(КоличествоКРазмещению)+" шт.";
			КонецЕсли;
			СтрокаЗаявки = "";
			ДобавитьСтрокуРазмещениявТаблицу(ТаблицаНеРазмещенного,НоменклатураПоиска,СтрокаЗаявки,ВыборкаНоменклатуры.СтрокаПрихода,КоличествоКРазмещению,ВыборкаНоменклатуры.НомерСтроки, СообщениеОшибки);
			// КП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
		КонецЕсли;			
	КонецЦикла;
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаРазмещения",ТаблицаРазмещения);
	СтруктураТаблиц.Вставить("ТаблицаНеРазмещенного",ТаблицаНеРазмещенного);
	
	Возврат СтруктураТаблиц;
	

КонецФункции	

#Область НоваяСортировка

//ХудинВВ 05062019 XX-2452
Функция УпорядочитьОстаткиЗаказовПоПравиламРазмещения(МенеджерВременныхТаблиц, ПараметрыУпорядочивания) Экспорт
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_УпорядочитьОстаткиЗаказовПоПравиламРазмещения";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	ПараметрыУпорядочивания.Вставить("ПорогОтклонения", ПорогОтклоненияЦенПриходаДляРазмещения());
	
	Если ПараметрыУпорядочивания.Свойство("Контрагент") Тогда
		РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыУпорядочивания.Контрагент, "РаботатьСОкномПоставщика, ПроцентОтклоненияЦенПрихода");
		ПараметрыУпорядочивания.Вставить("ПроцентОтклоненияЦенПрихода", 	?(РеквизитыКонтрагента.ПроцентОтклоненияЦенПрихода = 0, 0.5, РеквизитыКонтрагента.ПроцентОтклоненияЦенПрихода));
		ПараметрыУпорядочивания.Вставить("КонтрагентРаботаетСОП", 			РеквизитыКонтрагента.РаботатьСОкномПоставщика);
	Иначе
		//Если контрагент не задан, то считаем что заданы  ПроцентОтклоненияЦенПрихода и КонтрагентРаботаетСОП
	КонецЕсли;

	//Сначала рассчитаем проценты отклонения, создадим таблицу ВТТаблицаЗаказовСОтклонениями
	УпорядочитьОстаткиЗаказовПоПравиламРазмещения_ДобавитьВТТаблицаЗаказовСОтклонениями(МенеджерВременныхТаблиц, ПараметрыУпорядочивания);
	 
	Если ПараметрыУпорядочивания.КонтрагентРаботаетСОП = Истина	Тогда
		//Упорядочить КонтрагентыРаботающиеСОП
		Запрос = УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаСОП(МенеджерВременныхТаблиц, ПараметрыУпорядочивания);	
	Иначе
		Запрос = УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаБезОП(МенеджерВременныхТаблиц, ПараметрыУпорядочивания);	
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	//Удалим табличку  ВТТаблицаЗаказовСОтклонениями
	ЗапросУдаление = Новый Запрос("УНИЧТОЖИТЬ ВТТаблицаЗаказовСОтклонениями");
	ЗапросУдаление.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;  
	ЗапросУдаление.Выполнить();
	
	Возврат Результат;
	
КонецФункции

//Передается и возвращается таблица значений, чтобы можно было вызывать с клиента
Функция УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляТестирования(ТаблицаЗаказов, ПараметрыУпорядочивания) Экспорт
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляТестирования";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ", ТаблицаЗаказов);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТТаблицаЗаказов.Номенклатура,
	               |	ВТТаблицаЗаказов.НоменклатураЗаказа,
	               |	ВТТаблицаЗаказов.Количество,
	               |	ВТТаблицаЗаказов.СтрокаЗаявки,
	               |	ВТТаблицаЗаказов.НоменклатураЗамена,
	               |	ВТТаблицаЗаказов.ЦенаВЗаказе,
	               |	ВТТаблицаЗаказов.СрокГарантированныйЗаказа,
	               |	ВТТаблицаЗаказов.ДатаЗаказа
	               |ПОМЕСТИТЬ ВТТаблицаЗаказов
	               |ИЗ
	               |	&ТЗ КАК ВТТаблицаЗаказов";
	
	Запрос.Выполнить(); 
	
	Результат = УпорядочитьОстаткиЗаказовПоПравиламРазмещения(Запрос.МенеджерВременныхТаблиц, ПараметрыУпорядочивания);
	
	Возврат Результат.Выгрузить();
	
КонецФункции

Процедура  УпорядочитьОстаткиЗаказовПоПравиламРазмещения_ДобавитьВТТаблицаЗаказовСОтклонениями(МенеджерВременныхТаблиц, ПараметрыУпорядочивания)
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикаСервер_УпорядочитьОстаткиЗаказовПоПравиламРазмещения_ДобавитьВТТаблицаЗаказовСОтклонениями";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);		
		Возврат;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ВТТаблицаЗаказов.Номенклатура,
	                      |	ВТТаблицаЗаказов.НоменклатураЗаказа,
	                      |	ВТТаблицаЗаказов.Количество,
	                      |	ВТТаблицаЗаказов.СтрокаЗаявки,
	                      |	ВТТаблицаЗаказов.НоменклатураЗамена,
	                      |	ВТТаблицаЗаказов.ЦенаВЗаказе,
	                      |	ВЫБОР
	                      |		КОГДА &Цена > 0
	                      |			ТОГДА (&Цена - ВТТаблицаЗаказов.ЦенаВЗаказе) / &Цена * 100
	                      |		ИНАЧЕ 100
	                      |	КОНЕЦ КАК ОтклонениеЦены,
	                      |	ВЫБОР
	                      |		КОГДА &Цена > 0
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА (&Цена - ВТТаблицаЗаказов.ЦенаВЗаказе) / &Цена * 100 < 0
	                      |						ТОГДА -((&Цена - ВТТаблицаЗаказов.ЦенаВЗаказе) / &Цена * 100)
	                      |					ИНАЧЕ (&Цена - ВТТаблицаЗаказов.ЦенаВЗаказе) / &Цена * 100
	                      |				КОНЕЦ
	                      |		ИНАЧЕ 100
	                      |	КОНЕЦ КАК ОтклонениеЦеныМодуль,
	                      |	ВТТаблицаЗаказов.СрокГарантированныйЗаказа КАК СрокГарантированныйЗаказа,
	                      |	ВТТаблицаЗаказов.ДатаЗаказа КАК ДатаЗаказа
	                      |ПОМЕСТИТЬ ВТТаблицаЗаказовСОтклонениями
	                      |ИЗ
	                      |	ВТТаблицаЗаказов КАК ВТТаблицаЗаказов
	                      |ГДЕ
	                      |	ВТТаблицаЗаказов.Номенклатура = &Номенклатура"	);
	
	Запрос.УстановитьПараметр("Номенклатура",		ПараметрыУпорядочивания.Номенклатура);
	Запрос.УстановитьПараметр("Цена",				ПараметрыУпорядочивания.Цена);
	Запрос.УстановитьПараметр("ТекущаяДата",		ТекущаяДата());
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
КонецПроцедуры

Функция  УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаСОП(МенеджерВременныхТаблиц, ПараметрыУпорядочивания)
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикаСервер_УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаСОП";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ВТТаблицаЗаказовСОтклонениями.Номенклатура,
	                      |	ВТТаблицаЗаказовСОтклонениями.НоменклатураЗаказа,
	                      |	ВТТаблицаЗаказовСОтклонениями.Количество,
	                      |	ВТТаблицаЗаказовСОтклонениями.СтрокаЗаявки,
	                      |	ВТТаблицаЗаказовСОтклонениями.НоменклатураЗамена,
	                      |	ВТТаблицаЗаказовСОтклонениями.ЦенаВЗаказе,
	                      |	ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены,
	                      |	ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль,
	                      |	ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа,
	                      |	ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |ИЗ
	                      |	ВТТаблицаЗаказовСОтклонениями КАК ВТТаблицаЗаказовСОтклонениями
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены
	                      |	КОНЕЦ");
	
	Запрос.УстановитьПараметр("ПроцентОтклоненияЦенПрихода",	ПараметрыУпорядочивания.ПроцентОтклоненияЦенПрихода);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Функция  УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаБезОП(МенеджерВременныхТаблиц, ПараметрыУпорядочивания)
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикаСервер_УпорядочитьОстаткиЗаказовПоПравиламРазмещенияДляКонтрагентаБезОП";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ВТТаблицаЗаказовСОтклонениями.Номенклатура,
	                      |	ВТТаблицаЗаказовСОтклонениями.НоменклатураЗаказа,
	                      |	ВТТаблицаЗаказовСОтклонениями.Количество,
	                      |	ВТТаблицаЗаказовСОтклонениями.СтрокаЗаявки,
	                      |	ВТТаблицаЗаказовСОтклонениями.НоменклатураЗамена,
	                      |	ВТТаблицаЗаказовСОтклонениями.ЦенаВЗаказе,
	                      |	ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены,
	                      |	ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль,
	                      |	ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа,
	                      |	ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |ИЗ
	                      |	ВТТаблицаЗаказовСОтклонениями КАК ВТТаблицаЗаказовСОтклонениями
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПорогОтклонения
	                      |			ТОГДА NULL
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПорогОтклонения
	                      |			ТОГДА NULL
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПорогОтклонения
	                      |			ТОГДА NULL
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПорогОтклонения
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.СрокГарантированныйЗаказа
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПорогОтклонения
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |		КОГДА ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦеныМодуль < &ПроцентОтклоненияЦенПрихода
	                      |			ТОГДА ВТТаблицаЗаказовСОтклонениями.ДатаЗаказа
	                      |		ИНАЧЕ ВТТаблицаЗаказовСОтклонениями.ОтклонениеЦены
	                      |	КОНЕЦ");
	
	Запрос.УстановитьПараметр("ПорогОтклонения",				ПараметрыУпорядочивания.ПорогОтклонения);
	Запрос.УстановитьПараметр("ПроцентОтклоненияЦенПрихода",	ПараметрыУпорядочивания.ПроцентОтклоненияЦенПрихода);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Функция ПорогОтклоненияЦенПриходаДляРазмещения() Экспорт
	
	ПорогОтклоненияЦенПриходаДляРазмещения = Константы.ПорогОтклоненияЦенПриходаДляРазмещения.Получить();
	
	Возврат ?(ПорогОтклоненияЦенПриходаДляРазмещения = 0, 5, ПорогОтклоненияЦенПриходаДляРазмещения);
	
	
КонецФункции

#КонецОбласти

Функция ПолучитьВыборкуЗаказовПоСтроке(МенеджерВременныхТаблиц,Номенклатура,Цена)
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_ПолучитьВыборкуЗаказовПоСтроке";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	///////////////////////////////////////////////////////////////////////////
	
	ЗапросВыборкиСтрока = новый Запрос("ВЫБРАТЬ
	|	ВТТаблицаЗаказов.Номенклатура,
	|	ВТТаблицаЗаказов.НоменклатураЗаказа,
	|	ВТТаблицаЗаказов.Количество,
	|	ВТТаблицаЗаказов.СтрокаЗаявки,
	|	ВТТаблицаЗаказов.НоменклатураЗамена,
	|	ВТТаблицаЗаказов.ЦенаВЗаказе,
	|	ВЫБОР
	|		КОГДА &Цена - ВТТаблицаЗаказов.ЦенаВЗаказе < 0
	|			ТОГДА -(&Цена - ВТТаблицаЗаказов.ЦенаВЗаказе)
	|		ИНАЧЕ &Цена - ВТТаблицаЗаказов.ЦенаВЗаказе
	|	КОНЕЦ КАК Отклонение,
	|	ВТТаблицаЗаказов.СтрокаЗаявки.СрокГарантированныйЗаказа КАК СрокГарантированныйЗаказа
	|ИЗ
	|	ВТТаблицаЗаказов КАК ВТТаблицаЗаказов
	|ГДЕ
	|	ВТТаблицаЗаказов.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Отклонение,
	|	СрокГарантированныйЗаказа"	);
	ЗапросВыборкиСтрока.УстановитьПараметр("Номенклатура",Номенклатура);
	ЗапросВыборкиСтрока.УстановитьПараметр("Цена",Цена);
	ЗапросВыборкиСтрока.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Возврат ЗапросВыборкиСтрока.Выполнить().Выбрать();
	
	
	
КонецФункции	

Процедура УстановкаБлокировкиЗаказовПокупателя(ТаблицаРазмещения) Экспорт
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_УстановкаБлокировкиЗаказовПокупателя";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	Если  ТранзакцияАктивна() тогда 
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ЗаказыПоставщикам");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ТаблицаРазмещения;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтрокаЗаявки", "СтрокаЗаявки");		
		БлокировкаДанных.Заблокировать();
	КонецЕсли;	
КонецПроцедуры	

Функция СтрокаЗаказаНеКорректная(ВыборкаНоменклатуры,СтрокаЗаказа,СтруктураПараметров,ОшибкиРазмещения = неопределено, СообщениеОшибки = "")
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_СтрокаЗаказаКорректная";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	////////////////////////////////////////////////	
	
	Отказ = Ложь;
	
	Если СтрокаЗаказа.Количество <= 0  тогда
		Возврат Истина;
	КонецЕсли;	
	
	Если не СтруктураПараметров.МожноПровести тогда 
		
		
		ОтклонениеЦены =  Окр((ВыборкаНоменклатуры.Цена - СтрокаЗаказа.ЦенаВЗаказе) / ВыборкаНоменклатуры.Цена * 100, 2);	
		Если ОтклонениеЦены > СтруктураПараметров.ПроцентОтклоненияЦенПрихода Тогда 
			// НП 28.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
			//СообщениеОшибки = "Цена в "+СтрокаЗаказа.СтрокаЗаявки+"("+СтрокаЗаказа.Номенклатура.Артикул+") не корректная. Было заказано по "
			//+ Строка(СтрокаЗаказа.ЦенаВЗаказе)+ " , а пришло по "+Строка(ВыборкаНоменклатуры.Цена)+ ". Процент отклонения составил "+Строка(ОтклонениеЦены)+"%.";
			//ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(ОшибкиРазмещения,,СообщениеОшибки,,ВыборкаНоменклатуры.НомерСтроки);
			СообщениеОшибки = "**********"+Символы.ПС+"Строка №"+ВыборкаНоменклатуры.НомерСтроки+", Артикул "+СтрокаЗаказа.Номенклатура.Артикул+Символы.ПС+
			"В заказе цена "+Строка(СтрокаЗаказа.ЦенаВЗаказе)+Символы.ПС+
			"В ПТУ цена "+Строка(ВыборкаНоменклатуры.Цена)+Символы.ПС+
			"Отклонение "+Строка(ОтклонениеЦены)+"%";
			// КП 28.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
			Отказ = Истина;
		Конецесли;	
		
		
	КонецЕсли;
	
	Возврат Отказ;	
	
КонецФункции

Процедура ДобавитьСтрокуРазмещениявТаблицу(Таблица,Номенклатура,СтрокаЗаявки,СтрокаПрихода,Количество,НомерСтроки = Ложь, СообщениеОшибкиРазмещения = "")
	НовСтрока = Таблица.Добавить();
	НовСтрока.Номенклатура = Номенклатура;
	Новстрока.СтрокаЗаявки = СтрокаЗаявки;
	НовСтрока.Количество = Количество;	
	НовСтрока.СтрокаПрихода = СтрокаПрихода;
	НовСтрока.НомерСтроки = НомерСтроки;
	НовСтрока.СообщениеОшибкиРазмещения = СообщениеОшибкиРазмещения;
	//НовСтрока.ПолностьюРазмещен = ПолностьюРазмещен;
КонецПроцедуры	

Функция ТексЗапросаРазмещения_ПоступлениеТоваровУслуг()
	
	лКлючАлгоритма = "ОбщийМодуль_ЗаказыПоставщикамСервер_ТексЗапросаРазмещения_ПоступлениеТоваровУслуг";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	////////////////////////////////////////////////
	
	Если ЭтоАктивнаяЗадачаJirа(Справочники.ЗадачиJira.XX2605) Тогда
		
		//ХудинВВ XX-2605 31052019 Смотрим остатки строк по заявкам
		//Костыль, которого в норме быть не должно
		
		//Т.к. по одной заявке у нас всегда один заказ, то можем сделать контроль в запросе
		ТекстЗапроса =  "ВЫБРАТЬ
		                |	ПоступлениеТоваровУслугТовары.Номенклатура,
		                |	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
		                |	ПоступлениеТоваровУслугТовары.СтрокаПрихода,
		                |	ПоступлениеТоваровУслугТовары.Цена,
		                |	ПоступлениеТоваровУслугТовары.НомерСтроки
		                |ПОМЕСТИТЬ ВТТоваров
		                |ИЗ
		                |	&ТаблицаТоваров КАК ПоступлениеТоваровУслугТовары
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА &ОтборНоменклатуры
		                |				ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура В (&МассивОтбораНоменклатуры)
		                |			ИНАЧЕ ИСТИНА
		                |		КОНЕЦ
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ВложенныйЗапрос.Номенклатура,
		                |	МИНИМУМ(ВложенныйЗапрос.Замена) КАК Замена,
		                |	МИНИМУМ(ВложенныйЗапрос.НоменклатураЗамена) КАК НоменклатураЗамена
		                |ПОМЕСТИТЬ ВТТоварыСЗаменами
		                |ИЗ
		                |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |		ВозможныеЗаменыНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		                |		ИСТИНА КАК Замена,
		                |		ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена КАК НоменклатураЗамена
		                |	ИЗ
		                |		РегистрСведений.ВозможныеЗаменыНоменклатуры.СрезПоследних(
		                |				&МоментВремени,
		                |				НоменклатураЗамена В
		                |						(ВЫБРАТЬ
		                |							ВТТоваров.Номенклатура КАК Номенклатура
		                |						ИЗ
		                |							ВТТоваров КАК ВТТоваров)
		                |					И НЕ Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)) КАК ВозможныеЗаменыНоменклатурыСрезПоследних
		                |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоваров КАК ВТТоваров
		                |			ПО ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена = ВТТоваров.Номенклатура
		                |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
		                |			ПО ВозможныеЗаменыНоменклатурыСрезПоследних.СтрокаЗаявки = ЗаказыПоставщикамОстатки.СтрокаЗаявки
		                |				И (ЗаказыПоставщикамОстатки.КоличествоОстаток > 0)
		                |	
		                |	ОБЪЕДИНИТЬ ВСЕ
		                |	
		                |	ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |		ВТТоваров.Номенклатура,
		                |		ЛОЖЬ,
		                |		ЗНАЧЕНИЕ(справочник.Номенклатура.ПустаяСсылка)
		                |	ИЗ
		                |		ВТТоваров КАК ВТТоваров) КАК ВложенныйЗапрос
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ВложенныйЗапрос.Номенклатура
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ВЫБОР
		                |		КОГДА ВТТоварыСЗаменами.Замена
		                |			ТОГДА ВТТоварыСЗаменами.НоменклатураЗамена
		                |		ИНАЧЕ ВТТоварыСЗаменами.Номенклатура
		                |	КОНЕЦ КАК Номенклатура,
		                |	ЗаказыПоставщикамОстатки.Номенклатура КАК НоменклатураЗаказа,
		                |	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК Количество,
		                |	ЕСТЬNULL(РазмещенияСтрокЗаказовОстатки.КоличествоОстаток, 0) КАК КоличествоРазмещено,
		                |	ЗаказыПоставщикамОстатки.СтрокаЗаявки,
		                |	ВТТоварыСЗаменами.НоменклатураЗамена,
		                |	ЗаказыПоставщикамОстатки.СуммаРеглОстаток / ЗаказыПоставщикамОстатки.КоличествоОстаток КАК ЦенаВЗаказе
		                |ПОМЕСТИТЬ ВТТаблицаЗаказовБезУчетаЗаявок
		                |ИЗ
		                |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		                |			&МоментВремени,
		                |			ТорговаяТочка = &ТорговаяТочка
		                |				И Склад = &Склад
		                |				И ВЫБОР
		                |					КОГДА &КонтролироватьДоговор
		                |						ТОГДА ДоговорКонтрагента = &ДоговорКонтрагента
		                |					ИНАЧЕ ИСТИНА
		                |				КОНЕЦ
		                |				И Номенклатура В
		                |					(ВЫБРАТЬ
		                |						ВТТоварыСЗаменами.Номенклатура КАК Номенклатура
		                |					ИЗ
		                |						ВТТоварыСЗаменами КАК ВТТоварыСЗаменами)
		                |				И ВЫБОР
		                |					КОГДА &ЗаказРавенПриходу
		                |						ТОГДА СтрокаЗаявки.Заказ = &ЗаказРаспределения
		                |					ИНАЧЕ ИСТИНА
		                |				КОНЕЦ) КАК ЗаказыПоставщикамОстатки
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТТоварыСЗаменами КАК ВТТоварыСЗаменами
		                |		ПО ЗаказыПоставщикамОстатки.Номенклатура = ВТТоварыСЗаменами.Номенклатура
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Остатки КАК РазмещенияСтрокЗаказовОстатки
		                |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = РазмещенияСтрокЗаказовОстатки.СтрокаЗаявки
		                |			И (РазмещенияСтрокЗаказовОстатки.КоличествоОстаток > 0)
		                |ГДЕ
		                |	ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещенияСтрокЗаказовОстатки.КоличествоОстаток, 0) > 0
		                |	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ЗаявкиПокупателейОстатки.СтрокаЗаявки,
		                |	ЗаявкиПокупателейОстатки.КоличествоОстаток КАК Количество
		                |ПОМЕСТИТЬ втОстаткиПоЗаявкам
		                |ИЗ
		                |	РегистрНакопления.ЗаявкиПокупателей.Остатки(
		                |			&МоментВремени,
		                |			СтрокаЗаявки В
		                |				(ВЫБРАТЬ
		                |					ВТТаблицаЗаказовБезУчетаЗаявок.СтрокаЗаявки
		                |				ИЗ
		                |					ВТТаблицаЗаказовБезУчетаЗаявок)) КАК ЗаявкиПокупателейОстатки
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ВТТаблицаЗаказовБезУчетаЗаявок.Номенклатура,
		                |	ВТТаблицаЗаказовБезУчетаЗаявок.НоменклатураЗаказа,
		                |	ВЫБОР
		                |		КОГДА isnull(втОстаткиПоЗаявкам.Количество,0) < ВТТаблицаЗаказовБезУчетаЗаявок.Количество
		                |			ТОГДА isnull(втОстаткиПоЗаявкам.Количество,0) - ВТТаблицаЗаказовБезУчетаЗаявок.КоличествоРазмещено
		                |		ИНАЧЕ ВТТаблицаЗаказовБезУчетаЗаявок.Количество - ВТТаблицаЗаказовБезУчетаЗаявок.КоличествоРазмещено
		                |	КОНЕЦ КАК Количество,
		                |	ВТТаблицаЗаказовБезУчетаЗаявок.СтрокаЗаявки,
		                |	ВТТаблицаЗаказовБезУчетаЗаявок.НоменклатураЗамена,
		                |	ВТТаблицаЗаказовБезУчетаЗаявок.ЦенаВЗаказе,
						|	ВТТаблицаЗаказовБезУчетаЗаявок.СтрокаЗаявки.СрокГарантированныйЗаказа КАК СрокГарантированныйЗаказа,
						|	ВТТаблицаЗаказовБезУчетаЗаявок.СтрокаЗаявки.Заказ.Дата КАК ДатаЗаказа
		                |ПОМЕСТИТЬ ВТТаблицаЗаказов
		                |ИЗ
		                |	ВТТаблицаЗаказовБезУчетаЗаявок КАК ВТТаблицаЗаказовБезУчетаЗаявок
		                |		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоЗаявкам КАК втОстаткиПоЗаявкам
		                |		ПО (втОстаткиПоЗаявкам.СтрокаЗаявки = ВТТаблицаЗаказовБезУчетаЗаявок.СтрокаЗаявки)
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА isnull(втОстаткиПоЗаявкам.Количество,0) < ВТТаблицаЗаказовБезУчетаЗаявок.Количество
		                |				ТОГДА isnull(втОстаткиПоЗаявкам.Количество,0) - ВТТаблицаЗаказовБезУчетаЗаявок.КоличествоРазмещено
		                |			ИНАЧЕ ВТТаблицаЗаказовБезУчетаЗаявок.Количество - ВТТаблицаЗаказовБезУчетаЗаявок.КоличествоРазмещено
		                |		КОНЕЦ > 0
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ВТТаблицаТоваров.Номенклатура,
		                |	ВТТаблицаТоваров.НоменклатураЗаказа,
		                |	ВТТаблицаТоваров.Количество,
		                |	ВТТаблицаТоваров.СтрокаЗаявки,
		                |	ВТТаблицаТоваров.НоменклатураЗамена,
		                |	ВТТаблицаТоваров.ЦенаВЗаказе,
						|	ВТТаблицаТоваров.СрокГарантированныйЗаказа,
						|	ВТТаблицаТоваров.ДатаЗаказа
		                |ИЗ
		                |	ВТТаблицаЗаказов КАК ВТТаблицаТоваров
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ВТТоваров.Номенклатура,
		                |	СУММА(ВТТоваров.Количество) КАК Количество,
		                |	ВТТоваров.СтрокаПрихода,
		                |	ВТТоваров.Цена КАК Цена,
		                |	ВТТоваров.НомерСтроки
		                |ИЗ
		                |	ВТТоваров КАК ВТТоваров
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ВТТоваров.Номенклатура,
		                |	ВТТоваров.СтрокаПрихода,
		                |	ВТТоваров.Цена,
		                |	ВТТоваров.НомерСтроки
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	Цена
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |УНИЧТОЖИТЬ ВТТоваров
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |УНИЧТОЖИТЬ ВТТоварыСЗаменами";	
		
	Иначе
		
		ТекстЗапроса =  "ВЫБРАТЬ
		|	ПоступлениеТоваровУслугТовары.Номенклатура,
		|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровУслугТовары.СтрокаПрихода,
		|	ПоступлениеТоваровУслугТовары.Цена,
		|	ПоступлениеТоваровУслугТовары.НомерСтроки
		|ПОМЕСТИТЬ ВТТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ПоступлениеТоваровУслугТовары
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ОтборНоменклатуры
		|				ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура В (&МассивОтбораНоменклатуры)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Номенклатура,
		|	МИНИМУМ(ВложенныйЗапрос.Замена) КАК Замена,
		|	МИНИМУМ(ВложенныйЗапрос.НоменклатураЗамена) КАК НоменклатураЗамена
		|ПОМЕСТИТЬ ВТТоварыСЗаменами
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ВозможныеЗаменыНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|		ИСТИНА КАК Замена,
		|		ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена КАК НоменклатураЗамена
		|	ИЗ
		|		РегистрСведений.ВозможныеЗаменыНоменклатуры.СрезПоследних(
		|				&МоментВремени,
		|				НоменклатураЗамена В
		|						(ВЫБРАТЬ
		|							ВТТоваров.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТТоваров КАК ВТТоваров)
		|					И НЕ Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)) КАК ВозможныеЗаменыНоменклатурыСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоваров КАК ВТТоваров
		|			ПО ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена = ВТТоваров.Номенклатура
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
		|			ПО ВозможныеЗаменыНоменклатурыСрезПоследних.СтрокаЗаявки = ЗаказыПоставщикамОстатки.СтрокаЗаявки
		|				И (ЗаказыПоставщикамОстатки.КоличествоОстаток > 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ВТТоваров.Номенклатура,
		|		ЛОЖЬ,
		|		ЗНАЧЕНИЕ(справочник.Номенклатура.ПустаяСсылка)
		|	ИЗ
		|		ВТТоваров КАК ВТТоваров) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТТоварыСЗаменами.Замена
		|			ТОГДА ВТТоварыСЗаменами.НоменклатураЗамена
		|		ИНАЧЕ ВТТоварыСЗаменами.Номенклатура
		|	КОНЕЦ КАК Номенклатура,
		|	ЗаказыПоставщикамОстатки.Номенклатура КАК НоменклатураЗаказа,
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещенияСтрокЗаказовОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ЗаказыПоставщикамОстатки.СтрокаЗаявки,
		|	ВТТоварыСЗаменами.НоменклатураЗамена,
		|	ЗаказыПоставщикамОстатки.СуммаРеглОстаток / ЗаказыПоставщикамОстатки.КоличествоОстаток КАК ЦенаВЗаказе,
		|	ЗаказыПоставщикамОстатки.СтрокаЗаявки.СрокГарантированныйЗаказа КАК СрокГарантированныйЗаказа,
		|	ЗаказыПоставщикамОстатки.СтрокаЗаявки.Заказ.Дата КАК ДатаЗаказа
		|ПОМЕСТИТЬ ВТТаблицаЗаказов
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|			&МоментВремени,
		|			ТорговаяТочка = &ТорговаяТочка
		|				И Склад = &Склад
		|				И ВЫБОР
		|					КОГДА &КонтролироватьДоговор
		|						ТОГДА ДоговорКонтрагента = &ДоговорКонтрагента
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТТоварыСЗаменами.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТТоварыСЗаменами КАК ВТТоварыСЗаменами)
		|				И ВЫБОР
		|					КОГДА &ЗаказРавенПриходу
		|						ТОГДА СтрокаЗаявки.Заказ = &ЗаказРаспределения
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗаказыПоставщикамОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТоварыСЗаменами КАК ВТТоварыСЗаменами
		|		ПО ЗаказыПоставщикамОстатки.Номенклатура = ВТТоварыСЗаменами.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Остатки КАК РазмещенияСтрокЗаказовОстатки
		|		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = РазмещенияСтрокЗаказовОстатки.СтрокаЗаявки
		|			И (РазмещенияСтрокЗаказовОстатки.КоличествоОстаток > 0)
		|ГДЕ
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(РазмещенияСтрокЗаказовОстатки.КоличествоОстаток, 0) > 0
		|	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТаблицаТоваров.Номенклатура,
		|	ВТТаблицаТоваров.НоменклатураЗаказа,
		|	ВТТаблицаТоваров.Количество,
		|	ВТТаблицаТоваров.СтрокаЗаявки,
		|	ВТТаблицаТоваров.НоменклатураЗамена,
		|	ВТТаблицаТоваров.ЦенаВЗаказе,
		|	ВТТаблицаТоваров.СрокГарантированныйЗаказа,
		|	ВТТаблицаТоваров.ДатаЗаказа
		|ИЗ
		|	ВТТаблицаЗаказов КАК ВТТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТоваров.Номенклатура,
		|	СУММА(ВТТоваров.Количество) КАК Количество,
		|	ВТТоваров.СтрокаПрихода,
		|	ВТТоваров.Цена КАК Цена,
		|	ВТТоваров.НомерСтроки
		|ИЗ
		|	ВТТоваров КАК ВТТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТТоваров.Номенклатура,
		|	ВТТоваров.СтрокаПрихода,
		|	ВТТоваров.Цена,
		|	ВТТоваров.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТТоварыСЗаменами";	
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецОбласти



#Область Прочее

Функция ПолучитьПустуюТаблицуРазмещения()
	ТаблицаРазмещения = новый ТаблицаЗначений;
	ТаблицаРазмещения.Колонки.Добавить("Номенклатура");
	ТаблицаРазмещения.Колонки.Добавить("СтрокаПрихода");     
	ТаблицаРазмещения.Колонки.Добавить("СтрокаЗаявки");
	ТаблицаРазмещения.Колонки.Добавить("Количество",ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,3));
	ТаблицаРазмещения.Колонки.Добавить("ПолностьюРазмещен",новый ОписаниеТипов("Булево"));
	//#XX-2240 Kalinin V.A. ( 2019-04-11 )  /*
	ТаблицаРазмещения.Колонки.Добавить("НомерСтроки",ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10,0));
	// НП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
	ТаблицаРазмещения.Колонки.Добавить("СообщениеОшибкиРазмещения",ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(1000));
	// КП 29.05.2019 Горохов П.Е. http://jira.part-kom.ru/browse/XX-1443
	
	возврат   ТаблицаРазмещения;
	
КонецФункции	

Функция ПараметрыРазмещенияПоУмолчанию() Экспорт
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("СоздаватьВиртуальныеСтроки",Ложь);
	ПараметрыВыполнения.Вставить("ЗаказРавенПриходу",Ложь);
	ПараметрыВыполнения.Вставить("ЗаказРаспределения",Документы.ЗаказПоставщику.ПустаяСсылка());
	ПараметрыВыполнения.Вставить("ЗаписатьДокумент", Истина);
	ПараметрыВыполнения.Вставить("МассивОтбораНоменклатуры",новый Массив);
	ПараметрыВыполнения.Вставить("ОперативноеПроведение",Истина);		
	ПараметрыВыполнения.Вставить("МоментВремени",ТекущаяДата());
	ПараметрыВыполнения.Вставить("ПроцентОтклоненияЦенПрихода",ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ПроцентОтклоненияЦенПрихода"));	
	
	Возврат ПараметрыВыполнения
	
КонецФункции

Функция ДополнительныеПараметрыРазмещенияПоУмолчению()
	
	
КонецФункции

Функция ЭтоСкладНовойСхемы(Склад) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_Временно_СкладыНовойСхемыЗакрытияЗаказов.Склад
	|ИЗ
	|	РегистрСведений._Временно_СкладыНовойСхемыЗакрытияЗаказов КАК _Временно_СкладыНовойСхемыЗакрытияЗаказов
	|ГДЕ
	|	_Временно_СкладыНовойСхемыЗакрытияЗаказов.Склад = &Склад";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Возврат Не РезультатЗапроса.Пустой();
	
	
КонецФункции

Функция ПоПоступлениюБылиРаспределения(ПоступлениеСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РазмещенияСтрокЗаказов.Регистратор
	|ИЗ
	|	РегистрНакопления.РазмещенияСтрокЗаказов КАК РазмещенияСтрокЗаказов
	|ГДЕ
	|	РазмещенияСтрокЗаказов.Регистратор = &ПоступлениеСсылка";
	
	Запрос.УстановитьПараметр("ПоступлениеСсылка", ПоступлениеСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	возврат не РезультатЗапроса.Пустой();
	
	
КонецФункции	


#КонецОбласти


#Область  СистемныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеГТДВТабличнойЧасти(ДокументОбъект,ТабличнаяЧасть,ТекстОшибки,Отказ= Ложь)  Экспорт 
	ЗапросПроверки  = новый запрос;
	ЗапросПроверки.Текст = "ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.НомерГТД,
	|	ТабличнаяЧасть.СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабличнаяЧасть.НомерСтроки,
	|	ВТ_ТабличнаяЧасть.СтранаПроисхождения,
	|	ВТ_ТабличнаяЧасть.НомерГТД
	|ИЗ
	|	ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|ГДЕ
	|	НЕ ВТ_ТабличнаяЧасть.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.Пустаяссылка)
	|	И ВТ_ТабличнаяЧасть.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.Пустаяссылка)"  ;
	ЗапросПроверки.УстановитьПараметр("ТабличнаяЧасть",ТабличнаяЧасть.Выгрузить(, "НомерГТД, СтранаПроисхождения, НомерСтроки"));
	Результат  =  ЗапросПроверки.Выполнить();
	Если не Результат.Пустой() тогда 
		ВыборкаСтрок = Результат.Выбрать();
		Пока ВыборкаСтрок.Следующий() цикл			
			
			ТекстОшибки = СтрШаблон(ТекстОшибки, ВыборкаСтрок.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ВыборкаСтрок.НомерСтроки, "НомерГТД"),
			,
			Отказ);
	
		КонецЦикла;
	КонецЕсли;


КонецПроцедуры	
#КонецОбласти