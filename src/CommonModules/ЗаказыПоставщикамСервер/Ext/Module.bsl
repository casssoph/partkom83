

#Область Размещение_заказов_поставщику_в_ПТУ

// Процедура - Разместить документ поступления по заказам . Размещает и проводит оперативно Документ поступления
// Параметры:
//  ДокументПоступление	 - ДокументСсылка.ПоступлениеТоваров,ДокументОбъект.ПоступлениеТоваров	 -  Документ размещения
//  ПараметрыВыолнения	 - Структура - Параметры выполнения, если не заполнено берутся параметры по умолчанию :
//  СоздаватьВиртуальныеСтроки     - Булево- Если Равно истина то на все не распределившееся число будут созданы вирт строки
//ЗаказРавенПриходу  			 - Булево- Если равно истине то все Позиции будутПроставлены к ОТказу
//ЗаказРаспределения            - ССылка - Заказ распределения, если заказ равен приходу, в остальных случаях не надо заполнять
//СписокЗаказовРаспределения    - Массив - Если заполнен, ПТУ будет распределена по данным заказам
//МассивОтбораНоменклатуры	      - Массив-  Если заполнено то будет произведен отбор
//  ДополнительныеПараметры		 - Структура - Дополнительные параметры выполнения	 
Процедура РазместитьДокументПоступленияПоЗаказам(ДокументПоступление,ПараметрыВыполнения = неопределено,ДополнительныеПараметры = Неопределено) Экспорт 
	
	Если ТипЗнч(ДокументПоступление) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") тогда 
		ДокументПоступление  = ДокументПоступление.ПолучитьОбъект;
	ИначеЕсли Не ТипЗнч(ДокументПоступление) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") тогда 
		Возврат ;
	КонецЕсли;	
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);	
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ДокументПоступление);
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровЗаполнения(ПараметрыВыполнения,ДокументПоступление,ДополнительныеПараметры);
	
	СтруктураТаблиц =  ПолучитьСтруктуруТаблицРазмещения(ДокументПоступление,СтруктураПараметров);
	
	ОбновитьТаблицуРазмещения(ДокументПоступление,СтруктураТаблиц.ТаблицаРазмещения,СтруктураПараметров);
	
	СоздатьВиртуальныеСтроки(ДокументПоступление,СтруктураТаблиц.ТаблицаНеразмещенного,СтруктураПараметров);
	
	ПроставитьОтказыПоНеразмещенному(ДокументПоступление,СтруктураТаблиц.ТаблицаНеразмещенного,СтруктураПараметров);
	
	ДокументПоступление.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
	
	ЗафиксироватьТранзакцию();
	

КонецПроцедуры	

Процедура ОбновитьТаблицуРазмещения(ДокументПоступление,ТаблицаРазмещения,СтруктураПараметров)
	ТаблицаДокумента = ДокументПоступление.РазмещениеСтрокПрихода;
	Если СтруктураПараметров.ОтборНоменклатуры тогда 
		МассивНоменклатуры = СтруктураПараметров.МассивОтбораНоменклатуры;
		Для каждого ЭлементНоменклатуры из МассивНоменклатуры цикл 
			
			НайдСтроки = ТаблицаДокумента.НайтиСтроки(Новый Структура("Номенклатура",ЭлементНоменклатуры));
			Для каждого НайденаяСтрока из НайдСтроки цикл 
				ТаблицаДокумента.Удалить(НайденаяСтрока);
			КонецЦикла;	
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРазмещения,ТаблицаДокумента);
	Иначе 
		ТаблицаДокумента.Очиствить();
		ТаблицаДокумента.загрузить(ТаблицаРазмещения);	
	КонецЕсли;	
	
КонецПроцедуры	

Процедура СоздатьВиртуальныеСтроки(ДокументПоступление,ТаблицаНеразмещенного,СтруктураПараметров)
	Если СтруктураПараметров.СоздаватьВиртуальныеСтроки и ТаблицаНеразмещенного.количество() тогда 
		Для каждого СтрокаНеразмещенного из ТаблицаНеразмещенного цикл 
			СтрокаВиртуальная = ДокументПоступление.РазмещениеСтрокПрихода.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВиртуальная,СтрокаНеразмещенного);
			СтрокаВиртуальная = ОбщегоНазначенияКлиентСервер.ВиртуальнаяСтрокаЗаявки();
		КонецЦикла;			
	КонецЕсли;	
КонецПроцедуры	

Процедура ПроставитьОтказыПоНеразмещенному(ДокументПоступление,ТаблицаНеразмещенного,СтруктураПараметров)
	
	Если СтруктураПараметров.ЗаказРавенПриходу и ТаблицаНеразмещенного.Количество() тогда 
		ДокументПоступление.ДополнительныеСвойства.Вставить("ПроставитьПолныйОтказВЗаказе",СтруктураПараметров.ЗаказРаспределения);		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьСтруктуруПараметровЗаполнения(Знач СтруктураПараметров,ДокументПоступление,ДополнительныеПараметры)
	
	Если СтруктураПараметров = Неопределено тогда 
		СтруктураПараметров = ПараметрыВыполненияПоУмолчанию();
	иначе 
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПараметров,ПараметрыВыполненияПоУмолчанию(),Ложь);
	КонецЕсли;	
	
	Если не ДополнительныеПараметры = Неопределено тогда	
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПараметров,ПараметрыВыполненияПоУмолчанию(),Ложь);
	КонецЕсли;		
	
	СтрокаРеквизитовДокумента = "Контрагент,Склад,ДоговорКонтрагента,ПоставщикЗаказовДругой,ТорговаяТочка";
	СтруктураРеквизитовДокумента = новый Структура(СтрокаРеквизитовДокумента); 	
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Документы,СтрокаРеквизитовДокумента);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПараметров,СтруктураРеквизитовДокумента,Ложь);
	
	СтруктураПараметров.вставить("ОтборНоменклатуры",?(СтруктураПараметров.МассивОтбораНоменклатуры.Количество()>0,Истина,Ложь));
	
	СтруктураПараметров.вставить("РаспределятьПоСпискуЗаказов",?(не СтруктураПараметров.ЗаказРавенПриходу 
	и СтруктураПараметров.СписокЗаказовРаспределения>0,Истина,Ложь));
	
	СтруктураПараметров.Вставить("МоментВремени",ТекущаяДата());
	
	Возврат СтруктураПараметров
	
КонецФункции	

#КонецОбласти

#Область Формирование_заказов
Функция ПолучитьСкладЗаказаПоПрайсу(ПрайсПоставщика,СкладВЗаявке) Экспорт 	
	
	Если РаботаСоСтатусамиДокументовПовтИсп.ЭтоПрайсПополнениеVMI(ПрайсПоставщика) тогда 
		Возврат СкладВЗаявке		
	ИначеЕсли РаботаСоСтатусамиДокументовПовтИсп.ЭтоКроссИлиПрайсПополнениеСток(ПрайсПоставщика) тогда 	
			ВладелецПрайса =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПрайсПоставщика,"Владелец");
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецПрайса,"ОтгружаетсяВНесколькихГородах") тогда 
				Возврат СкладВЗаявке
			иначе 
				СкладЗамена =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецПрайса, "ГородПоставки.СкладЗамена");
				
				Если ЗначениеЗаполнено(СкладЗамена) тогда 
					Возврат СкладЗамена
				Иначе
					Возврат СкладВЗаявке
				КонецЕсли;				
			КонецЕсли;					
	КонецЕсли;		
	
	Возврат СкладВЗаявке
	

КонецФункции	

#КонецОбласти



#Область Запросы_к_Данным_Размещения

Функция ПолучитьСтруктуруТаблицРазмещения(ДокументПоступление,СтруктураПараметров)
	ТаблицаРазмещения = ПолучитьПустуюТаблицуРазмещения();
	таблицаНеРазмещенного = ПолучитьПустуюТаблицуРазмещения();
	
	ЗапросПоОстаткам = Новый Запрос;
	ЗапросПоОстаткам.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	|	ПоступлениеТоваровУслугТовары.СтрокаПрихода
	|ПОМЕСТИТЬ ВТТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтборНоменклатуры
	|				ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура В (&МассивНоменклатуры)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозможныеЗаменыНоменклатурыСрезПоследних.Номенклатура,
	|	ИСТИНА КАК Замена,
	|	ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена
	|ПОМЕСТИТЬ ВТТоварыСЗаменами
	|ИЗ
	|	РегистрСведений.ВозможныеЗаменыНоменклатуры.СрезПоследних(
	|			&МоментВремени,
	|			НоменклатураЗамена В
	|				(ВЫБРАТЬ
	|					ВТТоваров.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТТоваров КАК ВТТоваров)) КАК ВозможныеЗаменыНоменклатурыСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТоваров.Номенклатура,
	|	ЛОЖЬ,
	|	ВТТоваров.Номенклатура
	|ИЗ
	|	ВТТоваров КАК ВТТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.Номенклатура КАК НоменклатураЗаказа,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток - РазмещенияСтрокЗаказовОстатки.КоличествоОстаток КАК Количество,
	|	ЗаказыПоставщикамОстатки.СтрокаЗаявки,
	|	ЕСТЬNULL(ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена, ЗаказыПоставщикамОстатки.Номенклатура) КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			&МоментВремени,
	|			ТорговаяТочка = &ТорговаяТочка
	|				И Склад = &Склад
	|				И ВЫБОР
	|					КОГДА &КонтролироватьДоговор
	|						ТОГДА ДоговорКонтрагента = &ДоговорКонтрагента
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТТоварыСЗаменами.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ВТТоварыСЗаменами КАК ВТТоварыСЗаменами)
	|				И ВЫБОР
	|					КОГДА &ЗаказРавенПоступлению
	|						ТОГДА СтрокаЗаявки.Заказ = &Заказ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &РаспределятьПоСпискуЗаказов
	|						ТОГДА СтрокаЗаявки.Заказ В (&МассивЗаказовРаспределения)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗаказыПоставщикамОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТоварыСЗаменами КАК ВозможныеЗаменыНоменклатурыСрезПоследних
	|		ПО ЗаказыПоставщикамОстатки.Номенклатура = ВозможныеЗаменыНоменклатурыСрезПоследних.НоменклатураЗамена
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещенияСтрокЗаказов.Остатки КАК РазмещенияСтрокЗаказовОстатки
	|		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = РазмещенияСтрокЗаказовОстатки.СтрокаЗаявки
	|			И (РазмещенияСтрокЗаказовОстатки.КоличествоОстаток > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОстатки.СтрокаЗаявки.СрокГарантированныйЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоваров.Номенклатура,
	|	СУММА(ВТТоваров.Количество) КАК Количество,
	|	ВТТоваров.СтрокаПрихода
	|ИЗ
	|	ВТТоваров КАК ВТТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоваров.Номенклатура,
	|	ВТТоваров.СтрокаПрихода";
	
	ЗаполнитьЗначенияСвойств(ЗапросПоОстаткам.Параметры,СтруктураПараметров);
	
	ЗапросПоОстаткам.установитьПараметр("ТаблицаТоваров",ДокументПоступление.Выгрузить());	
	
	
	РезультатЗапроса = ЗапросПоОстаткам.ВыполнитьПакет();
	
	ВыборкаНоменклатуры = РезультатЗапроса[3].Выбрать();
	ТаблицаЗаказов = РезультатЗапроса[2].Выгрузить();	
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		НоменклатураПоиска = ВыборкаНоменклатуры.Номенклатура;
		КоличествоКРазмещению  = ВыборкаНоменклатуры.Количество;
		НайдСтрокиЗаказов = ТаблицаЗаказов.найтиСтроки(Новый структура("Номенклатура",НоменклатураПоиска));
		
		Для каждого СтрокаЗаказа из  НайдСтрокиЗаказов цикл 
			Если КоличествоКРазмещению = 0 тогда 
				Прервать;
			КонецЕсли;	 
			
			Если  КоличествоКРазмещению >= СтрокаЗаказа.Количество тогда 
				ДобавитьСтрокуРазмещениявТаблицу(ТаблицаРазмещения,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,СтрокаЗаказа.Количество);
				КоличествоКРазмещению = КоличествоКРазмещению - СтрокаЗаказа.Количество;	 
			Иначе 
				ДобавитьСтрокуРазмещениявТаблицу(ТаблицаРазмещения,НоменклатураПоиска,СтрокаЗаказа.СтрокаЗаявки,КоличествоКРазмещению);
				КоличествоКРазмещению = 0;	  	 
			КонецЕсли;	 
		КонецЦикла;
		
		
		Если КоличествоКРазмещению>0 тогда 
			ДобавитьСтрокуРазмещениявТаблицу(ТаблицаНеРазмещенного,НоменклатураПоиска,,КоличествоКРазмещению);
		КонецЕсли;	
		
		
		
	КонецЦикла;
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаРазмещения",ТаблицаРазмещения);
	СтруктураТаблиц.Вставить("ТаблицаНеРазмещенного",ТаблицаНеРазмещенного);
	
	Возврат СтруктураТаблиц;
	
КонецФункции	

Процедура ДобавитьСтрокуРазмещениявТаблицу(Таблица,Номенклатура,СтрокаЗаявки,Количество)
	НовСтрока = Таблица.Добавить;
	НовСтрока.Номенклатура = Номенклатура;
	Новстрока.СтрокаЗаявки = СтрокаЗаявки;
	НовСтрока.Количество = Количество;	
КонецПроцедуры	

#КонецОбласти


#Область Прочее
Функция ПолучитьПустуюТаблицуРазмещения()
	ТаблицаРазмещения = новый ТаблицаЗначений;
	ТаблицаРазмещения.Колонки.Добавить("Номенклатура");
	ТаблицаРазмещения.Колонки.Добавить("СтрокаПрихода");     
	ТаблицаРазмещения.Колонки.Добавить("СтрокаЗаявки");
	ТаблицаРазмещения.Колонки.Добавить("Количество",ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,3));
	
	
	
КонецФункции	

Функция ПараметрыВыполненияПоУмолчанию() Экспорт
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("СоздаватьВиртуальныеСтроки",Ложь);
	ПараметрыВыполнения.Вставить("ЗаказРавенПриходу",Ложь);
	ПараметрыВыполнения.Вставить("ЗаказРаспределения",Документы.ЗаказПоставщику.ПустаяСсылка());
	ПараметрыВыполнения.Вставить("СписокЗаказовРаспределения", новый массив);
	ПараметрыВыполнения.Вставить("МассивОтбораНоменклатуры",новый Массив);
	
	Возврат ПараметрыВыполнения
	
КонецФункции

Функция ДополнительныеПараметрыРазмещенияПоУмолчению()
	
	
КонецФункции
	

#КонецОбласти