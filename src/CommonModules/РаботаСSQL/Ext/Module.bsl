#Область Работа_SQL
Функция ВыполнитьЗапросSQL(ТекстЗапроса) Экспорт
	
	Попытка
		СоединениеSQL  = Новый COMОбъект("ADODB.Connection");
		КомандаSQL     = Новый COMОбъект("ADODB.Command");
		ВыборкаSQL     = Новый COMОбъект("ADODB.RecordSet");
		
		СоединениеSQL.ConnectionString = СтрокаСоединенияSQL();
		
		СоединениеSQL.ConnectionTimeout = 30;
		СоединениеSQL.CommandTimeout = 6000;
		
		СоединениеSQL.Open();
		КомандаSQL.ActiveConnection   = СоединениеSQL;
		КомандаSQL.CommandText = ТекстЗапроса;
		КомандаSQL.Execute();
		
		СоединениеSQL.Close();
		
		ОписаниеОшибки = "";
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;

	Возврат ОписаниеОшибки;
	
КонецФункции
Функция СтрокаСоединенияSQL() Экспорт
	
	СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы();
	Если СтрокаСоединенияИнформационнойБазы = "Srvr=""nng9-v-1c-06"";Ref=""partkom83_parfenov"";" Тогда
		Пользователь = "sa";
		Пароль = "Pa$$w0rd";
		База = "partkom83_parfenov";
		Сервер = "nng9-v-sq-06";
	ИначеЕсли СтрокаСоединенияИнформационнойБазы = "Srvr=""nng9-v-1c-07"";Ref=""partkom83"";" Тогда
		Пользователь = "partkom83";
		Пароль = "partkom83";
		База = "partkom83";
		Сервер = "nng9-v-sq-07";
	Иначе
		ВызватьИсключение("Неизвестная база");
	КонецЕсли;			
	
	Возврат  "driver={SQL Server};server="+Сервер+";uid="+Пользователь+";pwd="+Пароль+";database="+База+";";
	
КонецФункции

//Формирование текста запроса SQL для изменения данных через Join с внешней таблицей//
Функция UpdateAtJOIN(Структура) Экспорт
	
	УстановитьИменаПолей(Структура);
	СформироватьВнутреннююТаблицу(Структура);
	УстановитьПоляSet(Структура);
	ТекстЗапроса = "update " + Структура.ИмяТаблицыХранения + Структура.Set + "from " + Структура.ИмяТаблицыХранения + Структура.ВнутренняяТаблица;
	
	Возврат ВыполнитьЗапросSQL(ТекстЗапроса);
	
КонецФункции
Процедура УстановитьИменаПолей(Структура)
	
	Поля = Новый Соответствие;
	
	Если Структура.Свойство("СтруктураХранения") Тогда
		СтруктураХранения = Структура.СтруктураХранения;
	Иначе
		СтруктураХранения = ПолучитьСтруктуруХраненияБазыДанных(,Истина);
		Структура.Вставить("СтруктураХранения", СтруктураХранения);
	КонецЕсли;

	ОписаниеТаблицы = СтруктураХранения.Найти(Структура.ИмяТаблицы, "ИмяТаблицы");
	Структура.Вставить("ИмяТаблицыХранения", ОписаниеТаблицы.ИмяТаблицыХранения);
	ОписаниеПолей = ОписаниеТаблицы.Поля;
	
	Если НЕ Структура.Свойство("КлючевыеПоля") Тогда
		УстановитьКлючевыеПоля(Структура);
	КонецЕсли;
	
	Для Каждого Поле Из Структура.КлючевыеПоля Цикл
		ИмяПоля = Поле.Ключ;
		Поля.Вставить(ИмяПоля, ИмяПоляSQL(ОписаниеПолей, ИмяПоля));
	КонецЦикла;
	Для Каждого Поле Из Структура.УстанавливаемыеПоля Цикл
		ИмяПоля = Поле.Ключ;
		Поля.Вставить(ИмяПоля, ИмяПоляSQL(ОписаниеПолей, ИмяПоля));
	КонецЦикла;
	
	Структура.Вставить("Поля", Поля);

КонецПроцедуры
Процедура СформироватьВнутреннююТаблицу(Структура)
	
	Синонимы = "";
	СтрокаJoin = " on ";
	Индекс = 1;
	Для Каждого КолонкаВыборки Из Структура.КлючевыеПоля Цикл
		Синонимы = Синонимы + ?(Синонимы = "", "f", ",f") + Формат(Индекс, "ЧН=; ЧГ=");
		СтрокаJoin = СтрокаJoin + ?(СтрокаJoin = " on ", "", " and ") + Структура.Поля[КолонкаВыборки.Ключ] + "=t.f" + Формат(Индекс, "ЧН=; ЧГ=");
		Индекс = Индекс + 1;
	КонецЦикла;
	
	ВнутренняяТаблица = "";
	Выборка = Структура.ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаВнутреннейТаблицы = "(";
		Для Каждого КолонкаВыборки Из Структура.КлючевыеПоля Цикл
			СтрокаВнутреннейТаблицы = СтрокаВнутреннейТаблицы + ?(СтрокаВнутреннейТаблицы = "(", "", ",") + ЗначениеSQL(Выборка[КолонкаВыборки.Ключ]);
		КонецЦикла;
		СтрокаВнутреннейТаблицы = СтрокаВнутреннейТаблицы + ")";
		ВнутренняяТаблица = ВнутренняяТаблица + ?(ВнутренняяТаблица = "", "", ",") + СтрокаВнутреннейТаблицы;
	КонецЦикла;
	
	ВнутренняяТаблица = " inner join " + Символы.ПС + "(values" + ВнутренняяТаблица + ") t (" + Синонимы + ") " + СтрокаJoin;
	
	Структура.Вставить("ВнутренняяТаблица", ВнутренняяТаблица);
	
КонецПроцедуры
Процедура УстановитьПоляSet(Структура)
	
	Строка = "";
	Для Каждого Поле Из Структура.УстанавливаемыеПоля Цикл
		ИмяПоля = Структура.Поля[Поле.Ключ];
		Строка = Строка + ?(Строка = "", "", ",") + ИмяПоля + "=" + ЗначениеSQL(Поле.Значение);
	КонецЦикла;
	
	Структура.Вставить("Set", Символы.ПС + "set " + Строка + Символы.ПС)
	
КонецПроцедуры

//Общее//
Функция ЗначениеSQL(Значение1C)
	
	Если		ТипЗнч(Значение1C) = Тип("Число") Тогда
				ЗначениеSQL = Формат(Значение1C, "ЧН=; ЧГ=");
	ИначеЕсли	ТипЗнч(Значение1C) = Тип("Булево") Тогда
				ЗначениеSQL = ?(Значение1C, "1", "0");
	ИначеЕсли	ТипЗнч(Значение1C) = Тип("Строка") Тогда
				ЗначениеSQL = "'" + Значение1C + "'";
	ИначеЕсли	ТипЗнч(Значение1C) = Тип("Дата") Тогда
				Если ЗначениеЗаполнено(Значение1C) Тогда
					ЗначениеSQL = "dateadd(year,2000,'" + Формат(Значение1C, "ДФ='yyyy-MM-dd HH:mm:ss'; ДП=") + "')";
				Иначе
					ЗначениеSQL = "'2001-01-01 00:00:00.000'";
				КонецЕсли;
	Иначе		
				ЗначениеSQL = ОбщегоНазначения.ПреобразоватьGUIDВФорматHEX(Значение1C.УникальныйИдентификатор())
	КонецЕсли;
	
	Возврат ЗначениеSQL;
	
КонецФункции
Функция ИмяПоляSQL(ОписаниеПолей, ИмяПоля)
	
	ОписаниеПоля = ОписаниеПолей.НайтиСтроки(Новый Структура("ИмяПоля", ИмяПоля));
	ИмяSQL = ОписаниеПоля[0].ИмяПоляХранения;
	Если ОписаниеПоля.Количество() > 1 Тогда
		Для Каждого Вариант Из ОписаниеПоля Цикл
			ИмяВарианта = Вариант.ИмяПоляХранения;
			Если Прав(ИмяВарианта,4) = "RRef" Тогда
				ИмяSQL = ИмяВарианта;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ИмяSQL;
	
КонецФункции
Процедура УстановитьКлючевыеПоля(Структура)
	
	КлючевыеПоля = Новый Структура;
	Для Каждого Колонка Из Структура.ВыборкаДанных.Колонки Цикл
		КлючевыеПоля.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Структура.Вставить("КлючевыеПоля", КлючевыеПоля);
	
КонецПроцедуры

#КонецОбласти