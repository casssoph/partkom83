&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	//Здесь заполняем колонки, на которые должна реагировать расшифровка. В данном варианте отчета поля д.б. ссылками 
	МРасшифровываемых = Новый Массив();
	МРасшифровываемых.Добавить("ДокументПрихода");
	МРасшифровываемых.Добавить("Номенклатура");
	
	//Полученное значение 
	РасшифрЗначение = ПолучитьРасшифровкуНаСервере(Расшифровка, МРасшифровываемых); 
	
	Если РасшифрЗначение = Неопределено Тогда Возврат; КонецЕсли;
	СтандартнаяОбработка = Ложь;
	
	// Прописываем доступные действия. Если какое то действие не указать, оно не будет доступно пользователю
	
	ОбрРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	
	ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет;
	ПараметрВыполненногоДействия = Неопределено;
	ДоступДействия = Новый Массив;
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	//Создаем собственные действия
	ДопПункты = Новый СписокЗначений;
	ДопПункты.Добавить( 1, "По документам движения");
	
	//Меню 
	ОбрРасшифровки.ВыбратьДействие(Расшифровка, ВыпДействие, ПараметрВыполненногоДействия, ДоступДействия, ДопПункты);
	
	Если ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет Тогда
	ИначеЕсли ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		
		ОткрытьЗначение(ПараметрВыполненногоДействия);
	ИначеЕсли ТипЗнч(ВыпДействие) = Тип("Число") Тогда 
		
		Форм2 = ПолучитьФорму("Отчет.ЗависшиеПеремещениеяВПутиСДокументомДвижения.Форма", , , РасшифрЗначение); //Форма Расшифровки.
		
		КомпоновщНастр = ЭтаФорма.Отчет.КомпоновщикНастроек;
		КомпоновщНастр2 = Форм2.Отчет.КомпоновщикНастроек;
		
		
		//Здесь устанавливаем настройки открываемого отчета
		УстановитьЗначениеОтбораКомпоновщикаНастроекПоОбразцу(КомпоновщНастр, КомпоновщНастр2, "ДокументПрихода");
		УстановитьЗначениеОтбораКомпоновщикаНастроек(КомпоновщНастр2, Строка(ТипЗнч(РасшифрЗначение)), РасшифрЗначение, ВидСравненияКомпоновкиДанных.Равно);
		
		ДатаОкончания = ПолучитьЗначениеПераметраКомпоновщикаНастроек(ЭтаФорма.Отчет.КомпоновщикНастроек, "ДатаОкончания");
		УстановитьЗначениеПераметраКомпоновщикаНастроек(КомпоновщНастр2, "ДатаОкончания", ДатаОкончания);
		ДатаНачала = ПолучитьЗначениеПераметраКомпоновщикаНастроек(ЭтаФорма.Отчет.КомпоновщикНастроек, "ДатаНачала");
		УстановитьЗначениеПераметраКомпоновщикаНастроек(КомпоновщНастр2, "ДатаНачала", ДатаНачала);
		
		//Здесь открываем новый отчет
		СтрВозврата = ОбработатьРасшифровкуНаСервере(Форм2.Отчет, "ОтчетОбъект.ЗависшиеПеремещениеяВПутиСДокументомДвижения", Форм2.ОтчетТабличныйДокумент, Форм2.НавигационнаяСсылка, Форм2.УникальныйИдентификатор);
		Форм2.ОтчетТабличныйДокумент = СтрВозврата.Результат;
		Форм2.НавигационнаяСсылка = СтрВозврата.ДанныеРасшифровки;
		Форм2.Открыть();
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Расшифровка, МассивИменРасшифровки, ЭтоГруппа = Ложь)
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	Поля = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
	Для Каждого ИмяРасшифровки Из МассивИменРасшифровки Цикл
		ПолеНоменкл = Поля.Найти(ИмяРасшифровки);
		Если Не ПолеНоменкл = Неопределено Тогда Прервать; КонецЕсли;
	КонецЦикла;
	Возврат ПолеНоменкл.Значение;
КонецФункции

&НаКлиенте
Процедура УстановитьЗначениеОтбораКомпоновщикаНастроек(КомпоновщНастр2, ИмяОтбора, Значение, ВидСравнения, Использование = Истина)
	ПолеЭлементаОтбора = КомпоновщНастр2.Настройки.Отбор.ДоступныеПоляОтбора.Элементы.Найти(ИмяОтбора).Поле;
	
	ИДЭлмОтбора = "";
	Для Каждого Элемент Из КомпоновщНастр2.Настройки.Отбор.Элементы Цикл
		Если Элемент.ЛевоеЗначение = ПолеЭлементаОтбора Тогда 
			ИДЭлмОтбора = Элемент.ИдентификаторПользовательскойНастройки; 
			Прервать; 
		КонецЕсли;
	КонецЦикла;
	
	Коллекция2 = КомпоновщНастр2.ПользовательскиеНастройки.Элементы;
	
	Если ИДЭлмОтбора = "" Тогда //Нет среди стандартных настроек
		Для Каждого Элемент Из Коллекция2 Цикл //Ищем....
			Если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных") Тогда
				ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяОтбора);
				ОтборНайден = Ложь;
				Для Каждого ЭлемОтбора Из Элемент.Элементы Цикл
					Если ЭлемОтбора.ЛевоеЗначение = ПолеОтбора Тогда ОтборНайден = Истина; Прервать; КонецЕсли;
				КонецЦикла;
				Если Не ОтборНайден Тогда
					ЭлемОтбора = Элемент.Элементы.Добавить(Тип("ЭлемОтбораКомпоновкиДанных"));
					Элемент.Элементы[0].ЛевоеЗначение = ПолеОтбора;
					ЭлемОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяОтбора);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ЭлемОтбора = Коллекция2.Найти(ИДЭлмОтбора);
	КонецЕсли;
	
	ЭлемОтбора.ПравоеЗначение = Значение;
	ЭлемОтбора.Использование = Использование;
	ЭлемОтбора.ВидСравнения = ВидСравнения;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеОтбораКомпоновщикаНастроекПоОбразцу(КомпоновщНастр, КомпоновщНастр2, ИмяОтбора)
	Отбор = КомпоновщНастр.Настройки.Отбор;
	Для Каждого Элемент Из Отбор.Элементы Цикл
		ЭлемОтбора = Элемент;
		Прервать;
	КонецЦикла;
	УстановитьЗначениеОтбораКомпоновщикаНастроек(КомпоновщНастр2, ИмяОтбора, ЭлемОтбора.ПравоеЗначение, ЭлемОтбора.ВидСравнения, ЭлемОтбора.Использование);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначениеПераметраКомпоновщикаНастроек(КомпоновщНастр, ИмяПараметра)
	ИД_Настройки = КомпоновщНастр.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра).ИдентификаторПользовательскойНастройки;
	Коллекция = КомпоновщНастр.ПользовательскиеНастройки.Элементы;
	Возврат Коллекция.Найти(ИД_Настройки).Значение;
КонецФункции

&НаКлиенте
Процедура УстановитьЗначениеПераметраКомпоновщикаНастроек(КомпоновщНастр2, ИмяПараметра, Значение)
	ИД_НастройкиПарам2 = КомпоновщНастр2.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра).ИдентификаторПользовательскойНастройки;
	Коллекция2 = КомпоновщНастр2.ПользовательскиеНастройки.Элементы;
	Коллекция2.Найти(ИД_НастройкиПарам2).Значение = Значение;
КонецПроцедуры

&НаСервере
Функция ОбработатьРасшифровкуНаСервере(Знач ОтчетZ, СтрТипаОтчета ,Знач РезультатZ, Знач ДанныеРасшифровкиZ, Знач ИДФормы)
	ОтчетОбъект = ДанныеФормыВЗначение(ОтчетZ, Тип(СтрТипаОтчета)); 
	РезультатZ.Очистить();
	ОтчетОбъект.СкомпоноватьРезультат(РезультатZ, ДанныеРасшифровкиZ);                                  //Формируем
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиZ, ИДФормы);                
	Возврат Новый Структура("Результат,ДанныеРасшифровки", РезультатZ, АдресДанныхРасшифровки);         
КонецФункции