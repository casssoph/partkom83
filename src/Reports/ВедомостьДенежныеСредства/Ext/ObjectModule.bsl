#Если Клиент Тогда
// Процедура установки текста запроса построителя отчета
//
Процедура УстановитьТекстЗапроса(ЕстьПолеРегистратор = Истина)

	лКлючАлгоритма = "Отчет_ВедомостьДенежныеСредства_МодульОбъекта_УстановитьТекстЗапроса";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	ТекстЗапроса =
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор КАК Регистратор,
	 |	ДенежныеСредстваОстаткиИОбороты.ВидДенежныхСредств КАК ВидДенежныхСредств,
	 |	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса.Владелец КАК Организация,
	 |	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Владелец КАК Контрагент,
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС,
	 |	ВЫРАЗИТЬ(ВЫБОР
	 |			КОГДА ДенежныеСредстваОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	 |				ТОГДА ВЫРАЗИТЬ(ДенежныеСредстваОстаткиИОбороты.Регистратор КАК Документ.ПлатежноеПоручениеВходящее).НазначениеПлатежа
	 |			ИНАЧЕ ДенежныеСредстваОстаткиИОбороты.Регистратор.Комментарий
	 |		КОНЕЦ КАК СТРОКА(300)) КАК КомментарийНазначениеПлатежа,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕНЬ) КАК ПериодДень,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕКАДА) КАК ПериодДекада,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, КВАРТАЛ) КАК ПериодКвартал,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	 |	НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ГОД) КАК ПериодГод,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаРасход КАК СуммаРасход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрНачальныйОстаток КАК СуммаРубНачальныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрПриход КАК СуммаРубПриход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрРасход КАК СуммаРубРасход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаРубКонечныйОстаток
	 |{ВЫБРАТЬ
	 |	Регистратор.*,
	 |	ВидДенежныхСредств.*,
	 |	Организация.*,
	 |	БанковскийСчетКасса.*,
	 |	Контрагент.*,
	 |	СтатьяДДС.*,
	 |	(ВЫРАЗИТЬ(ВЫБОР
	 |				КОГДА ДенежныеСредстваОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	 |					ТОГДА ВЫРАЗИТЬ(ДенежныеСредстваОстаткиИОбороты.Регистратор КАК Документ.ПлатежноеПоручениеВходящее).НазначениеПлатежа
	 |				ИНАЧЕ ДенежныеСредстваОстаткиИОбороты.Регистратор.Комментарий
	 |			КОНЕЦ КАК СТРОКА(300))) КАК КомментарийНазначениеПлатежа,
	 |	ПериодДень,
	 |	ПериодНеделя,
	 |	ПериодДекада,
	 |	ПериодМесяц,
	 |	ПериодКвартал,
	 |	ПериодПолугодие,
	 |	ПериодГод,
	 |	СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	 |	СуммаПриход КАК СуммаПриход,
	 |	СуммаРасход КАК СуммаРасход,
	 |	СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрНачальныйОстаток КАК СуммаРубНачальныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрПриход КАК СуммаРубПриход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрРасход КАК СуммаРубРасход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаРубКонечныйОстаток}
	 |ИЗ
	 |	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК ДенежныеСредстваОстаткиИОбороты
	 |{ГДЕ
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор.*,
	 |	ДенежныеСредстваОстаткиИОбороты.ВидДенежныхСредств.*,
	 |	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса.Владелец.* КАК Организация,
	 |	ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса.*,
	 |	(ВЫРАЗИТЬ(ВЫБОР
	 |				КОГДА ДенежныеСредстваОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	 |					ТОГДА ВЫРАЗИТЬ(ДенежныеСредстваОстаткиИОбороты.Регистратор КАК Документ.ПлатежноеПоручениеВходящее).НазначениеПлатежа
	 |				ИНАЧЕ ДенежныеСредстваОстаткиИОбороты.Регистратор.Комментарий
	 |			КОНЕЦ КАК СТРОКА(300))) КАК КомментарийНазначениеПлатежа,
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Владелец.* КАК Контрагент,
	 |	ДенежныеСредстваОстаткиИОбороты.Регистратор.СтатьяДвиженияДенежныхСредств.* КАК СтатьяДДС,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕНЬ)) КАК ПериодДень,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕКАДА)) КАК ПериодДекада,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, КВАРТАЛ)) КАК ПериодКвартал,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ГОД)) КАК ПериодГод,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаРасход КАК СуммаРасход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрНачальныйОстаток КАК СуммаРубНачальныйОстаток,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрПриход КАК СуммаРубПриход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрРасход КАК СуммаРубРасход,
	 |	ДенежныеСредстваОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаРубКонечныйОстаток}
	 |{УПОРЯДОЧИТЬ ПО
	 |	Регистратор.*,
	 |	ВидДенежныхСредств.*,
	 |	Организация.*,
	 |	БанковскийСчетКасса.*,
	 |	Контрагент.*,
	 |	СтатьяДДС.*,
	 |	ПериодДень,
	 |	ПериодНеделя,
	 |	ПериодДекада,
	 |	ПериодМесяц,
	 |	ПериодКвартал,
	 |	ПериодПолугодие,
	 |	ПериодГод,
	 |	СуммаНачальныйОстаток,
	 |	СуммаПриход,
	 |	СуммаРасход,
	 |	СуммаКонечныйОстаток,
	 |	СуммаРубНачальныйОстаток,
	 |	СуммаРубПриход,
	 |	СуммаРубРасход,
	 |	СуммаРубКонечныйОстаток}
	 |ИТОГИ
	 |	СУММА(СуммаНачальныйОстаток),
	 |	СУММА(СуммаПриход),
	 |	СУММА(СуммаРасход),
	 |	СУММА(СуммаКонечныйОстаток),
	 |	СУММА(СуммаРубНачальныйОстаток),
	 |	СУММА(СуммаРубПриход),
	 |	СУММА(СуммаРубРасход),
	 |	СУММА(СуммаРубКонечныйОстаток),
	 |	Минимум(КомментарийНазначениеПлатежа)
	 |ПО
	 |	ОБЩИЕ
	 |{ИТОГИ ПО
	 |	Регистратор.*,
	 |	ВидДенежныхСредств.*,
	 |	Организация.*,
	 |	БанковскийСчетКасса.*,
	 |	Контрагент.*,
	 |	СтатьяДДС.*,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕНЬ)) КАК ПериодДень,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ДЕКАДА)) КАК ПериодДекада,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, МЕСЯЦ)) КАК ПериодМесяц,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, КВАРТАЛ)) КАК ПериодКвартал,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	 |	(НАЧАЛОПЕРИОДА(ДенежныеСредстваОстаткиИОбороты.Период, ГОД)) КАК ПериодГод}";

	
	// Описание исходного текста запроса.
	//ТекстЗапроса =
	// "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	// |	ДенежныеСредстваОбороты.Регистратор КАК Регистратор,
	// |	ДенежныеСредстваОбороты.ВидДенежныхСредств КАК ВидДенежныхСредств,
	// |	ДенежныеСредстваОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	// |	ДенежныеСредстваОбороты.СуммаПриход КАК СуммаПриход,
	// |	ДенежныеСредстваОбороты.СуммаРасход КАК СуммаРасход
	// |{ВЫБРАТЬ
	// |	Регистратор.*,
	// |	ВидДенежныхСредств.*,
	// |	БанковскийСчетКасса.*,
	// |	СуммаПриход КАК СуммаПриход,
	// |	СуммаРасход КАК СуммаРасход}
	// |ИЗ
	// |	РегистрНакопления.ДенежныеСредства.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК ДенежныеСредстваОбороты
	// |{ГДЕ
	// |	ДенежныеСредстваОбороты.Регистратор.*,
	// |	ДенежныеСредстваОбороты.ВидДенежныхСредств.*,
	// |	ДенежныеСредстваОбороты.БанковскийСчетКасса.*,
	// |	ДенежныеСредстваОбороты.СуммаПриход КАК СуммаПриход,
	// |	ДенежныеСредстваОбороты.СуммаРасход КАК СуммаРасход}
	// |{УПОРЯДОЧИТЬ ПО
	// |	Регистратор.*,
	// |	ВидДенежныхСредств.*,
	// |	БанковскийСчетКасса.*,
	// |	СуммаПриход КАК СуммаПриход,
	// |	СуммаРасход КАК СуммаРасход}
	// |ИТОГИ
	// |	СУММА(СуммаПриход),
	// |	СУММА(СуммаРасход)
	// |ПО
	// |	ОБЩИЕ
	// |{ИТОГИ ПО
	// |	Регистратор.*,
	// |	ВидДенежныхСредств.*,
	// |	БанковскийСчетКасса.*}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ДенежныеСредстваОстаткиИОбороты.БанковскийСчетКасса.Владелец", "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗаявкиПокупателей.ТорговаяТочка", "ТорговаяТочка", "ТорговаяТочка", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ТорговыеТочки);
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗаявкиПокупателей.ДоговорКонтрагента", "ДоговорКонтрагента", "Договор контрагента", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ДоговорыКонтрагентов);
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("Взаиморасчеты.Сделка", "Сделка", "Сделка", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("Взаиморасчеты.Сделка", "Сделка", "Сделка", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документ_ЗаказПокупателя);
		//УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("Взаиморасчеты.ДокументРасчетовСКонтрагентом", "ДокументРасчетовСКонтрагентом", "Документ расчетов с контрагентом", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;

КонецПроцедуры
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "ДенежныеСредства";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	
	УстановитьТекстЗапроса();

	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЦФОДляБюджета", "Центр финансовой ответственности");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("РегионыДляБюджета", "Регион");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяДДС", "Статьи движения ден.средств");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументРасчетовСКонтрагентом", "Документ расчетов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидДенежныхСредств", "Вид денежных средств");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("БанковскийСчетКасса", "Счет/касса");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Контрагент", "Контрагент");
	//ХудинВВ XX-757
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КомментарийНазначениеПлатежа", "Комментарий (назначение платежа)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаНачальныйОстаток", "Начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаПриход", "Приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРасход", "Расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаКонечныйОстаток", "Конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРубНачальныйОстаток", "Начальный остаток (руб)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРубПриход", "Приход (руб)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРубРасход", "Расход (руб)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаРубКонечныйОстаток", "Конечный остаток (руб)");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СуммаОборот", "Оборот");
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("Организация",           "БанковскийСчетКасса", "Владелец",              "Организация");
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("ВалютаДенежныхСредств", "БанковскийСчетКасса", "ВалютаДенежныхСредств", "Валюта счета (кассы)");
	
	УниверсальныйОтчет.ДобавитьПолеГруппировка("Организация", , "ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Организация", "Организация");
	УниверсальныйОтчет.ДобавитьПолеГруппировка("БанковскийСчетКасса", "Организация", "БанковскийСчетКасса", "Счет/Касса");
	УниверсальныйОтчет.ДобавитьПолеГруппировка("Контрагент", "БанковскийСчетКасса", "ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Владелец", "Контрагент");
	
	
	// Заполнение начальных настроек универсального отчета
	//УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	//ХудинВВ XX-757
	УниверсальныйОтчет.ДобавитьПоказатель("КомментарийНазначениеПлатежа",  "Комментарий (назначение платежа)",  Истина, , "КомментарийНазначениеПлатежа", "Комментарий (назначение платежа)");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачальныйОстаток", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма в валюте счета (кассы)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход",           "Приход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма в валюте счета (кассы)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход",           "Расход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма в валюте счета (кассы)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонечныйОстаток",  "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма в валюте счета (кассы)");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаОборот",           "Оборот",              Ложь, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма в валюте счета (кассы)");
	
	//ВалютаУпр = глЗначениеПеременной("ВалютаУправленческогоУчета").Наименование;
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРубНачальныйОстаток", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2", "СуммаУпр", "Сумма в руб.");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРубПриход",           "Приход",            Истина, "ЧЦ=15; ЧДЦ=2", "СуммаУпр", "Сумма в руб.");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРубРасход",           "Расход",            Истина, "ЧЦ=15; ЧДЦ=2", "СуммаУпр", "Сумма в руб.");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРубКонечныйОстаток",  "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2", "СуммаУпр", "Сумма в руб.");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрОборот",           "Оборот",              Ложь, "ЧЦ=15; ЧДЦ=2", "СуммаУпр", "Сумма в " + ВалютаУпр);
		
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦФОДляБюджета");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяДДС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ДенежныеСредстваОстаткиИОбороты.Регистратор.ДоговорКонтрагента.Владелец");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Регистратор");
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	//УниверсальныйОтчет.ДобавитьОтбор("ЦФОДляБюджета");
	//УниверсальныйОтчет.ДобавитьОтбор("РегионыДляБюджета");
	УниверсальныйОтчет.ДобавитьОтбор("БанковскийСчетКасса");
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Контрагент");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ВалютаДенежныхСредств");
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ВидДенежныхСредств");
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);

КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,,ЭтотОбъект);	

КонецПроцедуры // СформироватьОтчет()

//ХудинВВ XX-757
Процедура ДоработатьМакетПередВыводом(вхПостроительОтчета) Экспорт
	
	лКлючАлгоритма = "Отчет_ВедомостьДенежныеСредства_МодульОбъекта_ДоработатьМакетПередВыводом";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;
	///////////////////////////////////////////////////////////////////////////
	
	// Удалим поле ВалютнаяСумма из всех областей группировок, выше группировки Валюта 
	Для Каждого Группировка Из вхПостроительОтчета.ИзмеренияСтроки Цикл 
		Если Группировка.ПутьКДанным = "Регистратор" Тогда 
			Прервать; 
		Иначе 
			// Ищем области с именем группировки, а также с именем группировки + обозначение иерархии 
			ИменаОбластей = Новый Массив; 
			ИменаОбластей.Добавить(Группировка.Имя); 
			ИменаОбластей.Добавить(Группировка.Имя + "Иерархия"); 
			
			Для Каждого ИмяГруппировки Из ИменаОбластей Цикл 
				Область = вхПостроительОтчета.Макет.Области.Найти(ИмяГруппировки); 
				Если Область <> Неопределено Тогда 
					ТекущаяОбласть = Неопределено; 
					Пока Истина Цикл 
						// Осуществим поиск ячейки, в которой находится параметр - ВалютнаяСуммаОборот
						ТекущаяОбласть = вхПостроительОтчета.Макет.НайтиТекст("КомментарийНазначениеПлатежа", ТекущаяОбласть, 
						Область, Истина, Истина, Истина, Ложь); 
						Если ТекущаяОбласть <> Неопределено Тогда 
							Если ТекущаяОбласть.Параметр = "КомментарийНазначениеПлатежа" Тогда 
								// Удалим параметр из области 
								ТекущаяОбласть.Параметр = "";
							КонецЕсли;
						Иначе 
							Прервать; 
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли