Процедура ВыполнитьРегламентноеЗадание() Экспорт 
	
	Попытка
		//Изменяем ПТУ после загрузки размещений, СЗ после загрузки реализаций
		ПостОбработкаОбъектовПриОбменеСТопЛог();
	Исключение
		СтруктураОшибки = Новый Структура;
		СтруктураОшибки.Вставить("ОбъектXDTO", "ПостОбработкаОбъектовПриОбменеСТопЛог");
		СтруктураОшибки.Вставить("СообщениеОбОшибке", ОписаниеОшибки());
		СтруктураОшибки.Вставить("НомерСообщения", "");
		СтруктураОшибки.Вставить("ДатаЗагрузкиСообщения", ТекущаяДата());
		ОбменДаннымиКлиентСервер.ЗаписатьОшибкиПриОбменеСТопЛог(СтруктураОшибки);
	КонецПопытки;

КонецПроцедуры

Процедура ПостОбработкаОбъектовПриОбменеСТопЛог() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтложенноеИзменениеОбъектовТопЛог.Объект,
	               |	ОтложенноеИзменениеОбъектовТопЛог.ОбновитьОтказыВЗаявке
	               |ИЗ
	               |	РегистрСведений.ОтложенноеИзменениеОбъектовТопЛог КАК ОтложенноеИзменениеОбъектовТопЛог";
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Результат = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Попытка
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
				Если ТипЗнч(Выборка.Объект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И Не Выборка.ОбновитьОтказыВЗаявке Тогда 
					ОбработатьПТУ(Выборка.Объект);
				//Валиахметов http://jira.part-kom.ru/browse/XX-2261 22.04.2019
				ИначеЕсли ТипЗнч(Выборка.Объект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И Выборка.ОбновитьОтказыВЗаявке Тогда 
					ОбработатьЗаявки(Выборка.Объект);
				//Конец Валиахметов http://jira.part-kom.ru/browse/XX-2261 22.04.2019
				ИначеЕсли ТипЗнч(Выборка.Объект) = Тип("ДокументСсылка.СлужебноеЗадание") Тогда 
					ОбработатьСЗ(Выборка.Объект);
				КонецЕсли;
			НаборЗаписей = РегистрыСведений.ОтложенноеИзменениеОбъектовТопЛог.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
			НаборЗаписей.Отбор.ОбновитьОтказыВЗаявке.Установить(Выборка.ОбновитьОтказыВЗаявке);
			НаборЗаписей.Записать(Истина);
			
		    ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОписаниеОшибки = ОписаниеОшибки()
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьПТУ(Объект)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Объект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеТоваровТовары.Номенклатура,
	               |	ПеремещениеТоваровТовары.СтрокаЗаявки,
	               |	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |ГДЕ
	               |	ПеремещениеТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
	               |	И ПеремещениеТоваровТовары.Ссылка.Проведен
	               |	И ПеремещениеТоваровТовары.Ссылка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПеремещениеТоваровПоступил)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПеремещениеТоваровТовары.Номенклатура,
	               |	ПеремещениеТоваровТовары.СтрокаЗаявки";
	РазмещенныеТовары = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Объект);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.СтрокаПрихода,
	               |	ПоступлениеТоваровУслугТовары.Количество - ПоступлениеТоваровУслугТовары.КоличествоНеПринято КАК Количество,
	               |	ПоступлениеТоваровУслугТовары.НомерСтроки
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугРазмещениеСтрокПрихода.СтрокаПрихода,
	               |	ПоступлениеТоваровУслугРазмещениеСтрокПрихода.СтрокаЗаявки,
	               |	СУММА(ПоступлениеТоваровУслугРазмещениеСтрокПрихода.Количество) КАК Количество
	               |ПОМЕСТИТЬ втРазм
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.РазмещениеСтрокПрихода КАК ПоступлениеТоваровУслугРазмещениеСтрокПрихода
	               |ГДЕ
	               |	ПоступлениеТоваровУслугРазмещениеСтрокПрихода.Ссылка = &ДокументОснование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПоступлениеТоваровУслугРазмещениеСтрокПрихода.СтрокаПрихода,
	               |	ПоступлениеТоваровУслугРазмещениеСтрокПрихода.СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугПричиныОтказов.СтрокаПрихода,
	               |	ПоступлениеТоваровУслугПричиныОтказов.СтрокаЗаявки,
	               |	СУММА(ПоступлениеТоваровУслугПричиныОтказов.Количество) КАК Количество
	               |ПОМЕСТИТЬ втОтказы
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.ПричиныОтказов КАК ПоступлениеТоваровУслугПричиныОтказов
	               |ГДЕ
	               |	ПоступлениеТоваровУслугПричиныОтказов.Ссылка = &ДокументОснование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПоступлениеТоваровУслугПричиныОтказов.СтрокаПрихода,
	               |	ПоступлениеТоваровУслугПричиныОтказов.СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРазм.СтрокаПрихода,
	               |	втРазм.СтрокаЗаявки,
	               |	втРазм.Количество - ЕСТЬNULL(втОтказы.Количество, 0) КАК Количество
	               |ИЗ
	               |	втРазм КАК втРазм
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтказы КАК втОтказы
	               |		ПО втРазм.СтрокаПрихода = втОтказы.СтрокаПрихода
	               |			И втРазм.СтрокаЗаявки = втОтказы.СтрокаЗаявки";
	
	Результаты = Запрос.ВыполнитьПакет();
	Товары = Результаты.Получить(0).Выгрузить();
	Размещение = Результаты.Получить(3).Выгрузить();
	
	ТоварыКРазмещению = Новый ТаблицаЗначений;
	ТоварыКРазмещению.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	ТоварыКРазмещению.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыКРазмещению.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ТоварыКРазмещению.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	
	Для Каждого СтрокаТЧ Из Товары Цикл 
		Строки = Размещение.НайтиСтроки(Новый Структура("СтрокаПрихода", СтрокаТЧ.СтрокаПрихода));
		Индекс = 0;
		Пока СтрокаТЧ.Количество > 0 И Индекс < Строки.Количество() Цикл 
			СтрокаРазмещение = Строки.Получить(Индекс);
			СписываемоеКоличество = Мин(СтрокаТЧ.Количество, СтрокаРазмещение.Количество);
			Если СписываемоеКоличество > 0 Тогда 
				НоваяСтрока = ТоварыКРазмещению.Добавить();
				
				НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
				НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
				НоваяСтрока.СтрокаЗаявки = СтрокаРазмещение.СтрокаЗаявки;
				НоваяСтрока.Количество = СписываемоеКоличество;
				
				СтрокаТЧ.Количество = СтрокаТЧ.Количество - СписываемоеКоличество;
				СтрокаРазмещение.Количество = СтрокаРазмещение.Количество - СписываемоеКоличество;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Если СтрокаТЧ.Количество > 0 Тогда 
			НоваяСтрока = ТоварыКРазмещению.Добавить();
			НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
			НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
			НоваяСтрока.Количество = СтрокаТЧ.Количество;
		КонецЕсли;
	КонецЦикла;
	
	ВыходнаяТаблица = Новый ТаблицаЗначений;
	ВыходнаяТаблица.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	ВыходнаяТаблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ВыходнаяТаблица.Колонки.Добавить("СтрокаЗаявки", Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
	ВыходнаяТаблица.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	
	Отбор = Новый Структура("Номенклатура,СтрокаЗаявки");	
	ОбщегоНазначения.РаспределитьТаблицу1ПоТаблице2(Отбор, РазмещенныеТовары, ТоварыКРазмещению, ВыходнаяТаблица);
	
	Отбор = Новый Структура("Номенклатура");	
	ОбщегоНазначения.РаспределитьТаблицу1ПоТаблице2(Отбор, РазмещенныеТовары, ТоварыКРазмещению, ВыходнаяТаблица);
	
	ТоварыКРазмещению.Свернуть("НомерСтроки", "Количество");
	КоличествоСтрок = ТоварыКРазмещению.Количество(); 
	Для Шаг = 0 По КоличествоСтрок - 1 Цикл 
		СтрокаТЧ = ТоварыКРазмещению.Получить(КоличествоСтрок - Шаг - 1);
		Если СтрокаТЧ.Количество = 0 Тогда 
			ТоварыКРазмещению.Удалить(СтрокаТЧ);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("втТовары", ТоварыКРазмещению);
	Запрос.УстановитьПараметр("ДокументОснование", Объект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	втТовары.НомерСтроки,
	               |	втТовары.Количество
	               |ПОМЕСТИТЬ втТовары
	               |ИЗ
	               |	&втТовары КАК втТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.НомерСтроки,
	               |	ПоступлениеТоваровУслугТовары.Количество - ПоступлениеТоваровУслугТовары.КоличествоНеПринято - ЕСТЬNULL(втТовары.Количество, 0) КАК КоличествоРазмещено
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втТовары КАК втТовары
	               |		ПО ПоступлениеТоваровУслугТовары.НомерСтроки = втТовары.НомерСтроки
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументОснование
	               |	И ПоступлениеТоваровУслугТовары.Количество - ПоступлениеТоваровУслугТовары.КоличествоНеПринято - ЕСТЬNULL(втТовары.Количество, 0) <> ПоступлениеТоваровУслугТовары.КоличествоРазмещено";
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "СтатусДокумента,Проведен");
	НужноМенятьТЧ = Не Результат.Пустой();
	НужноМенятьСтатус = ТоварыКРазмещению.Количество() = 0 И Не(Реквизиты.Проведен И Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен);
	НужноМенятьСтатусВПринят = ТоварыКРазмещению.Количество() <> 0 И Реквизиты.Проведен И Реквизиты.СтатусДокумента = Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен; 
	Если НужноМенятьТЧ Или НужноМенятьСтатус Тогда 
		Выборка = Результат.Выбрать();
		ДокОбъект = Объект.ПолучитьОбъект();
		
		Пока Выборка.Следующий() Цикл 
			СтрокаТЧ = ДокОбъект.Товары.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаТЧ.КоличествоРазмещено = Выборка.КоличествоРазмещено;
		КонецЦикла;
			Если НужноМенятьСтатус Тогда 
				ДокОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			ИначеЕсли НужноМенятьСтатусВПринят Тогда 
				ДокОбъект.СтатусДокумента = Справочники.СтатусыДокументов.ПоступлениеТоваровПринят;
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьЗаявки(Объект)
	Документы.ПоступлениеТоваровУслуг.ОбновитьОтказыВЗаявке(Объект);
КонецПроцедуры

Процедура ОбработатьСЗ(Объект)
	
	СтатусСЗ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "СтатусДокумента");
	Если ЗначениеЗаполнено(СтатусСЗ) И СтатусСЗ <> Справочники.СтатусыДокументов.СлужебноеЗаданиеИдетСборка Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СлужебноеЗаданиеПокупатели.Реализация.СтатусДокумента КАК СтатусДокумента
	               |ИЗ
	               |	Документ.СлужебноеЗадание.Покупатели КАК СлужебноеЗаданиеПокупатели
	               |ГДЕ
	               |	СлужебноеЗаданиеПокупатели.Ссылка = &Ссылка
	               |	И СлужебноеЗаданиеПокупатели.Реализация.СтатусДокумента <> ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.РеализацияТоваровУслугОтгружен)";
	Запрос.УстановитьПараметр("Ссылка", Объект);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		ДокОбъект = Объект.ПолучитьОбъект();
		ДокОбъект.СтатусДокумента = Справочники.СтатусыДокументов.СлужебноеЗаданиеВыданВодителю;
		ДокОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры
