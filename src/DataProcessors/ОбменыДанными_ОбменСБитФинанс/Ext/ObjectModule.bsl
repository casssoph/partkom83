Перем катобменаСБитом;
Перем катобменаСБитомЗапаска;
Перем КаталогОшибок;
Перем КаталогОбменаКонтрагенты;

Процедура ПодготовитьФайлПравилВыгрузки(вхИмяФайлаПравилаВыгрузки)
	
	ПравилоXML = ПолучитьМакет("Контра_Правило_ВыгрузкаКонтры1С83БитФинанс_12");          
	ПравилоXML.Записать(вхИмяФайлаПравилаВыгрузки);   
	
КонецПроцедуры

Функция ПолучитьДанныеОбмена(УзелОбмена)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Организации.Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации.Изменения КАК Организации
	|ГДЕ
	|	Организации.Узел = &Узел
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета.Изменения КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Узел = &Узел
	|	И БанковскиеСчета.Ссылка.Владелец ССЫЛКА Справочник.Организации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	Справочник.Контрагенты.Изменения КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Узел = &Узел
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТорговыеТочки.Ссылка.Владелец
	|ИЗ
	|	Справочник.ТорговыеТочки.Изменения КАК ТорговыеТочки
	|ГДЕ
	|	ТорговыеТочки.Узел = &Узел
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка.Владелец
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов.Изменения КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Узел = &Узел
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка.Владелец
	|ИЗ
	|	Справочник.БанковскиеСчета.Изменения КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Узел = &Узел
	|	И БанковскиеСчета.Ссылка.Владелец ССЫЛКА Справочник.Контрагенты
	|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	Филиалы.ТорговаяТочка.Ссылка.Владелец
	//|ИЗ
	//|	РегистрСведений.ФилиалыТорговыхТочек.Изменения КАК Филиалы
	//|ГДЕ
	//|	Филиалы.Узел = &Узел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка
	|ПОМЕСТИТЬ ВсеСсылки
	|ИЗ
	|	Организации КАК Организации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Контрагенты КАК Контрагенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 100
	|	ВсеСсылки.Ссылка
	|ИЗ
	|	ВсеСсылки КАК ВсеСсылки"
	);
	
	Запрос.УстановитьПараметр("Узел", УзелОбмена);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗаписатьДанныеОбмена() Экспорт       
	
	Результат = Ложь;
	
	Если РаботаСКаталогамиНеВозможна(катобменаСБитом) ИЛИ РаботаСКаталогамиНеВозможна(катобменаСБитомЗапаска) тогда
		Возврат Новый Структура("Результат, ТаблицаДанныхОбмена", Результат, Неопределено);
	КонецЕсли;
	
	лИмяФайлаДанных          = ПолучитьИмяВременногоФайла();
	лИмяФайлаПравилаВыгрузки = ПолучитьИмяВременногоФайла();
	лИмяФайлаПротоколаОбмена = ПолучитьИмяВременногоФайла();
	
	ПодготовитьФайлПравилВыгрузки(лИмяФайлаПравилаВыгрузки);
	
	лОбработкаОбъект = Обработки.УниверсальныйОбменДаннымиXML.Создать();
	лОбработкаОбъект.РежимОбмена = "Выгрузка";
	лОбработкаОбъект.ИмяФайлаПравилОбмена = лИмяФайлаПравилаВыгрузки;
	лОбработкаОбъект.ИмяФайлаОбмена = лИмяФайлаДанных;
	лОбработкаОбъект.ИмяФайлаПротоколаОбмена = лИмяФайлаПротоколаОбмена;
	Попытка
		лОбработкаОбъект.ЗагрузитьПравилаОбмена();
		УзелОбмена = ПланыОбмена.ОбменПартКом83_БитФинанс.ПолучитьСсылку(
						Новый УникальныйИдентификатор("356a626c-086c-11e6-80e1-005056817b9c"));
		ТаблицаДанныхОбмена = ПолучитьДанныеОбмена(УзелОбмена);
		УИДОрганизаций = "";
		УИДКонтрагентов = "";
		УИДСчетов = "";
		Для Каждого СтрДанных из ТаблицаДанныхОбмена Цикл
			Если ТипЗнч(СтрДанных.Ссылка) = Тип("СправочникСсылка.Организации") Тогда
				УИДОрганизаций = УИДОрганизаций + СтрДанных.Ссылка.УникальныйИдентификатор() + "%;%";
			ИначеЕсли ТипЗнч(СтрДанных.Ссылка) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
				УИДСчетов = УИДСчетов + СтрДанных.Ссылка.УникальныйИдентификатор() + "%;%";
			ИначеЕсли ТипЗнч(СтрДанных.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
				УИДКонтрагентов = УИДКонтрагентов + СтрДанных.Ссылка.УникальныйИдентификатор() + "%;%";
			КонецЕсли;
		КонецЦикла;
		ЕстьДанные = ?(ТаблицаДанныхОбмена = Неопределено, Ложь, Истина);
		Для Каждого лСтрокаТаблицаНастройкиПараметров Из лОбработкаОбъект.ТаблицаНастройкиПараметров цикл
			Если лСтрокаТаблицаНастройкиПараметров.Имя = "РазностнаяВыгрузка" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = Истина;
			ИначеЕсли лСтрокаТаблицаНастройкиПараметров.Имя = "УзелПолучатель" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = "002";
			ИначеЕсли лСтрокаТаблицаНастройкиПараметров.Имя = "ПереданаТаблицаДанных" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = ЕстьДанные;
			ИначеЕсли лСтрокаТаблицаНастройкиПараметров.Имя = "УИДОрганизаций" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = УИДОрганизаций;
			ИначеЕсли лСтрокаТаблицаНастройкиПараметров.Имя = "УИДСчетов" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = УИДСчетов;
			ИначеЕсли лСтрокаТаблицаНастройкиПараметров.Имя = "УИДКонтрагентов" тогда
				лСтрокаТаблицаНастройкиПараметров.Значение = УИДКонтрагентов;
			КонецЕсли;
		КонецЦикла;
		//лОбработкаОбъект.Данные = ТаблицаДанныхОбмена;
		лОбработкаОбъект.ВыполнитьВыгрузку();		
		Результат = НЕ лОбработкаОбъект.ФлагОшибки;
	Исключение
		Результат = Ложь;
		ТаблицаДанныхОбмена = Неопределено;
	КонецПопытки;	
	
	Если Результат тогда
		ПолноеИмяФайлаОбменаИсточник = лИмяФайлаДанных;
		тДт = ТекущаяДата();
		файлообменаимя = ВыдратьИмяФайлаИзПолногоПути(лИмяФайлаДанных);
		файлообменаимя = СтрЗаменить(файлообменаимя,".tmp",".xml");
		маска_имени = "MSG_Kontra_1_10_"+ДеньГода(тДт)+"_"+Час(тДт)+"_"+Минута(тДт);
		маска_имени = СтрЗаменить(маска_имени," ","");
		ПолноеИмяФайлаОбмена = катобменаСБитом + маска_имени + "_"+файлообменаимя;
		ПолноеИмяФайлаОбменаЗапаска = катобменаСБитомЗапаска + маска_имени + "_"+файлообменаимя;
	 	ПереместитьФайл(ПолноеИмяФайлаОбменаИсточник, ПолноеИмяФайлаОбмена);
	 	УдалитьФайлы(лИмяФайлаПротоколаОбмена);
		УдалитьФайлы(лИмяФайлаПравилаВыгрузки);
	КонецЕсли;
	
	Возврат Новый Структура("Результат, ТаблицаДанныхОбмена", Результат, ТаблицаДанныхОбмена);
	
КонецФункции

Функция ПрочитатьДанныеОбмена() Экспорт      
	
	Результат = Ложь;
	
	Если РаботаСКаталогамиНеВозможна(катобменаСБитом) ИЛИ РаботаСКаталогамиНеВозможна(катобменаСБитомЗапаска) тогда
		Возврат Результат;
	КонецЕсли;
	
	СписокФайлов = НайтиФайлы(катобменаСБитом, "MSG_Kassa_1_4_*.xml"); 
	
	Если СписокФайлов.Количество() > 0 тогда
		Для Каждого ФайлДляЗагрузки Из СписокФайлов цикл
			Если ФайлДляЗагрузки.Размер() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			лИмяФайлаДанных = ФайлДляЗагрузки.ПолноеИмя;
			лИмяФайлаПротоколаОбмена = ПолучитьИмяВременногоФайла();
	
			лОбработкаОбъект = Обработки.УниверсальныйОбменДаннымиXML.Создать();
			лОбработкаОбъект.РежимОбмена = "Загрузка";
			лОбработкаОбъект.ИмяФайлаОбмена = лИмяФайлаДанных;
			лОбработкаОбъект.ИмяФайлаПротоколаОбмена = лИмяФайлаПротоколаОбмена;
			лОбработкаОбъект.ВыводВПротоколИнформационныхСообщений = Ложь;
			лОбработкаОбъект.ВыводВПротоколСообщенийОбОшибках = Истина;
			лОбработкаОбъект.СнятьОграничениеПоДатеЗапрета = Истина;
			лОбработкаОбъект.ВыполнитьЗагрузку();
	 		Результат = НЕ лОбработкаОбъект.ФлагОшибки;
			Если Результат Тогда
				Попытка
					УдалитьФайлы(лИмяФайлаДанных);
				Исключение
					Продолжить;
				КонецПопытки;
			Иначе
				Попытка
					лИмяФайлаДанныхЗапаска = СтрЗаменить(лИмяФайлаДанных,катобменаСБитом,КаталогОшибок);
					ПереместитьФайл(лИмяФайлаДанных, лИмяФайлаДанныхЗапаска);
				Исключение
					Продолжить;
				КонецПопытки;
				
			КонецЕсли;
	
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ПрочитатьДанныеОбменаКонтрагенты() Экспорт      
	
	Результат = Ложь;
	
	Если РаботаСКаталогамиНеВозможна(КаталогОбменаКонтрагенты) тогда
		Возврат Результат;
	КонецЕсли;
	
	СписокФайлов = НайтиФайлы(КаталогОбменаКонтрагенты, "MSG_Kontr_0_1_*.xml"); 
	
	Если СписокФайлов.Количество() > 0 тогда
		Для Каждого ФайлДляЗагрузки Из СписокФайлов цикл
	
			лИмяФайлаДанных = ФайлДляЗагрузки.ПолноеИмя;
			лИмяФайлаПротоколаОбмена = ПолучитьИмяВременногоФайла();
	
			лОбработкаОбъект = Обработки.УниверсальныйОбменДаннымиXML.Создать();
			лОбработкаОбъект.РежимОбмена = "Загрузка";
			лОбработкаОбъект.ИмяФайлаОбмена = лИмяФайлаДанных;
			лОбработкаОбъект.ИмяФайлаПротоколаОбмена = лИмяФайлаПротоколаОбмена;
			лОбработкаОбъект.ВыводВПротоколИнформационныхСообщений = Ложь;
			лОбработкаОбъект.ВыводВПротоколСообщенийОбОшибках = Истина;
			лОбработкаОбъект.СнятьОграничениеПоДатеЗапрета = Истина;
			лОбработкаОбъект.ВыполнитьЗагрузку();
	
			Результат = НЕ лОбработкаОбъект.ФлагОшибки;
			
			Если Результат Тогда
				УдалитьФайлы(лИмяФайлаДанных);
			Иначе
				лИмяФайлаДанныхЗапаска = СтрЗаменить(лИмяФайлаДанных,КаталогОбменаКонтрагенты,КаталогОшибок);
				ПереместитьФайл(лИмяФайлаДанных, лИмяФайлаДанныхЗапаска);
			КонецЕсли;
	
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	Попытка
		ПрочитатьДанныеОбмена();
		
	Исключение
		//сообщить админам - обмен кассой упал
		
	КонецПопытки;
	
	Попытка
		ВыборкаУзлов = ПланыОбмена.ОбменПартКом83_БитФинанс.Выбрать();
		Пока ВыборкаУзлов.Следующий() Цикл
			Если ВыборкаУзлов.Ссылка <> ПланыОбмена.ОбменПартКом83_БитФинанс.ЭтотУзел() Тогда
				УзелОбъект = ВыборкаУзлов.ПолучитьОбъект();
				УзелОбъект.ПрочитатьСообщениеСИзменениями();
			КонецЕсли;
		КонецЦикла;
		
	Исключение
		//сообщить админам - не снимается с регистрации
		
	КонецПопытки;
	
	Попытка
		ПрочитатьДанныеОбменаКонтрагенты();
		
	Исключение
		//сообщить админам - загрузка контрагентов упал
		
	КонецПопытки;
		
	Попытка
		РезультатОбмена = ЗаписатьДанныеОбмена();
	Исключение
		//сообщить админам - выгрузка контрагентов упала
		
	КонецПопытки;	
	
	Если РезультатОбмена.Результат Тогда          
		ВыборкаУзлов = ПланыОбмена.ОбменПартКом83_БитФинанс.Выбрать();
		Пока ВыборкаУзлов.Следующий() Цикл
			Если ВыборкаУзлов.Ссылка <> ПланыОбмена.ОбменПартКом83_БитФинанс.ЭтотУзел() Тогда
				УзелОбъект = ВыборкаУзлов.ПолучитьОбъект();
				УзелОбъект.ЗаписатьСообщениеСИзменениями(РезультатОбмена.ТаблицаДанныхОбмена);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// сервис
Функция ВыдратьИмяФайлаИзПолногоПути(ПутьИИмя)  Экспорт
	Путь = "";
	Имя  = "";
	ПозСлэш = Найти(ПутьИИмя,"\");
	Пока ПозСлэш > 0 Цикл
	    Путь = Путь+Сред(ПутьИИмя,1,ПозСлэш);
	    ПутьИИмя = Сред(ПутьИИмя,ПозСлэш+1);
	    ПозСлэш = Найти(ПутьИИмя,"\");
	КонецЦикла;
	Имя = ПутьИИмя;

	Возврат Имя;
КонецФункции
Функция РаботаСКаталогамиНеВозможна(парам_ИмяКаталога) Экспорт
	//Отказ = Истина;
	//
	//Существует = ПроверитьСуществованиеКаталога(парам_ИмяКаталога);
	//Если НЕ Существует тогда
	//	//ТекстПредупреждения = "Каталог [" + СокрЛП(парам_ИмяКаталога) + "] не существует! Процедура загрузки не возможна.";
	//	//#Если Клиент Тогда
	//	//	Предупреждение(ТекстПредупреждения);
	//	//	Возврат Отказ;                                                  		
	//	//#Иначе
	//	//	ВызватьИсключение ТекстПредупреждения;
	//	//#КонецЕсли	
	//	Возврат Отказ;
	//КонецЕсли;
	
	Отказ = Ложь;
	
	Возврат Отказ;
КонецФункции
Функция ПроверитьСуществованиеКаталога(ИмяКаталога) Экспорт

	КаталогНаДиске = Новый Файл(ИмяКаталога);
	Если КаталогНаДиске.Существует() Тогда
		Возврат Истина;
	Иначе
		#Если Клиент Тогда
			Ответ = Вопрос("Указанный каталог [" + СокрЛП(ИмяКаталога) + "] не существует. Создать каталог?", РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.ОК Тогда
				СоздатьКаталог(ИмяКаталога);
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		#КонецЕсли
	КонецЕсли;

КонецФункции


катобменаСБитом = Константы.КаталогОбменаБИТ.Получить();
катобменаСБитомЗапаска = "\\partkom.local\ConfStorage1C\Exchange\1C83_bitf\Push\";
КаталогОшибок = "\\partkom.local\ConfStorage1C\Exchange\1C83_bitf\Ошибки\";
КаталогОбменаКонтрагенты = Константы.КаталогОбменаБИТ.Получить() + "КонтрагентыБит\";