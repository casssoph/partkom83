<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП20">2.01</ВерсияФормата>
	<Ид>7f055428-d242-44ee-aeb5-ca7d408f49e0    </Ид>
	<Наименование>ПартКом --&gt; БухгалтерияПредприятия_БИТ_ФИНАНС        Контрагенты</Наименование>
	<ДатаВремяСоздания>2016-07-19T10:51:54</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.0.0.14" СинонимКонфигурации="ПартКом">ПартКом</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.37.14/2.8.11.8.F" СинонимКонфигурации="Бухгалтерия предприятия, редакция 2.0">БухгалтерияПредприятия_БИТ_ФИНАНС</Приемник>
	<ПередВыгрузкойДанных>
//#Если Клиент Тогда 
//	Сообщить("Параметры.РазностнаяВыгрузка = " + Параметры.РазностнаяВыгрузка);
//#КонецЕсли;

Если Параметры.РазностнаяВыгрузка тогда

	Параметры.Вставить("Получатель", ПланыОбмена.ОбменПартКом83_БитФинанс.НайтиПоКоду(Параметры.УзелПолучатель));
	//#Если Клиент Тогда
	//	Сообщить("Параметры.УзелПолучатель = " + Параметры.УзелПолучатель);
	//	Сообщить("Параметры.Получатель = " + Параметры.Получатель);
	//	Сообщить("Параметры.НомерСообщения = " + Параметры.НомерСообщения);
	//#КонецЕсли;

 	//лВыборка = ПланыОбмена.ВыбратьИзменения(Параметры.Получатель, Параметры.НомерСообщения);
	
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ * ИЗ Справочник.Контрагенты.Изменения ГДЕ Узел = &amp;Узел "; //И НомерСообщения &lt;= &amp;НомерСообщения
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыИзменения.Узел,
	|	КонтрагентыИзменения.НомерСообщения,
	|	КонтрагентыИзменения.Ссылка
	|ПОМЕСТИТЬ всяКонтра
	|ИЗ
	|	Справочник.Контрагенты.Изменения КАК КонтрагентыИзменения
	|ГДЕ
	|	КонтрагентыИзменения.Узел = &amp;Узел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентовИзменения.Узел,
	|	ДоговорыКонтрагентовИзменения.НомерСообщения,
	|	ДоговорыКонтрагентовИзменения.Ссылка.Владелец.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов.Изменения КАК ДоговорыКонтрагентовИзменения
	|ГДЕ
	|	ДоговорыКонтрагентовИзменения.Узел = &amp;Узел
	|	И ДоговорыКонтрагентовИзменения.Ссылка.Владелец ССЫЛКА Справочник.Контрагенты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТорговыеТочкиИзменения.Узел,
	|	ТорговыеТочкиИзменения.НомерСообщения,
	|	ТорговыеТочкиИзменения.Ссылка.Владелец.Ссылка
	|ИЗ
	|	Справочник.ТорговыеТочки.Изменения КАК ТорговыеТочкиИзменения
	|ГДЕ
	|	ТорговыеТочкиИзменения.Узел = &amp;Узел
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчетаИзменения.Узел,
	|	БанковскиеСчетаИзменения.НомерСообщения,
	|	БанковскиеСчетаИзменения.Ссылка.Владелец.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета.Изменения КАК БанковскиеСчетаИзменения
	|ГДЕ
	|	БанковскиеСчетаИзменения.Узел = &amp;Узел
	|	И БанковскиеСчетаИзменения.Ссылка.Владелец ССЫЛКА Справочник.Контрагенты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФилиалыТорговыхТочекИзменения.Узел,
	|	ФилиалыТорговыхТочекИзменения.НомерСообщения,
	|	ФилиалыТорговыхТочекИзменения.ТорговаяТочка.Владелец.Ссылка
	|ИЗ
	|	РегистрСведений.ФилиалыТорговыхТочек.Изменения КАК ФилиалыТорговыхТочекИзменения
	|ГДЕ
	|	ФилиалыТорговыхТочекИзменения.Узел = &amp;Узел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	всяКонтра.Ссылка
	|ИЗ
	|	всяКонтра КАК всяКонтра
	|
	|УПОРЯДОЧИТЬ ПО
	|	всяКонтра.Ссылка.Наименование";
	
	
	Запрос.УстановитьПараметр("Узел", Параметры.Получатель);
	                                                                                  //Запрос.УстановитьПараметр("НомерСообщения", Параметры.НомерСообщения);
	лВыборка = Запрос.Выполнить().Выгрузить();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Параметры.Получатель);  //, Параметры.НомерСообщения
	
	//Пока лВыборка.Следующий() цикл
	Для каждого стр_лВыборка из лВыборка цикл
		
		лОбъект = стр_лВыборка.Ссылка;//лВыборка.Получить();
	  	лТипОбъекта = ТипЗнч(лОбъект); 
		
		Если лТипОбъекта = Тип("УдалениеОбъекта") тогда
			Продолжить;
		КонецЕсли;
		
		ттВыборка = Справочники.ТорговыеТочки.Выбрать( , лОбъект.Ссылка); 
    	Пока ттВыборка.Следующий() Цикл 

    		тт = ттВыборка.Ссылка; 
            тт_тип = ТипЗнч(тт); 
			Если тт_тип = Тип("УдалениеОбъекта") тогда
				Продолжить;
			КонецЕсли;
			
			ВыгрузитьПоПравилу(тт,,,,"Контрагенты"); //.Ссылка
    	КонецЦикла; 
		
		
		
	КонецЦикла;

КонецЕсли;</ПередВыгрузкойДанных>
	<Параметры>
		<Параметр Имя="НомерПринятого                                    " Наименование="НомерПринятого" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="НомерСообщения                                    " Наименование="НомерСообщения" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="РазностнаяВыгрузка                                " Наименование="РазностнаяВыгрузка" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="УзелПолучатель                                    " Наименование="УзелПолучатель" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Строка" ПередаватьПараметрПриВыгрузке="true"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>50</Порядок>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>ЮрФизЛицо</Код>
				<Наименование>Перечисление: Юр. / физ. лицо</Наименование>
				<Порядок>50</Порядок>
				<Источник>ПеречислениеСсылка.ЮрФизЛицо</Источник>
				<Приемник>ПеречислениеСсылка.ЮрФизЛицо</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ФизЛицо --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник>ФизЛицо</Источник>
						<Приемник>ФизЛицо</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЮрЛицо --&gt; ЮрЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЮрЛицо</Источник>
						<Приемник>ЮрЛицо</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>Справочник: Торговые точки</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если Источник.ЭтоГруппа тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>		//Покупатель = СокрЛП(ПараметрыОбъекта.Получить("Покупатель"));
		//Поставщик = СокрЛП(ПараметрыОбъекта.Получить("Поставщик"));

	//Сообщить("ТипЗнч(ПараметрыОбъекта ) = " + ТипЗнч(ПараметрыОбъекта));
	//Для Каждого ап Из ПараметрыОбъекта  цикл
	//	Сообщить(ап.Ключ + " = " + ап.Значение );	
	//КонецЦикла;
	
	// запишем данные для rls
	Если ОбъектНайден Тогда
		//не меняем филиал для найденных в БИТ объектов 07.07.2016
		Филиал = "";
	Иначе
		Филиал = СокрЛП(ПараметрыОбъекта.Получить("Филиал83"));
	КонецЕсли;
	///////////////////////////////////////Сообщить("Филиал = "  + Филиал);
	Если  НЕ Филиал = "" тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПК_ОбменСВнешнимиПрограммами.Ссылка1С КАК Проект
		|ИЗ
		|	РегистрСведений.ПК_ОбменСВнешнимиПрограммами КАК ПК_ОбменСВнешнимиПрограммами
		|ГДЕ
		|	ПК_ОбменСВнешнимиПрограммами.КодОбъектаВнешнейПрограммы ПОДОБНО &amp;КодОбъектаВнешнейПрограммы
		|	И 
		|	ПК_ОбменСВнешнимиПрограммами.ВнешняяПрограмма = &amp;ВнешняяПрограмма";
		
		Запрос.УстановитьПараметр("ВнешняяПрограмма", Перечисления.ПК_ВнешниеПрограммы.Программа1С83);
		Запрос.УстановитьПараметр("КодОбъектаВнешнейПрограммы", Филиал);
		Результат = Запрос.Выполнить().Выгрузить();	
		Если Результат.Количество() &gt; 0 тогда
			Объект.Проект = Результат[0].Проект;
			
			
			///////////////////////////////////////Сообщить("Результат[0].Проект = "  + Результат[0].Проект);
		КонецЕсли;
	КонецЕсли;
	
	ошибка_записи_конты = Ложь;
	
	Если ОбъектНайден тогда
		
		ОбъектСЦылка = Ссылка;
		
	Иначе
		
		// новеньких уложим в структуру аналогичную 1С83
		
		//Объект.Комментарий =  ?(ЗначениеЗаполнено(Объект.Комментарий),СокрЛП(Объект.Комментарий) + ";","")  +  "Покупатель = " + СокрЛП(Покупатель)+ "; Поставщик = " + СокрЛП(Поставщик);
		
		ИмяГруппыДляЗаписиНовыхЭлементов = "1С83";
		КонтраСпр = Справочники.Контрагенты;
		Родич = КонтраСпр.НайтиПоНаименованию(ИмяГруппыДляЗаписиНовыхЭлементов);
		Если Родич = КонтраСпр.ПустаяСсылка() ИЛИ Родич = Неопределено тогда
			
			Родич = Справочники.Контрагенты.СоздатьГруппу();
			Родич.УстановитьНовыйКод("Ф");
			Родич.Наименование = ИмяГруппыДляЗаписиНовыхЭлементов;
			Родич.Комментарий = "группа для записи новых эл-ов из 1С83 по умолчанию";
			
			Попытка
				Родич.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		СоРодич = КонтраСпр.ПустаяСсылка();
		Если НЕ Родич = КонтраСпр.ПустаяСсылка() тогда
			
			Родич_Имя = СокрЛП(ПараметрыОбъекта.Получить("ИмяРодителя83"));
			Родич_Имя = Лев(Родич_Имя,Найти(Родич_Имя,"/")-1);
			Если ЗначениеЗаполнено(Родич_Имя) тогда
				
				СоРодич = КонтраСпр.НайтиПоНаименованию(Родич_Имя, , Родич);
				Если СоРодич = КонтраСпр.ПустаяСсылка() Тогда
					
					СоРодич = Справочники.Контрагенты.СоздатьГруппу();
					СоРодич.УстановитьНовыйКод("Ф");
					СоРодич.Родитель = Родич.Ссылка;
					СоРодич.Наименование = Родич_Имя;
					СоРодич.Комментарий = "группа для записи новых эл-ов из 1С83 по умолчанию";
					
					Попытка
						СоРодич.Записать();
					Исключение
						///////////////////////////////////////Сообщить("не определена подгруппа");
					КонецПопытки;
					
					
				КонецЕсли;
				
			КонецЕсли;
			
			Объект.Родитель = ?(НЕ СоРодич = Справочники.Контрагенты.ПустаяСсылка(), СоРодич.Ссылка, Родич.Ссылка);
		КонецЕсли;
		
		//Объект.Поставщик = ?(Найти(Поставщик,"ЛОЖЬ"),Ложь,Истина);
		//Объект.Покупатель = ?(Найти(Покупатель,"ЛОЖЬ"),Ложь,Истина);
		
		
		Попытка
			Объект.Записать();
			
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
			Объект.Записать();
			
		Исключение
			ошибка_записи_конты = Истина;
		КонецПопытки;
		
		ОбъектСЦылка = Объект.Ссылка;
	КонецЕсли;
	
	///////////////////////////////////////Сообщить("---------------------------------------------");
	///////////////////////////////////////Сообщить(СокрлП(ОбъектСЦылка));
	///////////////////////////////////////Сообщить(СокрлП(ОбъектСЦылка.Код));
	
	
	Если ошибка_записи_конты Тогда
		// !!!!!!!!!!!!!!!!!!!!!!!!!!! поругаться на предмет ошибки записи элемента справочника Контрагенты
		
	Иначе
	
		// запишем контактную информацию
		КИ = СокрЛП(ПараметрыОбъекта.Получить("СтрКИ"));
		КИ = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КИ, "%;%");
		стр_ЮрАдрес = "";
		стр_ФактАдрес = "";
		стр_Телефон = "";
		Если КИ.Количество() = 3 тогда
			стр_ЮрАдрес = КИ[0];
			стр_ФактАдрес = КИ[1];
			стр_Телефон = КИ[2];
		КонецЕсли;
		
		НаборЗаписи  = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
		
		Если ЗначениеЗаполнено(стр_ЮрАдрес) тогда
			
			тТип = Перечисления.ТипыКонтактнойИнформации.Адрес;
			тВид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
			
			НаборЗаписи.Отбор.Объект.Установить(ОбъектСЦылка);
			НаборЗаписи.Отбор.Тип.Установить(тТип);
			НаборЗаписи.Отбор.Вид.Установить(тВид);
			НаборЗаписи.Очистить();
			
			Наб = НаборЗаписи.Добавить();
			Наб.Объект = ОбъектСЦылка;
			Наб.Тип = тТип;
			Наб.Вид = тВид;
			Наб.Представление = стр_ЮрАдрес;
			
			Попытка
				НаборЗаписи.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стр_ФактАдрес) тогда
			тТип = Перечисления.ТипыКонтактнойИнформации.Адрес;
			тВид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
			
			НаборЗаписи.Отбор.Объект.Установить(ОбъектСЦылка);
			НаборЗаписи.Отбор.Тип.Установить(тТип);
			НаборЗаписи.Отбор.Вид.Установить(тВид);
			НаборЗаписи.Очистить();
			
			Наб = НаборЗаписи.Добавить();
			Наб.Объект = ОбъектСЦылка;
			Наб.Тип = тТип;
			Наб.Вид = тВид;
			Наб.Представление = стр_ФактАдрес;
			
			Попытка
				НаборЗаписи.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стр_Телефон) тогда
			тТип = Перечисления.ТипыКонтактнойИнформации.Телефон;
			тВид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
			
			НаборЗаписи.Отбор.Объект.Установить(ОбъектСЦылка);
			НаборЗаписи.Отбор.Тип.Установить(тТип);
			НаборЗаписи.Отбор.Вид.Установить(тВид);
			
			НаборЗаписи.Очистить();
			
			Наб = НаборЗаписи.Добавить();
			Наб.Объект = ОбъектСЦылка;
			Наб.Тип = тТип;
			Наб.Вид = тВид;
			Наб.Представление = стр_Телефон;
			
			Попытка
				НаборЗаписи.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		// запишем счета
		МногострочнаяСтрока = ПараметрыОбъекта.Получить("БанковскиеСчета_ТЗ");
		Если МногострочнаяСтрока = "" тогда
		Иначе
			ВременныйТекст = Новый ТекстовыйДокумент;
		    ВременныйТекст.ДобавитьСтроку(МногострочнаяСтрока);
			
		    Для ном = 1 По ВременныйТекст.КоличествоСтрок() Цикл
				ВходДанныеПоСчету = Ложь;
				
				ТекСтрока = ВременныйТекст.ПолучитьСтроку(Ном);
				
				стр_Основной = "";
				стр_Банк = "";
				стр_ВалютаДенежныхСредств = "";
				стр_ВидСчета = "";
				стр_ДатаОткрытия = "";
				стр_ДатаЗакрытия = "";
				стр_МесяцПрописью = "";
				стр_Наименование = "";
				стр_НомерИДатаРазрешения = "";
				стр_НомерСчета = "";
				стр_СуммаБезКопеек = "";
				стр_ТекстКорреспондента = "";
				стр_ТекстНазначения = "";
				стр_Представление = "";
				стр_ПометкаУдаления = "";
				
				///////////////////////////////////////Сообщить("ТекСтрокаСчета = " + ТекСтрока);
				Если ЗначениеЗаполнено(ТекСтрока) тогда
				ТекСчет = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекСтрока, "%;%");
				///////////////////////////////////////Сообщить("ТекСчет.Количество() = " + ТекСчет.Количество());
				Если ТекСчет.Количество() = 15 тогда
					
					стр_Основной = ТекСчет[0];
					стр_Банк = ТекСчет[1];
					стр_ВалютаДенежныхСредств = ТекСчет[2];
					стр_ВидСчета = ТекСчет[3];
					стр_ДатаОткрытия = ТекСчет[4];
					стр_ДатаЗакрытия = ТекСчет[5];
					стр_МесяцПрописью = ТекСчет[6];
					стр_Наименование = ТекСчет[7];
					стр_НомерИДатаРазрешения = ТекСчет[8];
					стр_НомерСчета = ТекСчет[9];
					стр_СуммаБезКопеек = ТекСчет[10];
					стр_ТекстКорреспондента = ТекСчет[11];
					стр_ТекстНазначения = ТекСчет[12];
					стр_Представление = ТекСчет[7];//ТекСчет[13];
					стр_ПометкаУдаления = ТекСчет[14];
					
					ВходДанныеПоСчету = Истина;
				КонецЕсли;
				///////////////////////////////////////Сообщить("ВходДанныеПоСчету = " + ВходДанныеПоСчету);

				Если ВходДанныеПоСчету тогда
					 стр_Основной =  ?(стр_Основной = "Нет",Ложь,Истина);
					 стр_Банк = Справочники.Банки.НайтиПоКоду(стр_Банк);
					 Если НЕ ЗначениеЗаполнено(стр_Банк) тогда
						 // !!!!!!!!!!!!!!!!!!!!!!!!!!! поругаться
					 Иначе 
					 стр_ВалютаДенежныхСредств = Справочники.Валюты.НайтиПоКоду(стр_ВалютаДенежныхСредств);
					 стр_ВидСчета = СокрЛП(стр_ВидСчета);
					 стр_ДатаОткрытия = Дата(Число(Сред(стр_ДатаОткрытия,7,4)), Число(Сред(стр_ДатаОткрытия,4,2)), Число(Лев(стр_ДатаОткрытия,2)), 0, 0, 0) ;
					 стр_ДатаЗакрытия = Дата(Число(Сред(стр_ДатаЗакрытия,7,4)), Число(Сред(стр_ДатаЗакрытия,4,2)), Число(Лев(стр_ДатаЗакрытия,2)), 0, 0, 0) ;
					 стр_МесяцПрописью = СокрЛП(стр_МесяцПрописью);
					 стр_Наименование = СокрЛП(стр_Наименование);
					 //Сообщить(стр_Наименование);
					 стр_НомерИДатаРазрешения = СокрЛП(стр_НомерИДатаРазрешения);
					 стр_НомерСчета = СокрЛП(стр_НомерСчета);
					 стр_СуммаБезКопеек = ?(стр_СуммаБезКопеек = "Нет",Ложь,Истина);
					 стр_ТекстКорреспондента = СокрЛП(стр_ТекстКорреспондента);
					 стр_ТекстНазначения = СокрЛП(стр_ТекстНазначения);
					 стр_Представление = СокрЛП(стр_Представление);
					 стр_ПометкаУдаления = ?(стр_ПометкаУдаления = "Нет",Ложь,Истина); 
				
				
					// запросим текущие данные по счетам
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	БанковскиеСчета.Ссылка КАК ТекСчет
					|ИЗ
					|	Справочник.БанковскиеСчета КАК БанковскиеСчета
					|ГДЕ
					|	БанковскиеСчета.Владелец = &amp;Владелец
					|   И БанковскиеСчета.НомерСчета = &amp;стр_НомерСчета";

					Запрос.УстановитьПараметр("Владелец", ОбъектСЦылка);
					Запрос.УстановитьПараметр("стр_НомерСчета", стр_НомерСчета);

					Результат = Запрос.Выполнить().Выгрузить();
							
					ТекСчет = Справочники.БанковскиеСчета.ПустаяСсылка();
					Если Результат.Количество() &gt; 0 тогда
						ТекСчет = Результат[0].ТекСчет;
					КонецЕсли;
					
					признак_новый = Ложь;
					Если ТекСчет = Справочники.БанковскиеСчета.ПустаяСсылка() тогда
						ТекСчет = Справочники.БанковскиеСчета.СоздатьЭлемент();
							
						ТекСчет.Владелец = ОбъектСЦылка;
						ТекСчет.Наименование = стр_Наименование;
						
						//Сообщить("стр_Наименование = " + стр_Наименование + " стр_Представление = " + стр_Представление);
						
						//ТекСчет.Представление = стр_Представление;
						ТекСчет.НомерСчета  = стр_НомерСчета;
						ТекСчет.Банк = стр_Банк;
						ТекСчет.ТекстКорреспондента = стр_ТекстКорреспондента;
						ТекСчет.ТекстНазначения  = стр_ТекстНазначения;
						ТекСчет.ВидСчета = стр_ВидСчета;
						ТекСчет.ВалютаДенежныхСредств = стр_ВалютаДенежныхСредств;
						ТекСчет.НомерИДатаРазрешения = стр_НомерИДатаРазрешения;
						ТекСчет.ДатаОткрытия = стр_ДатаОткрытия;
						ТекСчет.ДатаЗакрытия = стр_ДатаЗакрытия;
						ТекСчет.МесяцПрописью = стр_МесяцПрописью;
						ТекСчет.СуммаБезКопеек = стр_СуммаБезКопеек;
								
						признак_новый = Истина;
					Иначе
						ТекСчет = ТекСчет.ПолучитьОбъект();
					КонецЕсли;
					
					///////////////////////////////////////Сообщить("признак_новый счет = " + признак_новый);
					
					
					Если стр_ПометкаУдаления ИЛИ стр_ПометкаУдаления Тогда
						ТекСчет.ПометкаУдаления = Истина;
					Иначе
						ТекСчет.ПометкаУдаления = Ложь;
					КонецЕсли;
					
					Попытка
					    ТекСчет.Записать();
						
						///////////////////////////////////////Сообщить("ТекСчет = " + ТекСчет);
						
					Исключение
						// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ругаться!		
					    //Сообщить("Не удалось записать объект """ + ТекСчет + """!
						//	                   |" + ОписаниеОшибки());
					КонецПопытки;
					
					//Попытка
					//	о_ОбъектСЦылка = ОбъектСЦылка.ПолучитьОбъект();
					//	о_ОбъектСЦылка.ОсновнойБанковскийСчет = ТекСчет.Ссылка;
					//	о_ОбъектСЦылка.Записать();
					//Исключение
					//	
					//КонецПопытки;
					 КонецЕсли;
				КонецЕсли;
				КонецЕсли;
			КонецЦикла;
				
			
		КонецЕсли;
		
		// запишем договора
		МногострочнаяСтрока2 = ПараметрыОбъекта.Получить("Договора_ТЗ");
		Если МногострочнаяСтрока2 = "" тогда
		Иначе
			ВременныйТекст2 = Новый ТекстовыйДокумент;
		    ВременныйТекст2.ДобавитьСтроку(МногострочнаяСтрока2);
			
			///////////////////////////////////////Сообщить("МногострочнаяСтрока2 = " + СОкрЛП(МногострочнаяСтрока2));
			///////////////////////////////////////Сообщить("ВременныйТекст2.КоличествоСтрок() = " + СОкрлП(ВременныйТекст2.КоличествоСтрок()));
			
		    Для ном = 1 По ВременныйТекст2.КоличествоСтрок() Цикл
				ВходДанныеПоДоговору = Ложь;
				
				ТекСтрока = ВременныйТекст2.ПолучитьСтроку(Ном);
				///////////////////////////////////////Сообщить("ном = " + ном);
				///////////////////////////////////////Сообщить("ТекСтрокаПоДоговору = " + ТекСтрока);
				
				стр_ФирмаУИД = "";
				стр_ВидДоговора = "";
				стр_ВалютаКод = "";
				стр_Наименование = "";
				стр_СрокДействия = "";
				стр_Дата = "";
				стр_Номер = "";
				стр_Комментарий = "";
				стр_ДоговорПодписан = "";
				стр_ДоговорНаОферту = "";
				стр_ДатаДоговораОферты = "";
				стр_ДоговорПриостановлен = "";
				стр_ПометкаУдаления = "";
				
				ТекДоговор = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекСтрока, "%;%");
				Если ТекДоговор.Количество() = 13 тогда
					
					стр_ФирмаУИД = ТекДоговор[0];
					стр_ВидДоговора = ТекДоговор[1];
					стр_ВалютаКод = ТекДоговор[2];
					стр_Наименование = ТекДоговор[3];
					стр_СрокДействия = ТекДоговор[4];
					стр_Дата = ТекДоговор[5];
					стр_Номер = ТекДоговор[6];
					стр_Комментарий = ТекДоговор[7];
					стр_ДоговорПодписан = ТекДоговор[8];
					стр_ДоговорНаОферту = ТекДоговор[9];
					стр_ДатаДоговораОферты = ТекДоговор[10];
					стр_ДоговорПриостановлен = ТекДоговор[11];
					стр_ПометкаУдаления = ТекДоговор[12];
					
					стр_ДоговорVMI = Ложь;
					
					ВходДанныеПоДоговору = Истина;
				КонецЕсли;
				
				///////////////////////////////////////Сообщить("ВходДанныеПоДоговору = " + ВходДанныеПоДоговору);
				
				Если ВходДанныеПоДоговору тогда
					
					// конвертнём входящие данные
					
					//СокрЛП(стртз.Организация.УникальныйИдентификатор()) + "%;%" + 
					ошибка_поиска_фирмы = Ложь;
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПК_ОбменСВнешнимиПрограммами.Ссылка1С КАК Проект
					|ИЗ
					|	РегистрСведений.ПК_ОбменСВнешнимиПрограммами КАК ПК_ОбменСВнешнимиПрограммами
					|ГДЕ
					|	ПК_ОбменСВнешнимиПрограммами.КодОбъектаВнешнейПрограммы = &amp;КодОбъектаВнешнейПрограммы
					|	И 
					|	ПК_ОбменСВнешнимиПрограммами.ВнешняяПрограмма = &amp;ВнешняяПрограмма";
					
					Запрос.УстановитьПараметр("ВнешняяПрограмма", Перечисления.ПК_ВнешниеПрограммы.Программа1С83);
					Запрос.УстановитьПараметр("КодОбъектаВнешнейПрограммы", стр_ФирмаУИД);
					Результат = Запрос.Выполнить().Выгрузить();	
					Если Результат.Количество() &gt; 0 тогда
						стр_ФирмаУИД = Результат[0].Проект;
					Иначе
						ошибка_поиска_фирмы = Истина;
					КонецЕсли;
					
					Если ошибка_поиска_фирмы = Истина тогда
						// !!!!!!!!!!!!!!!!!!!!!!!!!!! поругаться на предмет отсутствия связки по организаии
						
					Иначе
					
						//Покупатель = СокрЛП(ПараметрыОбъекта.Получить("Покупатель"));
						//Поставщик = СокрЛП(ПараметрыОбъекта.Получить("Поставщик"));
						
						//СокрЛП(стртз.ВидДоговора) + "%;%" + 
						Если стр_ВидДоговора = "С покупателем" Тогда
							стр_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
						Иначе
							Если стр_ВидДоговора = "ОтветХранение" Тогда
								стр_ДоговорVMI = Истина;
							КонецЕсли;
							стр_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
						КонецЕсли;
							
						//СокрЛП(стртз.ВалютаВзаиморасчетов.Код) + "%;%" + 
						стр_ВалютаКод = Справочники.Валюты.НайтиПоКоду(стр_ВалютаКод);
						
						//СокрЛП(стртз.Наименование) + "%;%" +
						стр_Наименование = СокрЛП(стр_Наименование);
						
						//СокрЛП(стртз.СрокДействия) + "%;%" + 
						стр_СрокДействия = Дата(Число(Сред(стр_СрокДействия,7,4)), Число(Сред(стр_СрокДействия,4,2)), Число(Лев(стр_СрокДействия,2)), 0, 0, 0) ;
						
						//СокрЛП(стртз.Дата) + "%;%" + 
						стр_Дата = Дата(Число(Сред(стр_Дата,7,4)), Число(Сред(стр_Дата,4,2)), Число(Лев(стр_Дата,2)), 0, 0, 0) ;
						
						//СокрЛП(стртз.Номер) + "%;%" + 
						стр_Номер = СокрЛП(стр_Номер);
						
						//СокрЛП(стртз.Комментарий) + "%;%" +
						стр_Комментарий = СокрлП(стр_Комментарий);
						
						//СокрЛП(стртз.ДоговорПодписан) + "%;%" + 
						стр_ДоговорПодписан = ?(стр_ДоговорПодписан = "Нет",Ложь,Истина);
						
						//СокрЛП(стртз.ДоговорНаОферту) + "%;%" + 
						стр_ДоговорНаОферту = ?(стр_ДоговорНаОферту = "Нет",Ложь,Истина);
						
						//СокрЛП(стртз.ДатаДоговораОферты) + "%;%" + 
						стр_ДатаДоговораОферты = Дата(Число(Сред(стр_ДатаДоговораОферты,7,4)), Число(Сред(стр_ДатаДоговораОферты,4,2)), Число(Лев(стр_ДатаДоговораОферты,2)), 0, 0, 0) ;

						//СокрЛП(стртз.ДоговорПриостановлен) + "%;%" + 
						стр_ДоговорПриостановлен = ?(стр_ДоговорПриостановлен = "Нет",Ложь,Истина);
						
						//СокрЛП(стртз.ПометкаУдаления) + "%;%" + Символы.ПС;
						стр_ПометкаУдаления = ?(стр_ПометкаУдаления = "Нет",Ложь,Истина);
						
						//ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.СтандартныйДоговор;
						ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.ПрочиеДоговоры;
						Если стр_ДоговорНаОферту тогда
							ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.ДоговорОферты;
						ИначеЕсли стр_ДоговорVMI тогда
							ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.ДоговорVMI;
						КонецЕсли;
						
						
						// запросим текущие данные по договорам
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	ДоговорыКонтрагентов.Ссылка КАК ТекДоговор
						|ИЗ
						|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
						|ГДЕ
						|	ДоговорыКонтрагентов.Владелец = &amp;Владелец
						|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &amp;ВалютаВзаиморасчетов
						|	И ДоговорыКонтрагентов.Организация = &amp;Организация
						|	И ДоговорыКонтрагентов.ВидДоговора = &amp;ВидДоговора";
						
						Если ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.ПрочиеДоговоры Тогда
							Запрос.Текст = Запрос.Текст + "	И ДоговорыКонтрагентов.Парт_ВидДоговора В (&amp;Парт_ВидДоговора)";
						Иначе
							Запрос.Текст = Запрос.Текст + "	И ДоговорыКонтрагентов.Парт_ВидДоговора = &amp;Парт_ВидДоговора";
						КонецЕсли;

						Запрос.УстановитьПараметр("Владелец", ОбъектСЦылка);
						Запрос.УстановитьПараметр("Организация", стр_ФирмаУИД);
						Запрос.УстановитьПараметр("ВидДоговора", стр_ВидДоговора);
						
						Если ТекДоговор_Парт_ВидДоговора = Перечисления.Парт_ВидДоговора.ПрочиеДоговоры Тогда
							СписокВидовБИТ = Новый СписокЗначений;
							СписокВидовБИТ.Добавить(Перечисления.Парт_ВидДоговора.ПрочиеДоговоры);
							СписокВидовБИТ.Добавить(Перечисления.Парт_ВидДоговора.СтандартныйДоговор);
						    Запрос.УстановитьПараметр("Парт_ВидДоговора", СписокВидовБИТ);
						Иначе
							Запрос.УстановитьПараметр("Парт_ВидДоговора", ТекДоговор_Парт_ВидДоговора);
						КонецЕсли;
						
						Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", стр_ВалютаКод);
						Результат = Запрос.Выполнить().Выгрузить();
						
						ТекДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
						Если Результат.Количество() &gt; 0 тогда
							ТекДоговор = Результат[0].ТекДоговор;
						КонецЕсли;
						
						признак_новый = Ложь;
						Если ТекДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка() тогда
							ТекДоговор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
							
							ТекДоговор.Владелец = ОбъектСЦылка;
							ТекДоговор.Организация = стр_ФирмаУИД;
							ТекДоговор.ВидДоговора = стр_ВидДоговора;
							ТекДоговор.Парт_ВидДоговора = ТекДоговор_Парт_ВидДоговора;
							ТекДоговор.ВалютаВзаиморасчетов = стр_ВалютаКод;
							
							ТекДоговор.Наименование = стр_Наименование;
							ТекДоговор.Комментарий = стр_Комментарий;
							ТекДоговор.Дата = стр_Дата;
							ТекДоговор.Номер = стр_Номер;
							ТекДоговор.СрокДействия = стр_СрокДействия;
							
							признак_новый = Истина;
						Иначе
							ТекДоговор = ТекДоговор.ПолучитьОбъект();
						КонецЕсли;
						
						///////////////////////////////////////Сообщить("признак_новый = " + признак_новый);
						
						//стр_ДоговорПодписан
						//стр_ДатаДоговораОферты
						
						//Если стр_ДоговорПриостановлен ИЛИ стр_ПометкаУдаления Тогда
						//	ТекДоговор.ПометкаУдаления = Истина;
						//Иначе
						//	ТекДоговор.ПометкаУдаления = Ложь;
						//КонецЕсли;
						
						Попытка
						    ТекДоговор.Записать();
							
							///////////////////////////////////////Сообщить("записал " + ТекДоговор.Код);
						Исключение
							
						    Сообщить("Не удалось записать объект """ + ТекДоговор + """!
						                   |" + ОписаниеОшибки());
										   
							//Сообщить("признак_новый = " + СокрЛП(признак_новый));
							//Сообщить("ОбъектСЦылка = " + СокрЛП(ОбъектСЦылка));
							//Сообщить("стр_ФирмаУИД = " + СокрЛП(стр_ФирмаУИД));
							//Сообщить("стр_ВидДоговора = " + СокрЛП(стр_ВидДоговора));
							//Сообщить("ТекДоговор_Парт_ВидДоговора = " + СокрЛП(ТекДоговор_Парт_ВидДоговора));
							//Сообщить("стр_ВалютаКод = " + СокрЛП(стр_ВалютаКод));
							//Сообщить("стр_Наименование = " + СокрЛП(стр_Наименование));
							//Сообщить("стр_Комментарий = " + СокрЛП(стр_Комментарий));
							//Сообщить("стр_Дата = " + СокрЛП(стр_Дата));
							//Сообщить("стр_Номер = " + СокрЛП(стр_Номер));
							//Сообщить("стр_СрокДействия = " + СокрЛП(стр_СрокДействия));
							//Сообщить("стр_ДоговорПриостановлен = " + СокрЛП(стр_ДоговорПриостановлен));
							//Сообщить("стр_ПометкаУдаления = " + СокрЛП(стр_ПометкаУдаления));
										   
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
				
		    КонецЦикла;	
		КонецЕсли;
	
	КонецЕсли;</ПослеЗагрузки>
				<НеЗамещатьОбъектСозданныйВИнформационнойБазеПриемнике>true</НеЗамещатьОбъектСозданныйВИнформационнойБазеПриемнике>
				<Источник>СправочникСсылка.ТорговыеТочки</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; УИД</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УИД" Вид="Реквизит" Тип="Строка"/>
						<ПриВыгрузке>Значение = Источник.Ссылка.УникальныйИдентификатор();</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>--&gt; УИД_Контрагента83</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УИД_Контрагента83" Вид="Реквизит" Тип="Строка"/>
						<ПриВыгрузке>Значение = Источник.Владелец.Ссылка.УникальныйИдентификатор();</ПриВыгрузке>
					</Свойство>
					<Свойство Обязательное="true">
						<Код>6</Код>
						<Наименование>--&gt; ЭтоГруппа</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПриВыгрузке>Значение = Ложь;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ЮрФизЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
						<КодПравилаКонвертации>ЮрФизЛицо                                         </КодПравилаКонвертации>
						<ПриВыгрузке>Значение = Источник.Владелец.ЮрФизЛицо;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ИНН</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Источник.Владелец.ИНН;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<ПриВыгрузке>Значение = Источник.Владелец.НаименованиеПолное;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>КПП --&gt; КПП</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ИмяРодителя83</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ИмяРодителя83</ИмяПараметраДляПередачи>
						<ПриВыгрузке>Значение = Источник.Владелец.ПолноеНаименование();</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Покупатель</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Покупатель" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.Владелец.Покупатель;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; Поставщик</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поставщик" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Источник.Владелец.Поставщик;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; Филиал83</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Филиал83</ИмяПараметраДляПередачи>
						<ПриВыгрузке>
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ФилиалыТорговыхТочек.Филиал КАК ФилиалТТ
|ИЗ
|	РегистрСведений.ФилиалыТорговыхТочек КАК ФилиалыТорговыхТочек
|ГДЕ
|	ФилиалыТорговыхТочек.ТорговаяТочка = &amp;ТорговаяТочка";

Запрос.УстановитьПараметр("ТорговаяТочка", Источник.Ссылка);
//Сообщить("поиск филиала по ТТ = " + СокрлП(Источник.Ссылка));
Результат = Запрос.Выполнить().Выгрузить();

Значение = "";
Если Результат.Количество() &gt; 0 тогда
	Значение = Результат[0].ФилиалТТ.Ссылка.УникальныйИдентификатор();
	//Сообщить("Значение = " + СокрлП(Значение));
КонецЕсли;
//Сообщить("-------------------------");</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; СтрКИ</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>СтрКИ</ИмяПараметраДляПередачи>
						<ПриВыгрузке>СтрИнф = "";

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	КонтактнаяИнформация.Объект,
|	КонтактнаяИнформация.Тип,
|	КонтактнаяИнформация.Вид,
|	КонтактнаяИнформация.Представление,
|	ВЫБОР
|		КОГДА КонтактнаяИнформация.Вид = &amp;СпрВидыКИюрадр
|			ТОГДА КонтактнаяИнформация.Представление
|		ИНАЧЕ """"
|	КОНЕЦ КАК ЮрАдрес,
|	ВЫБОР
|		КОГДА КонтактнаяИнформация.Вид = &amp;СпрВидыКИфактадр
|			ТОГДА КонтактнаяИнформация.Представление
|		ИНАЧЕ """"
|	КОНЕЦ КАК ФактАдрес,
|	ВЫБОР
|		КОГДА КонтактнаяИнформация.Вид = &amp;СпрВидыКИтелефон
|			ТОГДА КонтактнаяИнформация.Представление
|		ИНАЧЕ """"
|	КОНЕЦ КАК Телефон,
|	""итого инфы по контре"" КАК Ит
|ПОМЕСТИТЬ рез
|ИЗ
|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
|ГДЕ
|	(КонтактнаяИнформация.Объект = &amp;Объект
|			ИЛИ КонтактнаяИнформация.Объект = &amp;Объект2)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	рез.Ит,
|	МАКСИМУМ(рез.ЮрАдрес) КАК ЮрАдрес,
|	МАКСИМУМ(рез.ФактАдрес) КАК ФактАдрес,
|	МАКСИМУМ(рез.Телефон) КАК Телефон
|ИЗ
|	рез КАК рез
|
|СГРУППИРОВАТЬ ПО
|	рез.Ит";

Запрос.УстановитьПараметр("Объект", Источник.Ссылка);
Запрос.УстановитьПараметр("Объект2", Источник.Владелец.Ссылка);
Запрос.УстановитьПараметр("СпрВидыКИюрадр", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
Запрос.УстановитьПараметр("СпрВидыКИфактадр", Справочники.ВидыКонтактнойИнформации.ФактАдресТорговойТочки);
Запрос.УстановитьПараметр("СпрВидыКИтелефон", Справочники.ВидыКонтактнойИнформации.ТелефонТорговойТочки);

Результат = Запрос.Выполнить().Выгрузить();
Если Результат.Количество() &gt; 0 тогда
	СтрИнф = Результат[0].ЮрАдрес + "%;%" + Результат[0].ФактАдрес + "%;%" + Результат[0].Телефон;	
КонецЕсли;

Значение = СтрИнф;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; Договора_ТЗ</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Договора_ТЗ</ИмяПараметраДляПередачи>
						<ПриВыгрузке>
стр = "";
Значение = стр;

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ДоговорыКонтрагентов.Организация,
|	ДоговорыКонтрагентов.ВидДоговора,
|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
|	ДоговорыКонтрагентов.Наименование,
|	ДоговорыКонтрагентов.СрокДействия,
|	ДоговорыКонтрагентов.Дата,
|	ДоговорыКонтрагентов.Номер,
|	ДоговорыКонтрагентов.Комментарий,
|	ДоговорыКонтрагентов.ДоговорПодписан,
|	ДоговорыКонтрагентов.ДоговорНаОферту,
|	ДоговорыКонтрагентов.ДатаДоговораОферты,
|	ДоговорыКонтрагентов.ДоговорПриостановлен,
|	ДоговорыКонтрагентов.ПометкаУдаления
|ИЗ
|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
|ГДЕ
|	ДоговорыКонтрагентов.Владелец = &amp;Владелец
|   И ДоговорыКонтрагентов.ВидДоговора В (&amp;ВидыДоговоров)
|	И НЕ ДоговорыКонтрагентов.СлужебныйДоговор
|УПОРЯДОЧИТЬ ПО
|	ДоговорыКонтрагентов.Организация,
|	ДоговорыКонтрагентов.ВидДоговора,
|	ДоговорыКонтрагентов.Дата,
|	ДоговорыКонтрагентов.СрокДействия,
|	ДоговорыКонтрагентов.ДоговорПриостановлен,
|	ДоговорыКонтрагентов.ПометкаУдаления
|";

ВидыДоговоров = Новый Массив;
ВидыДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
ВидыДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
ВидыДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.ОтветХранение);

Запрос.УстановитьПараметр("Владелец", Источник.Владелец);
Запрос.УстановитьПараметр("ВидыДоговоров", ВидыДоговоров);

Результат = Запрос.Выполнить().Выгрузить();

Если Результат.Количество() &gt; 0 тогда
	//Сообщить(Результат.Количество());
	Для каждого стртз из Результат цикл
			стр = стр + 
				СокрЛП(стртз.Организация.УникальныйИдентификатор()) + "%;%" + 
				СокрЛП(стртз.ВидДоговора) + "%;%" + 
				СокрЛП(стртз.ВалютаВзаиморасчетов.Код) + "%;%" + 
				СокрЛП(стртз.Наименование) + "%;%" + 
				СокрЛП(стртз.СрокДействия) + "%;%" + 
				СокрЛП(стртз.Дата) + "%;%" + 
				СокрЛП(стртз.Номер) + "%;%" + 
				СокрЛП(стртз.Комментарий) + "%;%" + 
				СокрЛП(стртз.ДоговорПодписан) + "%;%" + 
				СокрЛП(стртз.ДоговорНаОферту) + "%;%" + 
				СокрЛП(стртз.ДатаДоговораОферты) + "%;%" + 
				СокрЛП(стртз.ДоговорПриостановлен) + "%;%" + 
				СокрЛП(стртз.ПометкаУдаления) + "%;%" + Символы.ПС;
				
	КонецЦикла;
	//Сообщить(стр);
	Значение = стр;
КонецЕсли;</ПриВыгрузке>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; БанковскиеСчета_ТЗ</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>БанковскиеСчета_ТЗ</ИмяПараметраДляПередачи>
						<ПриВыгрузке>стр = "";
Значение = стр;

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ВЫБОР
|		КОГДА БанковскиеСчета.Владелец.ОсновнойБанковскийСчет.Ссылка = БанковскиеСчета.Ссылка ТОГДА Истина
|		ИНАЧЕ Ложь
|	КОНЕЦ КАК Основной,
|	БанковскиеСчета.Банк.Код КАК Банк,
|	БанковскиеСчета.ВалютаДенежныхСредств,
|	БанковскиеСчета.ВидСчета,
|	БанковскиеСчета.ДатаОткрытия,
|	БанковскиеСчета.ДатаЗакрытия,
|	БанковскиеСчета.МесяцПрописью,
|	БанковскиеСчета.Наименование,
|	БанковскиеСчета.НомерИДатаРазрешения,
|	БанковскиеСчета.НомерСчета,
|	БанковскиеСчета.СуммаБезКопеек,
|	БанковскиеСчета.ТекстКорреспондента,
|	БанковскиеСчета.ТекстНазначения,
|	БанковскиеСчета.Представление,
|	БанковскиеСчета.ПометкаУдаления
|	
|ИЗ
|	Справочник.БанковскиеСчета КАК БанковскиеСчета
|ГДЕ
|	БанковскиеСчета.Владелец = &amp;Владелец";

Запрос.УстановитьПараметр("Владелец", Источник.Владелец);
Результат = Запрос.Выполнить().Выгрузить();

Если Результат.Количество() &gt; 0 тогда
	//Сообщить(Результат.Количество());
	Для каждого стртз из Результат цикл
			стр = стр + 
				СокрЛП(стртз.Основной) + "%;%" +
				СокрЛП(стртз.Банк) + "%;%" + 
				СокрЛП(стртз.ВалютаДенежныхСредств.Код) + "%;%" + 
				СокрЛП(стртз.ВидСчета) + "%;%" + 
				СокрЛП(стртз.ДатаОткрытия) + "%;%" + 
				СокрЛП(стртз.ДатаЗакрытия) + "%;%" + 
				СокрЛП(стртз.МесяцПрописью) + "%;%" + 
				СокрЛП(стртз.Наименование) + "%;%" + 
				СокрЛП(стртз.НомерИДатаРазрешения) + "%;%" + 
				СокрЛП(стртз.НомерСчета) + "%;%" + 
				СокрЛП(стртз.СуммаБезКопеек) + "%;%" + 
				СокрЛП(стртз.ТекстКорреспондента) + "%;%" + 
				СокрЛП(стртз.ТекстНазначения) + "%;%" +
				СокрЛП(стртз.Представление) + "%;%" +
				СокрЛП(стртз.ПометкаУдаления) + "%;%" + Символы.ПС;
	КонецЦикла;
	//Сообщить(стр);
	Значение = стр;
КонецЕсли;</ПриВыгрузке>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>ТорговыеТочки</Код>
				<Наименование>ТорговыеТочки</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.ТорговыеТочки</ОбъектВыборки>
				<ПередОбработкойПравила>Если Параметры.РазностнаяВыгрузка тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы/>
	<Запросы/>
</ПравилаОбмена>