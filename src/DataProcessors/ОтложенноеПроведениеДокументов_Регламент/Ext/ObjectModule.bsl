//#Если Сервер тогда

Процедура ВыполнитьОтложеннуюОбработку(вхСсылкаНаДокумент, вхРежимЗаписи, ДопПараметры = Неопределено) Экспорт
	
	
	СтруктураПараметровИсторииДопроведения = Новый Структура("Объект, ДатаДокумента, Проведен, Комментарий", вхСсылкаНаДокумент);
	Если ДопПараметры <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПараметровИсторииДопроведения, ДопПараметры);
	КонецЕсли;
	
	
	лТип = ТипЗнч(вхСсылкаНаДокумент);
	лМетаданныеДокумента = Метаданные.НайтиПоТипу(лТип);
	Если (лМетаданныеДокумента <> Неопределено) И Метаданные.Документы.Содержит(лМетаданныеДокумента)
		И (лМетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить) тогда
		
		Если  лМетаданныеДокумента = Метаданные.Документы.РеализацияТоваровУслуг
			ИЛИ лМетаданныеДокумента = Метаданные.Документы.ЗаявкаПокупателя Или 
			лМетаданныеДокумента = Метаданные.Документы.ПеремещениеТоваров
			ИЛИ лМетаданныеДокумента = Метаданные.Документы.ВозвратТоваровОтПокупателя Тогда 
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Иначе	
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Автоматический);
		КонецЕсли;
		
		Попытка
			лОтказ = Ложь;
			Если // лТип = Тип("ДокументСсылка.ПеремещениеТоваров")
				лТип = Тип("ДокументСсылка.ЗаказПоставщику")
				//ИЛИ лТип = Тип("ДокументСсылка.ЗаявкаПокупателя")
				ИЛИ лТип = Тип("ДокументСсылка.ПерестикеровкаПереоценка")
				ИЛИ лТип = Тип("ДокументСсылка.ПереоценкаОстатковПоставщика") 
				ИЛИ лТип = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") 
				//ИЛИ лТип = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя")
				ИЛИ лТип = Тип("ДокументСсылка.СписаниеТоваров") 
				ИЛИ лТип = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
				
				//История допроведения
				СтруктураПараметровИсторииДопроведения.Комментарий = "Отложенное проведение. Запись удалена из регистра без допроведения документа.";
				РегистрыСведений.ОтложеннаяОбработкаОбъектовИсторияОбработки.Добавить(СтруктураПараметровИсторииДопроведения);
				
			Иначе
				лМенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(вхСсылкаНаДокумент);
				Если вхРежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
					лМенеджерДокумента.ВыполнитьПроведение(вхСсылкаНаДокумент, лОтказ);
				Иначе
					лМенеджерДокумента.ВыполнитьОтменуПроведения(вхСсылкаНаДокумент, лОтказ);
				КонецЕсли;
				
				//ДокументОбъект = вхСсылкаНаДокумент.ПолучитьОбъект();
				//ДокументОбъект.Записать(вхРежимЗаписи);
				
				//История допроведения
				СтруктураПараметровИсторииДопроведения.Комментарий = "Отложенное проведение. Запись удалена из регистра после допроведения (записи).";
				РегистрыСведений.ОтложеннаяОбработкаОбъектовИсторияОбработки.Добавить(СтруктураПараметровИсторииДопроведения);
				
			КонецЕсли;
			
			// убираем документ из регистра "ОтложеннаяОбработкаОбъектов"
			//Если лОтказ Тогда 
			//	ВызватьИсключение "Документ не проведен";
			//КонецЕсли;
			
			лНаборЗаписей = РегистрыСведений.ОтложеннаяОбработкаОбъектов.СоздатьНаборЗаписей();
			лНаборЗаписей.Отбор.Объект.Установить(вхСсылкаНаДокумент);
			лНаборЗаписей.Записать(Истина);	
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			//История допроведения
			СтруктураПараметровИсторииДопроведения.Комментарий = "Отложенное проведение. Не удалось допровести документ."+ОписаниеОшибки();
			РегистрыСведений.ОтложеннаяОбработкаОбъектовИсторияОбработки.Добавить(СтруктураПараметровИсторииДопроведения);
			
			ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;       			
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	Р.Объект КАК Ссылка,
	|	Р.ДатаДокумента КАК ДатаДокумента,
	|	Р.Приоритет КАК Приоритет,
	|	Р.КоличествоПопыток КАК КоличествоПопыток,
	|	Р.Объект.Проведен КАК Проведен
	|ИЗ
	|	РегистрСведений.ОтложеннаяОбработкаОбъектов КАК Р
	|ГДЕ
	|	НЕ Р.Объект.Ссылка ЕСТЬ NULL
	|	И &ОтборПоДате
	|	И Р.КоличествоПопыток >= &КоличествоПопытокМин
	|	И Р.КоличествоПопыток <= &КоличествоПопытокМакс
	|
	|УПОРЯДОЧИТЬ ПО
	|	Р.Приоритет,
	|	Р.ДатаДокумента,
	|	Р.ДатаПоследнейПопытки";
	
	лЗапрос.УстановитьПараметр("ДатаН", НачалоДня(ТекущаяДата()));
	лЗапрос.УстановитьПараметр("КоличествоПопытокМин", КоличествоПопытокМин);
	лЗапрос.УстановитьПараметр("КоличествоПопытокМакс", КоличествоПопытокМакс);
	
	Если ОтбиратьДокументыДоТекущейДаты И ОтбиратьДокументыПослеТекущейДаты Тогда
		ТекстОтбораПоДате = "(Р.ДатаДокумента >= &ДатаН ИЛИ Р.ДатаДокумента < &ДатаН)";
	ИначеЕсли ОтбиратьДокументыДоТекущейДаты Тогда
		ТекстОтбораПоДате = "(Р.ДатаДокумента < &ДатаН)";
	ИначеЕсли ОтбиратьДокументыПослеТекущейДаты Тогда
		ТекстОтбораПоДате = "(Р.ДатаДокумента >= &ДатаН)";
	Иначе
		ТекстОтбораПоДате = "Ложь";
	КонецЕсли;
	лЗапрос.Текст = СтрЗаменить(лЗапрос.Текст, "&ОтборПоДате", ТекстОтбораПоДате);
	
	ТекстПервые =  ?(РазмерПорции = 0, "", " ПЕРВЫЕ " + Формат(РазмерПорции, "ЧГ="));
	лЗапрос.Текст = СтрЗаменить(лЗапрос.Текст, "ПЕРВЫЕ 100", ТекстПервые);
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() цикл
		Попытка
			ВыполнитьОтложеннуюОбработку(лВыборка.Ссылка, 
			?(лВыборка.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.ОтменаПроведения), лВыборка);	
		Исключение
			
			СохранитьИнформациюОбОшибке(лВыборка, ОписаниеОшибки());
			
			ЗаписьЖурналаРегистрации("Регламентные задания." + Метаданные().Синоним,
			УровеньЖурналаРегистрации.Ошибка, Метаданные.НайтиПоТипу(ТипЗнч(лВыборка.Ссылка)), лВыборка.Ссылка,
			ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры

Процедура СохранитьИнформациюОбОшибке(СтруктураПараметров, ТекстОшибки = "")
	
	МЗ = РегистрыСведений.ОтложеннаяОбработкаОбъектов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ, СтруктураПараметров,"ДатаДокумента, Приоритет, КоличествоПопыток");
	МЗ.Объект = СтруктураПараметров.Ссылка;
	МЗ.ТекстОшибки = ТекстОшибки;
	МЗ.ДатаПоследнейПопытки = ТекущаяДата();
	МЗ.КоличествоПопыток = МЗ.КоличествоПопыток + 1;
	МЗ.Записать();
	
КонецПроцедуры

//#КонецЕсли