Процедура ВыполнитьРегламентноеЗадание() Экспорт 
	
	лКлючАлгоритма = "Обработка_ФормированиеСлужебныхЗаданий_Поток_МодульОбъекта_ВыполнитьРегламентноеЗадание";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		Выполнить(лЗамена);
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОчередьФормированияСлужебныхЗаданий.Период КАК Период,
	               |	ОчередьФормированияСлужебныхЗаданий.ПараметрФормированияСЗ КАК ПараметрФормированияСЗ,
	               |	ОчередьФормированияСлужебныхЗаданий.НомерПотока КАК НомерПотока,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаЗапуска КАК ДатаЗапуска,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаНачалаУпаковки КАК ДатаНачалаУпаковки,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаОкончания КАК ДатаОкончания,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаОтгрузки КАК ДатаОтгрузки,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДеньНедели КАК ДеньНедели,
	               |	НЕ ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаОкончания >= &Дата КАК ПотокНеУспел,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаЗапуска,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаНачалаУпаковки,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаОкончания,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДатаОтгрузки,
	               |	ОчередьФормированияСлужебныхЗаданий.Параметры_ДеньНедели
	               |ИЗ
	               |	РегистрСведений.ОчередьФормированияСлужебныхЗаданий КАК ОчередьФормированияСлужебныхЗаданий
	               |ГДЕ
	               |	ОчередьФормированияСлужебныхЗаданий.НомерПотока = &НомерПотока
	               |	И ОчередьФормированияСлужебныхЗаданий.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаОкончания";
	Если ЭтоАктивнаяЗадачаJirа(Справочники.ЗадачиJira.XX2518) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ОчередьФормированияСлужебныхЗаданий", "РегистрСведений.ОчередьФормированияСлужебныхЗаданийНовый");
	КонецЕсли;

	Запрос.УстановитьПараметр("Дата", ТекущаяДата() - 60); //берем лаг минуту, т.е. даем потоку возможность минуту, чтобы выписать
	Запрос.УстановитьПараметр("НомерПотока", НомерПотока);
	//НачатьТранзакцию();
	Результат = Запрос.Выполнить();
	//ЗафиксироватьТранзакцию();
	
	Если Не Результат.Пустой() Тогда 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			Ошибка = Ложь;
			ТекстОшибки = "";
			
			СлужебноеЗадание = Неопределено;
			КоличествоДокументовВСЗ = 0;
			КоличествоСтрокВДокументах = 0;
			
			Попытка
				Если Не Выборка.ПотокНеУспел Тогда 
					Обработка= Обработки.ФормированиеСлужебныхЗаданий_Новый.Создать();
					
					СтруктураП = Новый Структура();
					СтруктураП.Вставить("ДатаЗапуска");
					СтруктураП.Вставить("ДатаНачалаУпаковки");
					СтруктураП.Вставить("ДатаОкончания");
					СтруктураП.Вставить("ДатаОтгрузки");
					СтруктураП.Вставить("ДеньНедели");
					
					ЗаполнитьЗначенияСвойств(СтруктураП, Выборка);
					
					Параметры = Обработка.ЗаполнитьПараметрыОбработкиСогласноОснованию(Выборка.ПараметрФормированияСЗ, СтруктураП);
					
					Обработка.ЗаполнитьТаблицы(Параметры);
					Обработка.СоздатьДокументыСЗ(Параметры);
					Если Параметры.Свойство("СлужебноеЗадание") Тогда 
						СлужебноеЗадание = Параметры.СлужебноеЗадание;
						Структура = ПолучитьКоличествоДокументовИСтрокВСЗ(СлужебноеЗадание);
						КоличествоДокументовВСЗ = Структура.КоличествоДокументовВСЗ;
						КоличествоСтрокВДокументах = Структура.КоличествоСтрокВДокументах;
					КонецЕсли;
				КонецЕсли;
			Исключение
				Если ТранзакцияАктивна() Тогда 
					ОтменитьТранзакцию();
				КонецЕсли;
				ТекстОшибки = ОписаниеОшибки();
				Ошибка = Истина;
			КонецПопытки;
			
			//Валиахметов А.А. http://jira.part-kom.ru/browse/XX-2518 28.05.2019
			Если ЭтоАктивнаяЗадачаJirа(Справочники.ЗадачиJira.XX2518) Тогда 
				Менеджер = РегистрыСведений.ОчередьФормированияСлужебныхЗаданийНовый.СоздатьМенеджерЗаписи();
			Иначе
				Менеджер = РегистрыСведений.ОчередьФормированияСлужебныхЗаданий.СоздатьМенеджерЗаписи();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Менеджер, Выборка);
			
			Менеджер.ДатаЗавершения = ТекущаяДата();
			Менеджер.ТекстОшибки = ТекстОшибки;
			Менеджер.Ошибка = Ошибка;
			Если ЭтоАктивнаяЗадачаJirа(Справочники.ЗадачиJira.XX2518) Тогда 
				Менеджер.СлужебноеЗадание = СлужебноеЗадание;
				Менеджер.КоличествоДокументовВСЗ = КоличествоДокументовВСЗ;
				Менеджер.КоличествоСтрокВДокументах = КоличествоСтрокВДокументах;
			КонецЕсли;
			//Конец Валиахметов А.А. http://jira.part-kom.ru/browse/XX-2518 28.05.2019
			Менеджер.Записать();
			//Набор = РегистрыСведений.ОчередьФормированияСлужебныхЗаданий.СоздатьНаборЗаписей();
			//Набор.Отбор.ПараметрФормированияСЗ.Установить(Выборка.ПараметрФормированияСЗ);
			//Набор.Отбор.НомерПотока.Установить(Выборка.НомерПотока);
			//Набор.Отбор.Период.Установить(Выборка.Период);
			//Набор.Прочитать();
			//
			//Для Каждого Запись Из Набор Цикл 
			//	Запись.ДатаЗавершения = ТекущаяДата(); 
			//	Запись.ТекстОшибки = ТекстОшибки;
			//	Запись.Ошибка = Ошибка;
			//	Запись.ПотокНеУспел = Выборка.ПотокНеУспел;
			//КонецЦикла;
			//Набор.Записать();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//Валиахметов А.А. http://jira.part-kom.ru/browse/XX-2518 28.05.2019
Функция ПолучитьКоличествоДокументовИСтрокВСЗ(СлужебноеЗадание)
	
	лКлючАлгоритма = "Обработка_ФормированиеСлужебныхЗаданий_Поток_МодульЛбъекта_ПолучитьКоличествоДокументовИСтрокВСЗ";
	лЗамена =  АлгоритмыПолучитьЗамену(лКлючАлгоритма);
	Если Не лЗамена = Неопределено Тогда
		АлгоритмыЗначениеВозврата = Неопределено;		
		Выполнить(лЗамена);		
		Возврат АлгоритмыЗначениеВозврата;		
	КонецЕсли;	
	
	КоличествоДокументовВСЗ = 0; 
	КоличествоСтрокВДокументах = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	КОЛИЧЕСТВО(СлужебноеЗаданиеПокупатели.Ссылка) КАК КоличествоДокументовВСЗ
	                |ИЗ
	                |	Документ.СлужебноеЗадание.Покупатели КАК СлужебноеЗаданиеПокупатели
	                |ГДЕ
	                |	СлужебноеЗаданиеПокупатели.Ссылка = &Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	КОЛИЧЕСТВО(РеализацияТоваровУслугТовары.НомерСтроки) КАК КоличествоСтрокВДокументах
	                |ИЗ
	                |	Документ.СлужебноеЗадание.Покупатели КАК СлужебноеЗаданиеПокупатели
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                |		ПО СлужебноеЗаданиеПокупатели.Реализация = РеализацияТоваровУслугТовары.Ссылка
	                |ГДЕ
	                |	СлужебноеЗаданиеПокупатели.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СлужебноеЗадание);
	Результаты = Запрос.ВыполнитьПакет();
	Если Не Результаты.Получить(0).Пустой() Тогда 
		Выборка = Результаты.Получить(0).Выбрать();
		Выборка.Следующий();
		КоличествоДокументовВСЗ = Выборка.КоличествоДокументовВСЗ;
	КонецЕсли;
	Если Не Результаты.Получить(1).Пустой() Тогда 
		Выборка = Результаты.Получить(1).Выбрать();
		Выборка.Следующий();
		КоличествоСтрокВДокументах = Выборка.КоличествоСтрокВДокументах;
	КонецЕсли;
	
	Возврат Новый Структура("КоличествоДокументовВСЗ,КоличествоСтрокВДокументах",КоличествоДокументовВСЗ,КоличествоСтрокВДокументах);
	
КонецФункции
//Конец Валиахметов А.А. http://jira.part-kom.ru/browse/XX-2518 28.05.2019
