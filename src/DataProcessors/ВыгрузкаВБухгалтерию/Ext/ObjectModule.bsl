
Перем мСкладОборудования;
//Семенов И.П. 11.07.2019 XX-2872(
Перем ТаблицаИсторииОбъектов;
//)Семенов И.П.
//Семенов И.П. 16.07.2019 XX-2924(
Перем УзелДляЛогов;
Перем ИмяТекущегоФайла;
//)Семенов И.П.

Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		Возврат 20;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		Возврат 10;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		Возврат 18;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Возврат -1;
	КонецЕсли;

	Возврат 0;

КонецФункции // ПолучитьСтавкуНДС()

Функция ПроверитьИННКонтрагента(Контрагент)
	ОписаниеОшибки = "";
	ИННВерный = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		ОписаниеОшибки = "не заполнен контрагент. нечего проверять.";
		Возврат Новый Структура("РезультатПроверки,ОписаниеОшибки", ИННВерный, ОписаниеОшибки);
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Контрагенты.ИНН
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	лИНН = СокрЛП(Выборка.ИНН);
	
	Если ПустаяСтрока(лИНН) Тогда
		ОписаниеОшибки = "ИНН не заполнен";
		Возврат Новый Структура("РезультатПроверки,ОписаниеОшибки", ИННВерный, ОписаниеОшибки);
		
	КонецЕсли;
	
	Если Лев(лИНН, 2) = "00" Тогда
		ОписаниеОшибки = "ИНН заполнен не верно";
		Возврат Новый Структура("РезультатПроверки,ОписаниеОшибки", ИННВерный, ОписаниеОшибки);
		
	КонецЕсли;
	
	Если СтрДлина(лИНН) = 10 Тогда
		//весовые коэффициенты (2,4,10,3,5,9,4,6,8,0)		
		МассивКоэффициентов = Новый Массив;
		МассивКоэффициентов.Добавить(2);
		МассивКоэффициентов.Добавить(4);
		МассивКоэффициентов.Добавить(10);
		МассивКоэффициентов.Добавить(3);
		МассивКоэффициентов.Добавить(5);
		МассивКоэффициентов.Добавить(9);
		МассивКоэффициентов.Добавить(4);
		МассивКоэффициентов.Добавить(6);
		МассивКоэффициентов.Добавить(8);
		МассивКоэффициентов.Добавить(0);
		
		Сумма = 0;
		Для А = 1 По СтрДлина(лИНН) Цикл
			тСумма = МассивКоэффициентов[А-1] * Число(Сред(лИНН, А, 1));
			Сумма = Сумма + тСумма;
		КонецЦикла;
		
		КонтрольнаяСумма = Сумма - 11 * Цел(Сумма/11);
		Если КонтрольнаяСумма > 9 Тогда
			КонтрольнаяСумма = КонтрольнаяСумма - 10 * Цел(КонтрольнаяСумма/10);
		КонецЕсли;
		
		Если КонтрольнаяСумма = Число(Сред(лИНН, 10, 1)) Тогда
			ИННВерный = Истина;
		Иначе
			ОписаниеОшибки = "контрольная сумма ИНН не совпадает с 10-ым знаком";
		КонецЕсли;
				
	ИначеЕсли СтрДлина(лИНН) = 12 Тогда
		//весовые коэффициенты (7,2,4,10,3,5,9,4,6,8,0)
		МассивКоэффициентов = Новый Массив;
		МассивКоэффициентов.Добавить(7);
		МассивКоэффициентов.Добавить(2);
		МассивКоэффициентов.Добавить(4);
		МассивКоэффициентов.Добавить(10);
		МассивКоэффициентов.Добавить(3);
		МассивКоэффициентов.Добавить(5);
		МассивКоэффициентов.Добавить(9);
		МассивКоэффициентов.Добавить(4);
		МассивКоэффициентов.Добавить(6);
		МассивКоэффициентов.Добавить(8);
		МассивКоэффициентов.Добавить(0);
		
		Сумма = 0;
		//первая проверка на 11 знак в ИНН
		Для А = 1 По СтрДлина(лИНН) - 1 Цикл
			тСумма = МассивКоэффициентов[А-1] * Число(Сред(лИНН, А, 1));
			Сумма = Сумма + тСумма;
		КонецЦикла;
		
		КонтрольнаяСумма = Сумма - 11 * Цел(Сумма/11);
		Если КонтрольнаяСумма > 9 Тогда
			КонтрольнаяСумма = КонтрольнаяСумма - 10 * Цел(КонтрольнаяСумма/10);
		КонецЕсли;
		
		Если КонтрольнаяСумма = Число(Сред(лИНН, 11, 1)) Тогда
			//проверка на 12 знак
			//весовые коэффициенты (3,7,2,4,10,3,5,9,4,6,8,0)
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(3);
			МассивКоэффициентов.Добавить(7);
			МассивКоэффициентов.Добавить(2);
			МассивКоэффициентов.Добавить(4);
			МассивКоэффициентов.Добавить(10);
			МассивКоэффициентов.Добавить(3);
			МассивКоэффициентов.Добавить(5);
			МассивКоэффициентов.Добавить(9);
			МассивКоэффициентов.Добавить(4);
			МассивКоэффициентов.Добавить(6);
			МассивКоэффициентов.Добавить(8);
			МассивКоэффициентов.Добавить(0);
			
			Сумма = 0;
			//вторая проверка на 12 знак в ИНН
			Для А = 1 По СтрДлина(лИНН) Цикл
				тСумма = МассивКоэффициентов[А-1] * Число(Сред(лИНН, А, 1));
				Сумма = Сумма + тСумма;
			КонецЦикла;
			
			КонтрольнаяСумма = Сумма - 11 * Цел(Сумма/11);
			Если КонтрольнаяСумма > 9 Тогда
				КонтрольнаяСумма = КонтрольнаяСумма - 10 * Цел(КонтрольнаяСумма/10);
			КонецЕсли;
			
			Если КонтрольнаяСумма = Число(Сред(лИНН, 12, 1)) Тогда
				ИННВерный = Истина;
				
			Иначе
				ОписаниеОшибки = "контрольная сумма ИНН не совпадает с 12-ым знаком";
				
			КонецЕсли;
			
		Иначе
			ОписаниеОшибки = "контрольная сумма ИНН не совпадает с 11-ым знаком";
			
		КонецЕсли;
		
	Иначе
		ОписаниеОшибки = "длина ИНН не соответствует стандарту";
		
	КонецЕсли;
	
	Возврат Новый Структура("РезультатПроверки, ОписаниеОшибки", ИННВерный, ОписаниеОшибки);
	
КонецФункции

Процедура ЗаполнитьСписокКонтрагентов(ВидДокумента, МассивСсылок)
	ДобавлятьКонтрагентовИмпорт = Ложь;
	СписокКонтрагентовКопия = Новый ТаблицаЗначений;
	СписокКонтрагентовКопия.Колонки.Добавить("Контрагент");
	
	Если СписокКонтрагентов.Количество() = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
		Запрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
		Запрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
		Запрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
		Запрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
			
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Д.Контрагент
		|ИЗ
		|	Документ." + ВидДокумента + " КАК Д
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
		|		ПО Д.Организация = Н.Организация
		|ГДЕ
		|	(Д.Дата >= &НачДата
		|				И (Д.Дата <= &КонДата
		|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
		|			ИЛИ &ЕстьСсылкаНаДокумент)
		|	И Д.Проведен
		|	И Н.Ссылка = &НастройкаВыгрузки
		|	И (Д.Ссылка В (&СсылкаНаДокумент)
		|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)";
		
		Если ВидДокумента = "ПоступлениеТоваровУслуг" Тогда
			ТекстЗапроса = ТекстЗапроса + "			
			|	И НЕ(Д.Склад.Бонусный
			|				ИЛИ Д.Склад.Сувенирный)
			|	И Д.ВидОперацииПоступления <> ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.Импорт)
			|	%%УсловиеПоМФП%%";
			
			Если НЕ ТолькоМФП И НЕ БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
			ИначеЕсли ТолькоМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ЭтоМФП");
			ИначеЕсли БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ЭтоМФП");
			КонецЕсли;
						
			ДобавлятьКонтрагентовИмпорт = Истина;
			
		ИначеЕсли ВидДокумента = "РеализацияТоваровУслуг" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.РеализацияТоваровУслугОтгружен)
			|	И (Д.Организация.Франчайзи = ЛОЖЬ
			|			ИЛИ Д.Организация.Франчайзи = ИСТИНА
			|				И Д.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные))
			|	%%УсловиеПоМФП%%";
			
			Если НЕ ТолькоМФП И НЕ БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		 	ИначеЕсли ТолькоМФП Тогда
		 		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ЭтоМФП");
		 	ИначеЕсли БезМФП Тогда
		 		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ЭтоМФП");
			КонецЕсли;
			
		ИначеЕсли ВидДокумента = "ВозвратТоваровПоставщику" Тогда
			ТекстЗапроса =  ТекстЗапроса + "
			|	%%УсловиеПоМФП%%";
			
			Если НЕ ТолькоМФП И НЕ БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		 	ИначеЕсли ТолькоМФП Тогда
		 		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.МФП)");
		 	ИначеЕсли БезМФП Тогда
		 		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.МФП)");
			КонецЕсли;
			
		ИначеЕсли ВидДокумента = "ВозвратТоваровОтПокупателя" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И НЕ((Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяНовый)
			|				ИЛИ Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяОтказ)
			|				ИЛИ Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяОтменен))
			|				И Д.АктРассмотренияВозврата <> ЗНАЧЕНИЕ(Документ.АктРассмотренияВозврата.ПустаяСсылка))
			|	И (НЕ Д.Организация.Франчайзи
			|			ИЛИ Д.Организация.Франчайзи
			|				И Д.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные))
			|	%%УсловиеПоМФП%%";
			
			Если НЕ ТолькоМФП И НЕ БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
			ИначеЕсли ТолькоМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)");
			ИначеЕсли БезМФП Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)");
			КонецЕсли;
					
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), СписокКонтрагентовКопия);
		
	КонецЕсли;
	
	Для Каждого ЭлементСписка из СписокКонтрагентовКопия Цикл
		Результат = ПроверитьИННКонтрагента(ЭлементСписка.Контрагент);
		Если Результат.РезультатПроверки Тогда
			нс = СписокКонтрагентов.Добавить();
			нс.Контрагент = ЭлементСписка.Контрагент;
			
		Иначе
			Сообщить("документы по контрагенту " + Строка(ЭлементСписка.Контрагент) + " не будут выгружены: " + Результат.ОписаниеОшибки);
			//ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Ложь, "Ошибка в ИНН контрагента");
			//не катит, структура регистра подразумевает только запись по объектам типа документ
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДобавлятьКонтрагентовИмпорт Тогда
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Д.Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК Д
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
		|		ПО Д.Организация = Н.Организация
		|ГДЕ
		|	(Д.Дата >= &НачДата
		|				И (Д.Дата <= &КонДата
		|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
		|			ИЛИ &ЕстьСсылкаНаДокумент)
		|	И Д.Проведен
		|	И Н.Ссылка = &НастройкаВыгрузки
		|	И НЕ(Д.Склад.Бонусный
		|				ИЛИ Д.Склад.Сувенирный)
		|	И (Д.Ссылка В (&СсылкаНаДокумент)
		|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
		|	И Д.ВидОперацииПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.Импорт)";
			
		Запрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
		Запрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
		Запрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
		Запрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
		Запрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
		
		Запрос.Текст = ТекстЗапроса;			
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), СписокКонтрагентов);	
		
	КонецЕсли;
	
КонецПроцедуры

//Поступление товаров и услуг

Функция ПоступлениеТоваровУслуг_ПроверитьДокумент(вхВыборка)
	
	Результат = Истина;
	Если (вхВыборка.ВидОперацииПоступления <> Перечисления.ВидыПоступленияТоваров.Импорт) тогда
		Если (СтрДлина(вхВыборка.КонтрагентИНН) < 10) тогда
			ЗаписатьВЛог(вхВыборка.Ссылка, Ложь, "Ошибка в ИНН контрагента");
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПоступлениеТоваровУслуг_ПолучитьЗначение(вхВыборка, вхИмяПоля)
	
	Результат = Неопределено;	
	лИмяПоля = СокрЛП(ВРег(вхИмяПоля));
	Если (лИмяПоля = ВРег("Type")) тогда
		Если (вхВыборка.ВидОперацииПоступления = Перечисления.ВидыПоступленияТоваров.Импорт) тогда
			Результат = "Импорт";
		ИначеЕсли (вхВыборка.ЭтоКомитент) и (вхВыборка.ВидОперацииПоступления <> Перечисления.ВидыПоступленияТоваров.МФПКомиссия)тогда
			Результат = "Комиссия";
		ИначеЕсли (вхВыборка.Склад = мСкладОборудования) тогда
			Результат = "Оборудование";
		Иначе
			Результат = "Разное";
		КонецЕсли;
	ИначеЕсли (лИмяПоля = ВРег("VidK")) тогда
		Результат = ?(вхВыборка.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
	ИначеЕсли (лИмяПоля = ВРег("tVidK")) тогда
		Результат = ?(вхВыборка.ТаможняЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
	ИначеЕсли (лИмяПоля = ВРег("Ed")) тогда
		Результат = ?(вхВыборка.НоменклатураУслуга, "796", вхВыборка.ЕдиницаПоКлассификаторуКод);
	ИначеЕсли (лИмяПоля = ВРег("Stavka")) тогда
		Результат = ?(вхВыборка.ВидОперацииПоступления = Перечисления.ВидыПоступленияТоваров.Импорт,
		-1, ПолучитьСтавкуНДС(вхВыборка.СтавкаНДС));	
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

Процедура ПоступлениеТоваровУслуг_ВыгрузитьДокумент1(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	
	//Семенов И.П. 04.06.2019 XX-2514(
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	//)Семенов И.П.
	
	Пока лВыборка.Следующий() цикл
		
		вхПриемник.Добавить();
		вхПриемник.vid = "ПоступлениеТМЦ";
		вхПриемник.Type = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.UchetNDS = ?(лВыборка.УчитыватьНДС, 1, 0);
		вхПриемник.NDSbSum = ?(лВыборка.СуммаВключаетНДС, 1, 0);
		вхПриемник.NumIN = лВыборка.НомерВходящегоДокумента;
		вхПриемник.DateIN = лВыборка.ДатаВходящегоДокумента;
		
		//Голубев
		//вхПриемник.NumINsf = лВыборка.НомерВходящегоДокументаСФ;
		//вхПриемник.DateINsf = лВыборка.ДатаВходящегоДокументаСФ;
		//ЗаполненыИз1с7 = Ложь;
		//Если ПустаяСтрока(лВыборка.НомерВходящегоДокументаСФ) Тогда
		//	ДанныеСчФактурыВх = ПолучитьДатуНомерВходящегоСчетаФактуры(лВыборка.Ссылка.УникальныйИдентификатор());
		//	Если ДанныеСчФактурыВх <> Неопределено Тогда
		//		Если ДанныеСчФактурыВх.Свойство("НомерВходящегоДокументаСФ") Тогда
		//			вхПриемник.NumINsf = ДанныеСчФактурыВх.НомерВходящегоДокументаСФ;
		//			ЗаполненыИз1с7 = Истина;
		//		КонецЕсли;
		//		Если ДанныеСчФактурыВх.Свойство("ДатаВходящегоДокументаСФ") Тогда
		//			вхПриемник.DateINsf = ДанныеСчФактурыВх.ДатаВходящегоДокументаСФ;
		//			ЗаполненыИз1с7 = Истина;
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
		//
		//Если НЕ ЗаполненыИз1с7 Тогда
		//	вхПриемник.NumINsf = лВыборка.НомерВходящегоДокументаСФ;
		//	вхПриемник.DateINsf = лВыборка.ДатаВходящегоДокументаСФ;
		//КонецЕсли;
		//Голубев
		
		вхПриемник.NumINsf = лВыборка.НомерВходящегоДокументаСФ;
		вхПриемник.DateINsf = лВыборка.ДатаВходящегоДокументаСФ;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		Если лВыборка.КонтрагентКПП = "" ИЛИ СтрДлина(лВыборка.КонтрагентКПП) <> 9 Тогда
			вхПриемник.KPP = Лев(лВыборка.КонтрагентИНН, 4) + "01001";
		Иначе
			вхПриемник.KPP = лВыборка.КонтрагентКПП;
		КонецЕсли;	
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
	//	вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0);
		Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
			вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
		Иначе	
			вхПриемник.Dob = 0;
		КонецЕсли;
		вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 2, 1);
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура); 
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Ed");
		вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		вхПриемник.Sum = лВыборка.Сумма;
		вхПриемник.Stavka = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
		
		//Семенов И.П. 04.06.2019 XX-2514(
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
	КонецЦикла;
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));
	//КонецЕсли;
	
	//Семенов И.П. 11.07.2019 XX-2872(
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.ПоступлениеТоваровУслуг");
	//)Семенов И.П.
	
КонецПроцедуры

Процедура ПоступлениеТоваровУслуг_ВыгрузитьДокумент2(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	// вычисление "имп_ДоставкаИнвойс" для каждой строки
	ДатаИмпорт=Дата(2019,02,01);
	лМассКоэф = Новый Массив;
	лВыборка = вхВыборкаДокумент.Выбрать();
	Пока лВыборка.Следующий() цикл
		лМассКоэф.Добавить(лВыборка.Сумма);                                                                    
	КонецЦикла;
	Если вхВыборкаДокумент.Ссылка.Дата>=ДатаИмпорт Тогда
		ТЧИмп=вхВыборкаДокумент.Ссылка.ИмпортЗатраты;
		СуммаДругихЗатрат=0;
		КурсИнвойса=0;
		КратностьИнвойса=1;
		ВалютаИнвойса=Неопределено;
		Для Каждого Стр Из ТЧИмп Цикл
			Если Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ДругиеЗатраты Тогда 
				СуммаДругихЗатрат=Стр.Сумма;
				КурсИнвойса=Стр.Курс;
				КратностьИнвойса=Стр.Кратность;
				ВалютаИнвойса=Стр.Валюта.Код;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		лМассИмпДоставкаИнвойс = ОбщегоНазначения.РаспределитьПропорционально(СуммаДругихЗатрат, лМассКоэф);
	Иначе
		лМассИмпДоставкаИнвойс = ОбщегоНазначения.РаспределитьПропорционально(вхВыборкаДокумент.имп_ДоставкаИнвойс, лМассКоэф);
	КонецЕсли;
	лСчетчик = -1;
	лВыборка.Сбросить();
	//Семенов И.П. 04.06.2019 XX-2514(
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	//)Семенов И.П.
	Пока лВыборка.Следующий() цикл
		
		лСчетчик = лСчетчик + 1;
		
		вхПриемник.Добавить();
		вхПриемник.vid = "ПоступлениеТМЦ";
		вхПриемник.Type = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.UchetNDS = ?(лВыборка.УчитыватьНДС, 1, 0);
		вхПриемник.NDSbSum = ?(лВыборка.СуммаВключаетНДС, 1, 0);
		вхПриемник.NumIN = лВыборка.НомерВходящегоДокумента;
		вхПриемник.DateIN = лВыборка.ДатаВходящегоДокумента;
		вхПриемник.NumINsf = "";
		вхПриемник.DateINsf = Неопределено;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		//вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0);
		Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
			вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
		Иначе	
			вхПриемник.Dob = 0;
		КонецЕсли;
		вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 2, 1);
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		Если лВыборка.ДатаДокумента>=ДатаИмпорт Тогда
			
			СумtSbor=0;
			СумtPosH=0;
			СумtNDS=0;
			СумtDosDoGR=0;
			ТекVALdoGr=Неопределено;
			ТекKursDoGr=1;
			ТекКратностьtDosDoGR=1;
			ТЧИмп=лВыборка.Ссылка.ИмпортЗатраты;
			СумtDosDoTam=0;
			ТекVALDoTam=Неопределено;
			ТекKursDoTam=1;
			ТекКратностьtDosDoTam=1;
			Для Каждого Стр Из ТЧИмп Цикл
				Если Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.Пошлина Тогда 
					СумtSbor=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ОформлениеГТД Тогда 
					СумtPosH=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ТаможенныйНДС Тогда 
					СумtNDS=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ДоставкаДоГраницы Тогда 
					СумtDosDoGR=Стр.Сумма;
					ТекVALdoGr=Стр.Валюта.Код;
					ТекKursDoGr=Стр.Курс;
					ТекКратностьtDosDoGR=Стр.Кратность;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ДоставкаДоТаможни Тогда 
					СумtDosDoTam=Стр.Сумма;
					ТекVALDoTam=Стр.Валюта.Код;
					ТекKursDoTam=Стр.Курс;
					ТекКратностьtDosDoTam=Стр.Кратность;
				КонецЕсли;
			КонецЦикла;	
			вхПриемник.tSbor = СумtSbor;
			вхПриемник.tDosDoGR = СумtDosDoGR;
			вхПриемник.VALdoGr = ТекVALdoGr;
			вхПриемник.KursDoGr = ТекKursDoGr * ?(ТекКратностьtDosDoGR = 0, 1, ТекКратностьtDosDoGR);
			вхПриемник.tDosDoTam = СумtDosDoTam;
			вхПриемник.VALDoTam = ТекVALDoTam;
			вхПриемник.KursDoTam = ТекKursDoTam * ?(ТекКратностьtDosDoTam = 0, 1, ТекКратностьtDosDoTam);
			//
			//лКурсИнвойс = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостИнвойс, лВыборка.ДатаДокумента);
			вхПриемник.Sum = лВыборка.Сумма + ?(лМассИмпДоставкаИнвойс = Неопределено, 0, 
			МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(лМассИмпДоставкаИнвойс[лСчетчик], 
			СуммаДругихЗатрат, лВыборка.ВалютаДокумента, КурсИнвойса, 
			лВыборка.КурсВзаиморасчетов, КратностьИнвойса, лВыборка.КратностьВзаиморасчетов));

		Иначе
			вхПриемник.tSbor = лВыборка.имп_Пошлина;
			вхПриемник.tDosDoGR = лВыборка.имп_ДоставкаДоГраницы;
			вхПриемник.VALdoGr = ТекVALdoGr;
			вхПриемник.VALdoGr = лВыборка.имп_ВалДостДоГраницыКод;
			лКурсДоГраницы = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоГраницы, лВыборка.ДатаДокумента);
			вхПриемник.KursDoGr = лКурсДоГраницы.Курс * ?(лКурсДоГраницы.Кратность = 0, 1, лКурсДоГраницы.Кратность);
			вхПриемник.tDosDoTam = лВыборка.имп_ДоставкаТаможни;
			вхПриемник.VALDoTam = лВыборка.имп_ВалДостДоТаможниКод;
			лКурсДоТаможни = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоТаможни, лВыборка.ДатаДокумента);
			вхПриемник.KursDoTam = лКурсДоТаможни.Курс * ?(лКурсДоТаможни.Кратность = 0, 1, лКурсДоТаможни.Кратность);
			 //
			 лКурсИнвойс = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостИнвойс, лВыборка.ДатаДокумента);
			 вхПриемник.Sum = лВыборка.Сумма + ?(лМассИмпДоставкаИнвойс = Неопределено, 0, 
			 МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(лМассИмпДоставкаИнвойс[лСчетчик], 
			 лВыборка.имп_ВалДостИнвойс, лВыборка.ВалютаДокумента, лКурсИнвойс.Курс, 
			лВыборка.КурсВзаиморасчетов, лКурсИнвойс.Кратность, лВыборка.КратностьВзаиморасчетов));

		КонецЕсли;
		
		вхПриемник.tCodeK = лВыборка.ТаможняКод;
		вхПриемник.tNameK = лВыборка.ТаможняНаименование;
		вхПриемник.tFullNameK = лВыборка.ТаможняНаименованиеПолное;
		вхПриемник.tAdress = лВыборка.ТаможняЮридическийАдрес;
		вхПриемник.tAdress2 = лВыборка.ТаможняФактическийАдрес;
		вхПриемник.tTel = лВыборка.ТаможняТелефон;
		вхПриемник.tINN = лВыборка.ТаможняИНН;
		вхПриемник.tOKPO = лВыборка.ТаможняОКПО;
		вхПриемник.tVidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "tVidK");
		вхПриемник.tVidDog = 1; // уточнить
		вхПриемник.tUIDK = XMLСтрока(лВыборка.ТаможняОсновнаяТорговаяТочка);
		
		//****перенесено в условие выше
			//		вхПриемник.tSbor = СумtSbor;
			//		//вхПриемник.tSbor = лВыборка.имп_Пошлина;
			//		
			//		вхПриемник.tDosDoGR = СумtDosDoGR;
			////		вхПриемник.tDosDoGR = лВыборка.имп_ДоставкаДоГраницы;
			//		вхПриемник.VALdoGr = ТекVALdoGr;
			////		вхПриемник.VALdoGr = лВыборка.имп_ВалДостДоГраницыКод;
			//		
			//		//лКурсДоГраницы = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоГраницы, лВыборка.ДатаДокумента);
			//		вхПриемник.KursDoGr = ТекKursDoGr * ?(ТекКратностьtDosDoGR = 0, 1, ТекКратностьtDosDoGR);
			////		вхПриемник.KursDoGr = лКурсДоГраницы.Курс * ?(лКурсДоГраницы.Кратность = 0, 1, лКурсДоГраницы.Кратность);
			//		вхПриемник.tDosDoTam = СумtDosDoTam;
			////		вхПриемник.tDosDoTam = лВыборка.имп_ДоставкаТаможни;
			//		вхПриемник.VALDoTam = ТекVALDoTam;
			////		вхПриемник.VALDoTam = лВыборка.имп_ВалДостДоТаможниКод;
			//		
			//		//лКурсДоТаможни = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоТаможни, лВыборка.ДатаДокумента);
			//		вхПриемник.KursDoTam = ТекKursDoTam * ?(ТекКратностьtDosDoTam = 0, 1, ТекКратностьtDosDoTam);
			//		//вхПриемник.KursDoTam = лКурсДоТаможни.Курс * ?(лКурсДоТаможни.Кратность = 0, 1, лКурсДоТаможни.Кратность);
		//****перенесено в условие выше

		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Ed");
		вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		
		//лКурсИнвойс = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостИнвойс, лВыборка.ДатаДокумента);
		//вхПриемник.Sum = лВыборка.Сумма + ?(лМассИмпДоставкаИнвойс = Неопределено, 0, 
		//МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(лМассИмпДоставкаИнвойс[лСчетчик], 
		//лВыборка.имп_ВалДостИнвойс, лВыборка.ВалютаДокумента, лКурсИнвойс.Курс, 
		//лВыборка.КурсВзаиморасчетов, лКурсИнвойс.Кратность, лВыборка.КратностьВзаиморасчетов));
		
		вхПриемник.Stavka = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
		
		//Семенов И.П. 04.06.2019 XX-2514(
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
	КонецЦикла;
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	Пока лВыборка.Следующий() Цикл
	
		вхПриемник.Добавить();
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.One = 0;
		вхПриемник.vid = "Импорт";
		вхПриемник.type = "Импорт";
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.NumIn = "";
		вхПриемник.DateIn = "";
		вхПриемник.NumINSF = "";
		вхПриемник.DateINSF = "";
		вхПриемник.CodeVal = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVal = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		СуммаДоставки=0;
		Если лВыборка.ДатаДокумента>=ДатаИмпорт Тогда
			
			СумtSbor=0;
			СумtPosH=0;
			СумtNDS=0;
			СумtDosDoGR=0;
			ТекVALdoGr=Неопределено;
			ТекKursDoGr=1;
			ТекКратностьtDosDoGR=1;
			ТЧИмп=лВыборка.Ссылка.ИмпортЗатраты;
			СумtDosDoTam=0;
			ТекVALDoTam=Неопределено;
			ТекKursDoTam=1;
			ТекКратностьtDosDoTam=1;
			Для Каждого Стр Из ТЧИмп Цикл
				Если Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.Пошлина Тогда 
					СумtSbor=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ОформлениеГТД Тогда 
					СумtPosH=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ТаможенныйНДС Тогда 
					СумtNDS=Стр.Сумма;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ДоставкаДоГраницы Тогда 
					СумtDosDoGR=Стр.Сумма;
					ТекVALdoGr=Стр.Валюта.Код;
					ТекKursDoGr=Стр.Курс;
					ТекКратностьtDosDoGR=Стр.Кратность;
				ИначеЕсли Стр.СтатьяЗатрат=Справочники.СтатьиЗатратИмпорт.ДоставкаДоТаможни Тогда 
					СумtDosDoTam=Стр.Сумма;
					ТекVALDoTam=Стр.Валюта.Код;
					ТекKursDoTam=Стр.Курс;
					ТекКратностьtDosDoTam=Стр.Кратность;
				КонецЕсли;
			КонецЦикла;	
			вхПриемник.tDosDoGR = СумtDosDoGR;
			вхПриемник.VALdoGr = ТекVALdoGr;
			вхПриемник.KursDoGr = ТекKursDoGr * ?(ТекКратностьtDosDoGR = 0, 1, ТекКратностьtDosDoGR);
			вхПриемник.tDosDoTam = СумtDosDoTam;
			вхПриемник.VALDoTam = ТекVALDoTam;
			вхПриемник.tSbor = лВыборка.имп_Пошлина;
			вхПриемник.tPosh = СумtPosh;
			вхПриемник.tNDS = СумtNDS;
			СуммаДоставки=СумtDosDoGR+СумtDosDoTam;

		Иначе
			вхПриемник.tDosDoGR = лВыборка.имп_ДоставкаДоГраницы;
			вхПриемник.VALdoGr = лВыборка.имп_ВалДостДоГраницыКод;
			
			лКурсДоГраницы = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоГраницы, лВыборка.ДатаДокумента);
			вхПриемник.KursDoGr = лКурсДоГраницы.Курс * ?(лКурсДоГраницы.Кратность = 0, 1, лКурсДоГраницы.Кратность);
			вхПриемник.tDosDoTam = лВыборка.имп_ДоставкаТаможни;
			вхПриемник.VALDoTam = ТекVALDoTam;
			вхПриемник.VALDoTam = лВыборка.имп_ВалДостДоТаможниКод;
			
			вхПриемник.tSbor = лВыборка.имп_Пошлина;
			вхПриемник.tPosh = лВыборка.Пош;
			вхПриемник.tNDS = лВыборка.тНДС;
			

			СуммаДоставки=лВыборка.имп_ДоставкаДоГраницы + лВыборка.имп_ДоставкаТаможни;

					
					
		КонецЕсли;

			вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
			вхПриемник.tCodeK = лВыборка.ТаможняКод;
			вхПриемник.tNameK = лВыборка.ТаможняНаименование;
			вхПриемник.tFullNameK = лВыборка.ТаможняНаименованиеПолное;
			вхПриемник.tAdress = лВыборка.ТаможняЮридическийАдрес;
			вхПриемник.tAdress2 = лВыборка.ТаможняФактическийАдрес;
			вхПриемник.tTel = лВыборка.ТаможняТелефон;
			вхПриемник.tINN = лВыборка.ТаможняИНН;
			вхПриемник.tOKPO = лВыборка.ТаможняОКПО;
			вхПриемник.tUIDK = XMLСтрока(лВыборка.ТаможняОсновнаяТорговаяТочка);
			вхПриемник.tVidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "tVidK");

        
		
		//Если (СумtDosDoGR+СумtDosDoTam> 0) И ЗначениеЗаполнено(лВыборка.имп_КА_Доставка) Тогда
		//Если (лВыборка.имп_ДоставкаДоГраницы + лВыборка.имп_ДоставкаТаможни > 0) И ЗначениеЗаполнено(лВыборка.имп_КА_Доставка) Тогда

		Если (СуммаДоставки>0) И ЗначениеЗаполнено(лВыборка.имп_КА_Доставка) Тогда
			
			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Телефон);
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				Телефон = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;
			
			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
			НаборЗаписей.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Юр. адрес контрагента"));
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				ЮА = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;

			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
			НаборЗаписей.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Фактический адрес контрагента"));
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				ФА = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;
			
			вхПриемник.CodeK = лВыборка.ДоставкаКод;
			вхПриемник.NameK = лВыборка.ДоставкаНаименование;
			вхПриемник.FullNameK = лВыборка.ДоставкаНаименованиеПолное;
			вхПриемник.Adress = ЮА;
			вхПриемник.Adress2 = ФА;
			вхПриемник.Tel = Телефон;
			вхПриемник.INN = лВыборка.ДоставкаИНН;
			вхПриемник.VidK = ?(лВыборка.ДоставкаЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
			вхПриемник.OKPO = лВыборка.ДоставкаОКПО;
			вхПриемник.VidDog = 1; 
			вхПриемник.UIDK = XMLСтрока(лВыборка.ДоставкаОсновнаяТорговаяТочка);
						
		КонецЕсли;
		
		//Семенов И.П. 04.06.2019 XX-2514(
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
		Прервать;
		
	КонецЦикла;
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));
	//КонецЕсли;
	//Семенов И.П. 11.07.2019 XX-2872(
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.ПоступлениеТоваровУслуг");
	//)Семенов И.П.	
КонецПроцедуры


Процедура ПоступлениеТоваровУслуг_ВыгрузитьДокумент2_old(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	// вычисление "имп_ДоставкаИнвойс" для каждой строки	
	лМассКоэф = Новый Массив;
	лВыборка = вхВыборкаДокумент.Выбрать();
	Пока лВыборка.Следующий() цикл
		лМассКоэф.Добавить(лВыборка.Сумма);
	КонецЦикла;
	
	лМассИмпДоставкаИнвойс = ОбщегоНазначения.РаспределитьПропорционально(
	вхВыборкаДокумент.имп_ДоставкаИнвойс, лМассКоэф);
	
	лСчетчик = -1;
	лВыборка.Сбросить();
	Пока лВыборка.Следующий() цикл
		
		лСчетчик = лСчетчик + 1;
		
		вхПриемник.Добавить();
		вхПриемник.vid = "ПоступлениеТМЦ";
		вхПриемник.Type = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.UchetNDS = ?(лВыборка.УчитыватьНДС, 1, 0);
		вхПриемник.NDSbSum = ?(лВыборка.СуммаВключаетНДС, 1, 0);
		вхПриемник.NumIN = лВыборка.НомерВходящегоДокумента;
		вхПриемник.DateIN = лВыборка.ДатаВходящегоДокумента;
		вхПриемник.NumINsf = "";
		вхПриемник.DateINsf = Неопределено;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		//вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0);
		Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
			вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
		Иначе	
			вхПриемник.Dob = 0;
		КонецЕсли;
		вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 2, 1);
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		
		вхПриемник.tCodeK = лВыборка.ТаможняКод;
		вхПриемник.tNameK = лВыборка.ТаможняНаименование;
		вхПриемник.tFullNameK = лВыборка.ТаможняНаименованиеПолное;
		вхПриемник.tAdress = лВыборка.ТаможняЮридическийАдрес;
		вхПриемник.tAdress2 = лВыборка.ТаможняФактическийАдрес;
		вхПриемник.tTel = лВыборка.ТаможняТелефон;
		вхПриемник.tINN = лВыборка.ТаможняИНН;
		вхПриемник.tOKPO = лВыборка.ТаможняОКПО;
		вхПриемник.tVidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "tVidK");
		вхПриемник.tVidDog = 1; // уточнить
		вхПриемник.tUIDK = XMLСтрока(лВыборка.ТаможняОсновнаяТорговаяТочка);
		вхПриемник.tSbor = лВыборка.имп_Пошлина;
		вхПриемник.tDosDoGR = лВыборка.имп_ДоставкаДоГраницы;
		вхПриемник.VALdoGr = лВыборка.имп_ВалДостДоГраницыКод;
		
		лКурсДоГраницы = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоГраницы, лВыборка.ДатаДокумента);
		вхПриемник.KursDoGr = лКурсДоГраницы.Курс * ?(лКурсДоГраницы.Кратность = 0, 1, лКурсДоГраницы.Кратность);
		вхПриемник.tDosDoTam = лВыборка.имп_ДоставкаТаможни;
		вхПриемник.VALDoTam = лВыборка.имп_ВалДостДоТаможниКод;
		
		лКурсДоТаможни = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостДоТаможни, лВыборка.ДатаДокумента);
		вхПриемник.KursDoTam = лКурсДоТаможни.Курс * ?(лКурсДоТаможни.Кратность = 0, 1, лКурсДоТаможни.Кратность);
		
		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Ed");
		вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		
		лКурсИнвойс = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.имп_ВалДостИнвойс, лВыборка.ДатаДокумента);
		вхПриемник.Sum = лВыборка.Сумма + ?(лМассИмпДоставкаИнвойс = Неопределено, 0, 
		МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(лМассИмпДоставкаИнвойс[лСчетчик], 
		лВыборка.имп_ВалДостИнвойс, лВыборка.ВалютаДокумента, лКурсИнвойс.Курс, 
		лВыборка.КурсВзаиморасчетов, лКурсИнвойс.Кратность, лВыборка.КратностьВзаиморасчетов));
		
		вхПриемник.Stavka = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
				
		вхПриемник.Записать();
	КонецЦикла;
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	Пока лВыборка.Следующий() Цикл
	
		вхПриемник.Добавить();
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.One = 0;
		вхПриемник.vid = "Импорт";
		вхПриемник.type = "Импорт";
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.NumIn = "";
		вхПриемник.DateIn = "";
		вхПриемник.NumINSF = "";
		вхПриемник.DateINSF = "";
		вхПриемник.CodeVal = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVal = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		вхПриемник.tDosDoGr = лВыборка.имп_ДоставкаДоГраницы;
		вхПриемник.ValDoGr = лВыборка.имп_ВалДостДоГраницыКод;
		вхПриемник.KursDoGr = лКурсДоГраницы.Курс * ?(лКурсДоГраницы.Кратность = 0, 1, лКурсДоГраницы.Кратность);
		вхПриемник.tDosDoTam = лВыборка.имп_ДоставкаТаможни;
		вхПриемник.ValDoTam = лВыборка.имп_ВалДостДоТаможниКод;
		вхПриемник.KursDoTam = лКурсДоТаможни.Курс * ?(лКурсДоТаможни.Кратность = 0, 1, лКурсДоТаможни.Кратность);
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.tCodeK = лВыборка.ТаможняКод;
		вхПриемник.tNameK = лВыборка.ТаможняНаименование;
		вхПриемник.tFullNameK = лВыборка.ТаможняНаименованиеПолное;
		вхПриемник.tAdress = лВыборка.ТаможняЮридическийАдрес;
		вхПриемник.tAdress2 = лВыборка.ТаможняФактическийАдрес;
		вхПриемник.tTel = лВыборка.ТаможняТелефон;
		вхПриемник.tINN = лВыборка.ТаможняИНН;
		вхПриемник.tOKPO = лВыборка.ТаможняОКПО;
		вхПриемник.tUIDK = XMLСтрока(лВыборка.ТаможняОсновнаяТорговаяТочка);
		вхПриемник.tVidK = ПоступлениеТоваровУслуг_ПолучитьЗначение(лВыборка, "tVidK");
		
		вхПриемник.tSbor = лВыборка.имп_Пошлина;
		вхПриемник.tPosh = лВыборка.Пош;
		вхПриемник.tNDS = лВыборка.тНДС;


		
		Если (лВыборка.имп_ДоставкаДоГраницы + лВыборка.имп_ДоставкаТаможни > 0) И ЗначениеЗаполнено(лВыборка.имп_КА_Доставка) Тогда
			
			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Телефон);
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				Телефон = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;
			
			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
			НаборЗаписей.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Юр. адрес контрагента"));
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				ЮА = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;

			НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(лВыборка.имп_КА_Доставка);
			НаборЗаписей.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
			НаборЗаписей.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Фактический адрес контрагента"));
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекЗапись из НаборЗаписей Цикл
				
				ФА = ТекЗапись.Представление;
				Прервать;
				
			КонецЦикла;
			
			вхПриемник.CodeK = лВыборка.ДоставкаКод;
			вхПриемник.NameK = лВыборка.ДоставкаНаименование;
			вхПриемник.FullNameK = лВыборка.ДоставкаНаименованиеПолное;
			вхПриемник.Adress = ЮА;
			вхПриемник.Adress2 = ФА;
			вхПриемник.Tel = Телефон;
			вхПриемник.INN = лВыборка.ДоставкаИНН;
			вхПриемник.VidK = ?(лВыборка.ДоставкаЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
			вхПриемник.OKPO = лВыборка.ДоставкаОКПО;
			вхПриемник.VidDog = 1; 
			вхПриемник.UIDK = XMLСтрока(лВыборка.ДоставкаОсновнаяТорговаяТочка);
						
		КонецЕсли;
		
		вхПриемник.Записать();
		Прервать;
		
	КонецЦикла;
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));
	//КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьДокументы_ПоступлениеТоваровУслуг(МассивСсылок = Неопределено)
	ОчищатьСписокКонтрагентов = ?(СписокКонтрагентов.Количество() > 0, Ложь, Истина);
	ЗаполнитьСписокКонтрагентов("ПоступлениеТоваровУслуг", МассивСсылок);
	
	лДопустимыеСтатусыДокумента = Новый Массив;
	лДопустимыеСтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ПоступлениеТоваровПринят);
	лДопустимыеСтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен);
	//лДопустимыеВидыДокумента = Новый Массив;
	//лДопустимыеВидыДокумента.Добавить(Перечисления.ВидыПоступленияТоваров.Импорт);
	//
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	лЗапрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	лЗапрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	лЗапрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	лЗапрос.УстановитьПараметр("ДопустимыеСтатусыДокумента", лДопустимыеСтатусыДокумента);
	//лЗапрос.УстановитьПараметр("ДопустимыеВидыДокумента", лДопустимыеВидыДокумента);
	лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
	лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
	лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.НомерВходящегоДокумента,
	|	Д.ДатаВходящегоДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.ВидОперацииПоступления,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент КАК Контрагент,
	|	Д.Контрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ИНН КАК КонтрагентИНН,
	|	Д.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комитенты КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомитент,
	|	ВЫБОР
	|		КОГДА Д.Контрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комиссионеры КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер,
	|	Д.ТорговаяТочка,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Д.Устарел_имп_ДоставкаИнвойс КАК имп_ДоставкаИнвойс,
	|	Д.Устарел_имп_ДоставкаТаможни КАК имп_ДоставкаТаможни,
	|	Д.Устарел_имп_ДоставкаДоГраницы КАК имп_ДоставкаДоГраницы,
	|	Д.Устарел_имп_ВалДостИнвойс КАК имп_ВалДостИнвойс,
	|	Д.Устарел_имп_ВалДостДоГраницы КАК имп_ВалДостДоГраницы,
	|	Д.Устарел_имп_ВалДостДоГраницы.Код КАК имп_ВалДостДоГраницыКод,
	|	Д.Устарел_имп_Пошлина КАК имп_Пошлина,
	|	Д.Устарел_имп_ВалДостДоТаможни КАК имп_ВалДостДоТаможни,
	|	Д.Устарел_имп_ВалДостДоТаможни.Код КАК имп_ВалДостДоТаможниКод,
	|	Д.имп_КА_Таможня КАК Таможня,
	|	Д.имп_КА_Таможня.Код КАК ТаможняКод,
	|	Д.имп_КА_Таможня.Наименование КАК ТаможняНаименование,
	|	Д.имп_КА_Таможня.НаименованиеПолное КАК ТаможняНаименованиеПолное,
	|	Д.имп_КА_Таможня.ОсновнаяТорговаяТочка КАК ТаможняОсновнаяТорговаяТочка,
	|	Д.имп_КА_Таможня.ИНН КАК ТаможняИНН,
	|	Д.имп_КА_Таможня.КодПоОКПО КАК ТаможняОКПО,
	|	Д.имп_КА_Таможня.ЮрФизЛицо КАК ТаможняЮрФизЛицо,
	|	ЮАТ.Представление КАК ТаможняЮридическийАдрес,
	|	ФАТ.Представление КАК ТаможняФактическийАдрес,
	|	ТТ.Представление КАК ТаможняТелефон,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Т.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	Т.Количество,
	|	Т.Коэффициент,
	|	Т.Сумма КАК Сумма,
	|	Т.СтавкаНДС,
	|	Т.СуммаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаПоКлассификаторуКод,
	|	Т.СтрокаПрихода.НомерГТД,
	|	Т.СтрокаПрихода.НомерГТД.Код КАК НомерГТДКод,
	|	Т.СтрокаПрихода.СтранаПроисхождения,
	|	Т.СтрокаПрихода.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.СтрокаПрихода.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Д.Устарел_имп_ОформлениеГТД КАК Пош,
	|	Д.Устарел_имп_СуммаНДС КАК тНДС,
	|	Д.имп_КА_Доставка,
	|	Д.имп_КА_Доставка.Код КАК ДоставкаКод,
	|	Д.имп_КА_Доставка.Наименование КАК ДоставкаНаименование,
	|	Д.имп_КА_Доставка.ИНН КАК ДоставкаИНН,
	|	Д.имп_КА_Доставка.ЮрФизЛицо КАК ДоставкаЮрФизЛицо,
	|	Д.имп_КА_Доставка.КодПоОКПО КАК ДоставкаОКПО,
	|	Д.имп_КА_Доставка.ОсновнаяТорговаяТочка КАК ДоставкаОсновнаяТорговаяТочка,
	|	Д.имп_КА_Доставка.НаименованиеПолное КАК ДоставкаНаименованиеПолное,
	|	Д.Контрагент.КПП,
	|	ВЫБОР
	|		КОГДА Д.НомерВходящегоДокументаСФ = """"
	|			ТОГДА НомераСчетовФактур.НомерСчетаФактуры
	|		ИНАЧЕ Д.НомерВходящегоДокументаСФ
	|	КОНЕЦ КАК НомерВходящегоДокументаСФ,
	|	ВЫБОР
	|		КОГДА Д.НомерВходящегоДокументаСФ = """"
	|			ТОГДА НомераСчетовФактур.ДатаСчетаФактуры
	|		ИНАЧЕ Д.ДатаВходящегоДокументаСФ
	|	КОНЕЦ КАК ДатаВходящегоДокументаСФ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО Д.Организация = Н.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАТ
	|		ПО Д.имп_КА_Таможня = ЮАТ.Объект
	|			И (ЮАТ.Тип = &ТипКИ_А)
	|			И (ЮАТ.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАТ
	|		ПО Д.имп_КА_Таможня = ФАТ.Объект
	|			И (ФАТ.Тип = &ТипКИ_А)
	|			И (ФАТ.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТТ
	|		ПО Д.имп_КА_Таможня = ТТ.Объект
	|			И (ТТ.Тип = &ТипКИ_Т)
	|			И (ТТ.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераСчетовФактур КАК НомераСчетовФактур
	|		ПО (НомераСчетовФактур.Объект = Д.Ссылка)
	|ГДЕ
	|	(Д.Дата >= &НачДата
	|				И (Д.Дата <= &КонДата
	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ &ЕстьСсылкаНаДокумент)
	|	И Д.Проведен
	|	И НЕ Д.Организация.Франчайзи
	//|	И Д.ВидОперацииПоступления В (&ДопустимыеВидыДокумента)
	|	И (Д.СтатусДокумента В (&ДопустимыеСтатусыДокумента)
	|			ИЛИ Д.ЭтоМФП или Д.ВидОперацииПоступления=ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.Импорт))
	|	И Д.ВидОперацииПоступления <> ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.ОтветХранение)
	|	И Н.Ссылка = &НастройкаВыгрузки
	|	И НЕ(Д.Склад.Бонусный
	|				ИЛИ Д.Склад.Сувенирный)
	|	И Т.Сумма <> 0
	|	И (Д.Ссылка В (&СсылкаНаДокумент)
	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	|	%%УсловиеПоМФП%%
	|	%%УсловиеПоКонтрагентам%%
	|
	|УПОРЯДОЧИТЬ ПО
	|	Д.МоментВремени,
	|	Т.НомерСтроки
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	Если СписокКонтрагентов.Количество() > 0 Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	лСписок.Контрагент
		|ПОМЕСТИТЬ К
		|ИЗ
		|	&лСписок КАК лСписок
		|;
        |
		|////////////////////////////////////////////////////////////////////////////////
		|" + ТекстЗапроса;
		лЗапрос.УстановитьПараметр("лСписок", СписокКонтрагентов);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "
		|	И Д.Контрагент В (ВЫБРАТЬ РАЗЛИЧНЫЕ К.Контрагент ИЗ К КАК К)");
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "");
		
	КонецЕсли;
		
	Если НЕ ТолькоМФП И НЕ БезМФП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		
	ИначеЕсли ТолькоМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ЭтоМФП");
		
	ИначеЕсли БезМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ЭтоМФП");
		
	КонецЕсли;
	
	лЗапрос.Текст = ТекстЗапроса;
	лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока лВыборкаДень.Следующий() цикл
		
		лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.ПоступлениеТоваровУслуг, лВыборкаДень.ДатаДокументаДень);
		УдалитьФайлы(лПолноеИмяФайла);
		
		лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
		
		//Семенов И.П. 16.07.2019 XX-2924(
		ИнициализироватьТаблицуИстории();
		//)Семенов И.П.
		
		лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока лВыборкаДокумент.Следующий() цикл
			
			//Если НЕ ПоступлениеТоваровУслуг_ПроверитьДокумент(лВыборкаДокумент) тогда
			//	Продолжить;
			//КонецЕсли;			
			
			Если (лВыборкаДокумент.ВидОперацииПоступления <> Перечисления.ВидыПоступленияТоваров.Импорт) тогда
				ПоступлениеТоваровУслуг_ВыгрузитьДокумент1(лПриемник, лВыборкаДокумент, 
				Новый Структура("СсылкаНаДокумент", МассивСсылок));
			Иначе
				ПоступлениеТоваровУслуг_ВыгрузитьДокумент2(лПриемник, лВыборкаДокумент, 
				Новый Структура("СсылкаНаДокумент", МассивСсылок));
			КонецЕсли;
						
			ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);
			
		КонецЦикла;
				
		лПриемник.ЗакрытьФайл();
		
		//Семенов И.П. 16.07.2019 XX-2924(		
		НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
		ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
		//)Семенов И.П.
		
	КонецЦикла;
	
	Если ОчищатьСписокКонтрагентов Тогда
		СписокКонтрагентов.Очистить();
	КонецЕсли;
	
КонецПроцедуры


Процедура ВыгрузитьДокументы_ПоступлениеТоваровУслуг_old(МассивСсылок = Неопределено, МФП)
	
	лДопустимыеСтатусыДокумента = Новый Массив;
	лДопустимыеСтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ПоступлениеТоваровПринят);
	лДопустимыеСтатусыДокумента.Добавить(Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен);
	
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	лЗапрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	лЗапрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	лЗапрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	лЗапрос.УстановитьПараметр("ДопустимыеСтатусыДокумента", лДопустимыеСтатусыДокумента);
	лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
	лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
	лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.НомерВходящегоДокумента,
	|	Д.ДатаВходящегоДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.ВидОперацииПоступления,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент КАК Контрагент,
	|	Д.Контрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ИНН КАК КонтрагентИНН,
	|	Д.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комитенты КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомитент,
	|	ВЫБОР
	|		КОГДА Д.Контрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комиссионеры КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер,
	|	Д.ТорговаяТочка,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Д.Устарел_имп_ДоставкаИнвойс КАК имп_ДоставкаИнвойс,
	|	Д.Устарел_имп_ДоставкаТаможни КАК имп_ДоставкаТаможни,
	|	Д.Устарел_имп_ДоставкаДоГраницы КАК имп_ДоставкаДоГраницы,
	|	Д.Устарел_имп_ВалДостИнвойс КАК имп_ВалДостИнвойс,
	|	Д.Устарел_имп_ВалДостДоГраницы КАК имп_ВалДостДоГраницы,
	|	Д.Устарел_имп_ВалДостДоГраницы.Код КАК имп_ВалДостДоГраницыКод,
	|	Д.Устарел_имп_Пошлина КАК имп_Пошлина,
	|	Д.Устарел_имп_ВалДостДоТаможни КАК имп_ВалДостДоТаможни,
	|	Д.Устарел_имп_ВалДостДоТаможни.Код КАК имп_ВалДостДоТаможниКод,
	|	Д.имп_КА_Таможня КАК Таможня,
	|	Д.имп_КА_Таможня.Код КАК ТаможняКод,
	|	Д.имп_КА_Таможня.Наименование КАК ТаможняНаименование,
	|	Д.имп_КА_Таможня.НаименованиеПолное КАК ТаможняНаименованиеПолное,
	|	Д.имп_КА_Таможня.ОсновнаяТорговаяТочка КАК ТаможняОсновнаяТорговаяТочка,
	|	Д.имп_КА_Таможня.ИНН КАК ТаможняИНН,
	|	Д.имп_КА_Таможня.КодПоОКПО КАК ТаможняОКПО,
	|	Д.имп_КА_Таможня.ЮрФизЛицо КАК ТаможняЮрФизЛицо,
	|	ЮАТ.Представление КАК ТаможняЮридическийАдрес,
	|	ФАТ.Представление КАК ТаможняФактическийАдрес,
	|	ТТ.Представление КАК ТаможняТелефон,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Т.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	Т.Количество,
	|	Т.Коэффициент,
	|	Т.Сумма КАК Сумма,
	|	Т.СтавкаНДС,
	|	Т.СуммаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаПоКлассификаторуКод,
	|	Т.СтрокаПрихода.НомерГТД,
	|	Т.СтрокаПрихода.НомерГТД.Код КАК НомерГТДКод,
	|	Т.СтрокаПрихода.СтранаПроисхождения,
	|	Т.СтрокаПрихода.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.СтрокаПрихода.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Д.Устарел_имп_ОформлениеГТД КАК Пош,
	|	Д.Устарел_имп_СуммаНДС КАК тНДС,
	|	Д.имп_КА_Доставка,
	|	Д.имп_КА_Доставка.Код КАК ДоставкаКод,
	|	Д.имп_КА_Доставка.Наименование КАК ДоставкаНаименование,
	|	Д.имп_КА_Доставка.ИНН КАК ДоставкаИНН,
	|	Д.имп_КА_Доставка.ЮрФизЛицо КАК ДоставкаЮрФизЛицо,
	|	Д.имп_КА_Доставка.КодПоОКПО КАК ДоставкаОКПО,
	|	Д.имп_КА_Доставка.ОсновнаяТорговаяТочка КАК ДоставкаОсновнаяТорговаяТочка,
	|	Д.имп_КА_Доставка.НаименованиеПолное КАК ДоставкаНаименованиеПолное,
	|	Д.Контрагент.КПП,
	|	ВЫБОР
	|		КОГДА Д.НомерВходящегоДокументаСФ = """"
	|			ТОГДА НомераСчетовФактур.НомерСчетаФактуры
	|		ИНАЧЕ Д.НомерВходящегоДокументаСФ
	|	КОНЕЦ КАК НомерВходящегоДокументаСФ,
	|	ВЫБОР
	|		КОГДА Д.НомерВходящегоДокументаСФ = """"
	|			ТОГДА НомераСчетовФактур.ДатаСчетаФактуры
	|		ИНАЧЕ Д.ДатаВходящегоДокументаСФ
	|	КОНЕЦ КАК ДатаВходящегоДокументаСФ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО Д.Организация = Н.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАТ
	|		ПО Д.имп_КА_Таможня = ЮАТ.Объект
	|			И (ЮАТ.Тип = &ТипКИ_А)
	|			И (ЮАТ.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАТ
	|		ПО Д.имп_КА_Таможня = ФАТ.Объект
	|			И (ФАТ.Тип = &ТипКИ_А)
	|			И (ФАТ.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТТ
	|		ПО Д.имп_КА_Таможня = ТТ.Объект
	|			И (ТТ.Тип = &ТипКИ_Т)
	|			И (ТТ.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераСчетовФактур КАК НомераСчетовФактур
	|		ПО (НомераСчетовФактур.Объект = Д.Ссылка)
	|ГДЕ
	|	(Д.Дата >= &НачДата
	|				И (Д.Дата <= &КонДата
	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ &ЕстьСсылкаНаДокумент)
	|	И Д.Проведен
	|	И (Д.СтатусДокумента В (&ДопустимыеСтатусыДокумента)
	|			ИЛИ Д.ЭтоМФП)
	|	И Д.ВидОперацииПоступления <> ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.ОтветХранение)
	|	И Н.Ссылка = &НастройкаВыгрузки
	|	И НЕ(Д.Склад.Бонусный
	|				ИЛИ Д.Склад.Сувенирный)
	|	И Т.Сумма <> 0
	|	И (Д.Ссылка В (&СсылкаНаДокумент)
	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	|	И Д.ЭтоМФП = &ЭтоМФП
	|
	|УПОРЯДОЧИТЬ ПО
	|	Д.МоментВремени,
	|	Т.НомерСтроки
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	Если НЕ МФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Д.ЭтоМФП = &ЭтоМФП", "");
		
	Иначе
		
		лЗапрос.УстановитьПараметр("ЭтоМФП", Истина);
		
	КонецЕсли;
	
	лЗапрос.Текст = ТекстЗапроса;
	лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока лВыборкаДень.Следующий() цикл
		
		лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.ПоступлениеТоваровУслуг, лВыборкаДень.ДатаДокументаДень);
		УдалитьФайлы(лПолноеИмяФайла);
		
		лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
		
		лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока лВыборкаДокумент.Следующий() цикл
			
			Если НЕ ПоступлениеТоваровУслуг_ПроверитьДокумент(лВыборкаДокумент) тогда
				Продолжить;
			КонецЕсли;			
			
			Если (лВыборкаДокумент.ВидОперацииПоступления <> Перечисления.ВидыПоступленияТоваров.Импорт) тогда
				ПоступлениеТоваровУслуг_ВыгрузитьДокумент1(лПриемник, лВыборкаДокумент, 
				Новый Структура("СсылкаНаДокумент", МассивСсылок));
			Иначе
				ПоступлениеТоваровУслуг_ВыгрузитьДокумент2(лПриемник, лВыборкаДокумент, 
				Новый Структура("СсылкаНаДокумент", МассивСсылок));
			КонецЕсли;
						
			ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);
			
		КонецЦикла;
				
		лПриемник.ЗакрытьФайл();
		
	КонецЦикла;
	
КонецПроцедуры

//Реализация товаров и услуг

Функция РеализацияТоваровУслуг_ПолучитьЗначение(вхВыборка, вхИмяПоля)
		
	Результат = Неопределено;	
	лИмяПоля = СокрЛП(ВРег(вхИмяПоля));
	Если (лИмяПоля = ВРег("Type")) тогда
		Если (вхВыборка.ЭтоКомиссионер) и (вхВыборка.ВидОперации <> Перечисления.ВидыОперацийРеализацияТоваров.МФПКомиссия) тогда
			Результат = "Комиссия";
		Иначе
			Результат = "Отгрузка";
		КонецЕсли;
	ИначеЕсли (лИмяПоля = ВРег("VidK")) тогда
		Результат = ?(вхВыборка.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
	ИначеЕсли (лИмяПоля = ВРег("Ed")) тогда
		Результат = ?(вхВыборка.НоменклатураУслуга, "796", вхВыборка.ЕдиницаПоКлассификаторуКод);
	ИначеЕсли (лИмяПоля = ВРег("Stavka")) тогда
		Результат = ПолучитьСтавкуНДС(вхВыборка.СтавкаНДС);	
	КонецЕсли;
	
	Возврат Результат;
			
КонецФункции

Процедура РеализацияТоваровУслуг_ВыгрузитьДокумент(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	
	//Семенов И.П. 04.06.2019 XX-2514(
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	//)Семенов И.П.
	
	Пока лВыборка.Следующий() цикл	
		вхПриемник.Добавить();
		вхПриемник.vid = "Реализация";
		вхПриемник.Type = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.NumIN = "";
		вхПриемник.DateIN = "";
		вхПриемник.NumINsf = лВыборка.НомерСФ;
		вхПриемник.DateINsf = лВыборка.ДатаСФ;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		Если лВыборка.КонтрагентКПП = "" ИЛИ СтрДлина(лВыборка.КонтрагентКПП) <> 9 Тогда
			вхПриемник.KPP = Лев(лВыборка.КонтрагентИНН, 4) + "01001";
		Иначе
			вхПриемник.KPP = лВыборка.КонтрагентКПП;
		КонецЕсли;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		//Если лВыборка.ОрганизацияИНН = "5262337498" ИЛИ лВыборка.ОрганизацияИНН = "5263111253" Тогда
		//	вхПриемник.Dob = 0;
		//Иначе
		//	вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
		//КонецЕсли;
		Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
			Если лВыборка.ОрганизацияИНН = "5262337498" ИЛИ лВыборка.ОрганизацияИНН = "5263111253" Тогда
				вхПриемник.Dob = 0;
			Иначе
				вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
			КонецЕсли;
		Иначе	
		    вхПриемник.Dob = 0;
        КонецЕсли;
		вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 4, 3);
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "Ed");
		вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		вхПриемник.Sum = лВыборка.Сумма;
		вхПриемник.Stavka = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
		
		НаличиеВозврата = 0;
		ДокументыРавны = 0;
		//ПараметрыОтбора = Новый Структура;
		//ПараметрыОтбора.Вставить("РТУ", лВыборка.Ссылка);
		//ПараметрыОтбора.Вставить("Номенклатура", лВыборка.Номенклатура);
		//Строки = ТЗВозвратов.НайтиСтроки(ПараметрыОтбора);
		//		
		//Если Строки.Количество() > 0 Тогда
		//	Для Каждого ТекСтрока из Строки Цикл
		//		НаличиеВозврата = 1;
		//		Если ТекСтрока.ВТП = ТекСтрока.СФ Тогда
		//			ДокументыРавны = 1;	
		//		Иначе
		//			ДокументыРавны = 2;
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		
		вхПриемник.C41 = НаличиеВозврата;
		вхПриемник.C41CF = ДокументыРавны;
		
		//Если ЭтоКомиссионер(лВыборка.ОрганизацияИНН) Тогда
		//
		//	Если лВыборка.ЭтоМФП И НЕ лВыборка.СкладVMI Тогда
		//		
		//		Партия = лВыборка.СтрокаПрихода.Приход;
		//		
		//		Если ЗначениеЗаполнено(Партия) И ЭтоКомиссионер(Партия.Организация.ИНН) Тогда
		//		
		//			вхПриемник.PartNum = Партия.Номер;
		//			вхПриемник.PartDate = Партия.Дата;
		//			вхПриемник.PartType = Строка(Метаданные.НайтиПоТипу(ТипЗнч(Партия)));
		//			
		//		КонецЕсли;
		//		
		//	ИначеЕсли ЭтоПитер(лВыборка.ОрганизацияИНН) И НЕ лВыборка.СкладVMI Тогда
		//		
		//		Партия = лВыборка.СтрокаПрихода.Приход;
		//		
		//		Если ЗначениеЗаполнено(Партия) И ЭтоКомиссионер(Партия.Организация.ИНН) Тогда
		//		
		//			вхПриемник.PartNum = Партия.Номер;
		//			вхПриемник.PartDate = Партия.Дата;
		//			вхПриемник.PartType = Строка(Метаданные.НайтиПоТипу(ТипЗнч(Партия)));
		//			
		//		КонецЕсли;			
		//		
		//	ИначеЕсли лВыборка.ЭтоМФП И лВыборка.СкладVMI Тогда
		//		
		//		//СтрокаПрихода = НайтиСтрокуПрихода(лВыборка.Ссылка, лВыборка.Номенклатура);
		//		Партия = ПолучитьПартиюVMI(лВыборка.СтрокаПрихода, лВыборка.Номенклатура);
		//		
		//		Если ЗначениеЗаполнено(Партия) И ЭтоКомиссионер(Партия.Организация.ИНН) Тогда
		//		
		//			вхПриемник.PartNum = Партия.Номер;
		//			вхПриемник.PartDate = Партия.Дата;
		//			вхПриемник.PartType = Строка(Метаданные.НайтиПоТипу(ТипЗнч(Партия)));
		//			
		//		КонецЕсли;
		//		
		//	ИначеЕсли ЭтоПитер(лВыборка.ОрганизацияИНН) И лВыборка.СкладVMI Тогда
		//		
		//		//СтрокаПрихода = НайтиСтрокуПрихода(лВыборка.Ссылка, лВыборка.Номенклатура);
		//		Партия = ПолучитьПартиюVMI(лВыборка.СтрокаПрихода, лВыборка.Номенклатура);
		//		
		//		Если ЗначениеЗаполнено(Партия) И ЭтоКомиссионер(Партия.Организация.ИНН) Тогда
		//		
		//			вхПриемник.PartNum = Партия.Номер;
		//			вхПриемник.PartDate = Партия.Дата;
		//			вхПриемник.PartType = Строка(Метаданные.НайтиПоТипу(ТипЗнч(Партия)));
		//			
		//		КонецЕсли;
		//			
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
		//Семенов И.П. 04.06.2019 XX-2514(
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
		
	КонецЦикла;	
	
	ТекСтрока = вхВыборкаДокумент.Ссылка.Услуги.Найти(1, "НомерСтроки");
	
	Если ТекСтрока <> Неопределено Тогда
		Если ТекСтрока.Сумма <> 0 Тогда
			лВыборка = вхВыборкаДокумент.Выбрать();
			Пока лВыборка.Следующий() Цикл
				вхПриемник.Добавить();
				вхПриемник.vid = "Реализация";
				вхПриемник.Type = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
				вхПриемник.INNF = лВыборка.ОрганизацияИНН;
				вхПриемник.NumD = лВыборка.НомерДокумента;
				вхПриемник.DateD = лВыборка.ДатаДокумента;
				вхПриемник.NumIN = "";
				вхПриемник.DateIN = "";
				вхПриемник.NumINsf = лВыборка.НомерСФ;
				вхПриемник.DateINsf = лВыборка.ДатаСФ;
				вхПриемник.CodeK = лВыборка.КонтрагентКод;
				вхПриемник.NameK = лВыборка.КонтрагентНаименование;
				вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
				вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
				вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
				вхПриемник.Tel = лВыборка.КонтрагентТелефон;
				вхПриемник.INN = лВыборка.КонтрагентИНН;
				вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
				вхПриемник.VidK = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
				вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
				//вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0);
				Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
					вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
				Иначе	
					вхПриемник.Dob = 0;
				КонецЕсли;
				вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 2, 1);
				вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
				вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
				//Семенов И.П. 22.02.2019 XX-1971(
				вхПриемник.UIDT = XMLСтрока(ТекСтрока.Номенклатура);
				//)Семенов И.П.
				вхПриемник.CodeT = ТекСтрока.Номенклатура.Код;
				вхПриемник.NameT = ТекСтрока.Номенклатура.Наименование;
				вхПриемник.FullNameT = ТекСтрока.Номенклатура.НаименованиеПолное;
				вхПриемник.VidT = 2;
				вхПриемник.Art = ТекСтрока.Номенклатура.Артикул;
				вхПриемник.Izg = ТекСтрока.Номенклатура.Изготовитель.Наименование;
				вхПриемник.Ed = "796";
				вхПриемник.Kol = ТекСтрока.Количество;
				вхПриемник.NDS = ТекСтрока.СуммаНДС;
				вхПриемник.Sum = ТекСтрока.Сумма;
				вхПриемник.Stavka = ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС);
				вхПриемник.DateB = лВыборка.ДатаДокумента;
				вхПриемник.DateF = лВыборка.ДатаДокумента;
				вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
				вхПриемник.C41 = 0;
				вхПриемник.C41CF = 0;
				//Семенов И.П. 04.06.2019 XX-2514(
				ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник, "Услуги");
				//)Семенов И.П.
				вхПриемник.Записать();
				Прервать;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));	
	//КонецЕсли;
	//Семенов И.П. 11.07.2019 XX-2872(
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.РеализацияТоваровУслуг");	
	//)Семенов И.П.
	
КонецПроцедуры

Процедура ВыгрузитьРеализацииТолькоСУслугами(вхПриемник, вхВыборкаДокумент)
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	Пока лВыборка.Следующий() Цикл
		вхПриемник.Добавить();
		вхПриемник.vid = "Реализация";
		вхПриемник.Type = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.NumIN = "";
		вхПриемник.DateIN = "";
		вхПриемник.NumINsf = лВыборка.НомерСФ;
		вхПриемник.DateINsf = лВыборка.ДатаСФ;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = РеализацияТоваровУслуг_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		Если лВыборка.ДатаДокумента<Дата(2019,01,01) Тогда
			вхПриемник.Dob = ?(лВыборка.ЭтоСобственноеЮрЛицо, 1, 0); 
		Иначе	
			вхПриемник.Dob = 0;
		КонецЕсли;
		вхПриемник.VidDog = ?(вхПриемник.Type = "Комиссия", 2, 1);
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = 2;
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = "796";
		вхПриемник.Kol = лВыборка.Количество;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		вхПриемник.Sum = лВыборка.Сумма;
		вхПриемник.Stavka = ПолучитьСтавкуНДС(лВыборка.СтавкаНДС);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = 0;
		вхПриемник.C41 = 0;
		вхПриемник.C41CF = 0;
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник, "Услуги");
		вхПриемник.Записать();
		Прервать;
	КонецЦикла;
	//Семенов И.П. 11.07.2019 XX-2872(	
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.РеализацияТоваровУслуг");
	//)Семенов И.П.
КонецПроцедуры

Процедура ВыгрузитьДокументы_РеализацияТоваровУслуг(МассивСсылок = Неопределено)
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("СтатусДокумента", Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен);
	//Запрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	//Запрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	//Запрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	//Запрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	//Запрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	//Запрос.УстановитьПараметр("ДатаВозвратов", ДатаВозвратов);
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РеализацияТоваровУслугТовары.Ссылка КАК РТУ,
	//	|	ВЫБОР
	//	|		КОГДА НЕ ВозвратТоваровОтПокупателяТовары.Ссылка ЕСТЬ NULL
	//	|			ТОГДА 1
	//	|		ИНАЧЕ 0
	//	|	КОНЕЦ КАК ВТП,
	//	|	РеализацияТоваровУслугТовары.Номенклатура,
	//	|	ВЫБОР
	//	|		КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	//	|			ТОГДА 1
	//	|		ИНАЧЕ 0
	//	|	КОНЕЦ КАК СФ
	//	|ИЗ
	//	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	//	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = СчетФактураПолученный.ДокументОснование
	//	|		ПО РеализацияТоваровУслугТовары.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка.ДокументОснование
	//	|			И РеализацияТоваровУслугТовары.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК НастройкиВыгрузкиВБухгалтерию
	//	|		ПО РеализацияТоваровУслугТовары.Ссылка.Организация = НастройкиВыгрузкиВБухгалтерию.Организация
	//	|ГДЕ
	//	|	(РеализацияТоваровУслугТовары.Ссылка.Дата >= &НачДата
	//	|				И (РеализацияТоваровУслугТовары.Ссылка.Дата <= &КонДата
	//	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	//	|			ИЛИ &ЕстьСсылкаНаДокумент)
	//	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	//	|	И РеализацияТоваровУслугТовары.Ссылка.СтатусДокумента = &СтатусДокумента
	//	|	И НастройкиВыгрузкиВБухгалтерию.Ссылка = &НастройкаВыгрузки
	//	|	И РеализацияТоваровУслугТовары.Сумма <> 0
	//	|	И (РеализацияТоваровУслугТовары.Ссылка В (&СсылкаНаДокумент)
	//	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	//	|	И ВозвратТоваровОтПокупателяТовары.Ссылка.Дата <= &ДатаВозвратов
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	РеализацияТоваровУслугТовары.Ссылка.Дата";
	
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РеализацияТоваровУслугТовары.Ссылка КАК РТУ,
	//	|	РеализацияТоваровУслугТовары.Номенклатура
	//	|ПОМЕСТИТЬ Реал
	//	|ИЗ
	//	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК НастройкиВыгрузкиВБухгалтерию
	//	|		ПО РеализацияТоваровУслугТовары.Ссылка.Организация = НастройкиВыгрузкиВБухгалтерию.Организация
	//	|ГДЕ
	//	|	(РеализацияТоваровУслугТовары.Ссылка.Дата >= &НачДата
	//	|				И (РеализацияТоваровУслугТовары.Ссылка.Дата <= &КонДата
	//	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	//	|			ИЛИ &ЕстьСсылкаНаДокумент)
	//	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	//	|	И РеализацияТоваровУслугТовары.Ссылка.СтатусДокумента = &СтатусДокумента
	//	|	И НастройкиВыгрузкиВБухгалтерию.Ссылка = &НастройкаВыгрузки
	//	|	И РеализацияТоваровУслугТовары.Сумма <> 0
	//	|	И (РеализацияТоваровУслугТовары.Ссылка В (&СсылкаНаДокумент)
	//	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	Реал.РТУ,
	//	|	Реал.Номенклатура,
	//	|	ВЫБОР
	//	|		КОГДА НЕ ВозвратТоваровОтПокупателяТовары.Ссылка ЕСТЬ NULL
	//	|			ТОГДА 1
	//	|		ИНАЧЕ 0
	//	|	КОНЕЦ КАК ВТП,
	//	|	ВЫБОР
	//	|		КОГДА НЕ СчетФактураПолученный.Ссылка ЕСТЬ NULL
	//	|			ТОГДА 1
	//	|		ИНАЧЕ 0
	//	|	КОНЕЦ КАК СФ
	//	|ПОМЕСТИТЬ Возв
	//	|ИЗ
	//	|	Реал КАК Реал
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	//	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = СчетФактураПолученный.ДокументОснование
	//	|		ПО Реал.РТУ = ВозвратТоваровОтПокупателяТовары.Ссылка.ДокументОснование
	//	|			И Реал.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
	//	|ГДЕ
	//	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата <= &ДатаВозвратов
	//	|	И СчетФактураПолученный.Проведен
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	Возв.РТУ,
	//	|	Возв.Номенклатура,
	//	|	СУММА(Возв.ВТП) КАК ВТП,
	//	|	СУММА(Возв.СФ) КАК СФ
	//	|ИЗ
	//	|	Возв КАК Возв
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	Возв.РТУ,
	//	|	Возв.Номенклатура";
	//
	//ТЗВозвратов = Запрос.Выполнить().Выгрузить();
	//ТЗВозвратов.Свернуть("РТУ, Номенклатура", "ВТП, СФ");
		
	//Сообщить("Конец возвратов " + ТекущаяДата());
	
	ОчищатьСписокКонтрагентов = ?(СписокКонтрагентов.Количество() > 0, Ложь, Истина);
	ЗаполнитьСписокКонтрагентов("РеализацияТоваровУслуг", МассивСсылок);
		
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("МассивПитерских", ПолучитьМассивПитерских());
	лЗапрос.УстановитьПараметр("СтатусДокумента", Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен);
	лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	лЗапрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	лЗапрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	лЗапрос.УстановитьПараметр("Организация", НастройкаВыгрузки.Организация);
	лЗапрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	лЗапрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
	лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
	лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);	
	ТекстЗапроса = 
	//Семенов И.П. 21.01.2019 Добавил условие в запрос по франчайзи
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|   Д.ВидОперации,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент.ГоловнойКонтрагент КАК Контрагент,
	|	Д.Контрагент.ГоловнойКонтрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.ГоловнойКонтрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ГоловнойКонтрагент.ИНН КАК КонтрагентИНН,
	|	Д.Контрагент.ГоловнойКонтрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.ГоловнойКонтрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ГоловнойКонтрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.ГоловнойКонтрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комиссионеры КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Т.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код КАК ЕдиницаХраненияОстатковКод,
	|	Т.Номенклатура.НомерГТД,
	|	Т.Номенклатура.НомерГТД.Код КАК НомерГТДКод,
	|	Т.Номенклатура.СтранаПроисхождения,
	|	Т.Номенклатура.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.Номенклатура.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	Т.Количество,
	|	Т.Коэффициент,
	|	Т.Сумма КАК Сумма,
	|	Т.СтавкаНДС,
	|	Т.СуммаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаПоКлассификаторуКод,
	|	Д.ТорговаяТочка,
	|	СчетФактураВыданный.Номер КАК НомерСФ,
	|	СчетФактураВыданный.Дата КАК ДатаСФ,
	|	Д.ЭтоМФП,
	|	Д.Склад.СкладVMI КАК СкладVMI,
	|	Д.Контрагент.КПП
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО Д.Организация = Н.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО (СчетФактураВыданный.ДокументОснование = Д.Ссылка)
	|ГДЕ
	|	(Д.Дата >= &НачДата
	|				И (Д.Дата <= &КонДата
	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ &ЕстьСсылкаНаДокумент)
	|	И Д.Проведен
	|	И Д.СтатусДокумента = &СтатусДокумента
	|	И Н.Ссылка = &НастройкаВыгрузки
	|	И Т.Сумма <> 0
	|	И (Д.Ссылка В (&СсылкаНаДокумент)
	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	|	И СчетФактураВыданный.Проведен
	|	И (Д.Организация.Франчайзи = ЛОЖЬ
	|			ИЛИ Д.Организация.Франчайзи = ИСТИНА
	|				И Д.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные))
	|	%%УсловиеПоКонтрагентам%%
	|	%%УсловиеПоМФП%%
	|
	|УПОРЯДОЧИТЬ ПО
	|	Д.МоментВремени,
	|	Т.НомерСтроки
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	Если СписокКонтрагентов.Количество() > 0 Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	лСписок.Контрагент
		|ПОМЕСТИТЬ К
		|ИЗ
		|	&лСписок КАК лСписок
		|;
        |
		|////////////////////////////////////////////////////////////////////////////////
		|" + ТекстЗапроса;
		лЗапрос.УстановитьПараметр("лСписок", СписокКонтрагентов);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "
		|	И Д.Контрагент В (ВЫБРАТЬ РАЗЛИЧНЫЕ К.Контрагент ИЗ К КАК К)");
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "");
		
	КонецЕсли;
		
	Если НЕ ТолькоМФП И НЕ БезМФП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		
	ИначеЕсли ТолькоМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ЭтоМФП");
		
	ИначеЕсли БезМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ЭтоМФП");
		
	КонецЕсли;
	
	//Если (НЕ ТолькоУслуги И НЕ ВыгрузитьТолькоРеализацииСУслугами) ИЛИ ВыгрузитьТолькоРеализацииСУслугами Тогда
	Если (НЕ ТолькоУслуги И НЕ ВыгрузитьТолькоРеализацииСУслугами) ИЛИ ТолькоУслуги Тогда
		лЗапрос.Текст = ТекстЗапроса;	
		лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//Сообщить("Конец запроса " + ТекущаяДата());
		Пока лВыборкаДень.Следующий() цикл
			
			//Семенов И.П. 16.07.2019 XX-2924(
			ИнициализироватьТаблицуИстории();
			//)Семенов И.П.
			
			лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.РеализацияТоваровУслуг, лВыборкаДень.ДатаДокументаДень);
			УдалитьФайлы(лПолноеИмяФайла);
			лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
			
			лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Пока лВыборкаДокумент.Следующий() Цикл
				//Если НЕ ПроверитьДокумент(лВыборкаДокумент.Ссылка) Тогда
				//	ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Ложь, "Ошибка в ИНН контрагента");
				//	Продолжить;
				//КонецЕсли;			
				Если ТолькоУслуги Тогда
					ТекСтрока = лВыборкаДокумент.Ссылка.Услуги.Найти(1, "НомерСтроки");
					Если ТекСтрока <> Неопределено Тогда
						РеализацияТоваровУслуг_ВыгрузитьДокумент(лПриемник, лВыборкаДокумент, Новый Структура("СсылкаНаДокумент", МассивСсылок));
						ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);
					КонецЕсли;
				Иначе
					РеализацияТоваровУслуг_ВыгрузитьДокумент(лПриемник, лВыборкаДокумент, Новый Структура("СсылкаНаДокумент", МассивСсылок));
					ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);	
				КонецЕсли;
				
			КонецЦикла;
			лПриемник.ЗакрытьФайл();
			
		    //Семенов И.П. 16.07.2019 XX-2924(		
			НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
			ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
			//)Семенов И.П.
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	лСписок.Контрагент
	|ПОМЕСТИТЬ К
	|ИЗ
	|	&лСписок КАК лСписок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Услуги
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО РеализацияТоваровУслугУслуги.Ссылка.Организация = Н.Организация
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаН И &ДатаО
	|	И РеализацияТоваровУслугУслуги.Ссылка.Проведен
	|	И РеализацияТоваровУслугУслуги.Ссылка.СтатусДокумента = &СтатусДокумента
	|	И РеализацияТоваровУслугУслуги.Ссылка.Контрагент В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				К.Контрагент
	|			ИЗ
	|				К КАК К)
	|	И Н.Ссылка = &НастройкаВыгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата В
	|			(ВЫБРАТЬ
	|				Услуги.Ссылка
	|			ИЗ
	|				Услуги КАК Услуги)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Услуги.Ссылка
	|ПОМЕСТИТЬ СписокДокументов
	|ИЗ
	|	Услуги КАК Услуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО Услуги.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.ВидОперации,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент.ГоловнойКонтрагент КАК Контрагент,
	|	Д.Контрагент.ГоловнойКонтрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.ГоловнойКонтрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ГоловнойКонтрагент.ИНН КАК КонтрагентИНН,
	|	Д.Контрагент.ГоловнойКонтрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.ГоловнойКонтрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ГоловнойКонтрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.ГоловнойКонтрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комиссионеры КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Т.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код КАК ЕдиницаХраненияОстатковКод,
	|	Т.Номенклатура.НомерГТД,
	|	Т.Номенклатура.НомерГТД.Код КАК НомерГТДКод,
	|	Т.Номенклатура.СтранаПроисхождения,
	|	Т.Номенклатура.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.Номенклатура.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	Т.Количество,
	|	1 КАК Коэффициент,
	|	Т.Сумма КАК Сумма,
	|	Т.СтавкаНДС,
	|	Т.СуммаНДС,
	|	Д.ТорговаяТочка,
	|	СчетФактураВыданный.Номер КАК НомерСФ,
	|	СчетФактураВыданный.Дата КАК ДатаСФ,
	|	Д.ЭтоМФП,
	|	Д.Склад.СкладVMI КАК СкладVMI,
	|	Д.Контрагент.КПП
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО (СчетФактураВыданный.ДокументОснование = Д.Ссылка)
	|ГДЕ
	|	Д.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокДокументов.Ссылка
	|			ИЗ
	|				СписокДокументов КАК СписокДокументов)
	|	И Т.Сумма <> 0
	|	И СчетФактураВыданный.Проведен
	|	И (Д.Организация.Франчайзи = ЛОЖЬ
	|			ИЛИ Д.Организация.Франчайзи = ИСТИНА
	|				И Д.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Д.МоментВремени,
	|	Т.НомерСтроки
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	//Если ТолькоУслуги ИЛИ ВыгрузитьТолькоРеализацииСУслугами Тогда
	Если ВыгрузитьТолькоРеализацииСУслугами ИЛИ (НЕ ТолькоУслуги И НЕ ВыгрузитьТолькоРеализацииСУслугами) Тогда
		лЗапрос.Текст = ТекстЗапроса;
		
		лЗапрос.УстановитьПараметр("СтатусДокумента", Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен);
		лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
		лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
		лЗапрос.УстановитьПараметр("Организация", НастройкаВыгрузки.Организация);
		лЗапрос.УстановитьПараметр("ДатаН", НачалоДня(ДатаНачала));
		лЗапрос.УстановитьПараметр("ДатаО", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
		лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
		лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
		лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		лЗапрос.УстановитьПараметр("лСписок", СписокКонтрагентов);
		
		лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока лВыборкаДень.Следующий() цикл
			
			//Семенов И.П. 16.07.2019 XX-2924(
			ИнициализироватьТаблицуИстории();
			//)Семенов И.П.
			
			лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.РеализацияТоваровУслуг, лВыборкаДень.ДатаДокументаДень, Истина);
			//лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.РеализацияТоваровУслуг, лВыборкаДень.ДатаДокументаДень);
			УдалитьФайлы(лПолноеИмяФайла);
			лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
			лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Пока лВыборкаДокумент.Следующий() Цикл
				ВыгрузитьРеализацииТолькоСУслугами(лПриемник, лВыборкаДокумент);
				ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);	
			КонецЦикла;
			
			лПриемник.ЗакрытьФайл();
			
			//Семенов И.П. 16.07.2019 XX-2924(		
			НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
			ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
			//)Семенов И.П.
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОчищатьСписокКонтрагентов Тогда
		СписокКонтрагентов.Очистить();
	КонецЕсли;
	
КонецПроцедуры

//Возврат поставщику

Функция ВозвратПоставщику_ПолучитьЗначение(вхВыборка, вхИмяПоля)
	
	Результат = Неопределено;	
	лИмяПоля = СокрЛП(ВРег(вхИмяПоля));
	Если (лИмяПоля = ВРег("Type")) тогда
		Если (вхВыборка.ЭтоКомитент) тогда
			Результат = "Комиссия";
		Иначе
			Результат = "Отгрузка";
		КонецЕсли;
	ИначеЕсли (лИмяПоля = ВРег("VidK")) тогда
		Результат = ?(вхВыборка.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
	ИначеЕсли (лИмяПоля = ВРег("Ed")) тогда
		Результат = ?(вхВыборка.НоменклатураУслуга, "796", вхВыборка.ЕдиницаПоКлассификаторуКод);
	ИначеЕсли (лИмяПоля = ВРег("Stavka")) тогда
		Результат = ПолучитьСтавкуНДС(вхВыборка.СтавкаНДС);	
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

Процедура ВозвратПоставщику_ВыгрузитьДокумент(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	
	//Семенов И.П. 04.06.2019 XX-2514(
	УстановитьДатуВыгрузки = Ложь;
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	//)Семенов И.П.
	
	Пока лВыборка.Следующий() цикл
	
		вхПриемник.Добавить();
		вхПриемник.vid = "ВозвратПоставщику";
		вхПриемник.Type = ВозвратПоставщику_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		СФ = Документы.СчетФактураВыданный.НайтиПоРеквизиту("ДокументОснование", лВыборка.Ссылка);
		Если СФ <> Документы.СчетФактураВыданный.ПустаяСсылка() Тогда
			вхПриемник.NumINsf = СФ.Номер;
			вхПриемник.DateINsf = СФ.Дата;
		КонецЕсли;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		Если лВыборка.КонтрагентКПП = "" ИЛИ СтрДлина(лВыборка.КонтрагентКПП) <> 9 Тогда
			вхПриемник.KPP = Лев(лВыборка.КонтрагентИНН, 4) + "01001";
		Иначе
			вхПриемник.KPP = лВыборка.КонтрагентКПП;
		КонецЕсли;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = ВозвратПоставщику_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		вхПриемник.Dob = 0;
		вхПриемник.VidDog = 1;
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		//Голубев 20.04.19 без задачи
		вхПриемник.VidOper = лВыборка.ВидОперации;
		//Голубев 20.04.19
		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = ВозвратПоставщику_ПолучитьЗначение(лВыборка, "Ed");
		вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.NDS = лВыборка.СуммаНДС;
		вхПриемник.Sum = лВыборка.Сумма;
		вхПриемник.Stavka = ВозвратПоставщику_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
		
		Если лВыборка.ДокументОснование = Документы.ПоступлениеТоваровУслуг.ПустаяСсылка() Тогда
			вхПриемник.NumIN = "";
			вхПриемник.DateIN = "";	
		Иначе
			вхПриемник.NumIN = лВыборка.ДокументОснование.Номер;
			вхПриемник.DateIN = лВыборка.ДокументОснование.Дата;
		КонецЕсли;
		
		вхПриемник.KorPostYes = лВыборка.ЕстьКорректировкаСФ;
		вхПриемник.KorPostNum = лВыборка.НомерКорректировкиСФ;
		вхПриемник.KorPostDat = лВыборка.ДатаКорректировкиСФ;
		
		//Семенов И.П. 04.06.2019 XX-2514(
		Если лВыборка.ВидОперации = 1 Тогда 
			УстановитьДатуВыгрузки = Истина;
		КонецЕсли;
		
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
		
	КонецЦикла;
	
	//Семенов И.П. 04.06.2019 XX-2514(
	Если УстановитьДатуВыгрузки Тогда 
		
		Попытка
			ДокументОбъект = вхВыборкаДокумент.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.ДатаВыгрузкиВБух = ТекущаяДата();
			//Семенов И.П. 22.07.2019 XX-2793(
			ДокументОбъект.ДополнительныеСвойства.Вставить("СнятьОграничениеПоДатеЗапрета");
			ДокументОбъект.ДополнительныеСвойства.Вставить("РежимБога");
			//)Семенов И.П.
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Сообщить("Не удалось указать дату выгрузки в бухгалтерию в документе "+вхВыборкаДокумент.Ссылка+" по причине
						|"+ОписаниеОшибки(),СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЕсли;
	//Семенов И.П. 11.07.2019 XX-2872(
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.ВозвратТоваровПоставщику");
	//)Семенов И.П.
	//)Семенов И.П.
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));	
	//КонецЕсли;
		
КонецПроцедуры

Процедура ВыгрузитьДокументы_ВозвратыПоставщикам(МассивСсылок = Неопределено)
	
	ОчищатьСписокКонтрагентов = ?(СписокКонтрагентов.Количество() > 0, Ложь, Истина);
	ЗаполнитьСписокКонтрагентов("ВозвратТоваровПоставщику", МассивСсылок);
	
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("ПустаяСтрока", "");	
	лЗапрос.УстановитьПараметр("флСпособПроведения", Перечисления.СпособыПроведенияДокументов.ТолькоТовары);
	лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	лЗапрос.УстановитьПараметр("КоррСФДата", ДатаКонцаОтчетногоПериода);
	лЗапрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	лЗапрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	лЗапрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	лЗапрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
	лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
	лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент КАК Контрагент,
	|	Д.Контрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ИНН КАК КонтрагентИНН,
	|	Д.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комитенты КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомитент,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Т.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код КАК ЕдиницаХраненияОстатковКод,
	|	Т.Номенклатура.НомерГТД,
	|	Т.Номенклатура.НомерГТД.Код КАК НомерГТДКод,
	|	Т.Номенклатура.СтранаПроисхождения,
	|	Т.Номенклатура.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.Номенклатура.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	Т.Количество,
	|	Т.Коэффициент,
	|	Т.Сумма КАК Сумма,
	|	Т.СтавкаНДС,
	|	Т.СуммаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаПоКлассификаторуКод,
	|	ВЫБОР
	|		КОГДА Д.КоррСФНомер <> &ПустаяСтрока
	|				И Д.КоррСФДата <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьКорректировкаСФ,
	|	ВЫБОР
	|		КОГДА Д.КоррСФНомер <> &ПустаяСтрока
	|				И Д.КоррСФДата <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Д.КоррСФНомер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерКорректировкиСФ,
	|	ВЫБОР
	|		КОГДА Д.КоррСФНомер <> &ПустаяСтрока
	|				И Д.КоррСФДата <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Д.КоррСФДата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаКорректировкиСФ,
	|	Д.ДокументОснование,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.ОбратнаяРеализация)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.МФП)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.КорректировочныйСчетФактура)
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидОперации,
	|	Д.ТорговаяТочка,
	|	Д.Контрагент.КПП
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО Д.Организация = Н.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|ГДЕ
	|	(Д.Дата >= &НачДата
	|				И (Д.Дата <= &КонДата
	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ &ЕстьСсылкаНаДокумент)
	|	И Д.Проведен
	|	И Н.Ссылка = &НастройкаВыгрузки
	|	И Т.Сумма <> 0
	|	И (Д.Ссылка В (&СсылкаНаДокумент)
	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	|	И Д.флСпособПроведения <> &флСпособПроведения
	|	И Д.КоррСФДата <= &КоррСФДата
	//Семенов И.П. 04.06.2019 XX-2514(
	|	И (Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.КорректировочныйСчетФактура)
	//|				И Д.ДатаВыгрузкиВБух = ДАТАВРЕМЯ(1, 1, 1)
	|				И Д.КоррСФНомер <> """"
	|				И Д.КоррСФДата <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ Д.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.КорректировочныйСчетФактура))
	//)Семенов И.П.
	|	%%УсловиеПоКонтрагентам%%
	|	%%УсловиеПоМФП%%
	|
	|УПОРЯДОЧИТЬ ПО
	|	Д.МоментВремени,
	|	Т.НомерСтроки
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	Если СписокКонтрагентов.Количество() > 0 Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	лСписок.Контрагент
		|ПОМЕСТИТЬ К
		|ИЗ
		|	&лСписок КАК лСписок;
		|" + ТекстЗапроса;
		лЗапрос.УстановитьПараметр("лСписок", СписокКонтрагентов);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "
		|	И Д.Контрагент В (ВЫБРАТЬ РАЗЛИЧНЫЕ К.Контрагент ИЗ К КАК К)");
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "");
		
	КонецЕсли;
		
	Если НЕ ТолькоМФП И НЕ БезМФП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		
	ИначеЕсли ТолькоМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.МФП)");
		
	ИначеЕсли БезМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратПоставщику.МФП)");
		
	КонецЕсли;
	
	лЗапрос.Текст = ТекстЗапроса;
	лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока лВыборкаДень.Следующий() цикл
		
		лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.ВозвратТоваровПоставщику, лВыборкаДень.ДатаДокументаДень);
		УдалитьФайлы(лПолноеИмяФайла);
		лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
		лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//Семенов И.П. 16.07.2019 XX-2924(
		ИнициализироватьТаблицуИстории();
		//)Семенов И.П.
		Пока лВыборкаДокумент.Следующий() цикл		
			//Если НЕ ПроверитьДокумент(лВыборкаДокумент.Ссылка) Тогда
			//	ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Ложь, "Ошибка в ИНН контрагента");
			//	Продолжить;
			//КонецЕсли;			
			            		
			ВозвратПоставщику_ВыгрузитьДокумент(лПриемник, лВыборкаДокумент, Новый Структура("СсылкаНаДокумент", МассивСсылок));					
			ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);	
		КонецЦикла;
				
		лПриемник.ЗакрытьФайл();
		
		//Семенов И.П. 16.07.2019 XX-2924(		
		НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
		ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
		//)Семенов И.П.
	КонецЦикла;
	
	Если ОчищатьСписокКонтрагентов Тогда
		СписокКонтрагентов.Очистить();
	КонецЕсли;
	
КонецПроцедуры

//Возврат от покупателя

Функция ВозвратОтПокупателя_ПолучитьЗначение(вхВыборка, вхИмяПоля)
		
	Результат = Неопределено;	
	лИмяПоля = СокрЛП(ВРег(вхИмяПоля));
	Если (лИмяПоля = ВРег("Type")) тогда
		Если (вхВыборка.ЭтоКомиссионер) тогда
			Результат = "Комиссия";
		Иначе
			Результат = "Возврат";
		КонецЕсли;
	ИначеЕсли (лИмяПоля = ВРег("VidK")) тогда
		Результат = ?(вхВыборка.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, 1, 2);
	ИначеЕсли (лИмяПоля = ВРег("Ed")) тогда
		Результат = ?(вхВыборка.НоменклатураУслуга, "796", вхВыборка.ЕдиницаПоКлассификаторуКод);
	ИначеЕсли (лИмяПоля = ВРег("Stavka")) тогда
		Результат = ПолучитьСтавкуНДС(вхВыборка.СтавкаНДС);	
	КонецЕсли;
	
	Возврат Результат;
			
КонецФункции

Процедура ВозвратОтПокупателя_ВыгрузитьДокумент(вхПриемник, вхВыборкаДокумент, вхПараметры)
	
	лВыборка = вхВыборкаДокумент.Выбрать();
	
	//Семенов И.П. 04.06.2019 XX-2514(
	СтруктураДокумента = ПолучитьСтруктуруДокумента(вхВыборкаДокумент.Ссылка);
	//)Семенов И.П.
	
	Пока лВыборка.Следующий() цикл
	
		вхПриемник.Добавить();
		вхПриемник.vid = "ВозвратОтПокупателя";
		вхПриемник.Type = ВозвратОтПокупателя_ПолучитьЗначение(лВыборка, "Type");
		вхПриемник.INNF = лВыборка.ОрганизацияИНН;
		вхПриемник.NumD = лВыборка.НомерДокумента;
		вхПриемник.DateD = лВыборка.ДатаДокумента;
		вхПриемник.NumINsf = лВыборка.НомерСФ;
		вхПриемник.DateINsf = лВыборка.ДатаСФ;
		вхПриемник.CodeK = лВыборка.КонтрагентКод;
		вхПриемник.NameK = лВыборка.КонтрагентНаименование;
		вхПриемник.FullNameK = лВыборка.КонтрагентНаименованиеПолное;
		вхПриемник.Adress = лВыборка.КонтрагентЮридическийАдрес;
		вхПриемник.Adress2 = лВыборка.КонтрагентФактическийАдрес;
		вхПриемник.Tel = лВыборка.КонтрагентТелефон;
		вхПриемник.INN = лВыборка.КонтрагентИНН;
		Если лВыборка.КонтрагентКПП = "" ИЛИ СтрДлина(лВыборка.КонтрагентКПП) <> 9 Тогда
			вхПриемник.KPP = Лев(лВыборка.КонтрагентИНН, 4) + "01001";
		Иначе
			вхПриемник.KPP = лВыборка.КонтрагентКПП;
		КонецЕсли;
		вхПриемник.OKPO = лВыборка.КонтрагентОКПО;
		вхПриемник.VidK = ВозвратОтПокупателя_ПолучитьЗначение(лВыборка, "VidK");
		вхПриемник.UIDK = XmlСтрока(лВыборка.ТорговаяТочка);
		вхПриемник.Dob = 0;
		вхПриемник.VidDog = 3;
		вхПриемник.CodeVAL = лВыборка.ВалютаДокументаКод;
		вхПриемник.KursVAL = лВыборка.КурсВзаиморасчетов / ?(лВыборка.КратностьВзаиморасчетов = 0, 1, лВыборка.КратностьВзаиморасчетов);
		//Голубев 20.04.19 без задачи
		вхПриемник.VidOper = лВыборка.ВидОперации;
		//Голубев 20.04.19
		//Семенов И.П. 22.02.2019 XX-1971(
		вхПриемник.UIDT = XMLСтрока(лВыборка.Номенклатура);
		//)Семенов И.П.
		вхПриемник.CodeT = лВыборка.НоменклатураКод;
		вхПриемник.NameT = лВыборка.НоменклатураНаименование;
		вхПриемник.FullNameT = лВыборка.НоменклатураНаименованиеПолное;
		вхПриемник.VidT = ?(лВыборка.НоменклатураУслуга, 2, 1);
		вхПриемник.Art = лВыборка.НоменклатураАртикул;
		вхПриемник.Izg = лВыборка.НоменклатураИзготовительНаименование;
		вхПриемник.Ed = ВозвратОтПокупателя_ПолучитьЗначение(лВыборка, "Ed");
		//Семенов И.П. 11.01.2019(
		//вхПриемник.Kol = лВыборка.Количество * лВыборка.Коэффициент;
		вхПриемник.Kol = лВыборка.Количество;
		//)Семенов И.П.
		вхПриемник.NDS = лВыборка.СуммаНДС;
		вхПриемник.Sum = лВыборка.Сумма;
		вхПриемник.Stavka = ВозвратОтПокупателя_ПолучитьЗначение(лВыборка, "Stavka");
		вхПриемник.GTD = СокрЛП(лВыборка.НомерГТДКод);
		вхПриемник.StranaK = СокрЛП(лВыборка.СтранаПроисхожденияКод);
		вхПриемник.StranaN = СокрЛП(лВыборка.СтранаПроисхожденияНаименование);
		вхПриемник.DateB = лВыборка.ДатаДокумента;
		вхПриемник.DateF = лВыборка.ДатаДокумента;
		вхПриемник.One = ?(ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент), 1, 0);
		
		Если лВыборка.ДокументОснование = Документы.РеализацияТоваровУслуг.ПустаяСсылка() Тогда
			вхПриемник.NumIN = "";
			вхПриемник.DateIN = "";	
		Иначе
			вхПриемник.NumIN = лВыборка.ДокументОснование.Номер;
			вхПриемник.DateIN = лВыборка.ДокументОснование.Дата;
		КонецЕсли;
		//Семенов И.П. 11.01.2019(
		////09.01.2019 Графова Т.А.
		//Если лВыборка.ВидОперации=Перечисления.ВидыОперацийВозвратаОтПокупателя.МФП Тогда
		//	вхПриемник.Cebest=лВыборка.Себестоимость;	
		//Иначе
		//	НаборЗаписей = РегистрыНакопления.ПартииТоваров.СоздатьНаборЗаписей();
		//	НаборЗаписей.Отбор.Регистратор.Установить(лВыборка.Ссылка);
		//	НаборЗаписей.Прочитать();
		//	
		//	Для Каждого ТекЗапись из НаборЗаписей Цикл
		//		Если ТекЗапись.Номенклатура = лВыборка.Номенклатура 
		//			и ТекЗапись.Организация = лВыборка.Организация 
		//			и ТекЗапись.Склад = лВыборка.Склад
		//			и ТекЗапись.ВидДвижения=ВидДвиженияНакопления.Приход
		//			Тогда
		//			вхПриемник.Cebest = ТекЗапись.СуммаБезНДС;
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;	
		////09.01.2019 Графова Т.А.
		вхПриемник.Cebest=лВыборка.Себестоимость;
		//)Семенов И.П.
		
		//Семенов И.П. 04.06.2019 XX-2514(
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, вхПриемник);
		//)Семенов И.П.
		
		вхПриемник.Записать();
	КонецЦикла;
	
	//Если ЗначениеЗаполнено(вхПараметры.СсылкаНаДокумент) тогда
	//	Сообщить("Выгружен документ: " + Строка(вхПараметры.СсылкаНаДокумент));	
	//КонецЕсли;
	
	//Семенов И.П. 11.07.2019 XX-2872(
	ДобавитьСтрокуИсторииПоОбъекту(вхВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.ВозвратТоваровОтПокупателя");
	//)Семенов И.П.
	
КонецПроцедуры

Процедура ВыгрузитьДокументы_ВозвратыОтПокупателей(МассивСсылок = Неопределено)
	
	ОчищатьСписокКонтрагентов = ?(СписокКонтрагентов.Количество() > 0, Ложь, Истина);
	ЗаполнитьСписокКонтрагентов("ВозвратТоваровОтПокупателя", МассивСсылок);
	
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	лЗапрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	лЗапрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	лЗапрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	лЗапрос.УстановитьПараметр("НачДата", НачалоДня(ДатаНачала));
	лЗапрос.УстановитьПараметр("КонДата", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	лЗапрос.УстановитьПараметр("ТипКИ_А", Перечисления.ТипыКонтактнойИнформации.Адрес);
	лЗапрос.УстановитьПараметр("ТипКИ_Т", Перечисления.ТипыКонтактнойИнформации.Телефон);
	лЗапрос.УстановитьПараметр("ВидКИ_ЮАК", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ФАК", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	лЗапрос.УстановитьПараметр("ВидКИ_ТК", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);		
	//Семенов И.П. 11.01.2019( Дописал запрос для получения себестоимости
	МассивГруппКонтрагентов = Новый Массив;
	ГруппаКонтагентов = Справочники.Контрагенты.НайтиПоКоду("00000005");//Собственные юр. лица
	Если ЗначениеЗаполнено(ГруппаКонтагентов) Тогда
		МассивГруппКонтрагентов.Добавить(ГруппаКонтагентов);
	КонецЕсли;
	ГруппаКонтагентов = Справочники.Контрагенты.НайтиПоКоду("М0000001");//Собственные Юр.Лица (СПБ)
	Если ЗначениеЗаполнено(ГруппаКонтагентов) Тогда
		МассивГруппКонтрагентов.Добавить(ГруппаКонтагентов);
	КонецЕсли;
	лЗапрос.УстановитьПараметр("МассивГруппКонтрагентов",МассивГруппКонтрагентов);
	//)Семенов И.П.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КонтрагентыМФП
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка В ИЕРАРХИИ(&МассивГруппКонтрагентов)
	|	И НЕ Контрагенты.ЭтоГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Д.Дата, ДЕНЬ) КАК ДатаДокументаДень,
	|	Д.Ссылка КАК Ссылка,
	|	Д.Дата КАК ДатаДокумента,
	|	Д.Номер КАК НомерДокумента,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.Организация,
	|	Д.Организация.ИНН КАК ОрганизацияИНН,
	|	Д.Контрагент.ГоловнойКонтрагент КАК Контрагент,
	|	Д.Контрагент.ГоловнойКонтрагент.Код КАК КонтрагентКод,
	|	Д.Контрагент.ГоловнойКонтрагент.Наименование КАК КонтрагентНаименование,
	|	Д.Контрагент.ГоловнойКонтрагент.ИНН КАК КонтрагентИНН,
	|	ВЫРАЗИТЬ(Д.Контрагент.ГоловнойКонтрагент.НаименованиеПолное КАК СТРОКА(1000)) КАК КонтрагентНаименованиеПолное,
	|	ЮАК.Представление КАК КонтрагентЮридическийАдрес,
	|	ФАК.Представление КАК КонтрагентФактическийАдрес,
	|	ТК.Представление КАК КонтрагентТелефон,
	|	Д.Контрагент.ГоловнойКонтрагент.КодПоОКПО КАК КонтрагентОКПО,
	|	Д.Контрагент.ГоловнойКонтрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.ГоловнойКонтрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент В
	|				(ВЫБРАТЬ
	|					К.Контрагент
	|				ИЗ
	|					Справочник.НастройкиВыгрузкиВБухгалтерию.Комиссионеры КАК К
	|				ГДЕ
	|					К.Ссылка = &НастройкаВыгрузки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код КАК НоменклатураКод,
	|	Т.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВЫРАЗИТЬ(Т.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименованиеПолное,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код КАК ЕдиницаХраненияОстатковКод,
	|	Т.Номенклатура.НомерГТД,
	|	Т.Номенклатура.НомерГТД.Код КАК НомерГТДКод,
	|	Т.Номенклатура.СтранаПроисхождения,
	|	Т.Номенклатура.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	Т.Номенклатура.СтранаПроисхождения.Наименование КАК СтранаПроисхожденияНаименование,
	|	Т.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование КАК НоменклатураИзготовительНаименование,
	|	Т.Номенклатура.Услуга КАК НоменклатураУслуга,
	|	СУММА(Т.Количество * Т.Коэффициент) КАК Количество,
	|	СУММА(Т.Сумма) КАК Сумма,
	|	Т.СтавкаНДС,
	|	СУММА(Т.СуммаНДС) КАК СуммаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаПоКлассификаторуКод,
	|	Д.ДокументОснование,
	|	ВЫБОР
	|		КОГДА Д.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.ТорговыеТочки.ПустаяСсылка)
	|			ТОГДА Д.Контрагент.ОсновнаяТорговаяТочка
	|		ИНАЧЕ Д.ТорговаяТочка
	|	КОНЕЦ КАК ТорговаяТочка,
	|	Д.Контрагент.КПП,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|			ТОГДА ЕСТЬNULL(С.Номер, """")
	|		ИНАЧЕ НомераСчетовФактур.НомерСчетаФактуры
	|	КОНЕЦ КАК НомерСФ,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|			ТОГДА ЕСТЬNULL(С.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ НомераСчетовФактур.ДатаСчетаФактуры
	|	КОНЕЦ КАК ДатаСФ,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.ОбратнаяРеализация)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Продажа)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидОперации,
	|	СУММА(Т.Себестоимость) КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)
	|				ИЛИ НЕ КонтрагентыМФП.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМФП,
	|	Д.МоментВремени
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК Д
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК Н
	|		ПО Д.Организация = Н.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК Т
	|		ПО Д.Ссылка = Т.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ЮАК.Объект
	|			И (ЮАК.Тип = &ТипКИ_А)
	|			И (ЮАК.Вид = &ВидКИ_ЮАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФАК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ФАК.Объект
	|			И (ФАК.Тип = &ТипКИ_А)
	|			И (ФАК.Вид = &ВидКИ_ФАК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТК
	|		ПО Д.Контрагент.ГоловнойКонтрагент = ТК.Объект
	|			И (ТК.Тип = &ТипКИ_Т)
	|			И (ТК.Вид = &ВидКИ_ТК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераСчетовФактур КАК НомераСчетовФактур
	|		ПО Д.Ссылка = НомераСчетовФактур.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыМФП КАК КонтрагентыМФП
	|		ПО Д.Контрагент = КонтрагентыМФП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК С
	|		ПО Д.Ссылка = С.ДокументОснование
	|ГДЕ
	|	(Д.Дата >= &НачДата
	|				И (Д.Дата <= &КонДата
	|					ИЛИ &КонДата = ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ &ЕстьСсылкаНаДокумент)
	|	И Д.Проведен
	|	И Н.Ссылка = &НастройкаВыгрузки
	|	И Т.Сумма <> 0
	|	И (Д.Ссылка В (&СсылкаНаДокумент)
	|			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	|	И НЕ((Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяНовый)
	|				ИЛИ Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяОтказ)
	|				ИЛИ Д.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ВозвратТоваровОтПокупателяОтменен))
	|				И Д.АктРассмотренияВозврата <> ЗНАЧЕНИЕ(Документ.АктРассмотренияВозврата.ПустаяСсылка))
	|	И (НЕ Д.Организация.Франчайзи
	|			ИЛИ (Д.Организация.Франчайзи
	|				И Д.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные)))
	|	%%УсловиеПоКонтрагентам%%
	|	%%УсловиеПоМФП%%
	|
	|СГРУППИРОВАТЬ ПО
	|	Д.Ссылка,
	|	Д.Дата,
	|	Д.Номер,
	|	Д.ВалютаДокумента,
	|	Д.ВалютаДокумента.Код,
	|	Д.КурсВзаиморасчетов,
	|	Д.КратностьВзаиморасчетов,
	|	Д.Организация,
	|	Д.Организация.ИНН,
	|	Д.Контрагент.ГоловнойКонтрагент,
	|	Д.Контрагент.ГоловнойКонтрагент.Код,
	|	Д.Контрагент.ГоловнойКонтрагент.Наименование,
	|	Д.Контрагент.ГоловнойКонтрагент.ИНН,
	|	ЮАК.Представление,
	|	ФАК.Представление,
	|	ТК.Представление,
	|	Д.Контрагент.ГоловнойКонтрагент.КодПоОКПО,
	|	Д.Контрагент.ГоловнойКонтрагент.ЮрФизЛицо,
	|	Д.ДоговорКонтрагента,
	|	Д.ДоговорКонтрагента.ВидДоговора,
	|	Д.Склад,
	|	Д.УчитыватьНДС,
	|	Д.СуммаВключаетНДС,
	|	Д.СуммаДокумента,
	|	Т.Номенклатура,
	|	Т.Номенклатура.Код,
	|	Т.Номенклатура.Наименование,
	|	Т.Номенклатура.Артикул,
	|	Т.Номенклатура.ЕдиницаХраненияОстатков.Код,
	|	Т.Номенклатура.НомерГТД,
	|	Т.Номенклатура.НомерГТД.Код,
	|	Т.Номенклатура.СтранаПроисхождения,
	|	Т.Номенклатура.СтранаПроисхождения.Код,
	|	Т.Номенклатура.СтранаПроисхождения.Наименование,
	|	Т.Номенклатура.Изготовитель,
	|	Т.Номенклатура.Изготовитель.Наименование,
	|	Т.Номенклатура.Услуга,
	|	Т.СтавкаНДС,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору,
	|	Т.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
	|	Д.ДокументОснование,
	|	Д.Контрагент.КПП,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|			ТОГДА ЕСТЬNULL(С.Номер, """")
	|		ИНАЧЕ НомераСчетовФактур.НомерСчетаФактуры
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|			ТОГДА ЕСТЬNULL(С.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ НомераСчетовФактур.ДатаСчетаФактуры
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.ОбратнаяРеализация)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Продажа)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Д.Контрагент.ГоловнойКонтрагент.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫБОР
	|		КОГДА Д.Контрагент.ГоловнойКонтрагент.Организация.Ссылка ЕСТЬ NULL
	|				И Д.Контрагент.ГоловнойКонтрагент.Родитель <> &Родитель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Т.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)
	|				ИЛИ НЕ КонтрагентыМФП.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Д.МоментВремени,
	|	ВЫБОР
	|		КОГДА Д.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.ТорговыеТочки.ПустаяСсылка)
	|			ТОГДА Д.Контрагент.ОсновнаяТорговаяТочка
	|		ИНАЧЕ Д.ТорговаяТочка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.ОбратнаяРеализация)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Продажа)
	|				ИЛИ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.Корректировка)
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПартииТоваров.СуммаБезНДС) КАК СуммаБезНДС,
	|	ПартииТоваров.Номенклатура КАК Номенклатура,
	|	ПартииТоваров.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ДанныеПартий
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваров КАК ПартииТоваров
	|		ПО ДанныеДокументов.Ссылка = ПартииТоваров.Регистратор
	|			И ДанныеДокументов.Номенклатура = ПартииТоваров.Номенклатура
	|			И ДанныеДокументов.Склад = ПартииТоваров.Склад
	|			И ДанныеДокументов.Организация = ПартииТоваров.Организация
	|			И (ПартииТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваров.Номенклатура,
	|	ПартииТоваров.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.ДатаДокументаДень КАК ДатаДокументаДень,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.ДатаДокумента,
	|	ДанныеДокументов.НомерДокумента,
	|	ДанныеДокументов.ВалютаДокумента,
	|	ДанныеДокументов.ВалютаДокументаКод,
	|	ДанныеДокументов.КурсВзаиморасчетов,
	|	ДанныеДокументов.КратностьВзаиморасчетов,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.ОрганизацияИНН,
	|	ДанныеДокументов.Контрагент,
	|	ДанныеДокументов.КонтрагентКод,
	|	ДанныеДокументов.КонтрагентНаименование,
	|	ДанныеДокументов.КонтрагентИНН,
	|	ДанныеДокументов.КонтрагентНаименованиеПолное,
	|	ДанныеДокументов.КонтрагентЮридическийАдрес,
	|	ДанныеДокументов.КонтрагентФактическийАдрес,
	|	ДанныеДокументов.КонтрагентТелефон,
	|	ДанныеДокументов.КонтрагентОКПО,
	|	ДанныеДокументов.КонтрагентЮрФизЛицо,
	|	ДанныеДокументов.ЭтоСобственноеЮрЛицо,
	|	ДанныеДокументов.ЭтоКомиссионер,
	|	ДанныеДокументов.ДоговорКонтрагента,
	|	ДанныеДокументов.ДоговорКонтрагентаВидДоговора,
	|	ДанныеДокументов.Склад,
	|	ДанныеДокументов.УчитыватьНДС,
	|	ДанныеДокументов.СуммаВключаетНДС,
	|	ДанныеДокументов.СуммаДокумента,
	|	ДанныеДокументов.Номенклатура,
	|	ДанныеДокументов.НоменклатураКод,
	|	ДанныеДокументов.НоменклатураНаименование,
	|	ДанныеДокументов.НоменклатураНаименованиеПолное,
	|	ДанныеДокументов.НоменклатураАртикул,
	|	ДанныеДокументов.ЕдиницаХраненияОстатковКод,
	|	ДанныеДокументов.НоменклатураНомерГТД,
	|	ДанныеДокументов.НомерГТДКод,
	|	ДанныеДокументов.НоменклатураСтранаПроисхождения,
	|	ДанныеДокументов.СтранаПроисхожденияКод,
	|	ДанныеДокументов.СтранаПроисхожденияНаименование,
	|	ДанныеДокументов.НоменклатураИзготовитель,
	|	ДанныеДокументов.НоменклатураИзготовительНаименование,
	|	ДанныеДокументов.НоменклатураУслуга,
	|	ДанныеДокументов.Количество,
	|	ДанныеДокументов.Сумма,
	|	ДанныеДокументов.СтавкаНДС,
	|	ДанныеДокументов.СуммаНДС,
	|	ДанныеДокументов.ЕдиницаПоКлассификатору,
	|	ДанныеДокументов.ЕдиницаПоКлассификаторуКод,
	|	ДанныеДокументов.ДокументОснование,
	|	ДанныеДокументов.ТорговаяТочка,
	|	ДанныеДокументов.КонтрагентКПП,
	|	ДанныеДокументов.НомерСФ,
	|	ДанныеДокументов.ДатаСФ,
	|	ДанныеДокументов.ВидОперации,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.ЭтоМФП
	|			ТОГДА ДанныеДокументов.Себестоимость
	|		ИНАЧЕ ДанныеПартий.СуммаБезНДС
	|	КОНЕЦ КАК Себестоимость,
	|	ДанныеДокументов.МоментВремени КАК МоментВремени
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПартий КАК ДанныеПартий
	|		ПО ДанныеДокументов.Ссылка = ДанныеПартий.Регистратор
	|			И ДанныеДокументов.Номенклатура = ДанныеПартий.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени
	|ИТОГИ ПО
	|	ДатаДокументаДень,
	|	Ссылка";
	
	Если СписокКонтрагентов.Количество() > 0 Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	лСписок.Контрагент
		|ПОМЕСТИТЬ К
		|ИЗ
		|	&лСписок КАК лСписок;
		|" + ТекстЗапроса;
		лЗапрос.УстановитьПараметр("лСписок", СписокКонтрагентов);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "
		|	И Д.Контрагент В (ВЫБРАТЬ РАЗЛИЧНЫЕ К.Контрагент ИЗ К КАК К)");
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоКонтрагентам%%", "");
		
	КонецЕсли;
		
	Если НЕ ТолькоМФП И НЕ БезМФП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "");
		
	ИначеЕсли ТолькоМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)");
		
	ИначеЕсли БезМФП Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%УсловиеПоМФП%%", "И НЕ Д.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратаОтПокупателя.МФП)");
		
	КонецЕсли;
	
	лЗапрос.Текст = ТекстЗапроса;
	лВыборкаДень = лЗапрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока лВыборкаДень.Следующий() цикл
		
		лПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.ВозвратТоваровОтПокупателя, лВыборкаДень.ДатаДокументаДень);
		УдалитьФайлы(лПолноеИмяФайла);
		лПриемник = СоздатьСтруктуруФайлаВыгрузки(лПолноеИмяФайла);		
		лВыборкаДокумент = лВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		//Семенов И.П. 16.07.2019 XX-2924(
		ИнициализироватьТаблицуИстории();
		//)Семенов И.П.
		
		Пока лВыборкаДокумент.Следующий() цикл
			
			//Если НЕ ПроверитьДокумент(лВыборкаДокумент.Ссылка) Тогда
			//	ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Ложь, "Ошибка в ИНН контрагента");
			//	Продолжить;
			//КонецЕсли;			
			            		
			ВозвратОтПокупателя_ВыгрузитьДокумент(лПриемник, лВыборкаДокумент, Новый Структура("СсылкаНаДокумент", МассивСсылок));	
			ЗаписатьВЛог(лВыборкаДокумент.Ссылка, Истина);			
		КонецЦикла;
				
		лПриемник.ЗакрытьФайл();
		
		//Семенов И.П. 16.07.2019 XX-2924(		
		НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
		ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
		//)Семенов И.П.
		
	КонецЦикла;
	
	Если ОчищатьСписокКонтрагентов Тогда
		СписокКонтрагентов.Очистить();
	КонецЕсли;
	
КонецПроцедуры

//Семенов И.П. 17.06.2019 XX-2379(

//Корректировка долга

Процедура КорректировкаДолга_ВыгрузитьДокумент(Приемник, ВыборкаДокумент, МассивСсылок, ЕстьДатаВыгрузкиВБух)
	
	Выборка = ВыборкаДокумент.Выбрать();
	
	СтруктураДокумента = ПолучитьСтруктуруДокумента(ВыборкаДокумент.Ссылка);
	
	Пока Выборка.Следующий() цикл
		
		Приемник.Добавить();
		
		ЗаполнитьЗначенияСвойств(Приемник, Выборка);
		
		Приемник.DocUID = Выборка.Ссылка.УникальныйИдентификатор();
		Приемник.UIDK   = Выборка.Контрагент.УникальныйИдентификатор();
		
		ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, Приемник);
		
		Приемник.Записать();
			
	КонецЦикла;
	
	Если ЕстьДатаВыгрузкиВБух Тогда 
		Попытка
			ДокументОбъект = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.ДатаВыгрузкиВБух = ТекущаяДата();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Сообщить("Не удалось указать дату выгрузки в бухгалтерию в документе "+ВыборкаДокумент.Ссылка+" по причине
						|"+ОписаниеОшибки(),СтатусСообщения.Важное);
		КонецПопытки;
	КонецЕсли;
	//Семенов И.П. 11.07.2019 XX-2872(	
	ДобавитьСтрокуИсторииПоОбъекту(ВыборкаДокумент.Ссылка, СтруктураДокумента, "Документ.КорректировкаДолга");
	//)Семенов И.П.
КонецПроцедуры

Функция ПолучитьЗапросДляВыгрузкиКорректировокДолга(ЕстьДатаВыгрузкиВБух, МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(КорректировкаДолгаСуммыДолга.Ссылка.Дата, ДЕНЬ) КАК ДатаДень,
	               |	КорректировкаДолгаСуммыДолга.Ссылка КАК Ссылка,
	               |	""КорректировкаДолга"" КАК vid,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2)
	               |			ТОГДА 1
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.КомпенсацияРемонтаСайт)
	               |			ТОГДА 2
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.КомпенсацияРемонта)
	               |			ТОГДА 3
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.ПКД)
	               |			ТОГДА 4
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.УКП)
	               |			ТОГДА 5
	               |		ИНАЧЕ 6
	               |	КОНЕЦ КАК VidOper,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Номер КАК NumD,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Дата КАК DateD,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ВалютаДокумента,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ВалютаДокумента.Код КАК CodeVAL,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КурсДокумента КАК KursVAL,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КратностьДокумента КАК KratnVAL,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Организация,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Организация.ИНН КАК INNF,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Организация.Ссылка ЕСТЬ NULL
	               |				И КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Родитель <> &Родитель
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоСобственноеЮрЛицо,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК VidK,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Код КАК CodeK,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Наименование КАК NameK,
	               |	ВЫРАЗИТЬ(КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.НаименованиеПолное КАК СТРОКА(200)) КАК FullNameK,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ИНН КАК INN,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП = """"
	               |				ИЛИ НЕ КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП ПОДОБНО ""_________""
	               |			ТОГДА ПОДСТРОКА(КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ИНН, 1, 4) + ""01001""
	               |		ИНАЧЕ КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП
	               |	КОНЕЦ КАК KPP,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КодПоОКПО КАК OKPO,
	               |	КонтактнаяИнформацияЮрАдрес.Представление КАК Adress,
	               |	КонтактнаяИнформацияФактАдрес.Представление КАК Adress2,
	               |	КонтактнаяИнформацияТелефон.Представление КАК Tel,
	               |	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента,
	               |	СУММА(КорректировкаДолгаСуммыДолга.Сумма) КАК Sum,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ДатаАкта КАК DateB,
	               |	0 КАК Dob,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	               |			ТОГДА 1
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	               |			ТОГДА 2
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	               |			ТОГДА 3
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	               |			ТОГДА 4
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Прочее)
	               |			ТОГДА 5
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.НаЭкспорт)
	               |			ТОГДА 6
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	               |			ТОГДА 7
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК VidDog
	               |ИЗ
	               |	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолгаСуммыДолга
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НастройкиВыгрузкиВБухгалтерию КАК НастройкиВыгрузкиВБухгалтерию
	               |		ПО КорректировкаДолгаСуммыДолга.Ссылка.Организация = НастройкиВыгрузкиВБухгалтерию.Организация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияЮрАдрес
	               |		ПО КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор = КонтактнаяИнформацияЮрАдрес.Объект
	               |			И (КонтактнаяИнформацияЮрАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	               |			И (КонтактнаяИнформацияЮрАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияФактАдрес
	               |		ПО КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор = КонтактнаяИнформацияФактАдрес.Объект
	               |			И (КонтактнаяИнформацияФактАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	               |			И (КонтактнаяИнформацияФактАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияТелефон
	               |		ПО КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор = КонтактнаяИнформацияТелефон.Объект
	               |			И (КонтактнаяИнформацияТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	               |			И (КонтактнаяИнформацияТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента))
	               |ГДЕ
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки В(&ВидыКорректировки)
	               |	И (КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Безналичные)
	               |				И &УсловиеБонусы2
	               |			ИЛИ &УсловиеУслугаБанкаРозницы)
	               |	И НастройкиВыгрузкиВБухгалтерию.Ссылка = &НастройкаВыгрузки
	               |	И КорректировкаДолгаСуммыДолга.Ссылка.Проведен = ИСТИНА
	               |	И (КорректировкаДолгаСуммыДолга.Ссылка В (&СсылкаНаДокумент)
	               |			ИЛИ НЕ &ЕстьСсылкаНаДокумент)
	               |	И (КорректировкаДолгаСуммыДолга.Ссылка.Дата >= &ДатаНачала
	               |				И (КорректировкаДолгаСуммыДолга.Ссылка.Дата <= &ДатаОкончания
	               |					ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	               |			ИЛИ &ЕстьСсылкаНаДокумент)
	               |	И КорректировкаДолгаСуммыДолга.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности)
	               |	И &УсловиеЕстьДатаВыгрузкиВБух
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КорректировкаДолгаСуммыДолга.Ссылка,
	               |	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Организация,
	               |	КорректировкаДолгаСуммыДолга.Контрагент,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор,
	               |	НАЧАЛОПЕРИОДА(КорректировкаДолгаСуммыДолга.Ссылка.Дата, ДЕНЬ),
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Номер,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Дата,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ВалютаДокумента,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ВалютаДокумента.Код,
	               |	КонтактнаяИнформацияЮрАдрес.Представление,
	               |	КонтактнаяИнформацияФактАдрес.Представление,
	               |	КонтактнаяИнформацияТелефон.Представление,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Код,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Наименование,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ИНН,
	               |	ВЫРАЗИТЬ(КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.НаименованиеПолное КАК СТРОКА(200)),
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Организация.Ссылка ЕСТЬ NULL
	               |				И КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.Родитель <> &Родитель
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.Организация.ИНН,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.ДатаАкта,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2)
	               |			ТОГДА 1
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.КомпенсацияРемонтаСайт)
	               |			ТОГДА 2
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.КомпенсацияРемонта)
	               |			ТОГДА 3
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.ПКД)
	               |			ТОГДА 4
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.УКП)
	               |			ТОГДА 5
	               |		ИНАЧЕ 6
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП = """"
	               |				ИЛИ НЕ КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП ПОДОБНО ""_________""
	               |			ТОГДА ПОДСТРОКА(КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ИНН, 1, 4) + ""01001""
	               |		ИНАЧЕ КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КПП
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	               |			ТОГДА 1
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	               |			ТОГДА 2
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	               |			ТОГДА 3
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	               |			ТОГДА 4
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Прочее)
	               |			ТОГДА 5
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.НаЭкспорт)
	               |			ТОГДА 6
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	               |			ТОГДА 7
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КурсДокумента,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КонтрагентДебитор.КодПоОКПО,
	               |	КорректировкаДолгаСуммыДолга.Ссылка.КратностьДокумента,
	               |	ВЫБОР
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	               |			ТОГДА 1
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомитентом)
	               |			ТОГДА 2
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	               |			ТОГДА 3
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	               |			ТОГДА 4
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Прочее)
	               |			ТОГДА 5
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.НаЭкспорт)
	               |			ТОГДА 6
	               |		КОГДА КорректировкаДолгаСуммыДолга.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	               |			ТОГДА 7
	               |		ИНАЧЕ 0
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	DateD
	               |ИТОГИ
	               |	МАКСИМУМ(INNF),
	               |	МАКСИМУМ(INN),
	               |	СУММА(Sum)
	               |ПО
	               |	ДатаДень,
	               |	Ссылка";
	
	Запрос.УстановитьПараметр("СсылкаНаДокумент", МассивСсылок);
	Запрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("00000005"));
	Запрос.УстановитьПараметр("ЕстьСсылкаНаДокумент", ?(МассивСсылок = Неопределено, Ложь, Истина));
	Запрос.УстановитьПараметр("НастройкаВыгрузки", НастройкаВыгрузки);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(ДатаКонца), КонецДня(ДатаКонца), ДатаКонца));
	
	МассивВидов = Новый Массив;
	Для Каждого ЭлементСписка Из ВидыКорректировокДолга Цикл 
		
		Если ЭлементСписка.Пометка Тогда 
			МассивВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВидыКорректировки", МассивВидов);
	Если МассивВидов.Найти(Справочники.ВидыКорректировок.БонусыОтПоставщиковКросс2) = Неопределено Тогда 
		Запрос.УстановитьПараметр("УсловиеБонусы2",Истина);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеБонусы2","(КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2)
	               |						И (КорректировкаДолгаСуммыДолга.Ссылка.СканПолучен
	               |							ИЛИ КорректировкаДолгаСуммыДолга.Ссылка.ОригиналПолучен)
	               |					ИЛИ КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки <> ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2))");
	КонецЕсли;
	Если МассивВидов.Найти(Справочники.ВидыКорректировок.УслугаБанкаРозницы) = Неопределено Тогда
		Запрос.УстановитьПараметр("УсловиеУслугаБанкаРозницы",Ложь);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеУслугаБанкаРозницы"," КорректировкаДолгаСуммыДолга.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Справочник.ВидыКорректировок.УслугаБанкаРозницы)");
	КонецЕсли;
	
	Если ЕстьДатаВыгрузкиВБух Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеЕстьДатаВыгрузкиВБух"," КорректировкаДолгаСуммыДолга.Ссылка.ДатаВыгрузкиВБух = ДАТАВРЕМЯ(1, 1, 1)");
	Иначе
		Запрос.УстановитьПараметр("УсловиеЕстьДатаВыгрузкиВБух",Истина);
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

Процедура ВыгрузитьДокументы_КорректировкаДолга(МассивСсылок = Неопределено)

	ЕстьДатаВыгрузкиВБух = ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаВыгрузкиВБух", Метаданные.Документы.КорректировкаДолга);
	
	Запрос = ПолучитьЗапросДляВыгрузкиКорректировокДолга(ЕстьДатаВыгрузкиВБух, МассивСсылок);
	
	ВыборкаДень = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//СтруктураИНН = Новый Структура("Ссылка, INNF, INN");
	
	Пока ВыборкаДень.Следующий() цикл
		
		ПолноеИмяФайла = ПолучитьПолноеИмяФайла(Метаданные.Документы.КорректировкаДолга, ВыборкаДень.ДатаДень);
		УдалитьФайлы(ПолноеИмяФайла);
		Приемник = СоздатьСтруктуруФайлаВыгрузки(ПолноеИмяФайла);		
		ВыборкаДокумент = ВыборкаДень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		//Семенов И.П. 16.07.2019 XX-2924(
		ИнициализироватьТаблицуИстории();
		//)Семенов И.П.
		
		Пока ВыборкаДокумент.Следующий() цикл
			
			//ЗаполнитьЗначенияСвойств(СтруктураИНН, ВыборкаДокумент);
			Результат = ПроверитьИННКонтрагента(ВыборкаДокумент.Контрагент);
			
			//Если НЕ ПроверитьДокумент(СтруктураИНН) Тогда
			Если НЕ Результат.РезультатПроверки Тогда
				//ЗаписатьВЛог(ВыборкаДокумент.Ссылка, Ложь, "Ошибка в ИНН контрагента");
				ЗаписатьВЛог(ВыборкаДокумент.Ссылка, Ложь, Результат.ОписаниеОшибки);
				Продолжить;
			КонецЕсли;			
			            		
			КорректировкаДолга_ВыгрузитьДокумент(Приемник, ВыборкаДокумент, Новый Структура("СсылкаНаДокумент", МассивСсылок),ЕстьДатаВыгрузкиВБух);	
			ЗаписатьВЛог(ВыборкаДокумент.Ссылка, Истина, , ВыборкаДокумент.SUM);			
		КонецЦикла;
				
		Приемник.ЗакрытьФайл();
		
		//Семенов И.П. 16.07.2019 XX-2924(		
		НомерСообщения = ПолучитьНомерСообщенияВыгрузки(УзелДляЛогов);
		ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, УзелДляЛогов, "", Истина);
		//)Семенов И.П.
	КонецЦикла;	
	
КонецПроцедуры

//)Семенов И.П.

//Общие

Функция ПолучитьМассивПитерских()
	
	МассивПитерских = Новый Массив;
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Экспресс-Авто-Запад ООО, г.Санкт-Петербург"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Экспресс-Авто-Запад ООО, г.Санкт-Петербург 2"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Экспресс-Авто-Запад ООО, СПБ (#)"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Норд Стори ООО"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Абашев Андрей Михайлович ИП"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Абашев Андрей Михайлович ИП (Планерная)"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Завальнюк Ирина Александровна ИП"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Завальнюк Ирина Александровна ИП СПб"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Иванов Сергей Валерьевич ИП"));
	МассивПитерских.Добавить(Справочники.Контрагенты.НайтиПоНаименованию("Латушкин Евгений Леонович ИП"));
	
	Возврат МассивПитерских;
	
КонецФункции

Функция ЭтоПитер(ИНН)
	
	Если ИНН = "5263111253" ИЛИ ИНН = "5263133120" ИЛИ ИНН = "781130874675" ИЛИ ИНН = "781408001193" ИЛИ ИНН = "780621834665" ИЛИ ИНН = "780211923590" Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция ЭтоКомиссионер(ИНН)
	
	Если ИНН = "5262337498" ИЛИ ИНН = "5263111253" Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПартиюVMI(СтрокаПрихода, Номенклатура)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПартииТоваров.Регистратор КАК КредДокумент,
		|	НАЧАЛОПЕРИОДА(ПартииТоваров.Период, ДЕНЬ) КАК ДатаДокумента
		|ПОМЕСТИТЬ Т1
		|ИЗ
		|	РегистрНакопления.ПартииТоваров КАК ПартииТоваров
		|ГДЕ
		|	ПартииТоваров.СтрокаПрихода = &СтрокаПрихода
		|	И ПартииТоваров.Номенклатура = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугПартииТоваровVMI.Ссылка,
		|	ПоступлениеТоваровУслугПартииТоваровVMI.КредДокумент,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугПартииТоваровVMI.Ссылка.Дата, ДЕНЬ) КАК ДатаДокумента
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ПартииТоваровVMI КАК ПоступлениеТоваровУслугПартииТоваровVMI
		|ГДЕ
		|	ПоступлениеТоваровУслугПартииТоваровVMI.СтрокаПрихода = &СтрокаПрихода
		|	И ПоступлениеТоваровУслугПартииТоваровVMI.Номенклатура = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т2.Ссылка КАК ДокументПоступления
		|ИЗ
		|	Т2 КАК Т2
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т1 КАК Т1
		|		ПО Т2.КредДокумент = Т1.КредДокумент
		|			И Т2.ДатаДокумента = Т1.ДатаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Т1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Т2";
	
	Запрос.УстановитьПараметр("СтрокаПрихода", СтрокаПрихода);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
	Если РезультатЗапроса.Количество() > 0 Тогда
		
		Возврат РезультатЗапроса.ВыгрузитьКолонку("ДокументПоступления")[0];
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаписатьВЛог(Ссылка, РезультатВыгрузки, Комментарий = "", СуммаДокумента = 0) //Семенов И.П. 19.06.2019 XX-2379  СуммаДокумента
	
	МенеджерЗаписи = РегистрыСведений.ИсторияОбменаСБП.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.Организация = Ссылка.Организация;
	МенеджерЗаписи.Ссылка = Ссылка;
	МенеджерЗаписи.МетаДанные = Строка(Метаданные.НайтиПоТипу(ТипЗнч(Ссылка)));
	МенеджерЗаписи.РезультатВыгрузки = РезультатВыгрузки;
	МенеджерЗаписи.Комментарий = Комментарий;
	МенеджерЗаписи.СуммаДокумента = ?(СуммаДокумента = 0, Ссылка.СуммаДокумента, СуммаДокумента); //Семенов И.П. 19.06.2019 XX-2379 новый параметр СуммаДокумента

	МенеджерЗаписи.Записать(Истина);
	
	//Если Комментарий <> "" Тогда
	//	
	//	Сообщить("В документе " + Ссылка + " у контрагента некорректный ИНН. Документ не выгружен");
	//	
	//КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьДокумент(Ссылка)
	
	Результат = Истина;
	
	//Семенов И.П. 18.06.2019 XX-2379(	
	//Если Ссылка.Организация.ИНН <> "5262303178" Тогда
	//	Если (СтрДлина(Ссылка.Контрагент.ИНН) < 10) тогда
	//		Сообщить("" + Строка(Ссылка) + " не выгружен. Ошибка в ИНН.");
	//		Результат = Ложь;
	//	КонецЕсли;
	//КонецЕсли;
	Если ТипЗнч(Ссылка) = Тип("Структура") Тогда 
		ОрганизацияИНН = Ссылка.INNF;
		КонтрагентИНН  = Ссылка.INN;
		ДокументСсылка = Ссылка.Ссылка;
	Иначе
		ОрганизацияИНН = Ссылка.Организация.ИНН;
		КонтрагентИНН  = Ссылка.Контрагент.ИНН;
		ДокументСсылка = Ссылка;
	КонецЕсли;
	
	Если ОрганизацияИНН <> "5262303178" 
		И СтрДлина(КонтрагентИНН) < 10 Тогда
		
		Сообщить("" + Строка(ДокументСсылка) + " не выгружен. Ошибка в ИНН.");
		Результат = Ложь;

	КонецЕсли;
	
	//)Семенов И.П.

	Возврат Результат;
	
КонецФункции

Функция СоздатьСтруктуруФайлаВыгрузки(вхПолноеИмяФайла)
	
	Результат = Новый XBase();
	
	Результат.Кодировка = КодировкаXBase.OEM;
	
	//Семенов И.П. 18.06.2019 XX-2379(
	Результат.поля.Добавить("DocUID", "S", 36, 0);
	//)Семенов И.П.
	Результат.поля.Добавить("vid", "S", 30, 0);								// вид документа
	Результат.поля.Добавить("Type", "S", 30, 0);							// вид операции (товары,услуги,оборудование,разное)
	Результат.поля.Добавить("INNF", "S", 10, 0);							// инн фирмы 10знаков!  
	
	Результат.поля.Добавить("NumD", "S", 15, 0);							// номер документа 
	Результат.поля.Добавить("DateD", "D", 10, 0);							// дата документа  
	
	Результат.поля.Добавить("UchetNDS", "N", 1, 0);						// Учитывать НДС 
	Результат.поля.Добавить("NDSbSum", "N", 1, 0);						// НДС в сумме  
	
	Результат.поля.Добавить("NumIN", "S", 20, 0);							// № вход.  
	Результат.поля.Добавить("DateIN", "D", 10, 0);						// дата вход. 
	Результат.поля.Добавить("NumINsf", "S", 20, 0);						// № сф вход.  
	Результат.поля.Добавить("DateINsf", "D", 10, 0);					// дата сф вход.  
	
	Результат.поля.Добавить("CodeK", "S", 10, 0);							// данные о контрагенте 
	Результат.поля.Добавить("NameK", "S", 30, 0);   
	Результат.поля.Добавить("FullNameK", "S", 200, 0);
	Результат.поля.Добавить("Adress", "S", 200, 0); 
	Результат.поля.Добавить("Adress2", "S", 200, 0);
	Результат.поля.Добавить("Tel", "S", 200, 0);
	Результат.поля.Добавить("INN", "S", 22, 0);
	Результат.поля.Добавить("KPP", "S", 9, 0);
	Результат.поля.Добавить("OKPO", "S", 10, 0);
	Результат.поля.Добавить("VidK", "N", 1, 0);								// 1-юр.лицо, 2- физ.лицо                
	Результат.поля.Добавить("UIDK", "S", 36, 0);							//УИД контрагента
	
	Результат.поля.Добавить("Dob", "N", 1, 0);								// 1-Общий док, 0 - отдельный               
	
	Результат.поля.Добавить("VidDog", "N", 1, 0);							// 1-с поставщиком, 2- с покупателем   
	Результат.поля.Добавить("CodeVAL", "S", 5, 0);						// код валюты   
	Результат.поля.Добавить("KursVAL", "N", 10, 4);						// курс валюты
	//Семенов И.П. 19.06.2019 XX-2379(
	Результат.поля.Добавить("KratnVAL", "N", 10, 0);                     // Кратность валюты
	//)Семенов И.П.
	
	Результат.поля.Добавить("tCodeK", "S", 10, 0);						// Код контрагента (Таможня)   
	Результат.поля.Добавить("tNameK", "S", 30, 0);						// Наименование контрагента (Таможня)   
	Результат.поля.Добавить("tFullNameK", "S", 200, 0);				// Полное наименование контрагента (Таможня)   
	Результат.поля.Добавить("tAdress", "S", 200, 0);					// Юридический адрес контрагента (Таможня)   
	Результат.поля.Добавить("tAdress2", "S", 200, 0);					// Фактический адрес контрагента ((Таможня)   
	Результат.поля.Добавить("tTel", "S", 200, 0);							// Телефон контрагента (Таможня)   
	Результат.поля.Добавить("tINN", "S", 22, 0);							// ИНН контрагента (Таможня)  
	Результат.поля.Добавить("tOKPO", "S", 10, 0);							// ОКПО контрагента (если юр.лицо) (Таможня)   
	Результат.поля.Добавить("tVidK", "N", 1, 0);							// Вид контрагента:1-юр.лицо, 2- физ.лицо (Таможня)   
	Результат.поля.Добавить("tVidDog", "N", 1, 0);						// Вид договора (1-с поставщиком, 2- с покупателем) (Таможня)
	
	Результат.поля.Добавить("tUIDK", "S", 36, 0);							// УИД контрагента (Таможня)
	Результат.поля.Добавить("tSbor", "N", 15, 2);							// Сбор таможни  
	Результат.поля.Добавить("tDosDoGR", "N", 15, 2);					// Доставка до границы   
	Результат.поля.Добавить("VALdoGr", "S", 5, 0);						// Код валюты до границы    
	Результат.поля.Добавить("KursDoGr", "N", 10, 4);					// Курс валюты до границы
	Результат.поля.Добавить("tDosDoTam", "N", 15, 2);					// Доставка до таможни   
	Результат.поля.Добавить("VALDoTam", "S", 5, 0);						// Код валюты доставки до таможни    
	Результат.поля.Добавить("KursDoTam", "N", 10, 4);					// Курс валюты доставки до таможни
	Результат.поля.Добавить("tPosH", "N", 15, 2);							// Сумма пошлины таможни   
	Результат.поля.Добавить("tNDS", "N", 15, 2);							//
	
	//Голубев 20.04.19 без задачи
	Результат.поля.Добавить("VidOper", "N", 1, 0); 						
	//возврат от покупателя 0 - обратная реализация или продажа, 1 - корректировка, 2 - МФП
	//
	//Голубев 20.04.19
	
	Результат.поля.Добавить("CodeT", "S", 50, 0);							// данные о товаре
	//Семенов И.П. 22.02.2019 XX-1971(
	Результат.поля.Добавить("UIDT", "S", 36, 0);
	//)Семенов И.П.
	Результат.поля.Добавить("NameT", "S", 50, 0);
	Результат.поля.Добавить("FullNameT", "S", 200, 0);  
	Результат.поля.Добавить("VidT", "N", 1, 0);								//1-товар, 2-услуга, 3-тара, 4-материал 
	Результат.поля.Добавить("Art", "S", 25, 0);  
	Результат.поля.Добавить("Izg", "S", 100, 0);

	Результат.поля.Добавить("Ed", "S", 3, 0);
	Результат.поля.Добавить("Kol", "N", 15, 3);
	Результат.поля.Добавить("NDS", "N", 15, 2);  
	Результат.поля.Добавить("Sum", "N", 15, 2);
	Результат.поля.Добавить("Stavka", "N", 2, 0); 
	Результат.поля.Добавить("GTD", "S", 50, 0); 
	Результат.поля.Добавить("StranaK", "S", 3, 0); 
	Результат.поля.Добавить("StranaN", "S", 50, 0); 
	Результат.поля.Добавить("Cebest", "N", 15, 2);						//для возврата   
	Результат.поля.Добавить("C41", "N", 1, 0);								//при выгрузке реализаии,  если был возврат,  сразу отметим это    
	Результат.поля.Добавить("C41CF", "N", 1, 0);							//при выгрузке реализаии,  если есть сф на возврат,  отметим это 0 - нет сф,  1 - есть,  2 - несколько возвратов,  но нет всех сф    
	
	Результат.поля.Добавить("DateB", "D", 10, 0);							// дата начала выгрузки  
	Результат.поля.Добавить("DateF", "D", 10, 0);							// дата окончания 
	Результат.поля.Добавить("One", "N", 1, 0);								// 1- один документ 
	
	Результат.поля.Добавить("KorPostYes", "N", 1, 0);					// Есть корректировка поступления  
	Результат.поля.Добавить("KorPostNum", "S", 20, 0);				// №  корректировка поступления  
	Результат.поля.Добавить("KorPostDat", "D", 10, 0);				// дата корректировка поступления 
	
	Результат.поля.Добавить("PartNum", "S", 11, 0);
	Результат.поля.Добавить("PartDate", "D", 10, 0);
	Результат.поля.Добавить("PartType", "S", 25, 0);
	
	Результат.СоздатьФайл(вхПолноеИмяФайла);
	
	Возврат Результат;	
	
КонецФункции

Функция ПолучитьПолноеИмяФайла(вхОбъектМетаданных, вхДата, лТолькоУслуги = Ложь)
	
	Результат = НастройкаВыгрузки.КаталогВыгрузки;
	
	Если (Прав(Результат, 1) <> "\") тогда
		Результат = Результат + "\";
	КонецЕсли;
	
	Если (вхОбъектМетаданных = Метаданные.Документы.ПоступлениеТоваровУслуг) тогда
		Результат = Результат + "1";
	ИначеЕсли (вхОбъектМетаданных = Метаданные.Документы.РеализацияТоваровУслуг) тогда
		Если НЕ лТолькоУслуги Тогда
			Результат = Результат + "3";
		Иначе
			Результат = Результат + "9";
		КонецЕсли;
	ИначеЕсли (вхОбъектМетаданных = Метаданные.Документы.ВозвратТоваровОтПокупателя) тогда
		Результат = Результат + "4";
	ИначеЕсли (вхОбъектМетаданных = Метаданные.Документы.ВозвратТоваровПоставщику) тогда
		Результат = Результат + "5";
	//Семенов И.П. 18.06.2019 XX-2379(
	ИначеЕсли вхОбъектМетаданных = Метаданные.Документы.КорректировкаДолга тогда 
	    Результат = Результат + "7";
	//)Семенов И.П.
	Иначе
		ВызватьИсключение "Неправильный вид документа.";
	КонецЕсли;
	
	Результат = Результат + Формат(вхДата, "ДФ=ddMMyy") + ".dbf";
	
	//Семенов И.П. 16.07.2019 XX-2924(
	ИмяТекущегоФайла = Прав(Результат,11);
	//)Семенов И.П.
	
	Возврат Результат;
	
КонецФункции

Процедура ВыполнитьВыгрузку(МассивСсылок = Неопределено) Экспорт
	
	Если СписокКонтрагентов.Количество() > 0 Тогда
		СписокКонтрагентовКопия = СписокКонтрагентов.Выгрузить();
		СписокКонтрагентов.Очистить();
		
		Для Каждого ЭлементСписка из СписокКонтрагентовКопия Цикл
			Результат = ПроверитьИННКонтрагента(ЭлементСписка.Контрагент);
			Если Результат.РезультатПроверки Тогда
				нс = СписокКонтрагентов.Добавить();
				нс.Контрагент = ЭлементСписка.Контрагент;
			
			Иначе
				Сообщить("документы по контрагенту " + Строка(ЭлементСписка.Контрагент) + " не будут выгружены: " + Результат.ОписаниеОшибки);
			
			КонецЕсли;
		
		КонецЦикла;
		
		Если СписокКонтрагентов.Количество() = 0 Тогда
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыгружаемыеДокументы.Количество() > 0 Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Ссылка
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	&Т КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Д.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ К
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.ПоступлениеТоваровУслуг)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Д.Контрагент
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.РеализацияТоваровУслуг)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Д.Контрагент
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Д.Контрагент
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.ВозвратТоваровПоставщику)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Д.КонтрагентДебитор
		|ИЗ
		|	Документ.КорректировкаДолга КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.КорректировкаДолга)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Д.КонтрагентКредитор
		|ИЗ
		|	Документ.КорректировкаДолга КАК Д
		|ГДЕ
		|	Д.Ссылка В
		|			(ВЫБРАТЬ
		|				Т.Ссылка
		|			ИЗ
		|				Т КАК Т
		|			ГДЕ
		|				Т.Ссылка ССЫЛКА Документ.КорректировкаДолга)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	К.Контрагент
		|ИЗ
		|	К КАК К"
		);
		Запрос.УстановитьПараметр("Т", ВыгружаемыеДокументы);
		
		СписокКонтрагентовКопия = СписокКонтрагентов.ВыгрузитьКолонки();
		Выборка = Запрос.Выполнить().Выбрать();
		
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), СписокКонтрагентовКопия);
		
		Пока Выборка.Следующий() Цикл
			Результат = ПроверитьИННКонтрагента(Выборка.Контрагент);
			Если НЕ Результат.РезультатПроверки Тогда
				Сообщить("документы по контрагенту " + Строка(Выборка.Контрагент) + " не будут выгружены: " + Результат.ОписаниеОшибки);
			Иначе
				нс = СписокКонтрагентов.Добавить();
				нс.Контрагент = Выборка.Контрагент;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если СписокКонтрагентовКопия.Количество() > 0 Тогда
			ВыгружаемыеДокументыКопия = ВыгружаемыеДокументы.Выгрузить();
			ВыгружаемыеДокументы.Очистить();
			
			Для Каждого ЭлементСписка из ВыгружаемыеДокументыКопия Цикл
				ПараметрОтбора = Новый Структура("Контрагент", ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЭлементСписка.Ссылка, "Контрагент"));
				Реузльтат = СписокКонтрагентов.НайтиСтроки(ПараметрОтбора);
				
				Если Результат.Количество() <> 0 Тогда
					нс = ВыгружаемыеДокументы.Добавить();
					нс.Ссылка = ЭлементСписка.Ссылка;
			
				КонецЕсли;
		
			КонецЦикла;
			
		КонецЕсли;
		
		Если ВыгружаемыеДокументы.Количество() = 0 Тогда
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Если ВыгружатьПТУ тогда
		//Сообщить("Начало ПТУ " + ТекущаяДата());
		ВыгрузитьДокументы_ПоступлениеТоваровУслуг(МассивСсылок);
		//Сообщить("Конец ПТУ " + ТекущаяДата());
	КонецЕсли;
	
	Если ВыгружатьРТУ Тогда
		Если ТолькоУслуги И ВыгрузитьТолькоРеализацииСУслугами Тогда
			ТолькоУслуги = Ложь;
			ВыгрузитьТолькоРеализацииСУслугами = Ложь;
		КонецЕсли;
		//Сообщить("Начало РТУ " + ТекущаяДата());
		ВыгрузитьДокументы_РеализацияТоваровУслуг(МассивСсылок);
		//Сообщить("Конец РТУ " + ТекущаяДата());
	КонецЕсли;
	
	Если ВыгружатьВозвратыПоставщикам Тогда
		ВыгрузитьДокументы_ВозвратыПоставщикам(МассивСсылок);
	КонецЕсли;
	
	Если ВыгружатьВозвратыОтПокупателей Тогда
		ВыгрузитьДокументы_ВозвратыОтПокупателей(МассивСсылок);
	КонецЕсли;
	
	//Семенов И.П. 18.06.2019 XX-2379(
	Если ВыгружатьКорректировкиДолга Тогда 
		
		ВыгрузитьДокументы_КорректировкаДолга(МассивСсылок);
		
	КонецЕсли;
	//)Семенов И.П.
		
КонецПроцедуры

//Семенов И.П. 04.06.2019 XX-2514(
Процедура ДобавитьСтрокуВСтруктуруДокумента(СтруктураДокумента, ФайлДБФ, ИмяТаблицы = "Товары")
	
	СтруктураСтроки = ПолучитьСтруктуруСтрокиТабличнойЧасти(ФайлДБФ);
	СтруктураДокумента[ИмяТаблицы].Добавить(СтруктураСтроки);
	
КонецПроцедуры

Функция ПолучитьНомерСообщенияВыгрузки(Узел)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ИсторияОбменовПоСообщениям.НомерСообщения) КАК НомерСообщения
	               |ИЗ
	               |	РегистрСведений.ИсторияОбменовПоСообщениям КАК ИсторияОбменовПоСообщениям
	               |ГДЕ
	               |	ИсторияОбменовПоСообщениям.Узел = &Узел";
	
	Запрос.УстановитьПараметр("Узел", Узел);
	НомерСообщения = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.НомерСообщения) Тогда 
		НомерСообщения = Выборка.НомерСообщения;
	КонецЕсли;
	
	Возврат НомерСообщения + 1;
	
КонецФункции

Функция ПолучитьСтруктуруДокумента(ДокументСсылка)
	
	СтруктураДокумента = Новый Структура;
	
	СтруктураДокумента.Вставить("Документ",Строка(ДокументСсылка));
	СтруктураДокумента.Вставить("Товары", Новый Массив);
	СтруктураДокумента.Вставить("Услуги", Новый Массив);
	
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьСтруктуруСтрокиТабличнойЧасти(ФайлДБФ)
	
	СтруктураСтроки = Новый Структура;
	
	Для Каждого Колонка Из ФайлДБФ.Поля Цикл 
		
		ИмяКолонки = Колонка.Имя;
		
		СтруктураСтроки.Вставить(ИмяКолонки, ФайлДБФ.ПолучитьЗначениеПоля(ИмяКолонки));
		
	КонецЦикла;
	
	Возврат СтруктураСтроки;
	
КонецФункции
//)Семенов И.П.

//Семенов И.П. 11.07.2019 XX-2872(
Процедура ИнициализироватьТаблицуИстории()
	
	ТаблицаИсторииОбъектов = Новый ТаблицаЗначений;
	
	ТаблицаИсторииОбъектов.Колонки.Добавить("Период");
	ТаблицаИсторииОбъектов.Колонки.Добавить("Объект");
	ТаблицаИсторииОбъектов.Колонки.Добавить("Разделитель");
	ТаблицаИсторииОбъектов.Колонки.Добавить("ТелоСообщения");
	ТаблицаИсторииОбъектов.Колонки.Добавить("Ошибка");
	ТаблицаИсторииОбъектов.Колонки.Добавить("ТекстОшибки");
	ТаблицаИсторииОбъектов.Колонки.Добавить("ИмяМетаданных");
	ТаблицаИсторииОбъектов.Колонки.Добавить("ДополнительныеСведения");
	
КонецПроцедуры

Процедура ДобавитьСтрокуИсторииПоОбъекту(Объект, ТелоСообщения, ИмяМетаданных="", Ошибка=Ложь, ТекстОшибки="",Разделитель = Неопределено) Экспорт 
			
	СтрокаИстории = ТаблицаИсторииОбъектов.Добавить();
	
	СтрокаИстории.Период = ТекущаяДата();
	СтрокаИстории.Объект = Объект;
	
	ТипОбъекта = ТипЗнч(Объект);
	
	ТекстСообщения = ТелоСообщения;
	Попытка		
		ЗаписьХмл = Новый ЗаписьXML;
		ЗаписьХмл.УстановитьСтроку();
		СериализаторXDTO.ЗаписатьXML(ЗаписьХмл, ТелоСообщения, НазначениеТипаXML.Явное);
		ТекстСообщения = ЗаписьХмл.Закрыть();	
	Исключение
		ТекстСообщения = "";
	КонецПопытки;
	СтрокаИстории.ТелоСообщения = ТекстСообщения;
	СтрокаИстории.Ошибка        = Ошибка;
	
	Если ТипЗнч(ТекстОшибки) = Тип("Массив") тогда 
		СтрокаИстории.ДополнительныеСведения = новый ХранилищеЗначения(ТекстОшибки);
		//#XX-2733 Kalinin V.A. ( 2019-07-08 )  /*
		ВсеОшибки ="";
		Для Каждого СтрокаОшибки из ТекстОшибки цикл 
			ВсеОшибки =  ВсеОшибки +СтрокаОшибки.ТекстДляОднойОшибки +Символы.ПС;
		КонецЦикла;
		СтрокаИстории.ТекстОшибки   = ВсеОшибки;  
	Иначе 		
		СтрокаИстории.ТекстОшибки   = ТекстОшибки;
	КонецЕсли;

	Если ИмяМетаданных = "" Тогда 
		СтрокаИстории.ИмяМетаданных = Объект.Метаданные().ПолноеИмя();
	Иначе
		СтрокаИстории.ИмяМетаданных = ИмяМетаданных + ?(ЗначениеЗаполнено(ИмяТекущегоФайла),"."+ИмяТекущегоФайла,""); //Семенов И.П. 16.07.2019 XX-2924 
	КонецЕсли;	
	
	//#XX-2240 Kalinin V.A. ( 2019-04-11 )  /*
	Если Разделитель = Неопределено тогда 
		СтрокаИстории.Разделитель = ТаблицаИсторииОбъектов.Количество() + 1;
	иначе 
		СтрокаИстории.Разделитель   = Разделитель;
	КонецЕсли;
	// */
	
КонецПроцедуры

Процедура ЗафиксироватьСообщениеВИсторииОбмена(НомерСообщения, Узел, ТелоСообщения, Исходящее=Ложь, Ошибка=Ложь, ТекстОшибки="", Период = Неопределено,КоличествоОбъектов = Неопределено) Экспорт
			
	//# Kalinin V.A. ( 2019-03-28 )
	Если КоличествоОбъектов = Неопределено тогда
		КоличествоОбъектов = ТаблицаИсторииОбъектов.Количество();
	КонецЕсли; 
	// */
	
	НаборЗаписей = РегистрыСведений.ИсторияОбменовПоСообщениям.СоздатьНаборЗаписей();
	
	// 13.03.19 Строганов Роман > 
	Если Период = Неопределено Тогда
		Период = ТекущаяДата();
	КонецЕсли;
	// 13.03.19 Строганов Роман <
	
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Отбор.НомерСообщения.Установить(НомерСообщения);
	НаборЗаписей.Отбор.Исходящее.Установить(Исходящее);
	НаборЗаписей.Отбор.Узел.Установить(Узел);
	
	ЗаписьНабора = НаборЗаписей.Добавить();
	
	ЗаписьНабора.Период             = Период;
	ЗаписьНабора.НомерСообщения     = НомерСообщения;
	ЗаписьНабора.Узел               = Узел;
	ЗаписьНабора.Исходящее          = Исходящее;
	
	ЗаписьНабора.ХранилищеСообщения = Новый ХранилищеЗначения(ТелоСообщения, Новый СжатиеДанных(9));
	
	ЗаписьНабора.КоличествоОбъектов = КоличествоОбъектов;
	ЗаписьНабора.Ошибка            	= Ошибка;
	ЗаписьНабора.ТекстОшибки        = ТекстОшибки;	
	ЗаписьНабора.Пользователь       = глЗначениеПеременной("глТекущийПользователь");
	Если КоличествоОбъектов<>0 Тогда 
		ЗаписьНабора.ЕстьОшибкиПоОбъектам = ТаблицаИсторииОбъектов.Найти(Истина,"Ошибка")<>Неопределено;
	КонецЕсли;
	ЗаписьНабора.ПланОбменаПредставление = Узел.Метаданные().Синоним;
	
	НаборЗаписей.Записать(Истина);
	
	Если КоличествоОбъектов <> 0 Тогда 
		
		РегистрыСведений.ИсторияОбменовПоОбъектам.СоздатьЗаписиПоСообщению(ЗаписьНабора, ТаблицаИсторииОбъектов);
		
	КонецЕсли;
	
КонецПроцедуры
//)Семенов И.П.

//Голубев
Функция ПолучитьДатуНомерВходящегоСчетаФактуры(вхИдентификаторДокумента)
	Возврат ПодключитьсяКБазеСемерки(вхИдентификаторДокумента);	
	
КонецФункции

Функция СформироватьТекстЗапроса(ГУИД_Документа)
	
	ТекстЗапроса = 
	"declare @idPTU char(9)
	|
	|select
	|	@idPTU = g.[_Object]
	|from
	|	[Work_P1C].[dbo].[adoURBD_Guids] as g with (nolock)
	|where
	|	(g.[_MetaType] = 12) and (g.[_MetaId] = 1582) and (g.[_Id] = '" + ГУИД_Документа + "')
	|
	|select
	|	sf.SP3481 as НомерВходящегоДокументаСФ,
	|	sf.SP3482 as ДатаВходящегоДокументаСФ
	|from
	|	DH2695 as sf
	|where
	|	right(sf.SP2693,9) = @idPTU";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодключитьсяКБазеСемерки(ГУИД_Документа) 
	СтруктураСФ = Неопределено;
	
	стрПодключения = "Provider=SQLOLEDB;Data Source=1CSQL01-G9;Initial Catalog=Work_P1C;Integrated Security=SSPI";
	
	Попытка
		Connection = Новый COMОбъект("ADODB.Connection");
		Connection.ConnectionString = стрПодключения;
		Connection.ConnectionTimeOut = 15;
		
		Connection.Open(Connection.ConnectionString);
		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат СтруктураСФ;
		
	КонецПопытки;
	
	RS = Новый COMОбъект("ADODB.Recordset");
	
	RS.Open(СформироватьТекстЗапроса(ГУИД_Документа), Connection);
		
	СтруктураСФ = Новый Структура;
	Пока RS.EOF() = 0 Цикл
		НомерВходящегоДокументаСФ = СокрЛП(RS.Fields("НомерВходящегоДокументаСФ").Value);
		Если НЕ ПустаяСтрока(НомерВходящегоДокументаСФ) Тогда
			НомерВходящегоДокументаСФ = Лев(НомерВходящегоДокументаСФ,3) + "0" + Прав(НомерВходящегоДокументаСФ,7);
		КонецЕсли;		
		СтруктураСФ.Вставить("НомерВходящегоДокументаСФ", НомерВходящегоДокументаСФ);
		
		ДатаВходящегоДокументаСФ = СокрЛП(RS.Fields("ДатаВходящегоДокументаСФ").Value);
		СтруктураСФ.Вставить("ДатаВходящегоДокументаСФ", Дата(ДатаВходящегоДокументаСФ));
					
		RS.MoveNext();
		
	КонецЦикла;
	
	RS.Close();
	Connection.Close(); 
	
	Возврат СтруктураСФ;
	
КонецФункции

//Голубев

//Семенов И.П. 16.07.2019 XX-2924(
УзелДляЛогов = ПланыОбмена.ОбменПартКом83_Бухгалтерия.ЭтотУзел();
//)Семенов И.П.

мСкладОборудования = Справочники.Склады.НайтиПоКоду("000000026");

мВерсия = "1.4";
