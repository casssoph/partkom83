////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Заполняем дерево метаданных	
	ЗаполнитьДеревоМетаданных();
	
	Пользователи 			= Параметры.Пользователи;
	Компьютеры 				= Параметры.Компьютеры;
	ДатаНач 				= Параметры.ДатаНач;
	ДатаКон 				= Параметры.ДатаКон;
	УзлыРИБ					= Параметры.УзлыРИБ;
	События					= Параметры.События;
	ПредставлениеОбъекта    = Параметры.ПредставлениеОбъекта;
	ДанныеОтбора			= Параметры.ДанныеОтбора;
	ДанныеОтбораСсылка		= Параметры.ДанныеОтбораСсылка;
	Мета					= Параметры.Мета;
	
	Попытка
		Выполнить("ЭтаФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца");
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Обновляем пометки в дереве метаданных
	УстановитьФлаги();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаСервере
Процедура ЗаполнитьМассивМетаПоДеревуМетаданных(СтрокаДерева)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		Если НЕ ПустаяСтрока(Стр.ПолноеИмя) Тогда
			Мета.Добавить(Стр.ПолноеИмя, , Стр.Использование = 1);
		КонецЕсли;
		ЗаполнитьМассивМетаПоДеревуМетаданных(Стр);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивМета()
	Мета.Очистить();
	Дерево = РеквизитФормыВЗначение("ДеревоМетаданных");
	ЗаполнитьМассивМетаПоДеревуМетаданных(Дерево);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаOKНажатие(Команда)
	ЗаполнитьМассивМета();
	
	ЭтаФорма.ЗакрыватьПриВыборе = Истина;		
	ОповеститьОВыборе(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗакрытьНажатие(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПериод(Команда)
	ДатаНач = Дата(1, 1, 1);
	ДатаКон = Дата(1, 1, 1);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоМетаданных()
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Представление",	Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Имя",				Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("ИндексКартинки",	Новый ОписаниеТипов("Число"));
	Дерево.Колонки.Добавить("Использование");
	Дерево.Колонки.Добавить("ПолноеИмя",		Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("СодержитЭлементы");
	Дерево.Колонки.Добавить("ИмяТЧ",			Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("ЭтоОбъект");
	
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.Константы, 				"Константы", 					"Константа", 				2, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.Справочники, 				"Справочники", 					"Справочник", 				3, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.Документы, 				"Документы", 					"Документ", 				4, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.ПланыВидовХарактеристик, 	"Планы видов характеристик", 	"ПланВидовХарактеристик",	5, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.ПланыСчетов, 				"Планы счетов", 				"ПланСчетов", 				6, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.ПланыВидовРасчета, 		"Планы видов расчета", 			"ПланВидовРасчета",			7, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.ПланыОбмена, 				"Планы обмена", 				"ПланОбмена",				8, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.РегистрыСведений, 			"Регистры сведений", 			"РегистрСведений", 			11, Ложь);	
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.БизнесПроцессы, 			"Бизнесс-процессы", 			"БизнесПроцесс", 			10, Ложь);
	внЖурналРегистрации.ДобавитьРегистрируемыеОбъекты(Дерево, Метаданные.Задачи, 					"Задачи", 						"Задача", 					9, Ложь);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
КонецПроцедуры

&НаСервере
Процедура УстановитьФлаги(Флаг = Неопределено)
	
	Дерево = РеквизитФормыВЗначение("ДеревоМетаданных");
	
	СнятьВсеФлагиРегистрируемыхОбъектов(Дерево);
	НачальнаяПометкаКоллекций(Дерево);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
КонецПроцедуры

// Процедура НачальнаяПометкаКоллекций устанавливает пометку для коллекций
//
&НаСервере
Процедура НачальнаяПометкаКоллекций(ТекСтрока)

	ПараметрыОтбора = Новый Структура;
	
	Для каждого Строки Из ТекСтрока.Строки Цикл
		
		Если (Мета.НайтиПоЗначению(Строки.ПолноеИмя) <> Неопределено И Строки.ЭтоОбъект) ИЛИ Мета.Количество() = 0 Тогда
			Строки.Использование = 1;
			ПометитьВложенныеЭлементыСервер(Строки);
			ПометитьЭлементыРодителейСервер(Строки.Родитель);				
		КонецЕсли;
		
		// Рекурсия
		Если Строки.Строки.Количество() > 0 Тогда
			НачальнаяПометкаКоллекций(Строки)
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // НачальнаяПометкаКоллекций

&НаСервере
Процедура СнятьВсеФлагиРегистрируемыхОбъектов(СтрокиРегистрируемыеОбъекты)
	
	Для Каждого Стр Из СтрокиРегистрируемыеОбъекты.Строки Цикл
		Стр.Использование = Ложь;
		СнятьВсеФлагиРегистрируемыхОбъектов(Стр);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МетаданныеУстановитьВсеФлаги(Команда)
	УстановитьФлагиРегистрируемыхОбъектов(Истина);
КонецПроцедуры

&НаКлиенте
Процедура МетаданныеСнятьВсеФлаги(Команда)
	УстановитьФлагиРегистрируемыхОбъектов(Ложь);
КонецПроцедуры

&НаСервере
Процедура УстановитьФлагиСписка(Список, Флаг)	
	Для Каждого Элемент Из Список Цикл
		Если Флаг = Неопределено Тогда
			Элемент.Пометка = ?(Элемент.Пометка = Истина, Ложь, Истина);
		Иначе
			Элемент.Пометка = Флаг;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СобытияУстановитьВсеФлаги(Команда)
	УстановитьФлагиСписка(События, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СобытияСнятьВсеФлаги(Команда)
	УстановитьФлагиСписка(События, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСнятьВсеФлаги(Команда)
	УстановитьФлагиСписка(Пользователи, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиУстановитьВсеФлаги(Команда)
	УстановитьФлагиСписка(Пользователи, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомпьютерыСнятьВсеФлаги(Команда)
	УстановитьФлагиСписка(Компьютеры, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомпьютерыУстановитьВсеФлаги(Команда)
	УстановитьФлагиСписка(Компьютеры, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомпьютерыИнвертироватьФлаги(Команда)
	УстановитьФлагиСписка(Компьютеры, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиИнвертироватьФлаги(Команда)
	УстановитьФлагиСписка(Пользователи, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СобытияИнвертироватьФлаги(Команда)
	УстановитьФлагиСписка(События, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура РИБИнвертироватьВсеФлаги(Команда)
	УстановитьФлагиСписка(УзлыРИБ, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура РИБУстановитьВсеФлаги(Команда)
	УстановитьФлагиСписка(УзлыРИБ, Истина);
КонецПроцедуры

&НаКлиенте
Процедура РИБСнятьВсеФлаги(Команда)
	УстановитьФлагиСписка(УзлыРИБ, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхИспользованиеПриИзменении(Элемент)
	
	ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
	Если ТекущиеДанные.Использование = 2 Тогда
		ТекущиеДанные.Использование = 0;
	КонецЕсли;
	ПометитьВложенныеЭлементы(ТекущиеДанные);
	ПометитьЭлементыРодителей(ТекущиеДанные.ПолучитьРодителя());
	
КонецПроцедуры

// Процедура рекурсивно устанавливает/снимает пометку для вложенных элементов начиная
// с передаваемого элемента.
//
// Параметры:
// Элемент      - ДанныеФормыКоллекцияЭлементовДерева 
//
&НаКлиенте
Процедура ПометитьВложенныеЭлементы(Элемент)

	ВложенныеЭлементы = Элемент.ПолучитьЭлементы();
	
	Если ВложенныеЭлементы.Количество() = 0 Тогда
		Если НЕ Элемент.ПолучитьРодителя() <> Неопределено Тогда
			Элемент.Использование = 0;
		КонецЕсли;		
	Иначе
		Для Каждого ВложенныйЭлемент ИЗ ВложенныеЭлементы Цикл
			ВложенныйЭлемент.Использование = Элемент.Использование;
			ПометитьВложенныеЭлементы(ВложенныйЭлемент);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПометитьВложенныеЭлементыСервер(Элемент)

	ВложенныеЭлементы = Элемент.Строки;
	
	Если ВложенныеЭлементы.Количество() = 0 Тогда
		Если НЕ Элемент.Родитель <> Неопределено Тогда
			Элемент.Использование = 0;
		КонецЕсли;		
	Иначе
		Для Каждого ВложенныйЭлемент ИЗ ВложенныеЭлементы Цикл
			ВложенныйЭлемент.Использование = Элемент.Использование;
			ПометитьВложенныеЭлементыСервер(ВложенныйЭлемент);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура рекурсивно устанавливает/снимает пометку для родителей передаваемого элемента.
//
// Параметры:
// Элемент      - ДанныеФормыКоллекцияЭлементовДерева 
//
&НаКлиенте
Процедура ПометитьЭлементыРодителей(СтрокаРодитель)

	Если СтрокаРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Использование = СтрокаРодитель.Использование;
	
	Если СтрокаРодитель.ПолучитьЭлементы().Количество() > 0 Тогда
		НайденыВключенные  = Ложь;
		НайденыВыключенные = Ложь;
		Для Каждого Строка Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			Если Строка.Использование = 0 Тогда
				НайденыВыключенные = Истина;
			ИначеЕсли Строка.Использование = 1 Тогда
				НайденыВключенные  = Истина;
			ИначеЕсли Строка.Использование = 2 Тогда
				НайденыВыключенные = Истина;
				НайденыВключенные  = Истина;
			КонецЕсли;
			
			Если НайденыВключенные И НайденыВыключенные Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НайденыВключенные И НЕ НайденыВыключенные Тогда
			Использование = 1;
		ИначеЕсли НЕ НайденыВключенные И НайденыВыключенные Тогда
			Использование = 0;
		Иначе
			Использование = 2;
		КонецЕсли;
	КонецЕсли; 

	СтрокаРодитель.Использование = Использование;
	ПометитьЭлементыРодителей(СтрокаРодитель.ПолучитьРодителя());

КонецПроцедуры

&НаСервере
Процедура ПометитьЭлементыРодителейСервер(СтрокаРодитель)

	Если СтрокаРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Использование = СтрокаРодитель.Использование;
	
	Если СтрокаРодитель.Строки.Количество() > 0 Тогда
		НайденыВключенные  = Ложь;
		НайденыВыключенные = Ложь;
		Для Каждого Строка Из СтрокаРодитель.Строки Цикл
			Если Строка.Использование = 0 Тогда
				НайденыВыключенные = Истина;
			ИначеЕсли Строка.Использование = 1 Тогда
				НайденыВключенные  = Истина;
			ИначеЕсли Строка.Использование = 2 Тогда
				НайденыВыключенные = Истина;
				НайденыВключенные  = Истина;
			КонецЕсли;
			
			Если НайденыВключенные И НайденыВыключенные Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НайденыВключенные И НЕ НайденыВыключенные Тогда
			Использование = 1;
		ИначеЕсли НЕ НайденыВключенные И НайденыВыключенные Тогда
			Использование = 0;
		Иначе
			Использование = 2;
		КонецЕсли;
	КонецЕсли; 

	СтрокаРодитель.Использование = Использование;
	ПометитьЭлементыРодителейСервер(СтрокаРодитель.Родитель);

КонецПроцедуры

&НаСервере
Процедура УстановитьВсеФлагиРегистрируемыхОбъектов(СтрокиРегистрируемыеОбъекты, Флаг)
	
	Для Каждого Стр Из СтрокиРегистрируемыеОбъекты.Строки Цикл
		Стр.Использование = Флаг;
		
		УстановитьВсеФлагиРегистрируемыхОбъектов(Стр, Флаг);
	КонецЦикла;
	
КонецПроцедуры // УстановитьВсеФлагиРегистрируемыхОбъектов

&НаСервере
Процедура УстановитьФлагиРегистрируемыхОбъектов(Флаг)
	
	Дерево = ДанныеФормыВЗначение(ДеревоМетаданных, Тип("ДеревоЗначений"));	
	УстановитьВсеФлагиРегистрируемыхОбъектов(Дерево, Флаг);	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
КонецПроцедуры
