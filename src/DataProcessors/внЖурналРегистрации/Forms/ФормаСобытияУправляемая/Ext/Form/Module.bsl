&НаСервере
Процедура УстановитьОбъект()
	
	Попытка
		ОбъектСсылка = ЗначениеИзСтрокиВнутр(ЗначениеОбъекта);
		Если НЕ внЖурналРегистрации.ЭтаСсылкаСуществуетВИБ(ЗначениеОбъекта) Тогда
			Если Событие = 4 ИЛИ Событие = 9 ИЛИ Событие = 10 Тогда
				ОбъектСсылка = "<Объект недоступен для открытия>";
			Иначе
				ОбъектСсылка = "<Объект был физически удален>";
			КонецЕсли;
		Иначе			
			Элементы.ОбъектСсылка.КнопкаОткрытия = Истина;
		КонецЕсли;		
	Исключение
		Если Событие = 4 ИЛИ Событие = 9 ИЛИ Событие = 10 ИЛИ (Событие = 8 И Найти(МетаданныеОбъекта, "РегистрСведений.") > 0) Тогда
			ОбъектСсылка = "<Объект недоступен для открытия>";
		Иначе
			ОбъектСсылка = Строка(ПредставлениеОбъекта);
		КонецЕсли;
		Элементы.ОбъектСсылка.КнопкаОткрытия = Ложь;
	КонецПопытки;
		
	Элементы.ОбъектСсылка.КнопкаВыбора = Ложь;
	Элементы.ОбъектСсылка.КнопкаОчистки = Ложь;
		
КонецПроцедуры // УстановитьОбъект
	
&НаСервере
Процедура ЗагрузитьИзменения()
	
	// Переносим ТЧ
	Если СостояниеЗаписи > 0 Тогда		
		Изменения = внЖурналРегистрации.ПолучитьИзмененияПоОбъекту(ДатаИзменения, Код, УзелРИБ, СостояниеЗаписи);
	Иначе
		Изменения = внЖурналРегистрации.ПолучитьИзмененияПоОбъектуВКэше(ДатаИзменения, Код, УзелРИБ);
	КонецЕсли;	
	
	// Загружаем в дерево
	Если Изменения <> Неопределено Тогда
		Дерево = ДанныеФормыВЗначение(ДеревоИзменений, Тип("ДеревоЗначений"));
		
		Если ТолькоИзменения Тогда
			Отбор = Новый Структура("Изменено", Ложь);
			ТЗ = Изменения.Скопировать();
			Массив = ТЗ.НайтиСтроки(Отбор);
			Для Каждого Строки Из Массив Цикл
				Тз.Удалить(Строки);
			КонецЦикла;
			внЖурналРегистрации.ЗаполнитьДеревоИзменений(ТЗ, Дерево, ТолькоИзменения);
		Иначе
			внЖурналРегистрации.ЗаполнитьДеревоИзменений(Изменения, Дерево, ТолькоИзменения);		
		КонецЕсли;
		
		ЗначениеВРеквизитФормы(Дерево, "ДеревоИзменений");
		
		Элементы.ДеревоИзменений.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиВСписке(Команда)
	Если ВладелецФормы <> Неопределено Тогда
		ВладелецФормы.Открыть();
	Иначе
		ОткрытьФорму("Обработка.внЖурналРегистрации.Форма.ФормаУправляемая");
	КонецЕсли;
	Оповестить("внПерейтиНаТекущуюЗапись", Код, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Проверка прав доступа. Может ли текущий пользователь просмотривать объект	
	Если внЖурналРегистрации.ПроверитьНарушениеПравДоступа(Объект, МетаданныеОбъекта) Тогда			
		внЖурналРегистрацииКлиент.ПоказатьПредупреждениеПользователю("Нарушение прав доступа!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УстановитьОбъект();
	Элементы.ФормаТолькоИзменения.Пометка = ТолькоИзменения;
	ЗагрузитьИзменения();
	
	// Доступность
	Элементы.ФормаПоказатьИзмененияНаФорме.Видимость = 
		Событие <> 4
		И Событие <> 9 
		И Событие <> 10
		И Найти(МетаданныеОбъекта, "Константа.") <> 1
		И Найти(МетаданныеОбъекта, "РегистрСведений.") <> 1;
		
	// Показываем статус сжатия события
	Структура = внЖурналРегистрации.ПолучитьСтруктуруСостоянияЗаписи(СостояниеЗаписи);
	СтатусСжатия = Структура.Текст;
	Элементы.СтатусСжатия.Подсказка = Структура.Подсказка;
	Элементы.СтатусСжатия.ЦветТекста = Структура.Цвет;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапретОчистки(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗапретНачалаВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаСервере
Функция НайтиСсылку(Стр)
	Попытка
		Возврат ЗначениеИзСтрокиВнутр(Стр);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТекущемуОбъекту(Команда)
	Если ВладелецФормы <> Неопределено Тогда
		ВладелецФормы.Открыть();
	Иначе
		ОткрытьФорму("Обработка.внЖурналРегистрации.Форма.ФормаУправляемая");
	КонецЕсли;
	Оповестить("внВсеСобытияПоОбъекту", ЗначениеОбъекта, ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИзмененияНаФорме(Команда)
		
	ТипОбъекта = Событие;	
	
	// Константа и входы, выходы
	Если ТипОбъекта = 4 ИЛИ ТипОбъекта = 9 ИЛИ ТипОбъекта = 10 ИЛИ ПустаяСтрока(ОбъектСсылка) Тогда
		#Если Клиент Тогда
		внЖурналРегистрацииКлиент.ПоказатьПредупреждениеПользователю("Для данного типа объектов изменения не показываются на форме!");
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
		
	Попытка
		П = Новый Структура("Ключ", ОбъектСсылка);
		Форма = ПолучитьФорму(МетаданныеОбъекта + ".ФормаОбъекта", П);
		ЭлементыФормыОбъекта = Форма.Элементы;
		
		СтрДатаИзмененияПлюсПользователь = Формат(ДатаИзменения, "ДФ='dd.MM.yyyy HH:mm:ss'") + " " + Пользователь;
		
		Изменения = ПолучитьИзмененияПоОбъекту(ДатаИзменения, Код, УзелРИБ, СостояниеЗаписи);
	Исключение
		#Если Клиент Тогда
		внЖурналРегистрацииКлиент.ПоказатьПредупреждениеПользователю("Для данного типа объектов изменения не показываются на форме!");
		#КонецЕсли
		Возврат;
	КонецПопытки;	
	
	Для Каждого Строки Из Изменения Цикл
		
		Если НЕ Строки.Изменено Тогда
			Продолжить;
		КонецЕсли;
		
		// Перебор всех реквизитов на форме
		Для Каждого Элемент Из ЭлементыФормыОбъекта Цикл
			
			//Элемент = ЭлементыФормыОбъекта[Индекс];
			Если Строки.НомерСтрокиТЧ = 0 Тогда
				
				// ШАПКА
				Если ВРег(Элемент.Имя) = ВРег(Строки.ИмяРеквизита) Тогда
					Если Строки.СтароеПредставление = Строки.НовоеПредставление И
						Строки.НовоеПредставление = "" Тогда
						СтрокаЗначений = "";
					Иначе
						СтрокаЗначений = 
						" '" + Строки.СтароеПредставление + "' => " +
						" '" + Строки.НовоеПредставление + "'"
					КонецЕсли;
					
					Попытка
						Элемент.Подсказка = СтрДатаИзмененияПлюсПользователь + СтрокаЗначений;
						Элемент.ЦветРамки = WebЦвета.Красный;
					Исключение
					КонецПопытки;
				КонецЕсли;
			Иначе
				// ТЧ
				Если ВРег(Элемент.Имя) = ВРег(Строки.ИмяТЧ) Тогда
					Попытка
						Элемент.Подсказка =	СтрДатаИзмененияПлюсПользователь;
						Элемент.ЦветРамки = WebЦвета.Красный;
					Исключение
					КонецПопытки;					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Форма.Открыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИзмененияПоОбъекту(ДатаИзменения, Код, УзелРИБ, СостояниеЗаписи)
	Изменения = внЖурналРегистрации.ПолучитьИзмененияПоОбъекту(ДатаИзменения, Код, УзелРИБ, СостояниеЗаписи);
	
	Массив = Новый Массив();
	Для Каждого Строки Из Изменения Цикл
		Соответствие = Новый Структура("НомерСтроки,ИмяТЧ,ИмяРеквизита,НомерСтрокиТЧ,СтароеЗначение,НовоеЗначение,СтароеПредставление,НовоеПредставление,ТипРеквизита,Изменено");
		ЗаполнитьЗначенияСвойств(Соответствие, Строки);
		Массив.Добавить(Соответствие);
	КонецЦикла;
	
	Возврат Массив; 
КонецФункции

&НаКлиенте
Процедура Развернуть(Команда)
	КоллекцияЭлементовДерева = ДеревоИзменений.ПолучитьЭлементы();
	Для Каждого Строки Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки	= Строки.ПолучитьИдентификатор();
		Элементы.ДеревоИзменений.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	КоллекцияЭлементовДерева = ДеревоИзменений.ПолучитьЭлементы();
	Для Каждого Строки Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки	= Строки.ПолучитьИдентификатор();
		Элементы.ДеревоИзменений.Свернуть(ИдентификаторСтроки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УзелРИБОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТолькоИзменения(Команда)
	
	ТолькоИзменения = НЕ ТолькоИзменения;
	Элементы.ФормаТолькоИзменения.Пометка = ТолькоИзменения;
	ЗагрузитьИзменения();
	
	КоллекцияЭлементовДерева = ДеревоИзменений.ПолучитьЭлементы();
	Для Каждого Строки Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки	= Строки.ПолучитьИдентификатор();
		Элементы.ДеревоИзменений.Развернуть(ИдентификаторСтроки, Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПечатнаяФорма(Код, УзелРИБ, СостояниеЗаписи) Экспорт
	
	
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументНаСервере()
	
	Структура 									= Новый Структура();
	Структура.Вставить("Код",					Код);
	Структура.Вставить("УзелРИБ",				УзелРИБ);
	Структура.Вставить("ДатаИзменения",			ДатаИзменения);
	Структура.Вставить("Объект",				Объект);
	Структура.Вставить("МетаданныеОбъекта",		МетаданныеОбъекта);
	Структура.Вставить("Пользователь",			Пользователь);
	Структура.Вставить("Компьютер",				Компьютер);
	Структура.Вставить("ВерсияИзменения",		ВерсияИзменения);
	Структура.Вставить("ПредставлениеОбъекта",	ПредставлениеОбъекта);
	Структура.Вставить("Событие",				Событие);
	Структура.Вставить("СобытиеПредставление", 	СобытиеПредставление);
	Структура.Вставить("СостояниеЗаписи",		СостояниеЗаписи);	
	Структура.Вставить("СтатусСжатия",			СтатусСжатия);
	Структура.Вставить("ТолькоИзменения",		ТолькоИзменения);
	Структура.Вставить("ОбъектСсылка",			ОбъектСсылка);
	
	ДЗ = ДанныеФормыВЗначение(ДеревоИзменений, Тип("ДеревоЗначений"));
	
	Структура.Вставить("ДеревоИзменений",		ДЗ);
	
	ТабДокумент = Обработки.внЖурналРегистрации.Печать(Структура);
	
	Возврат ТабДокумент;
	
КонецФункции


&НаКлиенте
Процедура Печать(Команда)
	
	Форма		= ПолучитьФорму("Обработка.внЖурналРегистрации.Форма.ОтчетПоВерсиямОбъектаУправляемая");
	ТабДокумент = ПолучитьТабличныйДокументНаСервере();	
	Форма.ТД	= ТабДокумент;
	
	Форма.Заголовок = "Событие №" + Формат(Код, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=") + " от " + Строка(ДатаИзменения);
	
	Если Форма.Открыта() Тогда
		Форма.Активизировать();
	Иначе
		Форма.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИзмененийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;	
	Попытка
		
		Если Элементы.ДеревоИзменений.ТекущийЭлемент.Имя = "ДеревоИзмененийСтароеПредставление" Тогда			
			Значение = Элементы.ДеревоИзменений.ТекущиеДанные.СтароеЗначение;
		ИначеЕсли Элементы.ДеревоИзменений.ТекущийЭлемент.Имя = "ДеревоИзмененийНовоеПредставление" Тогда
			Значение = Элементы.ДеревоИзменений.ТекущиеДанные.НовоеЗначение;
		КонецЕсли;		
		
		СсылкаОткрытия = НайтиСсылку(Значение);
		// Значение строкового типа попытаемся открыть его
		Если ТипЗнч(СсылкаОткрытия) = Тип("Строка") Тогда
			ФормаОткрытияСтроки			 = ПолучитьФорму("Обработка.внЖурналРегистрации.Форма.ОткрытиеСтрокиУправляемая",,ЭтаФорма);
			ФормаОткрытияСтроки.Значение = СсылкаОткрытия;
			ФормаОткрытияСтроки.Открыть();
		ИначеЕсли СсылкаОткрытия <> Неопределено Тогда
			внЖурналРегистрацииКлиент.ОткрытьЗначениеПользователю(СсылкаОткрытия);
		КонецЕсли;
		
	Исключение
	КонецПопытки;		
	
КонецПроцедуры
