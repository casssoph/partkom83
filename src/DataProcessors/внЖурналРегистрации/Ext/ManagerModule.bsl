Функция Печать(Структура) Экспорт
	
	Макет = Обработки.внЖурналРегистрации.ПолучитьМакет("Макет");	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	Область  						= Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Код 			= Формат(Структура.Код, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=");
	Область.Параметры.ДатаИзменения = Структура.ДатаИзменения;
	Область.Параметры.Пользователь 	= Структура.Пользователь;
	Область.Параметры.Компьютер 	= Структура.Компьютер;
	Область.Параметры.УзелРИБ 		= Структура.УзелРИБ;
	Область.Параметры.ПредставлениеОбъекта = ?(ПустаяСтрока(Структура.ПредставлениеОбъекта), "<Объект недоступен для открытия>", Структура.ПредставлениеОбъекта);
	Область.Параметры.СтатусСжатия 	= Структура.СтатусСжатия;
	Область.Параметры.СобытиеПредставление 	= Структура.СобытиеПредставление;
	Область.Параметры.ВыводимыеДанные = ?(Структура.ТолькоИзменения, "Показаны только изменения объекта", "Показан полный список значений реквизитов");
	Если ТипЗнч(Структура.ОбъектСсылка) <> Тип("Строка") Тогда
		Область.Параметры.ОбъектСсылка = Структура.ОбъектСсылка;
	КонецЕсли;
	ТабДокумент.Вывести(Область);
	
	Область  						= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(Область);
	
	// Вывод данных
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	ВывестиДеревоЗначений(Макет, ТабДокумент, Структура.ДеревоИзменений, 0);	
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();	
	
	Область  						= Макет.ПолучитьОбласть("Легенда");
	ТабДокумент.Вывести(Область);
	
	ТабДокумент.ОтображатьСетку	 	= Ложь;
	ТабДокумент.Защита 				= Истина;
	ТабДокумент.ТолькоПросмотр 		= Истина;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ВывестиДеревоЗначений(Знач Макет, ТабДокумент, СтрокаДереваЗначений, Уровень)
	
	Для Каждого Строки Из СтрокаДереваЗначений.Строки Цикл 

		ОбластьСтрока  = Макет.ПолучитьОбласть("Уровень" + Строка(Уровень));
		ОбластьСтрока.Параметры.Заполнить(Строки);
		Попытка
			ОбластьСтрока.Параметры.СтароеЗначение = Неопределено;
			Значение = ЗначениеИзСтрокиВнутр(Строки.СтароеЗначение);			
			ТипЗначения = ТипЗнч(Строки.СтароеЗначение);
			Если ТипЗначения <> Тип("Число") И ТипЗначения <> Тип("Строка") И ТипЗначения <> Тип("Булево") И ТипЗначения <> Тип("Дата") Тогда
				ОбластьСтрока.Параметры.СтароеЗначение = Значение;
			КонецЕсли;
		Исключение
		КонецПопытки;
		Попытка		
			ОбластьСтрока.Параметры.НовоеЗначение = Неопределено;
			Значение = ЗначениеИзСтрокиВнутр(Строки.НовоеЗначение);
			ТипЗначения = ТипЗнч(Значение);
			Если ТипЗначения <> Тип("Число") И ТипЗначения <> Тип("Строка") И ТипЗначения <> Тип("Булево") И ТипЗначения <> Тип("Дата") Тогда
				ОбластьСтрока.Параметры.НовоеЗначение = Значение;
			КонецЕсли;
		Исключение
		КонецПопытки;
				
		ОбластьОформления = ТабДокумент.Вывести(ОбластьСтрока, Уровень);
		    
		Если Строки.СтароеЗначение <> Строки.НовоеЗначение Тогда
			
			ЦветФона = WebЦвета.АнтикБелый;
			Если Строки.НовоеЗначение = "" Тогда
				ЦветФона = WebЦвета.БледноБирюзовый;
			ИначеЕсли Строки.СтароеЗначение = "" Тогда
				ЦветФона = WebЦвета.СветлоЗеленый;
			КонецЕсли;
			ТабДокумент.Область(ОбластьОформления.Верх, 2, ОбластьОформления.Низ, 4).ЦветФона = ЦветФона;
			
		КонецЕсли;
		
		ВывестиДеревоЗначений(Макет, ТабДокумент, Строки, Уровень + 1);

	КонецЦикла;
	
КонецФункции