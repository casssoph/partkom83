
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Элемент, ИмяФайла);	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ВыборФайла(Элемент, ИмяФайла)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Exel 2003 (*.xls)|*.xls| Exel (*.xlsx))|*.xlsx| ТабДокумент 1С (*.mxl)|*.mxl";
	ДиалогВыбораФайла.Расширение = "xml";
	
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите файл'");
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
			
	КонецЕсли;
	
	ПрочитатьТабличныйДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещения(Команда)
	Если ПроверитьЗаполнение() тогда  
		ВыполнитьЗагрузкуНаКлиенте();
	КонецЕсли;
КонецПроцедуры

 &НаКлиенте
 Процедура ВыполнитьЗагрузкуНаКлиенте();
	 
	 СтруктураПолей = новый Структура;
	 СтруктураПолей.Вставить("Артикул",КолонкаАвртикул);
	 СтруктураПолей.Вставить("Изготовитель",КолонкаИзготовитель);
	 СтруктураПолей.Вставить("Количество",КолонкаКоличество);
	 Если ДелитьНаНесколькоДокументов тогда 
	 СтруктураПолей.Вставить("Разделитель",КолонкаРазделитель);	
	 КонецЕсли;
 
 	 ВыполнитьЗагрузкуНаСервере(СтруктураПолей);
	
 КонецПроцедуры	
 
 &НаСервере 
 Процедура ВыполнитьЗагрузкуНаСервере(СтруктураПолей)
	 //Подрузумевается ,что один лист только грузится 
	 Если НЕ ТабличныйДокумент.Области.Количество() тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Неверный формат табличного документа ");
		Возврат
	КонецЕсли;	 
	 ОбластьЗагрузки  = ТабличныйДокумент.ПолучитьОбласть(ТабличныйДокумент.Области[0].Имя);
	 
	  КоличествоСтрок =  ОбластьЗагрузки.ПолучитьРазмерОбластиДанныхПоВертикали();
	  
	  ТаблицаРезультата = новый ТаблицаЗначений;
	  ТаблицаРезультата.Колонки.Добавить("НомерСтроки",новый ОписаниеТипов("Число"));
	  ТаблицаРезультата.Колонки.Добавить("Артикул",новый ОписаниеТипов("Строка",,,,,,новый КвалификаторыСтроки(100)));
	  ТаблицаРезультата.Колонки.Добавить("Изготовитель",новый ОписаниеТипов("Строка",,,,,,новый КвалификаторыСтроки(200)));
	  ТаблицаРезультата.Колонки.Добавить("Количество",новый ОписаниеТипов("Число"));
	  ТаблицаРезультата.Колонки.Добавить("Разделитель",новый ОписаниеТипов("Число"));
	  
	  Для ИндексТекСтроки = НомерПервойСтроки по КоличествоСтрок цикл 
		  НоваяЗаписьРезультат = ТаблицаРезультата.Добавить();
		 НоваяЗаписьРезультат.НомерСтроки = ИндексТекСтроки+ НомерПервойСтроки;
		  Для Каждого Колонка из СтруктураПолей цикл 
		  
		  ОбластьСтроки = ОбластьЗагрузки.ПолучитьОбласть("R"+Формат(ИндексТекСтроки,"ЧГ=0" )+"C"+Колонка.Значение); 
		  НоваяЗаписьРезультат[колонка.Ключ] = ПолучитьЗначениеЯчейки(ОбластьСтроки,ТипЗнч(НоваяЗаписьРезультат[колонка.Ключ]) = Тип("Строка"));
		  
		  КонецЦикла;;
		  
	  КонецЦикла;	 
	  
	  ОбработанаяТаблица = ПолучитьОбработануюТаблицу(ТаблицаРезультата);
	
	Если ОбработанаяТаблица.Количество() тогда  
		СоздатьДокументыНаСервере(ОбработанаяТаблица);
	иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет даных для формирования");
	КонецЕсли;
	
 КонецПроцедуры	
 
 &НаСервере
 Функция ПолучитьОбработануюТаблицу(ТаблицаРезультата)
   Запрос = новый Запрос("ВЫБРАТЬ
                         |	ТЧЗагрузки.Артикул,
                         |	ТЧЗагрузки.Изготовитель,
                         |	ТЧЗагрузки.Количество,
                         |	ТЧЗагрузки.НомерСтроки,
                         |	ТЧЗагрузки.Разделитель
                         |ПОМЕСТИТЬ вТЧЗагрузки
                         |ИЗ
                         |	&ТЧЗагрузки КАК ТЧЗагрузки
                         |;
                         |
                         |////////////////////////////////////////////////////////////////////////////////
                         |ВЫБРАТЬ
                         |	Номенклатура.Ссылка КАК Номенклатура,
                         |	ВЫБОР
                         |		КОГДА Номенклатура.Ссылка ЕСТЬ NULL
                         |			ТОГДА ЛОЖЬ
                         |		ИНАЧЕ ИСТИНА
                         |	КОНЕЦ КАК НоменклатураНайдена,
                         |	вТЧЗагрузки.Артикул,
                         |	вТЧЗагрузки.Изготовитель,
                         |	вТЧЗагрузки.Количество,
                         |	вТЧЗагрузки.НомерСтроки,
                         |	вТЧЗагрузки.Разделитель
                         |ПОМЕСТИТЬ ТЧНоменклатуры
                         |ИЗ
                         |	вТЧЗагрузки КАК вТЧЗагрузки
                         |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
                         |		ПО вТЧЗагрузки.Артикул = Номенклатура.Артикул
                         |			И вТЧЗагрузки.Изготовитель = Номенклатура.Изготовитель.Наименование
                         |;
                         |
                         |////////////////////////////////////////////////////////////////////////////////
                         |ВЫБРАТЬ
                         |	ТоварыНаСкладахОстатки.Номенклатура,
                         |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток - ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0)) КАК КоличествоОстатка
                         |ПОМЕСТИТЬ ТаблицаОстатка
                         |ИЗ
                         |	РегистрНакопления.ТоварыНаСкладах.Остатки(
                         |			,
                         |			Склад = &СкладОтправитель
                         |				И Номенклатура В
                         |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
                         |						ТЧНоменклатуры.Номенклатура КАК Номенклатура
                         |					ИЗ
                         |						ТЧНоменклатуры КАК ТЧНоменклатуры
                         |					ГДЕ
                         |						ТЧНоменклатуры.НоменклатураНайдена = ИСТИНА)
                         |				И Качество = ЗНАЧЕНИЕ(Справочник.Качество.Новый)) КАК ТоварыНаСкладахОстатки
                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
                         |				,
                         |				Склад = &СкладОтправитель
                         |					И Номенклатура В
                         |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
                         |							ТЧНоменклатуры.Номенклатура КАК Номенклатура
                         |						ИЗ
                         |							ТЧНоменклатуры КАК ТЧНоменклатуры
                         |						ГДЕ
                         |							ТЧНоменклатуры.НоменклатураНайдена = ИСТИНА)
                         |					И Качество = ЗНАЧЕНИЕ(Справочник.Качество.Новый)) КАК РезервыТоваровОстатки
                         |		ПО ТоварыНаСкладахОстатки.Номенклатура = РезервыТоваровОстатки.Номенклатура
                         |			И ТоварыНаСкладахОстатки.Склад = РезервыТоваровОстатки.Склад
                         |			И ТоварыНаСкладахОстатки.Качество = РезервыТоваровОстатки.Качество
                         |
                         |СГРУППИРОВАТЬ ПО
                         |	ТоварыНаСкладахОстатки.Номенклатура
                         |;
                         |
                         |////////////////////////////////////////////////////////////////////////////////
                         |ВЫБРАТЬ
                         |	ТЧНоменклатуры.Артикул,
                         |	ТЧНоменклатуры.Изготовитель,
                         |	ТЧНоменклатуры.НомерСтроки
                         |ИЗ
                         |	ТЧНоменклатуры КАК ТЧНоменклатуры
                         |ГДЕ
                         |	ТЧНоменклатуры.НоменклатураНайдена = ЛОЖЬ
                         |;
                         |
                         |////////////////////////////////////////////////////////////////////////////////
                         |ВЫБРАТЬ
                         |	ТЧНоменклатуры.Номенклатура,
                         |	ТЧНоменклатуры.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
                         |	ТЧНоменклатуры.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
                         |	ВЫБОР
                         |		КОГДА ТЧНоменклатуры.Количество <= ТаблицаОстатка.КоличествоОстатка
                         |			ТОГДА ТЧНоменклатуры.Количество
                         |		ИНАЧЕ ТаблицаОстатка.КоличествоОстатка
                         |	КОНЕЦ КАК Количество,
                         |	ЗНАЧЕНИЕ(Справочник.Качество.Новый) КАК Качество,
                         |	ТЧНоменклатуры.Разделитель,
                         |	ВЫБОР
                         |		КОГДА ТЧНоменклатуры.Количество <= ТаблицаОстатка.КоличествоОстатка
                         |			ТОГДА ТЧНоменклатуры.Количество
                         |		ИНАЧЕ ТаблицаОстатка.КоличествоОстатка
                         |	КОНЕЦ КАК КоличествоПлан
                         |ИЗ
                         |	ТЧНоменклатуры КАК ТЧНоменклатуры
                         |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатка КАК ТаблицаОстатка
                         |		ПО ТЧНоменклатуры.Номенклатура = ТаблицаОстатка.Номенклатура
                         |ГДЕ
                         |	ТЧНоменклатуры.НоменклатураНайдена = ИСТИНА
                         |	И ВЫБОР
                         |			КОГДА ТЧНоменклатуры.Количество <= ТаблицаОстатка.КоличествоОстатка
                         |				ТОГДА ТЧНоменклатуры.Количество
                         |			ИНАЧЕ ТаблицаОстатка.КоличествоОстатка
                         |		КОНЕЦ > 0" );
   запрос.УстановитьПараметр("ТЧЗагрузки",ТаблицаРезультата);
   запрос.УстановитьПараметр("СкладОтправитель", СкладОтправитель);
   

   Результат = запрос.ВыполнитьПакет();
  ВыборкаОшибок = Результат[3].Выбрать();
  пока ВыборкаОшибок.следующий()	цикл
	  ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Пропущена строка № "+ВыборкаОшибок.НомерСтроки+" в файле с артикулом "+ВыборкаОшибок.Артикул+". Указанный в ней товар не найден по артикулу и изготовителю") ;
  КонецЦикла; 
  Возврат Результат[4].Выгрузить();
  
	  
 
 КонецФункции // ПолучитьОбработануюТаблицу()
 

&НаСервере
Процедура СоздатьДокументыНаСервере(ТаблицаРезультата)
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Попытка 
	Если ДелитьНаНесколькоДокументов тогда 
		таблРазделителя = ТаблицаРезультата.Скопировать(,"Разделитель");
		таблРазделителя.Свернуть("Разделитель");
		Для каждого Строка из таблРазделителя цикл 
			СтрокиРезультата = ТаблицаРезультата.НайтиСтроки(Новый Структура("Разделитель",Строка.Разделитель));
			СоздатьДокументНаСервере(ТаблицаРезультата.Скопировать(СтрокиРезультата));		
		КонецЦикла;	
	иначе 
		СоздатьДокументНаСервере(ТаблицаРезультата);
	КонецЕсли;	
		
      ЗафиксироватьТранзакцию();
  Исключение
      ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
     ОтменитьТранзакцию();
     
 КонецПопытки;
	

КонецПроцедуры // СоздатьДокументыНаСервере()

&НаСервере
Процедура СоздатьДокументНаСервере(ТабличнаяЧасть)
	
	НовПеремещение = Документы.ПеремещениеТоваров.СоздатьДокумент();
	НовПеремещение.Дата = ТекущаяДата();
	НовПеремещение.ВидОперации = Перечисления.ВидыОперацийПеремещенияТоваров.СвободноеПеремещение ;  
	НовПеремещение.Комментарий = "Загружен из электронного файла " +ТекущаяДата(); 
	НовПеремещение.Организация = Константы.ОрганизацияПоУмолчаниюБезнал.Получить(); 
	НовПеремещение.СкладОтправитель = СкладОтправитель; 
	НовПеремещение.СкладПолучатель = СкладПолучатель; 
	НовПеремещение.ФилиалОтправитель = СкладОтправитель.Филиал ; 
	НовПеремещение.ФилиалПолучатель = СкладПолучатель.Филиал; 
	НовПеремещение.СтатусДокумента = Справочники.СтатусыДокументов.ПеремещениеТоваровНовый;
	НовПеремещение.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовПеремещение.Товары.Загрузить(ТабличнаяЧасть);
	
	НовПеремещение.Записать(РежимЗаписиДокумента.Проведение);
	
	СозданыеДокументы.Добавить(НовПеремещение.Ссылка);


КонецПроцедуры // СоздатьДокументНаСервере()

 &НаСервереБезКонтекста
 Функция ПолучитьЗначениеЯчейки(ОбластьСтроки,ЭтоСтрока = Истина)
	 ТекущаяОбласть = ОбластьСтроки.ТекущаяОбласть;
	 Попытка
		 ЗначениеЯчейки = ТекущаяОбласть.Значение;        
		Если ЭтоСтрока тогда 
		ЗначениеЯчейки = СокрЛП(Формат(ЗначениеЯчейки, "ЧГ=0"));
		КонецЕсли;
	 Исключение
		 Если ЭтоСтрока  тогда 
			 ЗначениеЯчейки = СокрЛП(ТекущаяОбласть.Текст);    
			 Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
				 ЗначениеЯчейки = СокрЛП(ЗначениеЯчейки);
			 Иначе
				 ЗначениеЯчейки = Неопределено;
			 КонецЕсли;
		 иначе 
			 Попытка 
				 ЗначениеЯчейки =  XMLЗначение(Тип("Число"),ТекущаяОбласть.Текст) ;
			 Исключение
				 ЗначениеЯчейки = Неопределено;
			 КонецПопытки;
		 КонецЕсли;
	 КонецПопытки;
	 
	 Возврат ЗначениеЯчейки
	 
 
 КонецФункции // ПолучитьЗначениеЯчейки()

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	ПрочитатьТабличныйДокументНаКлиенте();
КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьТабличныйДокументНаКлиенте()
	 	ТабличныйДокумент.Очистить();
		СозданыеДокументы.Очистить();

	Файл =   новый Файл(ИмяФайла);
	Если Файл.Существует() тогда 
	ТабличныйДокумент.Прочитать(ИмяФайла,СпособЧтенияЗначенийТабличногоДокумента.Значение);
иначе 
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данный файл не обноружен , введите правильный путь к файлу")
	КонецЕсли;

	
//	ДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);

//	АдресХранилища = ПоместитьВоВременноеХранилище(ДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
//	
//	ПрочитатьТабличныйДокументНаСервере(АдресХранилища);	
	
 КонецПроцедуры	


&НаКлиенте
 Процедура ДелитьНаНесколькоДокументовПриИзменении(Элемент)
	 Элементы.КолонкаРазделитель.Доступность = ДелитьНаНесколькоДокументов;
 КонецПроцедуры


&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 НомерПервойСтроки =1;
 КонецПроцедуры

