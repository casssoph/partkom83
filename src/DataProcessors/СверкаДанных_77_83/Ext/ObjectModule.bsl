Перем ПравилаИгры;
Перем СоединениеSQL;
Перем КомандаSQL;
Перем ВыборкаSQL;
Перем СоединениеSQL2;
Перем КомандаSQL2;
Перем ВыборкаSQL2;
Перем СчетчикТомов;
// настройка

Функция УстановитьПараметрыПоУмолчанию(это_фон_на_сервере = Ложь) экспорт
	
	СчетчикТомов = 0;
	
	ПравилаИгры = Новый Структура();
	
	ПравилаИгры.Вставить("списокСценариев",СформироватьСписокВозможныхСценариев());
	
	ПравилаИгры.Вставить("это_фон", это_фон_на_сервере);
	//ПравилаИгры.Вставить("АвтоПеребор",Истина);
	ПравилаИгры.Вставить("РазрешитьВыводНаЭкран", ?(это_фон_на_сервере,Ложь,Истина));
	ПравилаИгры.Вставить("РазрешитьЗаписьВЛогФайл", Истина);
	
	ПравилаИгры.Вставить("Аларм", это_фон_на_сервере);
	ПравилаИгры.Вставить("Аларм_Источник", Справочники.СобытияДляОтправкиЭлектронныхПисем.СравнениеДокументовТ7Т8);
	ПравилаИгры.Вставить("Аларм_Заголовок", ?(ЗначениеЗаполнено(Вход_НазваниеСценария),Вход_НазваниеСценария,"СравнениеТ7Т8"));
	ПравилаИгры.Вставить("Аларм_Содержимое", "");
	
	////////лКатЛог = "\\Srv1c-nn\1C_exch\ASTOR_1C\push\Log\ОстаткиДля83\";
	//лКатЛог = "\\nng9-v-1c-07\Users\service1c\Documents\ДляЗагрузкиОстатков\";
	#Если Сервер тогда
	лКатЛог = "C:\Users\service1c\Documents\ДляЗагрузкиОстатков\";
	#Иначе
	лКатЛог = "\\nng9-v-1c-07\Users\service1c\Documents\ДляЗагрузкиОстатков\";
	#КонецЕсли
	ПравилаИгры.Вставить("КаталогЛогФайлов",  лКатЛог);
	ПравилаИгры.Вставить("ИмяЛогФайлаПолное", лКатЛог + "Сравнение77&83_метка.txt");
	ПравилаИгры.Вставить("ИмяЛогФайлаПоИсторииПартий", лКатЛог + "desired_history_wh_parts.txt");
	ПравилаИгры.Вставить("ИмяЛогФайлаПоРаспределениюПартий", лКатЛог + "desired_wh_balance_метка.txt");
	ПравилаИгры.Вставить("ИмяФайлаДляЗагрузкиОстатков1с77в1с83", лКатЛог + "НачОст1с77НДСнаДтВрмОст.txt");
	ПравилаИгры.Вставить("ИмяФайлаДляЗагрузкиОстатков1с77в1с83ПоРезервам", лКатЛог + "НачОстРезервов1с77наДтВрмОст.txt");
	
	лДтВрм = ТекущаяДата();
	Вход_НачПериода = ?(ЗначениеЗаполнено(Вход_НачПериода), Вход_НачПериода, ?(Найти(Вход_НазваниеСценария,"Остатки") > 0, НачалоМесяца(ДобавитьМесяц(лДтВрм,-1)), НачалоДня(лДтВрм - 1*24*60*60) ) );	
	Вход_КонПериода = ?(ЗначениеЗаполнено(Вход_КонПериода), Вход_КонПериода, ?(Найти(Вход_НазваниеСценария,"Остатки") > 0, НачалоМесяца(лДтВрм), НачалоДня(лДтВрм) )  );	
	Вход_ДтПоУмолчанию = ?(ЗначениеЗаполнено(Вход_ДтПоУмолчанию), Вход_ДтПоУмолчанию, ?(Найти(Вход_НазваниеСценария,"Остатки") > 0, НачалоМесяца(лДтВрм), НачалоДня(лДтВрм) )   );
	ПравилаИгры.Вставить("ТекущаяДата", лДтВрм);
	ПравилаИгры.Вставить("НачПериода", Вход_НачПериода);      
	ПравилаИгры.Вставить("КонПериода", Вход_КонПериода);      
	ПравилаИгры.Вставить("ДтПоУмолчанию", Вход_ДтПоУмолчанию);                                     
	
	ПравилаИгры.Вставить("Метка",    "ндс_" +
								 СокрЛП( Формат( ДеньГода(лДтВрм) , "ЧЦ=3; ЧДЦ=; ЧВН=")) + "_" +
								 
								 РазвернутьДатуВстроку(лДтВрм) + "_" + 
								 СокрЛП(Формат(Час(лДтВрм),"ЧЦ=2; ЧДЦ=; ЧВН=; ЧГ=0")) + 
								 СокрЛП(Формат(Минута(лДтВрм),"ЧЦ=2; ЧДЦ=; ЧВН=; ЧГ=0")) + 
								 СокрЛП(Формат(Секунда(лДтВрм),"ЧЦ=2; ЧДЦ=; ЧВН=; ЧГ=0")) + "_" + 
								 
								 СокрЛП(УбратьТОчкиИПробелы(СтрокаСоединенияИнформационнойБазы())) + "_" +
								 СокрЛП(УбратьТОчкиИПробелы(Строка(ПараметрыСеанса.ТекущийПользователь.Код))) + "_" +
								 СокрЛП(Вход_НазваниеСценария)
								 
	);
	
	ПравилаИгры.Вставить("ВыбиратьТолькоЗаявки",ИСТИНА);
	ПравилаИгры.Вставить("Чмакс", 100000000);
	ПравилаИгры.Вставить("Ч",?(Вход_Тест, 100, 100000000));
	ПравилаИгры.Вставить("сколько_дней_в_месяце_смотреть_максимум",?(Вход_Тест, 3, 31));
	
	ПравилаИгры.Вставить("стридз","");
	ПравилаИгры.Вставить("стридНО","");
	ПравилаИгры.Вставить("спсидпартий",Новый Соответствие);
	
	//ПравилаИгры.Вставить("ТабличноеПоле1",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле2",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле3",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле4",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле5",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле6",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле7",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле8",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле9",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле10",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле11",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле12",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле13",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле14",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле15",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле16",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле17",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле18",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле19",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле20",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле21",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле22",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле23",Новый ТаблицаЗначений);
	//
	//ПравилаИгры.Вставить("ТабличноеПоле25",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле26",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле27",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле28",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле29",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле30",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле31",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле32",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле33",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле34",Новый ТаблицаЗначений);
	//ПравилаИгры.Вставить("ТабличноеПоле35",Новый ТаблицаЗначений);
	
	Для uio = 1 по 46 цикл
		Если uio = 24 тогда
			ПродолжитЬ;			
		КонецЕсли;
		ПравилаИгры.Вставить("ТабличноеПоле"+СокрЛП(uio),Новый ТаблицаЗначений);
	КонецЦикла;
	
	//ВыбратьСклад();
	
	Возврат ПравилаИгры;
КонецФункции
Функция СформироватьСписокВозможныхСценариев()
	
	списокСценариев = Новый ТаблицаЗначений;
	списокСценариев.Колонки.Добавить("Комент");
	списокСценариев.Колонки.Добавить("ИмяПроцедуры");
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "1. Сравнение Заявок Покупателей за дату";
	НовыйСценарий.ИмяПроцедуры = "ВыполнитьПРоверкуВОдинКлик()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "2. Сравнение Заявок Покупателей за период";
	НовыйСценарий.ИмяПроцедуры = "ЗапуститьАвтомат_СравнениеЗаявок()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "3. Расчет остатков 1с77 на дату";
	НовыйСценарий.ИмяПроцедуры = "РазнестиТоварныеОстаткиПоПартиям()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "4. Сравнение остатков 1с77-1с83 на дату";
	НовыйСценарий.ИмяПроцедуры = "АнализОстатковНаДату()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "5. Сравнение Заказов Покупателей за период";
	НовыйСценарий.ИмяПроцедуры = "АнализЗаказовПоставщиков1()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "6. Анализ корректности проводок по Остаткам и Партиям";
	НовыйСценарий.ИмяПроцедуры = "СравнениеТоварныхРегистров8()";
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "3.1 Расчет остатков 1с77 на дату без перебора партий";
	НовыйСценарий.ИмяПроцедуры = "ПолучитьОстаток1с7БезУчетаПартий()";
	
	
	
	
	НовыйСценарий = списокСценариев.Добавить();
	НовыйСценарий.Комент = "7. Выгрузка остатков по Резервам 1с7 в файл";
	НовыйСценарий.ИмяПроцедуры = "ВыгрузкаРезервов1с7вфайл()";
	
	
	
	Возврат списокСценариев;
КонецФункции

// управлялка

// сравниваем заказы покупателей
Функция АнализЗаявокПокупателей1() экспорт // качество обмена
	
	ТабличноеПоле1 = ПравилаИгры.ТабличноеПоле1;
	ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле2;
	ТабличноеПоле3 = ПравилаИгры.ТабличноеПоле3;
	ТабличноеПоле4 = ПравилаИгры.ТабличноеПоле4;
	ТабличноеПоле5 = ПравилаИгры.ТабличноеПоле5;
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле6;
	ТабличноеПоле10 = ПравилаИгры.ТабличноеПоле10;
	
	ТабличноеПоле1.Очистить();
	ТабличноеПоле2.Очистить();
	ТабличноеПоле3.Очистить();
	ТабличноеПоле4.Очистить();
	ТабличноеПоле5.Очистить();
	ТабличноеПоле6.Очистить();
	ТабличноеПоле10.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле1", ТабличноеПоле1);
	ПравилаИгры.Вставить("ТабличноеПоле2", ТабличноеПоле2);
	ПравилаИгры.Вставить("ТабличноеПоле3", ТабличноеПоле3);
	ПравилаИгры.Вставить("ТабличноеПоле4", ТабличноеПоле4);
	ПравилаИгры.Вставить("ТабличноеПоле5", ТабличноеПоле5);
	ПравилаИгры.Вставить("ТабличноеПоле6", ТабличноеПоле6);
	ПравилаИгры.Вставить("ТабличноеПоле10", ТабличноеПоле10);
	
	Опросить7();
	Если ПравилаИгры.ТабличноеПоле2.Количество() < 1 тогда
		ДобавитьВЛог("аналогов в 8 не найдено");
		//ПоказатьВсеТЗ();
		Возврат ПравилаИгры;
	КонецЕсли;
	
	Опросить8();
	Если ПравилаИгры.ТабличноеПоле3.Количество() < 1 И ПравилаИгры.ТабличноеПоле4.Количество() < 1 И ПравилаИгры.ТабличноеПоле5.Количество() < 1 тогда
		//ПоказатьВсеТЗ();
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ВывестиРезультатСранения();
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат ПравилаИгры;
	//	КонецЕсли;
	//КонецЕсли;

	ВыбратьДокиДляПроверки();
	Если ПравилаИгры.ТабличноеПоле6.Количество() < 1 тогда
		ДобавитьВЛог("заявок не выбрано");
		//ПоказатьВсеТЗ();
		Возврат ПравилаИгры;
	КонецЕсли;
	
	стридз = ВернутьСтрокуИДЗаявок77();
	Если НЕ ЗначениеЗаполнено(стридз) тогда
		ДобавитьВЛог("id заявок не найдено");
		//ПоказатьВсеТЗ();
		Возврат ПравилаИгры;
	КонецЕсли;
	
	//ПоказатьВсеТЗ();
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция АнализЗаявокПокупателей2() экспорт // движения по резервам
	
	стридз = ПравилаИгры.стридз;
	Если НЕ ЗначениеЗаполнено(стридз) тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ТабличноеПоле7 = ПравилаИгры.ТабличноеПоле7;
	ТабличноеПоле8 = ПравилаИгры.ТабличноеПоле8;
	ТабличноеПоле9 = ПравилаИгры.ТабличноеПоле9;
	ТабличноеПоле15 = ПравилаИгры.ТабличноеПоле15;
	
	ТабличноеПоле7.Очистить();
	ТабличноеПоле8.Очистить();
	ТабличноеПоле9.Очистить();
	ТабличноеПоле15.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле7", ТабличноеПоле7);
	ПравилаИгры.Вставить("ТабличноеПоле8", ТабличноеПоле8);
	ПравилаИгры.Вставить("ТабличноеПоле9", ТабличноеПоле9);
	ПравилаИгры.Вставить("ТабличноеПоле15", ТабличноеПоле15);
	
	тзрезервы7 = Опросить7_ДвиженияПоРезервам(стридз);
	Если тзрезервы7.Количество() > 0 тогда
		ПравилаИгры.Вставить("ТабличноеПоле7",тзрезервы7);
		Опросить8_ДвиженияПоРезервам();
		ВывестиРезультатСраненияПоРезервам();
	Иначе
		ДобавитьВЛог("выборка по запросу к 1с77 пустая");
	КонецЕсли;
	
	//ПоказатьВсеТЗ();
	ОпубликоватьЛог();
	Возврат ПравилаИгры;	
КонецФункции


Процедура ВыгрузкаРезервов1с7вфайл() экспорт
	СверкаОстатковПоРезервам(Ложь);
КонецПроцедуры

Функция СверкаОстатковПоРезервам(сверка = Истина) экспорт // остатки по резервам
	
	ТабличноеПоле11 = ПравилаИгры.ТабличноеПоле11;
	ТабличноеПоле12 = ПравилаИгры.ТабличноеПоле12;
	ТабличноеПоле13 = ПравилаИгры.ТабличноеПоле13;
	ТабличноеПоле16 = ПравилаИгры.ТабличноеПоле16;
	
	стридз = ПравилаИгры.стридз;
	
	ТабличноеПоле11.Очистить();
	ТабличноеПоле12.Очистить();
	ТабличноеПоле13.Очистить();
	ТабличноеПоле16.Очистить();
	
	//ДтВрмРасчета = КонецДня(ДтПоУмолчанию); 
	//Если ЗначениеЗаполнено(КонПериода) тогда
	//	ДтВрмРасчета = КонПериода - 1;
	//КонецЕсли;
	
	////////Темп_Дата = ПравилаИгры.КонПериода-1;
	////////
	//////////Если НЕ ПравилаИгры.АвтоПеребор тогда
	//////////	Подсказка = "Введите дату и время расчета остатка по Резервам";
	//////////	ЧастьДаты = ЧастиДаты.ДатаВремя;
	//////////	Если НЕ ВвестиДату(Темп_Дата, Подсказка, ЧастьДаты) Тогда
	//////////	    Возврат ПравилаИгры;
	//////////	КонецЕсли;
	//////////КонецЕсли;
	////////
	////////PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	////////PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	////////PERIODK = РазвернутьДатуВстроку(Темп_Дата+1);
	////////
	////////ДобавитьВЛог(".");
	////////ДобавитьВЛог(".");
	////////ДобавитьВЛог(".");
	////////ДобавитьВЛог("ДтВрмРасчета остатка по Резервам = " + СокрЛП(Темп_Дата));
	////////ДобавитьВЛог("PERIODR условие к таблице остатков = " + СокрЛП(PERIODR));
	////////ДобавитьВЛог("PERIODN условие к таблице оборотов >= " + СокрЛП(PERIODN));
	////////ДобавитьВЛог("PERIODK условие к таблице оборотов <  " + СокрЛП(PERIODK));
	
	
	
	Темп_Дата = ПравилаИгры.ДтПоУмолчанию;
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата);
	
	ДобавитьДвиженияЗаПериод = Ложь;
	ДобавитьВЛог("PERIODR =  " + PERIODR);
	Если НЕ Темп_Дата = НачалоМесяца(Темп_Дата) тогда
		ДобавитьДвиженияЗаПериод = Истина;
		ДобавитьВЛог("PERIODN =  " + PERIODN);
		ДобавитьВЛог("PERIODK =  " + PERIODK);
	КонецЕсли;
	
	
	
	
	флагстридз = Ложь;
	Если ЗначениеЗаполнено(стридз) тогда
		
	   //Если НЕ ПравилаИгры.АвтоПеребор тогда
	   // 	Режим = РежимДиалогаВопрос.ДаНет;
	   // 	Ответ = Вопрос(НСтр("ru = 'Наложить условие по ранее выбранным корневым Заявкам?';"
	   // 	     + " en = 'Do you want to continue?'"), Режим, 0);
	   // 	Если Ответ = КодВозвратаДиалога.Да Тогда
	   // 		флагстридз = Истина;    
	   // 		ДобавитьВЛог("Наложить условие по ID заявок = " + СокрЛП(флагстридз));
	   // 		ДобавитьВЛог("ЗаявкаПокупателя  SP4762 В (" + СокрЛП(стридз) + ")");
	   // 	КонецЕсли;
	   //  КонецЕсли;
	КонецЕсли;
	
	//флагстрскл = Ложь;
	//выб_скл_Ид = "";
	//выб_скл_Нм = "";
	//выб_скл_Код = "";
	//скл7 = Опросить7_Склады();
	//Если скл7.Количество() = 0 тогда 
	//	Возврат ПравилаИгры;
	//КонецЕсли;
	//Адрес = Неопределено;
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Наложить условие по складу? Либо будет отбор по умолчанию';"
	//	+ " en = 'Do you want to continue?'"), Режим, 0);
	//	 Если Ответ = КодВозвратаДиалога.Да Тогда
	//		 Адрес = скл7.ВыбратьСтроку("укажите Склад");
	//	 КонецЕсли;
	//КонецЕсли;
	//Если Адрес = Неопределено тогда
	//	//Адрес = скл7.Найти("000000001", "p2"); //ЦЕНТРАЛЬНЫЙ СКЛАД
	//	Адрес = скл7.Найти("000000050", "p2");   //Склад в Кирове
	//КонецЕсли;
	//Если Адрес = Неопределено Тогда
	//	Адрес = скл7[0];
	//КонецЕсли;
	//Если Адрес = Неопределено тогда
	//	Возврат ПравилаИгры;
	//КонецЕсли;
	//
	//выб_скл_Ид = "'"+ Адрес.p0 + "'";
	//выб_скл_Нм = СокрЛП(Адрес.p1);
	//выб_скл_Код = СокрЛП(Адрес.p2);
	////выб_скл_Ид = "'    1H   '";
	
	//выб_скл_Ид = ПравилаИгры.выб_скл_Ид;
	//выб_скл_Нм = ПравилаИгры.выб_скл_Нм;
	//выб_скл_Код = ПравилаИгры.выб_скл_Код;
	
	флагстрскл = Ложь;    
	//ДобавитьВЛог("Наложить условие по ID склада = [" + СокрЛП(выб_скл_Ид) + "] " + выб_скл_Код + " " + выб_скл_Нм);
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат ПравилаИгры;
	//	КонецЕсли;
	//КонецЕсли;
 
	//тзз77 = Опросить7_ОстаткиПоРезервам(?(флагстридз,стридз,""),?(флагстрскл,выб_скл_Ид,""),?(флагстрскл,выб_скл_Код,""),PERIODR,PERIODN,PERIODK);
	тзз77 = Опросить7_ОстаткиПоРезервам("","","",PERIODR,PERIODN,PERIODK,ДобавитьДвиженияЗаПериод, ?(сверка,Ложь,Истина) );
	
	Если  НЕ Сверка тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	Если тзз77.Количество() = 0 тогда
		ДобавитьВЛог("выборка по запросу к 1с77 пустая");
		Возврат ПравилаИгры;
	КонецЕсли;
	
	РезультатОпроса = Опросить8_ОстаткиПоРезервам(тзз77,Темп_Дата);
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Если РезультатОпроса_Количество = 0 тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	КОСЯКИ_Заявки = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить();
	КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
	джойн = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
	
	ТабличноеПоле11 = джойн.Скопировать();
	ТабличноеПоле12 = КОСЯКИ_Заявки.Скопировать();
	ТабличноеПоле13 = КОСЯКИ.Скопировать(,"Заявка,Склад,Номенклатура,p9,КоличествоОстаток,сч_КоличествоОстаток");

	ТабличноеПоле16 = джойн.Скопировать();
	ТабличноеПоле16.Свернуть("Склад","p9,КоличествоОстаток,сч_КоличествоОстаток,Сч");
	ТабличноеПоле16.Сортировать("сч_КоличествоОстаток Убыв");
	
	ПравилаИгры.Вставить("ТабличноеПоле11",ТабличноеПоле11);
	ПравилаИгры.Вставить("ТабличноеПоле12",ТабличноеПоле12);
	ПравилаИгры.Вставить("ТабличноеПоле13",ТабличноеПоле13);
	ПравилаИгры.Вставить("ТабличноеПоле16",ТабличноеПоле16);

	ВывестиРезультатСраненияПоРезервамОстатки();
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция АнализЗаявокПокупателей3() экспорт // завки в работе
	
	ДтПоУмолчанию = ПравилаИгры.ДтПоУмолчанию;
	стридз = ПравилаИгры.стридз;
	КонПериода = ПравилаИгры.КонПериода;
	стридз = ПравилаИгры.стридз;
	
	Если НЕ ЗначениеЗаполнено(стридз) тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ДтВрмРасчета = КонецДня(ДтПоУмолчанию); 
	Если ЗначениеЗаполнено(КонПериода) тогда
		ДтВрмРасчета = КонПериода - 1;
	КонецЕсли;
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Подсказка = "Введите дату и время расчета остатка по Резервам";
	//	ЧастьДаты = ЧастиДаты.ДатаВремя;
	//	Если НЕ ВвестиДату(ДтВрмРасчета, Подсказка, ЧастьДаты) Тогда
	//	    Возврат ПравилаИгры;
	//	КонецЕсли;
	//КонецЕсли;
	
	Темп_Дата = ДтВрмРасчета;      
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата+1);
	
	ДобавитьВЛог("-----");
	ДобавитьВЛог("-----");
	ДобавитьВЛог("ДтВрмРасчета остатка по Заявкам = " + СокрЛП(ДтВрмРасчета));
	ДобавитьВЛог("PERIODR условие к таблице предрассчитанных остатков = " + СокрЛП(PERIODR));
	ДобавитьВЛог("PERIODN условие к таблице оборотов >= " + СокрЛП(PERIODN));
	ДобавитьВЛог("PERIODK условие к таблице оборотов <  " + СокрЛП(PERIODK));
	
	флагстридз = Ложь;
	стридз = ВернутьСтрокуИДЗаявок77();
	Если ЗначениеЗаполнено(стридз) тогда
		//Если НЕ ПравилаИгры.АвтоПеребор тогда
		//	Режим = РежимДиалогаВопрос.ДаНет;
		//	Ответ = Вопрос(НСтр("ru = 'Наложить условие по ранее выбранным заявкам?';"
		//	     + " en = 'Do you want to continue?'"), Режим, 0);
		//	Если Ответ = КодВозвратаДиалога.Да Тогда
		//		флагстридз = Истина;    
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
	
	ДобавитьВЛог("Наложить условие по ID заявок = " + СокрЛП(флагстридз));
	ДобавитьВЛог("SP4762 В (" + СокрЛП(стридз) + ")");
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат ПравилаИгры;
	//	КонецЕсли;
	//КонецЕсли;
 
	тззаявки7 = Опросить7_ОстаткиПоЗаявкам(?(флагстридз,стридз,""),PERIODR,PERIODN,PERIODK);
	ТабличноеПоле14 = тззаявки7.Скопировать();
	
	Если тззаявки7.Количество() > 0 тогда
		//ТабличноеПоле7 = тзрезервы7.Скопировать();
		//Опросить8_ДвиженияПоРезервам();
		//ВывестиРезультатСраненияПоРезервам();
	КонецЕсли;
	
	//ПоказатьВсеТЗ();
	Возврат ПравилаИгры;
КонецФункции
Функция АнализЗаявокПокупателей5() экспорт // тек.состояния
	
	ТабличноеПоле17 = ПравилаИгры.ТабличноеПоле17;
	ТабличноеПоле18 = ПравилаИгры.ТабличноеПоле18;
	ТабличноеПоле19 = ПравилаИгры.ТабличноеПоле19;
	
	ТабличноеПоле17.Очистить();
	ТабличноеПоле18.Очистить();
	ТабличноеПоле19.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле17", ТабличноеПоле17);
	ПравилаИгры.Вставить("ТабличноеПоле18", ТабличноеПоле18);
	ПравилаИгры.Вставить("ТабличноеПоле19", ТабличноеПоле19);
	
	Если НЕ Подключение_к_SQL_серверу2() тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	тз77 = Опросить7_ТекСостояния();
	ЗакрытьСеансПодключенияКSQL2();
	Если тз77.Количество() = 0 тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ПравилаИгры.Вставить("ТабличноеПоле17", тз77);
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция ВыполнитьПРоверкуВОдинКлик() экспорт
	АнализЗаявокПокупателей1();
	АнализЗаявокПокупателей2();
	СверкаОстатковПоРезервам();
	//////АнализЗаявокПокупателей3();
КонецФункции
Функция ЗапуститьАвтомат_СравнениеЗаявок() экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаПокупателя.Ссылка,
	|	МЕСЯЦ(ЗаявкаПокупателя.Дата) КАК М,
	|	ГОД(ЗаявкаПокупателя.Дата) КАК Г,
	|	1 КАК Сч
	|ПОМЕСТИТЬ Заявки
	|ИЗ
	|	Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
	|ГДЕ
	|	ЗаявкаПокупателя.Дата > &ДтВрм
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.М КАК М,
	|	Заявки.Г КАК Г,
	|	СУММА(Заявки.Сч) КАК Сч
	|ИЗ
	|	Заявки КАК Заявки
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявки.М,
	|	Заявки.Г
	|
	|УПОРЯДОЧИТЬ ПО
	|	Г УБЫВ,
	|	М УБЫВ";

	
	Запрос.УстановитьПараметр("ДтВрм", НачалоГода(ТекущаяДата()) );   //НачалоМесяца //Дата(2017,1,1,0,0,0)
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() < 1 тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	Результат.ВыбратьСтроку();
	
	Ч = ПравилаИгры.Ч;
	////АвтоПеребор = Истина;
	////ПравилаИгры.Вставить("АвтоПеребор", АвтоПеребор);
	//
	////////Если НЕ ВвестиЧисло(
	////////			        Ч,
	////////			        "Желаемое кол строк",
	////////			        6, // длина числа, включая дробную часть без разделителя
	////////			        0  // длина дробной части
	////////				    )
	////////					    Тогда
	////////    Возврат;
	////////КонецЕсли;
	//Если Ч < 1 тогда
	//	Возврат ПравилаИгры;
	//КонецЕсли;
	//Если Ч > ПравилаИгры.Чмакс тогда
	//	Ч = ПравилаИгры.Чмакс;
	//КонецЕсли;
	
	Для каждого стр из Результат цикл
		
		
		ДобавитьВЛог(".");
		ДобавитьВЛог(".");
		ДобавитьВЛог(".");
		ДобавитьВЛог("за период: [" + СокрлП(стр.М) + "."+ СокрлП(Формат(стр.Г,"ЧГ=")) + "] => " + СокрЛП(стр.Сч) + "шт. заявок");
		ДобавитьВЛог("----------------------------------------------------------------------------------------");
		ДобавитьВЛог("----------------------------------------------------------------------------------------");
		ДобавитьВЛог("----------------------------------------------------------------------------------------");
		
		
		НачМ = НачалоМесяца(Дата(стр.Г,стр.М,1));
		НачМ = ?(НачМ > НачалоДня(ТекущаяДата()),  НачалоДня(ТекущаяДата()), НачМ);
		КонМ = КонецМесяца(Дата(стр.Г,стр.М,1));
		КонМ = ?(КонМ > НачалоДня(ТекущаяДата()),  НачалоДня(ТекущаяДата()), КонМ);
		
		тздней = Новый ТаблицаЗначений;
		тздней.Колонки.Добавить("Дт");
		
		ТекДата = НачалоМесяца(НачМ);
		Пока ТекДата <= КонМ Цикл                                                                             
				
			стрд = тздней.Добавить();
			стрд.Дт = ТекДата;
				
			ТекДата = ТекДата + 24 * 60 * 60;
		КонецЦикла;	
		тздней.Сортировать("Дт Убыв");
		
		счсччсчс = 0;
		
		Для каждого стрдн из тздней цикл
			
			счсччсчс = счсччсчс + 1;
			Если счсччсчс > ПравилаИгры.сколько_дней_в_месяце_смотреть_максимум тогда
				Прервать;
			КонецЕсли;
			
			ДобавитьВЛог(".");
			ДобавитьВЛог(".");
			ДобавитьВЛог(".");
			ДобавитьВЛог(Формат(стрдн.Дт, "ДЛФ=DD"));
			ДобавитьВЛог("------------------------");
			ДтПоУмолчанию = стрдн.Дт;
			
			ВыполнитьПРоверкуВОдинКлик();
		КонецЦикла;
		
		
	КонецЦикла;
	
КонецФункции

Процедура ВывестиРезультатСранения()
	
	ТабличноеПоле1 = ПравилаИгры.ТабличноеПоле1;
	ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле2;
	ТабличноеПоле3 = ПравилаИгры.ТабличноеПоле3;
	ТабличноеПоле4 = ПравилаИгры.ТабличноеПоле4;
	ТабличноеПоле5 = ПравилаИгры.ТабличноеПоле5;
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле6;
	ТабличноеПоле7 = ПравилаИгры.ТабличноеПоле7;
	ТабличноеПоле8 = ПравилаИгры.ТабличноеПоле8;
	ТабличноеПоле9 = ПравилаИгры.ТабличноеПоле9;
	ТабличноеПоле10 = ПравилаИгры.ТабличноеПоле10;
	ТабличноеПоле11 = ПравилаИгры.ТабличноеПоле11;
	ТабличноеПоле12 = ПравилаИгры.ТабличноеПоле12;
	ТабличноеПоле13 = ПравилаИгры.ТабличноеПоле13;
	ТабличноеПоле14 = ПравилаИгры.ТабличноеПоле14;
	ТабличноеПоле15 = ПравилаИгры.ТабличноеПоле15;
	ТабличноеПоле16 = ПравилаИгры.ТабличноеПоле16;
	ТабличноеПоле17 = ПравилаИгры.ТабличноеПоле17;
	ТабличноеПоле18 = ПравилаИгры.ТабличноеПоле18;
	ТабличноеПоле19 = ПравилаИгры.ТабличноеПоле19;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 3 результат сравнения данных 7 и 8 ");
	ДобавитьВЛог("-----");
	ДобавитьВЛог("Запрошено строк из 1С7 : " + СокрлП(ТабличноеПоле1.Количество()) );
	ДобавитьВЛог("итого заявок : " + СокрлП(ТабличноеПоле2.Количество()) );
	ДобавитьВЛог("итого количество : " + СокрлП(ТабличноеПоле1.Итог("p41")) );
	ДобавитьВЛог("итого сумма : " + СокрлП(ТабличноеПоле1.Итог("p46")) );
	//ДобавитьВЛог("-----");
	//ДобавитьВЛог("Совпаших строк : " + СокрлП(ТабличноеПоле4.Количество()) );
	//ДобавитьВЛог("итого заявок : " + СокрлП(ТабличноеПоле3.Количество()) );
	//ДобавитьВЛог("итого количество : " + СокрлП(ТабличноеПоле4.Итог("p41")) );
	//ДобавитьВЛог("итого сумма : " + СокрлП(ТабличноеПоле4.Итог("p46")) );
	ДобавитьВЛог("-----");
	ДобавитьВЛог(?(ТабличноеПоле5.Количество()>0,"err: ","") + " строк с ошибками заполнения : " + СокрлП(ТабличноеПоле5.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Количество()*100/ТабличноеПоле1.Количество() )) + "%");
	ДобавитьВЛог("итого заявок : " + СокрлП(ТабличноеПоле2.Количество() - ТабличноеПоле3.Количество()) + " = " + СокрЛП(ТабличноеПоле10.Количество()));
	ДобавитьВЛог("итого количество : " + СокрлП(ТабличноеПоле5.Итог("p41")) );
	ДобавитьВЛог("итого сумма : " + СокрлП(ТабличноеПоле5.Итог("p46")) );
	ДобавитьВЛог("из них : " );
	
	табСч = Новый ТаблицаЗначений;
	табСч.Колонки.Добавить("СчИт",Новый ОписаниеТипов("Число"));
	табСч.Колонки.Добавить("СчКомент", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
	
	//Если ТабличноеПоле5.Итог("Сч_СуммаДокумента") > 0 тогда
	//	стр = табСч.Добавить();
	//	стр.СчИт = ТабличноеПоле5.Итог("Сч_СуммаДокумента");
	//	стр.СчКомент = СокрЛП("итого Сч_СуммаДокумента : " + СокрлП(ТабличноеПоле5.Итог("Сч_СуммаДокумента"))  + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_СуммаДокумента")*100/ТабличноеПоле5.Количество() )) + "%");
	//КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_УчитыватьНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_УчитыватьНДС");
		стр.СчКомент = СокрЛП("итого Сч_УчитыватьНДС : " + СокрлП(ТабличноеПоле5.Итог("Сч_УчитыватьНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_УчитыватьНДС")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_СуммаВклНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_СуммаВклНДС");
		стр.СчКомент = СокрЛП("итого Сч_СуммаВклНДС : " + СокрлП(ТабличноеПоле5.Итог("Сч_СуммаВклНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_СуммаВклНДС")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Комент") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Комент");
		стр.СчКомент = СокрЛП("итого Сч_Комент : " + СокрлП(ТабличноеПоле5.Итог("Сч_Комент")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Комент")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Курс") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Курс");
		стр.СчКомент = СокрЛП("итого Сч_Курс : " + СокрлП(ТабличноеПоле5.Итог("Сч_Курс")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Курс")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Скл_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Скл_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Скл_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_Скл_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Скл_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Скл_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Скл_Код");
		стр.СчКомент = СокрЛП("итого Сч_Скл_Код : " + СокрлП(ТабличноеПоле5.Итог("Сч_Скл_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Скл_Код")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Банк_НомерСчета") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Банк_НомерСчета");
		стр.СчКомент = СокрЛП("итого Сч_Банк_НомерСчета : " + СокрлП(ТабличноеПоле5.Итог("Сч_Банк_НомерСчета")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Банк_НомерСчета")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Банк_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Банк_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Банк_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_Банк_Наименование"))+ " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Банк_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Орг_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Орг_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Орг_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_Орг_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Орг_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Орг_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Орг_Код");
		стр.СчКомент = СокрЛП("итого Сч_Орг_Код : " + СокрлП(ТабличноеПоле5.Итог("Сч_Орг_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Орг_Код")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Орг_Код2") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Орг_Код2");
		стр.СчКомент = СокрЛП("итого Сч_Орг_Код2 : " + СокрлП(ТабличноеПоле5.Итог("Сч_Орг_Код2"))+ " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Орг_Код2")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_ТТ") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_ТТ");
		стр.СчКомент = СокрЛП("итого Сч_ТТ : " + СокрлП(ТабличноеПоле5.Итог("Сч_ТТ")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_ТТ")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Контра") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Контра");
		стр.СчКомент = СокрЛП("итого Сч_Контра : " + СокрлП(ТабличноеПоле5.Итог("Сч_Контра")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Контра")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_ТТ_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_ТТ_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_ТТ_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_ТТ_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_ТТ_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_ТТ_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_ТТ_Код");
		стр.СчКомент = СокрЛП("итого Сч_ТТ_Код : " + СокрлП(ТабличноеПоле5.Итог("Сч_ТТ_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_ТТ_Код")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Тов") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Тов");
		стр.СчКомент = СокрЛП("итого Сч_Тов : " + СокрлП(ТабличноеПоле5.Итог("Сч_Тов")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Тов")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Тов_Артикул") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Тов_Артикул");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Артикул : " + СокрлП(ТабличноеПоле5.Итог("Сч_Тов_Артикул")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Тов_Артикул")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Тов_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Тов_Код");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Код : " + СокрлП(ТабличноеПоле5.Итог("Сч_Тов_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Тов_Код")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Тов_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Тов_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_Тов_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Тов_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_ЕИ_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_ЕИ_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_ЕИ_Наименование : " + СокрлП(ТабличноеПоле5.Итог("Сч_ЕИ_Наименование"))+ " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_ЕИ_Наименование")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_ЕИ") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_ЕИ");
		стр.СчКомент = СокрЛП("итого Сч_ЕИ : " + СокрлП(ТабличноеПоле5.Итог("Сч_ЕИ")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_ЕИ")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Кол") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Кол");
		стр.СчКомент = СокрЛП("итого Сч_Кол : " + СокрлП(ТабличноеПоле5.Итог("Сч_Кол")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Кол")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Коэф") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Коэф");
		стр.СчКомент = СокрЛП("итого Сч_Коэф : " + СокрлП(ТабличноеПоле5.Итог("Сч_Коэф")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Коэф")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Цена") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Цена");
		стр.СчКомент = СокрЛП("итого Сч_Цена : " + СокрлП(ТабличноеПоле5.Итог("Сч_Цена")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Цена")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_Сумма") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_Сумма");
		стр.СчКомент = СокрЛП("итого Сч_Сумма : " + СокрлП(ТабличноеПоле5.Итог("Сч_Сумма")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_Сумма")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле5.Итог("Сч_СуммаНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле5.Итог("Сч_СуммаНДС");
		стр.СчКомент = СокрЛП("итого Сч_СуммаНДС : " + СокрлП(ТабличноеПоле5.Итог("Сч_СуммаНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле5.Итог("Сч_СуммаНДС")*100/ТабличноеПоле5.Количество() )) + "%");
	КонецЕсли;
	
	табСч.Сортировать("СчИт Убыв");
	Для каждого стрсч из табСч цикл
		ДобавитьВЛог(стрсч.СчКомент);
	КонецЦикла;
	
КонецПроцедуры
Процедура ВывестиРезультатСраненияПоРезервам()
	ТабличноеПоле1 = ПравилаИгры.ТабличноеПоле1;
	ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле2;
	ТабличноеПоле3 = ПравилаИгры.ТабличноеПоле3;
	ТабличноеПоле4 = ПравилаИгры.ТабличноеПоле4;
	ТабличноеПоле5 = ПравилаИгры.ТабличноеПоле5;
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле6;
	ТабличноеПоле7 = ПравилаИгры.ТабличноеПоле7;
	ТабличноеПоле8 = ПравилаИгры.ТабличноеПоле8;
	ТабличноеПоле9 = ПравилаИгры.ТабличноеПоле9;
	ТабличноеПоле10 = ПравилаИгры.ТабличноеПоле10;
	ТабличноеПоле11 = ПравилаИгры.ТабличноеПоле11;
	ТабличноеПоле12 = ПравилаИгры.ТабличноеПоле12;
	ТабличноеПоле13 = ПравилаИгры.ТабличноеПоле13;
	ТабличноеПоле14 = ПравилаИгры.ТабличноеПоле14;
	ТабличноеПоле15 = ПравилаИгры.ТабличноеПоле15;
	ТабличноеПоле16 = ПравилаИгры.ТабличноеПоле16;
	ТабличноеПоле17 = ПравилаИгры.ТабличноеПоле17;
	ТабличноеПоле18 = ПравилаИгры.ТабличноеПоле18;
	ТабличноеПоле19 = ПравилаИгры.ТабличноеПоле19;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 6 результат сравнения данных 7 и 8 по резервированию");
	ДобавитьВЛог("-----");
	ДобавитьВЛог("Получено строк из 1С7 : " + СокрлП(ТабличноеПоле7.Количество()) );
	Если ТабличноеПоле7.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	тз = ТабличноеПоле7.Скопировать();
	тз.Свернуть("Регистратор","p12,p13");
	
	ДобавитьВЛог("итого регистраторов : " + СокрлП(тз.Количество()) );
	ДобавитьВЛог("итого движение приход : " + СокрлП(тз.Итог("p12")) );
	ДобавитьВЛог("итого движение расход : " + СокрлП(тз.Итог("p13")) );
	
	ДобавитьВЛог("-----");
	ДобавитьВЛог(?(ТабличноеПоле8.Количество()>0,"err: ","") + " Строк с косяками по движениям : " + СокрлП(ТабличноеПоле8.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле8.Количество()*100/ТабличноеПоле7.Количество() )) + "%");
	ДобавитьВЛог("итого косячных регистраторов : "  + СокрлП(ТабличноеПоле9.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле9.Количество()*100/тз.Количество() )) + "%");
	ДобавитьВЛог("итого движение приход : " + СокрлП(тз.Итог("p12")) );
	ДобавитьВЛог("итого движение расход : " + СокрлП(тз.Итог("p13")) );
	
	
	
КонецПроцедуры
Процедура ВывестиРезультатСраненияПоРезервамОстатки()
	ТабличноеПоле1 = ПравилаИгры.ТабличноеПоле1;
	ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле2;
	ТабличноеПоле3 = ПравилаИгры.ТабличноеПоле3;
	ТабличноеПоле4 = ПравилаИгры.ТабличноеПоле4;
	ТабличноеПоле5 = ПравилаИгры.ТабличноеПоле5;
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле6;
	ТабличноеПоле7 = ПравилаИгры.ТабличноеПоле7;
	ТабличноеПоле8 = ПравилаИгры.ТабличноеПоле8;
	ТабличноеПоле9 = ПравилаИгры.ТабличноеПоле9;
	ТабличноеПоле10 = ПравилаИгры.ТабличноеПоле10;
	ТабличноеПоле11 = ПравилаИгры.ТабличноеПоле11;
	ТабличноеПоле12 = ПравилаИгры.ТабличноеПоле12;
	ТабличноеПоле13 = ПравилаИгры.ТабличноеПоле13;
	ТабличноеПоле14 = ПравилаИгры.ТабличноеПоле14;
	ТабличноеПоле15 = ПравилаИгры.ТабличноеПоле15;
	ТабличноеПоле16 = ПравилаИгры.ТабличноеПоле16;
	ТабличноеПоле17 = ПравилаИгры.ТабличноеПоле17;
	ТабличноеПоле18 = ПравилаИгры.ТабличноеПоле18;
	ТабличноеПоле19 = ПравилаИгры.ТабличноеПоле19;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 9 результат сравнения данных 7 и 8 по остаткам резервов");
	ДобавитьВЛог("-----");
	ДобавитьВЛог("Получено строк из 1С7 : " + СокрлП(ТабличноеПоле11.Количество()) );
	Если ТабличноеПоле11.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	тз = ТабличноеПоле11.Скопировать();
	тз.Свернуть("Заявка","p9,КоличествоОстаток,Сч_КоличествоОстаток");
	
	ДобавитьВЛог("итого регистраторов : " + СокрлП(тз.Количество()) );
	ДобавитьВЛог("итого КолОст77 : " + СокрлП(тз.Итог("p9")) );
	ДобавитьВЛог("итого КолОст83 : " + СокрлП(тз.Итог("КоличествоОстаток")) );
	ДобавитьВЛог("итого Сч_Косяков : " + СокрлП(тз.Итог("Сч_КоличествоОстаток")) );
	
	ДобавитьВЛог("-----");
	ДобавитьВЛог(?(ТабличноеПоле13.Количество()>0,"err: ","") + " Строк с косяками по остаткам резервов : " + СокрлП(ТабличноеПоле13.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле13.Количество()*100/ТабличноеПоле11.Количество() )) + "%");
	ДобавитьВЛог("итого косячных регистраторов : "  + СокрлП(ТабличноеПоле12.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле12.Количество()*100/тз.Количество() )) + "%");
	ДобавитьВЛог("итого КолОст77 : " + СокрлП(тз.Итог("p9")) );
	ДобавитьВЛог("итого КолОст83 : " + СокрлП(тз.Итог("КоличествоОстаток")) );
	
КонецПроцедуры

// расчет остатка 1с77
Функция РазнестиТоварныеОстаткиПоПартиям() экспорт
	
	ПравилаИгры.Вставить("РазрешитьВыводНаЭкран", Ложь);
	Если НЕ ПравилаИгры.ДтПоУмолчанию = Дата(2017,7,1) тогда	
		СформироватьСтрокуIDНО();
	КонецЕсли;
	РасчетОстаткаПоСреднейЦене();
	РасчетОстаткаПоПартиям();
	ЗапросПоИскуственнымПартиям();
	ПодобратьПартииПодТоварныйОстаток();
	
	Возврат ПравилаИгры;
	
КонецФункции
Функция СформироватьСтрокуIDНО() экспорт
	
	стридз = ПравилаИгры.стридз;
	стридз = "";
	
	ТабличноеПоле20 = ПравилаИгры.ТабличноеПоле20;
	ТабличноеПоле21 = ПравилаИгры.ТабличноеПоле21;
	
	ТабличноеПоле20.Очистить();
	ТабличноеПоле21.Очистить();
	
	ПравилаИгры.Вставить("стридз", стридз);
	ПравилаИгры.Вставить("ТабличноеПоле20", ТабличноеПоле20);
	ПравилаИгры.Вставить("ТабличноеПоле21", ТабличноеПоле21);
	
	Опросить7_хедеры_НО();
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
	
КонецФункции
Функция РасчетОстаткаПоСреднейЦене() экспорт
	
	ТабличноеПоле22 = ПравилаИгры.ТабличноеПоле22;
	ТабличноеПоле22.Очистить();
	ПравилаИгры.Вставить("ТабличноеПоле22", ТабличноеПоле22);
	
	Опросить7_ТоварныйОстаток();
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция РасчетОстаткаПоПартиям() экспорт
	
	ТабличноеПоле23 = ПравилаИгры.ТабличноеПоле23;
	ТабличноеПоле23.Очистить();
	ПравилаИгры.Вставить("ТабличноеПоле23", ТабличноеПоле23);
	
	Опросить7_ПартийныйОстаток();
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция ЗапросПоИскуственнымПартиям() экспорт
	
	спсидпартий = Новый Соответствие;
	
	Текст3 = Новый ТекстовыйДокумент;
	Текст3.Прочитать(ПравилаИгры.ИмяЛогФайлаПоИсторииПартий);
	Текст_Количество3 = Текст3.КоличествоСтрок();
	Если Текст_Количество3 > 0 тогда
		Для НомерСтроки3 = 1 По Текст_Количество3 Цикл
			
			текСтр = Текст3.ПолучитьСтроку(НомерСтроки3);
			текСтр = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(текСтр, ";");
			
			текСтр_Описание  = "";
			текСтр_Тов  = "";
			текСтр_ТовКод  = "";
			текСтр_Фирма  = "";
			текСтр_ФирмаКод  = "";
			текСтр_Склад  = "";
			текСтр_СкладКод  = "";
			текСтр_Партия  = "";
			текСтр_ПартияКод  = "";
			текСтр_vmi  = "";
			текСтр_КСписанию  = "";
			текСтр_СуммаСписания  = "";
			
			Если текСтр.Количество() = 14 тогда
				
				текСтр_Описание  = текСтр[0];
				
				Если Найти(текСтр_Описание, "формирование id партии") < 1 тогда
					Продолжить;
				КонецЕсли;
				
				текСтр_Тов  = текСтр[1];
				текСтр_ТовКод  = текСтр[2];
				текСтр_Фирма  = текСтр[3];
				текСтр_ФирмаКод  = текСтр[4];
				текСтр_Склад  = текСтр[5];
				текСтр_СкладКод  = текСтр[6];
				текСтр_Партия  = текСтр[7];
				текСтр_ПартияКод  = текСтр[8];
				текСтр_vmi  = текСтр[9];
				текСтр_КСписанию  = текСтр[10];
				текСтр_СуммаСписания  = текСтр[11];

				ключик  = текСтр_Тов + ";"+ текСтр_ТовКод + ";"+ текСтр_Фирма + ";"+ текСтр_ФирмаКод + ";"+ текСтр_Склад + ";"+ текСтр_СкладКод +  ";"+ текСтр_vmi + ";";
				
				спсидпартий.Вставить(ключик,текСтр_Партия);
			Иначе
			    Продолжить;
			КонецЕсли;
		
		КонецЦикла;	
	КонецЕсли;
	
	ДобавитьВЛог("спсидпартий.Количество() = " + СокрлП(спсидпартий.Количество()));
	ПравилаИгры.Вставить("спсидпартий",спсидпартий);
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция ФорматироватьТаблицуОстатков()
	
	ТабличноеПоле25 = ПравилаИгры.ТабличноеПоле25;
	
	//лстринф =   Тов + ";"+ 
	//			ТовКод + ";"+ 
	//			Фирма + ";"+ 
	//			ФирмаКод + ";"+ 
	//			Склад + ";"+ 
	//			СкладКод +  ";"+ 
	//			стрпртс.p11 + ";"+ 
	//			стрпртс.p10 +  ";"+ 
	//			стрпртс.p19 +  ";"+ 
	//			КСписаниюСтр + ";"+ 
	//			СуммаСписанияСтр + ";"+ 
	//			стрпртс.p20 +  ";"   + 
	//			СуммаСписанияСтрРуб +  ";"+ 
	//			СуммаСписанияСтрБезНДС +  ";"        ;
	
	Если ТабличноеПоле25.Колонки.Количество() = 0 тогда
		ТабличноеПоле25.Колонки.Добавить("Тов",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("ТовКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("Фирма",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("ФирмаКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("Склад",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("СкладКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		ТабличноеПоле25.Колонки.Добавить("p11",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияID");
		ТабличноеПоле25.Колонки.Добавить("p10",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияКод");
		
		//ТабличноеПоле25.Колонки.Добавить("p17",Новый ОписаниеТипов("Число"),"VMI");
		ТабличноеПоле25.Колонки.Добавить("p19",Новый ОписаниеТипов("Число"),"VMI");
		
		ТабличноеПоле25.Колонки.Добавить("КСписаниюСтр",Новый ОписаниеТипов("Число"));
		ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтр",Новый ОписаниеТипов("Число"));
		
		//ТабличноеПоле25.Колонки.Добавить("p18",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияПоставщикУИД");
		ТабличноеПоле25.Колонки.Добавить("p20",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияПоставщикУИД");
		ТабличноеПоле25.Колонки.Добавить("p21",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияДоговорУИД");
		
		ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтрРуб",Новый ОписаниеТипов("Число"));
		ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтрБезНДС",Новый ОписаниеТипов("Число"));
		
		ПравилаИгры.Вставить("ТабличноеПоле25_КоличествоТекстовыхКолонок",ТабличноеПоле25.Колонки.Количество());
		
		ТабличноеПоле25.Колонки.Добавить("Тов_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТабличноеПоле25.Колонки.Добавить("Фирма_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ТабличноеПоле25.Колонки.Добавить("Склад_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		ТабличноеПоле25.Колонки.Добавить("Партия_Ссылка",Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокПриходов"));
		ТабличноеПоле25.Колонки.Добавить("Поставщик_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	КонецЕсли;
	
	ТабличноеПоле25.Очистить();
	ПравилаИгры.Вставить("ТабличноеПоле25", ТабличноеПоле25);
	
	Возврат ТабличноеПоле25;
КонецФункции
Функция ПодобратьПартииПодТоварныйОстаток() экспорт
	
	ТабличноеПоле25 = ФорматироватьТаблицуОстатков();
	
	спсидпартий = ПравилаИгры.спсидпартий;
	тзДанные77_НОТаб = ПравилаИгры.ТабличноеПоле22;	
	тзДанные77_Партии = ПравилаИгры.ТабличноеПоле23;
	
	Если тзДанные77_НОТаб.Количество() = 0 или
		 тзДанные77_Партии.Количество() = 0 тогда
		 Возврат ПравилаИгры;
	КонецЕсли;
	
	ДГ = СокрлП( Формат( ДеньГода(ПравилаИгры.ТекущаяДата) , "ЧЦ=3; ЧДЦ=; ЧВН="        )   );
	РезФайл_Имя = СтрЗаменить(ПравилаИгры.ИмяЛогФайлаПоРаспределениюПартий,"метка",ПравилаИгры.метка);
	
	РезФайл = Новый Файл(РезФайл_Имя);
	Если РезФайл.Существует() Тогда
		УдалитьФайлы(РезФайл_Имя);  
	КонецЕсли;
	
	//p1 товар имя, p2 товар uid, p5 фирма uid, p8 склад uid, p9/p19 признак VMI 
	тзДанные77_НОТаб.Сортировать("p1 Возр, p2 Возр, p5 Возр, p8 Возр, p9 Возр");
	тзДанные77_Партии.Сортировать("p1 Возр, p2 Возр, p5 Возр, p8 Возр, p19 Возр, ДтВрм Убыв");

	// получим уникальный список товаров со сводными данными по остатку и стоимости по средней
	тзДанные77_Тов = тзДанные77_НОТаб.Скопировать();
	тзДанные77_Тов.свернуть("p2", "p10,p12,p14,p16");
	ДобавитьВЛог("количество уникальных товаров " + СокрЛП(тзДанные77_Тов.Количество()));
	ДобавитьВЛог("КоличествоОстаток Упр "  + СокрлП(тзДанные77_Тов.Итог("p10")) );
	ДобавитьВЛог("СтоимостьОстаток Упр "  + СокрлП(тзДанные77_Тов.Итог("p12")) );
	ДобавитьВЛог("СтоимостьОстаток Руб "  + СокрлП(тзДанные77_Тов.Итог("p14")) );
	ДобавитьВЛог("СтоимостьОстаток БезНДС "  + СокрлП(тзДанные77_Тов.Итог("p16")) );

	ТекстИт_Кусманчик = "";
	//ТекстИт = Новый ТекстовыйДокумент;
	счсчсч = 0;				
	
	ТБР = Новый ТаблицаЗначений;
	ТБР.Колонки.Добавить("Фрм");
	ТБР.Колонки.Добавить("Кол");
	ТБР.Колонки.Добавить("Сум");
	
	ТБР2 = Новый ТаблицаЗначений;
	ТБР2.Колонки.Добавить("Скл");
	ТБР2.Колонки.Добавить("Кол");
	ТБР2.Колонки.Добавить("Сум");
	
	ИтКолРспределено = 0;
	ИтСумРспределено = 0;
	
	ИтСчНеХватилоПарт = 0;    ИтСчНеХватилоКолПарт = 0;   ИтСчНеХватилоСумПарт = 0;
	ИтСчНеХватило = 0;    ИтСчНеХватилоКол = 0;   ИтСчНеХватилоСум = 0;
	ИтСчНеХватилоПоиск = 0;    ИтСчНеХватилоКолПоиск = 0;   ИтСчНеХватилоСумПоиск = 0;
	
	//Для более быстрого поиска
	тзДанные77_НОТаб.Индексы.Добавить("p2");    
	тзДанные77_Партии.Индексы.Добавить("p2");
	
	ОтборПоТовару = Новый Структура;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 5 собственно приступим к распределению ");
	// на момент перебора товара и подбора партий, убеждаемся, что проблема с минусами по регистру остатков решена
	Для каждого стрТов из тзДанные77_Тов цикл
		
		Если Цел(счсчсч/1000) = счсчсч/1000 тогда
			ДобавитьВЛог("счсчсч = " + СокрЛП(счсчсч));
			ОпубликоватьЛог();
			ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
			ТекстИт_Кусманчик = "";
			//ТабличноеПоле25.Очистить();
			ТБР.Свернуть("Фрм","Кол,Сум");
			ТБР2.Свернуть("Скл","Кол,Сум");
		КонецЕсли;
		
		счсчсч = счсчсч + 1;
		Шоумастгоон("распределение по товару "  + СокрлП(счсчсч));
		
		ОтборПоТовару.Вставить("p2", стрТов.p2);
		
		ВыборкаПоТоварам = тзДанные77_НОТаб.НайтиСтроки(ОтборПоТовару);
		ВыборкаПоПартиям = тзДанные77_Партии.НайтиСтроки(ОтборПоТовару);
		
		Для каждого стр_тов из ВыборкаПоТоварам цикл       
			
			Тов = стр_тов.p0;
			ТовИмя = стр_тов.p1;
			ТовКод = стр_тов.p2;
			
			Фирма = стр_тов.p3;
			ФирмаИмя = стр_тов.p4;
			ФирмаКод = стр_тов.p5;
			
			Склад = стр_тов.p6;
			СкладИмя = стр_тов.p7;
			СкладКод = стр_тов.p8;
			
			vmi =  стр_тов.p9;
			
			Ост = стр_тов.p10;
			Цена = стр_тов.p11;
			Сумма = стр_тов.p12;
			
			// +
			ЦенаРуб = стр_тов.p13;
			СуммаРуб = стр_тов.p14;
			ЦенаБезНДС = стр_тов.p15;
			СуммаБезНДС = стр_тов.p16;
			// -

			Если Ост < 1 тогда // если сводный остаток по товару отрицательный - пропускаем его, т.к. налицо пересорт и не правльный учет
				ДобавитьВЛог(СокрЛП(счсчсч) + " : остаток меньше 1 : " + СокрЛП(ТовКод) +";"+ СокрЛП(ФирмаКод) +";"+ СокрЛП(СкладКод) +";"+ СокрЛП(vmi) +";"+ СокрЛП(Ост)+";"+ СокрЛП(Сумма) );
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = Ост;
			
			Для каждого стрпртс из ВыборкаПоПартиям   цикл
				
				КоличествоОстаток = стрпртс.p15 - стрпртс.Занято;
				Если КоличествоОстаток < 1 тогда
					Продолжить;
				КонецЕсли;
				
			//+ 20171215	
				Если НЕ ФирмаКод = стрпртс.p5 тогда
					Продолжить;
				КонецЕсли;
				Если НЕ СкладКод = стрпртс.p8 тогда
					Продолжить;
				КонецЕсли;
				Если НЕ vmi = стрпртс.p19 тогда
					Продолжить;
				КонецЕсли;
				
				КСписанию = Мин(ОсталосьСписать, КоличествоОстаток);
				ЦенаОстаток = стрпртс.p16 / стрпртс.p15 ;
				СуммаСписания = ЦенаОстаток * КСписанию;
				
				КСписаниюСтр = СокрлП(Формат(КСписанию,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				КСписаниюСтр = СтрЗаменить(КСписаниюСтр," ","");
				
				СуммаСписанияСтр = СокрлП(Формат(СуммаСписания,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтр = СтрЗаменить(СуммаСписанияСтр," ","");
				
				// +
				ЦенаОстатокРуб = стрпртс.p17 / стрпртс.p15 ;
				ЦенаОстатокБезНДС = стрпртс.p18 / стрпртс.p15 ;
				
				СуммаСписанияРуб = ЦенаОстатокРуб * КСписанию;
				СуммаСписанияБезНДС = ЦенаОстатокБезНДС * КСписанию;
				
				СуммаСписанияСтрРуб = СокрлП(Формат(СуммаСписанияРуб,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрРуб = СтрЗаменить(СуммаСписанияСтрРуб," ","");
				
				СуммаСписанияСтрБезНДС = СокрлП(Формат(СуммаСписанияБезНДС,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрБезНДС = СтрЗаменить(СуммаСписанияСтрБезНДС," ","");
				// -
				                                                                                                                                           //vmi                                                     //поставщик
				лстринф = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ стрпртс.p11 + ";"+ стрпртс.p10 +  ";"+ стрпртс.p19 +  ";"+ КСписаниюСтр + ";"+ СуммаСписанияСтр + ";"+ стрпртс.p20 +  ";"   + СуммаСписанияСтрРуб +  ";"+ СуммаСписанияСтрБезНДС +  ";"+ стрпртс.p21 +  ";"        ;
				ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  лстринф;
				//ТекстИт.ДобавитьСтроку();
				
				новстррез = ТабличноеПоле25.Добавить();
				новстррез.Тов = Тов;
				новстррез.ТовКод = ТовКод;
				новстррез.Фирма = Фирма;
				новстррез.ФирмаКод = ФирмаКод;
				новстррез.Склад = Склад;
				новстррез.СкладКод = СкладКод;
				новстррез.p11 = "'" + стрпртс.p11 + "'";
				новстррез.p10 = стрпртс.p10;
				новстррез.p19 = стрпртс.p19;                   //vmi
				новстррез.КСписаниюСтр = КСписаниюСтр;
				новстррез.СуммаСписанияСтр = СуммаСписанияСтр;
				новстррез.p20 = стрпртс.p20;                   //поставщик 
				новстррез.p21 = стрпртс.p21;

				новстррез.СуммаСписанияСтрРуб = СуммаСписанияСтрРуб;                   
				новстррез.СуммаСписанияСтрБезНДС = СуммаСписанияСтрБезНДС;                   
				
				ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
				
				нстр = ТБР.Добавить();
				нстр.Фрм = новстррез.Фирма_Ссылка;
				нстр.Кол = КСписанию;
				нстр.Сум = СуммаСписания;
				
				нстр2 = ТБР2.Добавить();
				нстр2.Скл = новстррез.Склад_Ссылка;
				нстр2.Кол = КСписанию;
				нстр2.Сум = СуммаСписания;
				
				ИтКолРспределено = ИтКолРспределено + КСписанию;
				ИтСумРспределено = ИтСумРспределено + СуммаСписания;
				
				стрпртс.Занято = стрпртс.Занято + КСписанию;
				ОсталосьСписать = ОсталосьСписать - КСписанию;
				
				Если ОсталосьСписать < 1 тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ОсталосьСписать > 0 тогда			
				
				Для каждого стрпртс из ВыборкаПоПартиям   цикл
					
					КоличествоОстаток = стрпртс.p15 - стрпртс.Занято;
					Если КоличествоОстаток < 1 тогда
						Продолжить;
					КонецЕсли;
					
					Если НЕ ФирмаКод = стрпртс.p5 тогда
						Продолжить;
					КонецЕсли;
					//Если НЕ СкладКод = стрпртс.p8 тогда
					//	Продолжить;
					//КонецЕсли;
					Если НЕ vmi = стрпртс.p19 тогда
						Продолжить;
					КонецЕсли;
					
					КСписанию = Мин(ОсталосьСписать, КоличествоОстаток);
					ЦенаОстаток = стрпртс.p16 / стрпртс.p15 ;
					СуммаСписания = ЦенаОстаток * КСписанию;
					
					КСписаниюСтр = СокрлП(Формат(КСписанию,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					КСписаниюСтр = СтрЗаменить(КСписаниюСтр," ","");
					
					СуммаСписанияСтр = СокрлП(Формат(СуммаСписания,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтр = СтрЗаменить(СуммаСписанияСтр," ","");
					
					// +
					ЦенаОстатокРуб = стрпртс.p17 / стрпртс.p15 ;
					ЦенаОстатокБезНДС = стрпртс.p18 / стрпртс.p15 ;
					
					СуммаСписанияРуб = ЦенаОстатокРуб * КСписанию;
					СуммаСписанияБезНДС = ЦенаОстатокБезНДС * КСписанию;
					
					СуммаСписанияСтрРуб = СокрлП(Формат(СуммаСписанияРуб,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтрРуб = СтрЗаменить(СуммаСписанияСтрРуб," ","");
					
					СуммаСписанияСтрБезНДС = СокрлП(Формат(СуммаСписанияБезНДС,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтрБезНДС = СтрЗаменить(СуммаСписанияСтрБезНДС," ","");
					// -
					                                                                                                                                           //vmi                                                     //поставщик
					лстринф = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ стрпртс.p11 + ";"+ стрпртс.p10 +  ";"+ стрпртс.p19 +  ";"+ КСписаниюСтр + ";"+ СуммаСписанияСтр + ";"+ стрпртс.p20 +  ";"   + СуммаСписанияСтрРуб +  ";"+ СуммаСписанияСтрБезНДС +  ";"+ стрпртс.p21 +  ";"        ;
					ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  лстринф;
					//ТекстИт.ДобавитьСтроку();
					
					новстррез = ТабличноеПоле25.Добавить();
					новстррез.Тов = Тов;
					новстррез.ТовКод = ТовКод;
					новстррез.Фирма = Фирма;
					новстррез.ФирмаКод = ФирмаКод;
					новстррез.Склад = Склад;
					новстррез.СкладКод = СкладКод;
					новстррез.p11 = "'" + стрпртс.p11 + "'";
					новстррез.p10 = стрпртс.p10;
					новстррез.p19 = стрпртс.p19;                   //vmi
					новстррез.КСписаниюСтр = КСписаниюСтр;
					новстррез.СуммаСписанияСтр = СуммаСписанияСтр;
					новстррез.p20 = стрпртс.p20;                   //поставщик 
					новстррез.p21 = стрпртс.p21;
					новстррез.СуммаСписанияСтрРуб = СуммаСписанияСтрРуб;                   
					новстррез.СуммаСписанияСтрБезНДС = СуммаСписанияСтрБезНДС;                   
					
					ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
					
					нстр = ТБР.Добавить();
					нстр.Фрм = новстррез.Фирма_Ссылка;
					нстр.Кол = КСписанию;
					нстр.Сум = СуммаСписания;
					
					нстр2 = ТБР2.Добавить();
					нстр2.Скл = новстррез.Склад_Ссылка;
					нстр2.Кол = КСписанию;
					нстр2.Сум = СуммаСписания;
					
					ИтКолРспределено = ИтКолРспределено + КСписанию;
					ИтСумРспределено = ИтСумРспределено + СуммаСписания;
					
					стрпртс.Занято = стрпртс.Занято + КСписанию;
					ОсталосьСписать = ОсталосьСписать - КСписанию;
					
					Если ОсталосьСписать < 1 тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			
			КонецЕсли;
			
			Если ОсталосьСписать > 0 тогда			
				
				Для каждого стрпртс из ВыборкаПоПартиям   цикл
					
					КоличествоОстаток = стрпртс.p15 - стрпртс.Занято;
					Если КоличествоОстаток < 1 тогда
						Продолжить;
					КонецЕсли;
					
					Если НЕ ФирмаКод = стрпртс.p5 тогда
						Продолжить;
					КонецЕсли;
					//Если НЕ СкладКод = стрпртс.p8 тогда
					//	Продолжить;
					//КонецЕсли;
					//Если НЕ vmi = стрпртс.p19 тогда
					//	Продолжить;
					//КонецЕсли;
					
					КСписанию = Мин(ОсталосьСписать, КоличествоОстаток);
					ЦенаОстаток = стрпртс.p16 / стрпртс.p15 ;
					СуммаСписания = ЦенаОстаток * КСписанию;
					
					КСписаниюСтр = СокрлП(Формат(КСписанию,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					КСписаниюСтр = СтрЗаменить(КСписаниюСтр," ","");
					
					СуммаСписанияСтр = СокрлП(Формат(СуммаСписания,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтр = СтрЗаменить(СуммаСписанияСтр," ","");
					
					// +
					ЦенаОстатокРуб = стрпртс.p17 / стрпртс.p15 ;
					ЦенаОстатокБезНДС = стрпртс.p18 / стрпртс.p15 ;
					
					СуммаСписанияРуб = ЦенаОстатокРуб * КСписанию;
					СуммаСписанияБезНДС = ЦенаОстатокБезНДС * КСписанию;
					
					СуммаСписанияСтрРуб = СокрлП(Формат(СуммаСписанияРуб,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтрРуб = СтрЗаменить(СуммаСписанияСтрРуб," ","");
					
					СуммаСписанияСтрБезНДС = СокрлП(Формат(СуммаСписанияБезНДС,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
					СуммаСписанияСтрБезНДС = СтрЗаменить(СуммаСписанияСтрБезНДС," ","");
					// -
					                                                                                                                                           //vmi                                                     //поставщик
					лстринф = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ стрпртс.p11 + ";"+ стрпртс.p10 +  ";"+ стрпртс.p19 +  ";"+ КСписаниюСтр + ";"+ СуммаСписанияСтр + ";"+ стрпртс.p20 +  ";"   + СуммаСписанияСтрРуб +  ";"+ СуммаСписанияСтрБезНДС +  ";"+ стрпртс.p21 +  ";"        ;
					ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  лстринф;
					//ТекстИт.ДобавитьСтроку();
					
					новстррез = ТабличноеПоле25.Добавить();
					новстррез.Тов = Тов;
					новстррез.ТовКод = ТовКод;
					новстррез.Фирма = Фирма;
					новстррез.ФирмаКод = ФирмаКод;
					новстррез.Склад = Склад;
					новстррез.СкладКод = СкладКод;
					новстррез.p11 = "'" + стрпртс.p11 + "'";
					новстррез.p10 = стрпртс.p10;
					новстррез.p19 = стрпртс.p19;                   //vmi
					новстррез.КСписаниюСтр = КСписаниюСтр;
					новстррез.СуммаСписанияСтр = СуммаСписанияСтр;
					новстррез.p20 = стрпртс.p20;                   //поставщик 
					новстррез.p21 = стрпртс.p21;

					новстррез.СуммаСписанияСтрРуб = СуммаСписанияСтрРуб;                   
					новстррез.СуммаСписанияСтрБезНДС = СуммаСписанияСтрБезНДС;                   
					
					ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
					
					нстр = ТБР.Добавить();
					нстр.Фрм = новстррез.Фирма_Ссылка;
					нстр.Кол = КСписанию;
					нстр.Сум = СуммаСписания;
					
					нстр2 = ТБР2.Добавить();
					нстр2.Скл = новстррез.Склад_Ссылка;
					нстр2.Кол = КСписанию;
					нстр2.Сум = СуммаСписания;
					
					ИтКолРспределено = ИтКолРспределено + КСписанию;
					ИтСумРспределено = ИтСумРспределено + СуммаСписания;
					
					стрпртс.Занято = стрпртс.Занято + КСписанию;
					ОсталосьСписать = ОсталосьСписать - КСписанию;
					
					Если ОсталосьСписать < 1 тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			
			КонецЕсли;
			
			//- 20171215
			
			// оговорено с Асташовым: в случае, когда есть остаток, но нет партии, подбираю любую попавшуюся не пустую, а сумму расчитываю по средней         ('Н1191947')
			// выявлено на примере, когда на одном из складов есть партия но кол и сум по нулям, а там где есть кол и сум не указаны склад и партия
			
			// + м/б, что по товару нет партий вообще, т.е. запись в регистре содержит данные где склад и партия null
			// это касается не vmi товара (по крайней мере, обратных случаев не выявлено)
			// принято решение (предложение Асташова, что я буду сам формировать код/ид партии, запоминать, и соответственно подставлять при повторной выгрузке, в случае необходимости
			// вывод сообщения, которое можно разбить в массив, и будет прототипом текстового файла
			
			Если ОсталосьСписать > 0 тогда
				
				КСписанию  = ОсталосьСписать;
				СуммаСписания = ОсталосьСписать*Цена;
				
				СуммаСписанияРуб = ОсталосьСписать*ЦенаРуб;
				СуммаСписанияБезНДС = ОсталосьСписать*ЦенаБезНДС;
				
				КСписаниюСтр = СокрлП(Формат(КСписанию,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				КСписаниюСтр = СтрЗаменить(КСписаниюСтр," ","");
				//+
				СуммаСписанияСтр = СокрлП(Формат(СуммаСписания,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтр = СтрЗаменить(СуммаСписанияСтр," ","");
				
				СуммаСписанияСтрРуб = СокрлП(Формат(СуммаСписанияРуб,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрРуб = СтрЗаменить(СуммаСписанияСтрРуб," ","");
				
				СуммаСписанияСтрБезНДС = СокрлП(Формат(СуммаСписанияБезНДС,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрБезНДС = СтрЗаменить(СуммаСписанияСтрБезНДС," ","");
				// -
				т_описание = "";
				т_ПартияИД = "";
				т_ПартияКод = "";
				т_ПартияКАуид = "";
				т_ПартияДоговоруид = "";
				
				//20171215
				// тепрь если не нашли подходящей партии по фирме, возвращаем путую партию с суммой по средней
				первая_попавшаяся_партия_на_товар = Новый Структура("ПартияКод,ПартияИД,ПартияКАуид,ПартияДоговоруид","","","",""); //Опросить7_ПолучитьПертиюПоКодуНоменклатуры(Тов);  //ТовКод
				Если ЗначениеЗаполнено(первая_попавшаяся_партия_на_товар.ПартияКод) И ЗначениеЗаполнено(первая_попавшаяся_партия_на_товар.ПартияИД) тогда
					
					ИтСчНеХватилоПарт = ИтСчНеХватилоПарт + 1;   
					ИтСчНеХватилоКолПарт = ИтСчНеХватилоКолПарт + КСписанию;   
					ИтСчНеХватилоСумПарт = ИтСчНеХватилоСумПарт + СуммаСписания;
					
					т_описание = "подстановка id партии";
					т_ПартияИД = первая_попавшаяся_партия_на_товар.ПартияИД;						
					т_ПартияКод = первая_попавшаяся_партия_на_товар.ПартияКод;
					т_ПартияКАуид = первая_попавшаяся_партия_на_товар.ПартияКАуид;
					т_ПартияДоговоруид = первая_попавшаяся_партия_на_товар.ПартияДоговоруид;
				Иначе
					
					т_ПартияКод = "null";
					т_ПартияКАуид = "null";
					т_ПартияДоговоруид = "null";
					
					ключик  = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ vmi + ";";
					ттт_ПартияИД = спсидпартий.Получить(ключик);
					
					Если ЗначениеЗаполнено(ттт_ПартияИД) тогда
						
						ИтСчНеХватилоПоиск = ИтСчНеХватилоПоиск + 1;   
						ИтСчНеХватилоКолПоиск = ИтСчНеХватилоКолПоиск + КСписанию;   
						ИтСчНеХватилоСумПоиск = ИтСчНеХватилоСумПоиск + СуммаСписания;
						
						т_описание = "поиск ранее сформированной id партии";
						
						т_ПартияИД = ттт_ПартияИД;
					Иначе
						
						ИтСчНеХватило = ИтСчНеХватило + 1;   
						ИтСчНеХватилоКол = ИтСчНеХватилоКол + КСписанию;   
						ИтСчНеХватилоСум = ИтСчНеХватилоСум + СуммаСписания;
						
						т_описание = "формирование id партии";
						т_ПартияИД = ДГ + СокрЛП(Формат( ИтСчНеХватило, "ЧЦ=3; ЧДЦ=; ЧВН="  ));						
						т_ПартияИД = СтрЗаменить(т_ПартияИД,"0","Z");
						т_ПартияИД = т_ПартияИД + Лев("         ", 9 - СтрДлина(т_ПартияИД));
						
					КонецЕсли;
				КонецЕсли;	
				
				стринф = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ т_ПартияИД + ";"+ т_ПартияКод +  ";"+ vmi +  ";"+ КСписаниюСтр + ";"+ СуммаСписанияСтр + ";" + т_ПартияКАуид + ";"  + СуммаСписанияСтрРуб +  ";"+ СуммаСписанияСтрБезНДС +  ";" +т_ПартияДоговоруид+";" ;
				//ТекстИт.ДобавитьСтроку(стринф);
				ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  стринф;
				
				новстррез = ТабличноеПоле25.Добавить();
				новстррез.Тов = Тов;
				новстррез.ТовКод = ТовКод;
				новстррез.Фирма = Фирма;
				новстррез.ФирмаКод = ФирмаКод;
				новстррез.Склад = Склад;
				новстррез.СкладКод = СкладКод;
				новстррез.p11 = "'" + т_ПартияИД + "'";
				новстррез.p10 = т_ПартияКод;
				новстррез.p19 = vmi;
				новстррез.КСписаниюСтр = КСписаниюСтр;
				новстррез.СуммаСписанияСтр = СуммаСписанияСтр;
				новстррез.p20 = т_ПартияКАуид;
				новстррез.p21 = т_ПартияДоговоруид;
				новстррез.СуммаСписанияСтрРуб = СуммаСписанияСтрРуб;                   
				новстррез.СуммаСписанияСтрБезНДС = СуммаСписанияСтрБезНДС;                   
				
				ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
				
				ДобавитьВЛог(т_описание + ";" + стринф);
				
				нстр = ТБР.Добавить();
				нстр.Фрм = новстррез.Фирма_Ссылка;
				нстр.Кол = КСписанию;
				нстр.Сум = СуммаСписания;
				
				нстр2 = ТБР2.Добавить();
				нстр2.Скл = новстррез.Склад_Ссылка;
				нстр2.Кол = КСписанию;
				нстр2.Сум = СуммаСписания;
				
				ИтКолРспределено = ИтКолРспределено + КСписанию;
				ИтСумРспределено = ИтСумРспределено + СуммаСписания;
				
				ОсталосьСписать = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;						  
	
	//ТекстИт.Записать(РезФайл_Имя);
	Если ЗначениеЗаполнено(ТекстИт_Кусманчик) тогда
		ОпубликоватьЛог();
		ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
	КонецЕсли;
	
	//
	ОстФайл_Имя = СтрЗаменить(ПравилаИгры.ИмяФайлаДляЗагрузкиОстатков1с77в1с83,"ДтВрмОст",РазвернутьДатуВстроку(ПравилаИгры.ДтПоУмолчанию));
	ОстФайл = Новый Файл(ОстФайл_Имя);
	Если ОстФайл.Существует() Тогда
		УдалитьФайлы(ОстФайл_Имя);  
	КонецЕсли;
	КопироватьФайл(РезФайл_Имя,ОстФайл_Имя);
	
	ПравилаИгры.Вставить("ТабличноеПоле25", ТабличноеПоле25);
	//
	
	ДобавитьВЛог("");
	ДобавитьВЛог("----------------------------------------------------");
	ДобавитьВЛог(" - Строк обошли " + СокрлП(счсчсч));
	ДобавитьВЛог(" - Распределено (шт) = " + СокрлП(ИтКолРспределено));
	ДобавитьВЛог(" - Распределено (руб)= " + СокрлП(ИтСумРспределено));
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------свод по фирмам-----------------------------------");
	ТБР.Свернуть("Фрм","Кол,Сум");
	Для каждого стртб из ТБР цикл
		ДобавитьВЛог("Фрм = " + СокрлП(стртб.фрм) + "," + "Кол = " + СокрлП(стртб.кол) + ","+"Сум = " + СокрлП(стртб.сум) + ",");
	КонецЦикла;
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------свод по складам-----------------------------------");
	ТБР2.Свернуть("Скл","Кол,Сум");
	Для каждого стртб2 из ТБР2 цикл
		ДобавитьВЛог("Скл = " + СокрлП(стртб2.скл) + "," + "Кол = " + СокрлП(стртб2.кол) + ","+"Сум = " + СокрлП(стртб2.сум) + ",");
	КонецЦикла;
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------подобрано партий-----------------------------------");
	ДобавитьВЛог(" - Подставлено партий (записей) = " + СокрлП(ИтСчНеХватилоПарт));
	ДобавитьВЛог(" - Подставлено партий (шт) = " + СокрлП(ИтСчНеХватилоКолПарт));
	ДобавитьВЛог(" - Подставлено партий (руб)= " + СокрлП(ИтСчНеХватилоСумПарт));
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------найдено ид-----------------------------------");
	ДобавитьВЛог(" - Найдено партий (записей) = " + СокрлП(ИтСчНеХватилоПоиск));
	ДобавитьВЛог(" - Найдено партий (шт) = " + СокрлП(ИтСчНеХватилоКолПоиск));
	ДобавитьВЛог(" - Найдено партий (руб)= " + СокрлП(ИтСчНеХватилоСумПоиск));
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------сформировано ид-----------------------------------");
	ДобавитьВЛог(" - Сформировано партий (записей) = " + СокрлП(ИтСчНеХватило));
	ДобавитьВЛог(" - Сформировано партий (шт) = " + СокрлП(ИтСчНеХватилоКол));
	ДобавитьВЛог(" - Сформировано партий (руб)= " + СокрлП(ИтСчНеХватилоСум));

	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - конец ");
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции
Функция ПолучитьОстаток1с7БезУчетаПартий() экспорт
	
	//здесь копирую часть процедуры РазнестиТоварныеОстаткиПоПартиям()
	ПравилаИгры.Вставить("РазрешитьВыводНаЭкран", Ложь);
	Если НЕ ПравилаИгры.ДтПоУмолчанию = Дата(2017,7,1) тогда	
		СформироватьСтрокуIDНО();
	КонецЕсли;
	РасчетОстаткаПоСреднейЦене();
	
	//далее пишем имитацию подбора партий и формирование текстового файла
	ТабличноеПоле25 = ФорматироватьТаблицуОстатков();
	тзДанные77_НОТаб = ПравилаИгры.ТабличноеПоле22;	
	тзДанные77_Партии = ПравилаИгры.ТабличноеПоле23;
	
	Если тзДанные77_НОТаб.Количество() = 0 тогда
		 //тзДанные77_Партии.Количество() = 0 тогда  // партии мы не опрашивали
		 Возврат ПравилаИгры;
	КонецЕсли;
	
	ДГ = СокрлП( Формат( ДеньГода(ПравилаИгры.ТекущаяДата) , "ЧЦ=3; ЧДЦ=; ЧВН="        )   );
	// признак, что файл не содержит данных по партиям, содержится в наименовании сценария
	РезФайл_Имя = СтрЗаменить(ПравилаИгры.ИмяЛогФайлаПоРаспределениюПартий,"метка",ПравилаИгры.метка);
	
	РезФайл = Новый Файл(РезФайл_Имя);
	Если РезФайл.Существует() Тогда
		УдалитьФайлы(РезФайл_Имя);  
	КонецЕсли;
	
	//p1 товар имя, p2 товар uid, p5 фирма uid, p8 склад uid, p9/p19 признак VMI 
	тзДанные77_НОТаб.Сортировать("p1 Возр, p2 Возр, p5 Возр, p8 Возр, p9 Возр");
	
	// получим уникальный список товаров со сводными данными по остатку и стоимости по средней
	тзДанные77_Тов = тзДанные77_НОТаб.Скопировать();
	тзДанные77_Тов.свернуть("p2", "p10,p12,p14,p16");
	ДобавитьВЛог("количество уникальных товаров " + СокрЛП(тзДанные77_Тов.Количество()));
	ДобавитьВЛог("КоличествоОстаток Упр "  + СокрлП(тзДанные77_Тов.Итог("p10")) );
	ДобавитьВЛог("СтоимостьОстаток Упр "  + СокрлП(тзДанные77_Тов.Итог("p12")) );
	ДобавитьВЛог("СтоимостьОстаток Руб "  + СокрлП(тзДанные77_Тов.Итог("p14")) );
	ДобавитьВЛог("СтоимостьОстаток БезНДС "  + СокрлП(тзДанные77_Тов.Итог("p16")) );
	
	ТекстИт_Кусманчик = "";
	//ТекстИт = Новый ТекстовыйДокумент;
	счсчсч = 0;				
	
	ТБР = Новый ТаблицаЗначений;
	ТБР.Колонки.Добавить("Фрм");
	ТБР.Колонки.Добавить("Кол");
	ТБР.Колонки.Добавить("Сум");
	
	ТБР2 = Новый ТаблицаЗначений;
	ТБР2.Колонки.Добавить("Скл");
	ТБР2.Колонки.Добавить("Кол");
	ТБР2.Колонки.Добавить("Сум");
	
	ИтКолРспределено = 0;
	ИтСумРспределено = 0;
	
	//Для более быстрого поиска
	тзДанные77_НОТаб.Индексы.Добавить("p2");    
	
	ОтборПоТовару = Новый Структура;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 5 собственно приступим к распределению ");
	
	Для каждого стрТов из тзДанные77_Тов цикл
		
		Если Цел(счсчсч/1000) = счсчсч/1000 тогда
			ДобавитьВЛог("счсчсч = " + СокрЛП(счсчсч));
			ОпубликоватьЛог();
			ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
			ТекстИт_Кусманчик = "";
			//ТабличноеПоле25.Очистить();
			ТБР.Свернуть("Фрм","Кол,Сум");
			ТБР2.Свернуть("Скл","Кол,Сум");
		КонецЕсли;
		
		счсчсч = счсчсч + 1;
		Шоумастгоон("распределение по товару "  + СокрлП(счсчсч));
		
		ОтборПоТовару.Вставить("p2", стрТов.p2);
		
		ВыборкаПоТоварам = тзДанные77_НОТаб.НайтиСтроки(ОтборПоТовару);
		
		Для каждого стр_тов из ВыборкаПоТоварам цикл       
			
			Тов = стр_тов.p0;
			ТовИмя = стр_тов.p1;
			ТовКод = стр_тов.p2;
			
			Фирма = стр_тов.p3;
			ФирмаИмя = стр_тов.p4;
			ФирмаКод = стр_тов.p5;
			
			Склад = стр_тов.p6;
			СкладИмя = стр_тов.p7;
			СкладКод = стр_тов.p8;
			
			vmi =  стр_тов.p9;
			
			Ост = стр_тов.p10;
			Цена = стр_тов.p11;
			Сумма = стр_тов.p12;
			
			// +
			ЦенаРуб = стр_тов.p13;
			СуммаРуб = стр_тов.p14;
			ЦенаБезНДС = стр_тов.p15;
			СуммаБезНДС = стр_тов.p16;
			// -

			Если Ост < 1 тогда // если сводный остаток по товару отрицательный - пропускаем его, т.к. налицо пересорт и не правльный учет
				ДобавитьВЛог(СокрЛП(счсчсч) + " : остаток меньше 1 : " + СокрЛП(ТовКод) +";"+ СокрЛП(ФирмаКод) +";"+ СокрЛП(СкладКод) +";"+ СокрЛП(vmi) +";"+ СокрЛП(Ост)+";"+ СокрЛП(Сумма) );
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = Ост;
		
		
				
				КСписанию  = ОсталосьСписать;
				СуммаСписания = ОсталосьСписать*Цена;
				
				СуммаСписанияРуб = ОсталосьСписать*ЦенаРуб;
				СуммаСписанияБезНДС = ОсталосьСписать*ЦенаБезНДС;
				
				КСписаниюСтр = СокрлП(Формат(КСписанию,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				КСписаниюСтр = СтрЗаменить(КСписаниюСтр," ","");
				//+
				СуммаСписанияСтр = СокрлП(Формат(СуммаСписания,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтр = СтрЗаменить(СуммаСписанияСтр," ","");
				
				СуммаСписанияСтрРуб = СокрлП(Формат(СуммаСписанияРуб,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрРуб = СтрЗаменить(СуммаСписанияСтрРуб," ","");
				
				СуммаСписанияСтрБезНДС = СокрлП(Формат(СуммаСписанияБезНДС,"ЧЦ=15; ЧДЦ=2; ЧРГ="));
				СуммаСписанияСтрБезНДС = СтрЗаменить(СуммаСписанияСтрБезНДС," ","");
				// -
				т_описание = "";
				т_ПартияИД = "";
				т_ПартияКод = "null";
				т_ПартияКАуид = "null";
					
				стринф = Тов + ";"+ ТовКод + ";"+ Фирма + ";"+ ФирмаКод + ";"+ Склад + ";"+ СкладКод +  ";"+ т_ПартияИД + ";"+ т_ПартияКод +  ";"+ vmi +  ";"+ КСписаниюСтр + ";"+ СуммаСписанияСтр + ";" + т_ПартияКАуид + ";"  + СуммаСписанияСтрРуб +  ";"+ СуммаСписанияСтрБезНДС +  ";"  ;
				ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  стринф;
				
				новстррез = ТабличноеПоле25.Добавить();
				новстррез.Тов = Тов;
				новстррез.ТовКод = ТовКод;
				новстррез.Фирма = Фирма;
				новстррез.ФирмаКод = ФирмаКод;
				новстррез.Склад = Склад;
				новстррез.СкладКод = СкладКод;
				новстррез.p11 = "'" + т_ПартияИД + "'";
				новстррез.p10 = т_ПартияКод;
				новстррез.p19 = vmi;
				новстррез.КСписаниюСтр = КСписаниюСтр;
				новстррез.СуммаСписанияСтр = СуммаСписанияСтр;
				новстррез.p20 = т_ПартияКАуид;
				
				новстррез.СуммаСписанияСтрРуб = СуммаСписанияСтрРуб;                   
				новстррез.СуммаСписанияСтрБезНДС = СуммаСписанияСтрБезНДС;                   
				
				ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
				
				нстр = ТБР.Добавить();
				нстр.Фрм = новстррез.Фирма_Ссылка;
				нстр.Кол = КСписанию;
				нстр.Сум = СуммаСписания;
				
				нстр2 = ТБР2.Добавить();
				нстр2.Скл = новстррез.Склад_Ссылка;
				нстр2.Кол = КСписанию;
				нстр2.Сум = СуммаСписания;
				
				ИтКолРспределено = ИтКолРспределено + КСписанию;
				ИтСумРспределено = ИтСумРспределено + СуммаСписания;
				
				ОсталосьСписать = 0;
				
				
		КонецЦикла;
		
	
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстИт_Кусманчик) тогда
		ОпубликоватьЛог();
		ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
	КонецЕсли;
	
	//
	ОстФайл_Имя = СтрЗаменить(ПравилаИгры.ИмяФайлаДляЗагрузкиОстатков1с77в1с83,"ДтВрмОст",РазвернутьДатуВстроку(ПравилаИгры.ДтПоУмолчанию)+"_ПоСредней");
	ОстФайл = Новый Файл(ОстФайл_Имя);
	Если ОстФайл.Существует() Тогда
		УдалитьФайлы(ОстФайл_Имя);  
	КонецЕсли;
	КопироватьФайл(РезФайл_Имя,ОстФайл_Имя);
	
	ПравилаИгры.Вставить("ТабличноеПоле25", ТабличноеПоле25);
	//
	
	ДобавитьВЛог("");
	ДобавитьВЛог("----------------------------------------------------");
	ДобавитьВЛог(" - Строк обошли " + СокрлП(счсчсч));
	ДобавитьВЛог(" - Распределено (шт) = " + СокрлП(ИтКолРспределено));
	ДобавитьВЛог(" - Распределено (руб)= " + СокрлП(ИтСумРспределено));
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------свод по фирмам-----------------------------------");
	ТБР.Свернуть("Фрм","Кол,Сум");
	Для каждого стртб из ТБР цикл
		ДобавитьВЛог("Фрм = " + СокрлП(стртб.фрм) + "," + "Кол = " + СокрлП(стртб.кол) + ","+"Сум = " + СокрлП(стртб.сум) + ",");
	КонецЦикла;
	
	ДобавитьВЛог("");
	ДобавитьВЛог("-----------------свод по складам-----------------------------------");
	ТБР2.Свернуть("Скл","Кол,Сум");
	Для каждого стртб2 из ТБР2 цикл
		ДобавитьВЛог("Скл = " + СокрлП(стртб2.скл) + "," + "Кол = " + СокрлП(стртб2.кол) + ","+"Сум = " + СокрлП(стртб2.сум) + ",");
	КонецЦикла;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - конец ");
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
	
	Возврат ПравилаИгры;
КонецФункции

// сравниваем товарные остатки 1с77 - 1с83
Функция АнализОстатковНаДату() экспорт
	
	ЗагрузитьФайлОстатков(Вход_ИмяФайлаОстатокНоменклатуры);
	СравнитьТоварныеОстатки78();	
	
	Возврат ПравилаИгры;
КонецФункции
Функция ЗагрузитьФайлОстатков(пар_ИмяФайла) экспорт
	
	ТабличноеПоле25 = ФорматироватьТаблицуОстатков();
	
	Файл = Новый ЧтениеТекста(пар_ИмяФайла);

	имяселекта = "данные по остаткам ";
	ДобавитьВЛог("начало " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	
	счпстр = 0;
	Строка = Файл.ПрочитатьСтроку();
	Если Строка <> Неопределено Тогда
		счпстр = счпстр + 1;
		ЗапихатьСтрокуВТаблицуОстатков(ТабличноеПоле25,Строка);
	КонецЕсли;

	Пока Строка <> Неопределено Цикл
		счпстр = счпстр + 1;
		Шоумастгоон(имяселекта + " - чтение файла " + СокрлП(счпстр));
		
		Если Вход_Тест тогда
			Если счпстр > ПравилаИгры.Ч тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
     	Строка = Файл.ПрочитатьСтроку();
	    Если Строка <> Неопределено Тогда
			 ЗапихатьСтрокуВТаблицуОстатков(ТабличноеПоле25,Строка)
	    КонецЕсли;
	КонецЦикла;
	     
	Файл.Закрыть();	
	
	ДобавитьВЛог("прочитано строк " + СокрлП(счпстр) + " из файла");
	ДобавитьВЛог("строк в таблице " + СокрлП(ПравилаИгры.ТабличноеПоле25.Количество()) + "");
	ДобавитьВЛог("конец " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	ОпубликоватьЛог();

	Возврат ПравилаИгры;
КонецФункции
Процедура ЗапихатьСтрокуВТаблицуОстатков(ТабличноеПоле25,Строка) 
	
	ПоляСтр = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка,";");
	
	КолКолонокИсточник = ПоляСтр.Количество()-1;
	КолКолонокПриемник = ТабличноеПоле25.Колонки.Количество();
	КолКолонокТекст = ПравилаИгры.ТабличноеПоле25_КоличествоТекстовыхКолонок;
	
	Если КолКолонокИсточник <= КолКолонокПриемник И КолКолонокИсточник = КолКолонокТекст тогда
		
		новстррез = ТабличноеПоле25.Добавить();
		Для iii = 0 ПО КолКолонокТекст - 1 Цикл
			новстррез.Установить(iii,ПоляСтр[iii]);
		КонецЦикла;
		
		ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез);
	КонецЕсли;
	
КонецПроцедуры
Процедура ДополнитьСтрокуВТаблицеОстатковСсылками(новстррез)
	
		новстррез.Тов_Ссылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.ТовКод));
		новстррез.Фирма_Ссылка = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.ФирмаКод));
		новстррез.Склад_Ссылка = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.СкладКод));
		
		Если ЗначениеЗаполнено(СокрЛП(новстррез.p10)) тогда
			Если Найти(новстррез.p10,"null") > 0 тогда
				новстррез.Партия_Ссылка = Справочники.ИдентификаторыСтрокПриходов.ПустаяСсылка();
			Иначе
				новстррез.Партия_Ссылка = Справочники.ИдентификаторыСтрокПриходов.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.p10));
			КонецЕсли;
		Иначе
			новстррез.Партия_Ссылка = Справочники.ИдентификаторыСтрокПриходов.ПустаяСсылка();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СокрЛП(новстррез.p20)) тогда	
			Если Найти(новстррез.p20,"null") > 0 тогда
				новстррез.Поставщик_Ссылка = Справочники.Контрагенты.ПустаяСсылка();
			Иначе
				Попытка
					новстррез.Поставщик_Ссылка = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.p20));
				Исключение
					ДобавитьВЛог( " новстррез.Поставщик_Ссылка = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(новстррез.p20)); " + СокрлП(новстррез.p20));
					ОпубликоватьЛог();
					cxcc=0;
				КонецПопытки;
			КонецЕсли;
		Иначе
			новстррез.Поставщик_Ссылка = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		
КонецПроцедуры
Функция СравнитьТоварныеОстатки78() экспорт
	
	имяселекта = "сравнение товарных остатков";
	ДобавитьВЛог("начало " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	Если ЗначениеЗаполнено(Вход_ИмяФайлаОстатокНоменклатуры) тогда
		ДобавитьВЛог("Вход_ИмяФайлаОстатокНоменклатуры = [" + СокрлП(Вход_ИмяФайлаОстатокНоменклатуры) + "]");
	КонецЕсли;
	ДобавитьВЛог("Вход_СравнитьПартии = [" + СокрлП(Вход_СравнитьПартии) + "]");
	ОпубликоватьЛог();
	
	ТабличноеПоле26 = ПравилаИгры.ТабличноеПоле26;
	ТабличноеПоле27 = ПравилаИгры.ТабличноеПоле27;
	ТабличноеПоле28 = ПравилаИгры.ТабличноеПоле28;
	ТабличноеПоле29 = ПравилаИгры.ТабличноеПоле29;
	
	ТабличноеПоле26.Очистить();
	ТабличноеПоле27.Очистить();
	ТабличноеПоле28.Очистить();
	ТабличноеПоле29.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле26", ТабличноеПоле26);
	ПравилаИгры.Вставить("ТабличноеПоле27", ТабличноеПоле27);
	ПравилаИгры.Вставить("ТабличноеПоле28", ТабличноеПоле28);
	ПравилаИгры.Вставить("ТабличноеПоле29", ТабличноеПоле29);
	
	Опросить8_ОстаткиНоменклатуры();
	
	ТабличноеПоле26 = ПравилаИгры.ТабличноеПоле26;
	ТабличноеПоле27 = ПравилаИгры.ТабличноеПоле27;
	ТабличноеПоле28 = ПравилаИгры.ТабличноеПоле28;
	ТабличноеПоле29 = ПравилаИгры.ТабличноеПоле29;
	
	ТабличноеПоле26_Количество = ТабличноеПоле26.Количество();
	ТабличноеПоле27_Количество = ТабличноеПоле27.Количество();
	ТабличноеПоле28_Количество = ТабличноеПоле28.Количество();
	ТабличноеПоле29_Количество = ТабличноеПоле29.Количество();
	
	Если ТабличноеПоле26_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле26_Количество) +  "] на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "] по РегистрНакопления.ТоварыНаСкладах");	
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле26));
		ВыгрузитьТаблуВТекст(ТабличноеПоле26, Истина);
	Иначе
		ДобавитьВЛог("ура: расхождения [" + СокрЛП(ТабличноеПоле26_Количество) +  "] по РегистрНакопления.ТоварыНаСкладах");	
		ОпубликоватьЛог();
	КонецЕсли;
	
	Если ТабличноеПоле27_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле27_Количество) +  "] на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "] по РегистрНакопления.ПартииТоваров.Остатки");	
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле27));
		ВыгрузитьТаблуВТекст(ТабличноеПоле27,,200);
	КонецЕсли;
	
	Если ТабличноеПоле28_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле28_Количество) +  "] на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "] по РегистрНакопления.ПартииТоваровУпр.Остатки");	
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле28));
		ВыгрузитьТаблуВТекст(ТабличноеПоле28,,200);
	КонецЕсли;
	
	Если ТабличноеПоле29_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле29_Количество) +  "] на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "] по РегистрНакопления.ПартииТоваровVMI.Остатки");	
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле29));
		ВыгрузитьТаблуВТекст(ТабличноеПоле29,,200);
	КонецЕсли;
		
	ДобавитьВЛог("конец " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
	
КонецФункции
Функция СравнениеТоварныхРегистров8() экспорт
	
	
	имяселекта = "сравнение данных по товару по регистрам ТоварыНаСкладах и Партии";
	ДобавитьВЛог("начало " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	
	ТабличноеПоле45 = ПравилаИгры.ТабличноеПоле45;
	ТабличноеПоле46 = ПравилаИгры.ТабличноеПоле46;
	
	ТабличноеПоле45.Очистить();
	ТабличноеПоле46.Очистить();

	ПравилаИгры.Вставить("ТабличноеПоле45", ТабличноеПоле45);
	ПравилаИгры.Вставить("ТабличноеПоле46", ТабличноеПоле46);
	
	Опросить8_СверитьТоварыНаСкладахИПартии();
	
	ТабличноеПоле45 = ПравилаИгры.ТабличноеПоле45;
	ТабличноеПоле46 = ПравилаИгры.ТабличноеПоле46;

	ТабличноеПоле45_Количество = ТабличноеПоле45.Количество();
	ТабличноеПоле46_Количество = ТабличноеПоле46.Количество();

	Если ТабличноеПоле45_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле45_Количество) +  "] на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "]");	
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле45));
		ВыгрузитьТаблуВТекст(ТабличноеПоле45,,200);
	Иначе
		ДобавитьВЛог("ура: расхождения [" + СокрЛП(ТабличноеПоле45_Количество) +  "] по остатку на [" + СокрлП(ПравилаИгры.ДтПоУмолчанию) + "]");
		ОпубликоватьЛог();
	КонецЕсли;
	
	Если ТабличноеПоле46_Количество > 0 тогда
		ДобавитьВЛог("err: обнаружены расхождения [" + СокрЛП(ТабличноеПоле46_Количество) +  "] по оборотам за период с [" + СокрлП(ПравилаИгры.НачПериода) + "] по [" + СокрлП(ПравилаИгры.КонПериода) + "]");
		ОпубликоватьЛог();
		ДобавитьВЛог(ВернутьСтрокуЗаголовковТЗ(ТабличноеПоле46));
		ВыгрузитьТаблуВТекст(ТабличноеПоле46,,200);
	Иначе
		ДобавитьВЛог("ура: расхождения [" + СокрЛП(ТабличноеПоле45_Количество) +  "] по оборотам за период с [" + СокрлП(ПравилаИгры.НачПериода) + "] по [" + СокрлП(ПравилаИгры.КонПериода) + "]");
		ОпубликоватьЛог();
	КонецЕсли;
		
	ДобавитьВЛог("конец " + СокрлП(ТекущаяДата()) + " " + имяселекта);
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
	
	
	
КонецФункции

// заказы
Функция АнализЗаказовПоставщиков1() экспорт

	ТабличноеПоле30 = ПравилаИгры.ТабличноеПоле30;
	ТабличноеПоле31 = ПравилаИгры.ТабличноеПоле31;
	ТабличноеПоле32 = ПравилаИгры.ТабличноеПоле32;
	ТабличноеПоле33 = ПравилаИгры.ТабличноеПоле33;
	ТабличноеПоле34 = ПравилаИгры.ТабличноеПоле34;
	ТабличноеПоле35 = ПравилаИгры.ТабличноеПоле35;
	ТабличноеПоле36 = ПравилаИгры.ТабличноеПоле36;
	
	ТабличноеПоле30.Очистить();
	ТабличноеПоле31.Очистить();
	ТабличноеПоле32.Очистить();
	ТабличноеПоле33.Очистить();
	ТабличноеПоле34.Очистить();
	ТабличноеПоле35.Очистить();
	ТабличноеПоле36.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле30", ТабличноеПоле30);
	ПравилаИгры.Вставить("ТабличноеПоле31", ТабличноеПоле31);
	ПравилаИгры.Вставить("ТабличноеПоле32", ТабличноеПоле32);
	ПравилаИгры.Вставить("ТабличноеПоле33", ТабличноеПоле33);
	ПравилаИгры.Вставить("ТабличноеПоле34", ТабличноеПоле34);
	ПравилаИгры.Вставить("ТабличноеПоле35", ТабличноеПоле35);
	ПравилаИгры.Вставить("ТабличноеПоле36", ТабличноеПоле36);
	
	Опросить7_ЗаказыПоставщику();
	Если ПравилаИгры.ТабличноеПоле30.Количество() < 1 тогда
		ДобавитьВЛог("аналогов в 8 не найдено");
		Возврат ПравилаИгры;
	КонецЕсли;
	
	Опросить8_Заказы();
	Если ПравилаИгры.ТабличноеПоле32.Количество() < 1 И ПравилаИгры.ТабличноеПоле33.Количество() < 1 И ПравилаИгры.ТабличноеПоле34.Количество() < 1 тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ВывестиРезультатСраненияПоЗаказам();
	
	//ВыбратьДокиДляПроверки();
	//Если ПравилаИгры.ТабличноеПоле6.Количество() < 1 тогда
	//	ДобавитьВЛог("заявок не выбрано");
	//	Возврат ПравилаИгры;
	//КонецЕсли;
	//
	//стридз = ВернутьСтрокуИДЗаявок77();
	//Если НЕ ЗначениеЗаполнено(стридз) тогда
	//	ДобавитьВЛог("id заявок не найдено");
	//	Возврат ПравилаИгры;
	//КонецЕсли;
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
	
КонецФункции
Функция АнализЗаказовПоставщиков2() экспорт // движения по заказам
	
	Если ПравилаИгры.ТабличноеПоле36.Количество() < 1 тогда
		ДобавитьВЛог("заявок не выбрано");
		Возврат ПравилаИгры;
	КонецЕсли;
	
	стридз = ВернутьСтрокуИДЗаявок777();
	Если НЕ ЗначениеЗаполнено(стридз) тогда
		ДобавитьВЛог("id заявок не найдено");
		Возврат ПравилаИгры;
	КонецЕсли;
	
	ТабличноеПоле37 = ПравилаИгры.ТабличноеПоле37;
	ТабличноеПоле38 = ПравилаИгры.ТабличноеПоле38;
	ТабличноеПоле39 = ПравилаИгры.ТабличноеПоле39;
	ТабличноеПоле40 = ПравилаИгры.ТабличноеПоле40;
	
	ТабличноеПоле37.Очистить();
	ТабличноеПоле38.Очистить();
	ТабличноеПоле39.Очистить();
	ТабличноеПоле40.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле37", ТабличноеПоле37);
	ПравилаИгры.Вставить("ТабличноеПоле38", ТабличноеПоле38);
	ПравилаИгры.Вставить("ТабличноеПоле39", ТабличноеПоле39);
	ПравилаИгры.Вставить("ТабличноеПоле40", ТабличноеПоле40);
	
	тзкорневыезаказы7 = Опросить7_ДвиженияПоЗаказам(стридз);
	Если тзкорневыезаказы7.Количество() > 0 тогда
		ПравилаИгры.Вставить("ТабличноеПоле37",тзкорневыезаказы7);
		Опросить8_ДвиженияПоКорневымЗаказам();
		ВывестиРезультатСраненияПоДвижениямКорневыхЗаявок();
	Иначе
		ДобавитьВЛог("выборка по запросу к 1с77 пустая");
	КонецЕсли;
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;	
КонецФункции
Функция АнализЗаказовПоставщиков3() экспорт // остатки по заказам
	ТабличноеПоле41 = ПравилаИгры.ТабличноеПоле41;
	ТабличноеПоле42 = ПравилаИгры.ТабличноеПоле42;
	ТабличноеПоле43 = ПравилаИгры.ТабличноеПоле43;
	ТабличноеПоле44 = ПравилаИгры.ТабличноеПоле44;
	
	ТабличноеПоле41.Очистить();
	ТабличноеПоле42.Очистить();
	ТабличноеПоле43.Очистить();
	ТабличноеПоле44.Очистить();
	
	ПравилаИгры.Вставить("ТабличноеПоле41", ТабличноеПоле41);
	ПравилаИгры.Вставить("ТабличноеПоле42", ТабличноеПоле42);
	ПравилаИгры.Вставить("ТабличноеПоле43", ТабличноеПоле43);
	ПравилаИгры.Вставить("ТабличноеПоле44", ТабличноеПоле44);
	
	
	Темп_Дата = ПравилаИгры.ДтПоУмолчанию;
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата);
	
	Сообщить(СокрЛП(PERIODR));
	
	ДобавитьДвиженияЗаПериод = Ложь;
	ДобавитьВЛог("PERIODR =  " + PERIODR);
	Если НЕ Темп_Дата = НачалоМесяца(Темп_Дата) тогда
		ДобавитьДвиженияЗаПериод = Истина;
		ДобавитьВЛог("PERIODN =  " + PERIODN);
		ДобавитьВЛог("PERIODK =  " + PERIODK);
	КонецЕсли;
	
	тзз77 = Опросить7_ОстаткиПоЗаказам(ДобавитьДвиженияЗаПериод,PERIODR,PERIODN,PERIODK);
	Сообщить(СокрЛП(тзз77.Количество()));
	Если тзз77.Количество() = 0 тогда
		ДобавитьВЛог("выборка по запросу к 1с77 пустая");
		Возврат ПравилаИгры;
	КонецЕсли;
	
	Опросить8_ОстаткиПоЗаказам(тзз77,Темп_Дата);

	ВывестиРезультатСраненияПоЗаказамОстатки();
	
	ОпубликоватьЛог();
	Возврат ПравилаИгры;
КонецФункции

Процедура ВывестиРезультатСраненияПоЗаказам()
	
	ТабличноеПоле30 = ПравилаИгры.ТабличноеПоле30;
	ТабличноеПоле31 = ПравилаИгры.ТабличноеПоле31;
	ТабличноеПоле32 = ПравилаИгры.ТабличноеПоле32;
	ТабличноеПоле33 = ПравилаИгры.ТабличноеПоле33;
	ТабличноеПоле34 = ПравилаИгры.ТабличноеПоле34;
	ТабличноеПоле35 = ПравилаИгры.ТабличноеПоле35;
	ТабличноеПоле36 = ПравилаИгры.ТабличноеПоле36;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 3 результат сравнения данных 7 и 8 - качество обмена по заказам поставщику");
	//ДобавитьВЛог("________________________________________________________________________________________________");
	ДобавитьВЛог("получено строк из 1С7 : " + СокрлП(ТабличноеПоле30.Количество()) );
	ДобавитьВЛог("итого идентифицировано заказов : " + СокрлП(ТабличноеПоле31.Количество()) );
	
	Если ТабличноеПоле33.Количество() = 0 тогда
		ДобавитьВЛог("итого косячных заказов : не выявлено, т.е. " + СокрлП(ТабличноеПоле33.Количество()) );
		ДобавитьВЛог("выбрано в качестве регистраторов движений по рег. Заказы Поставщику : " + СокрлП(ТабличноеПоле36.Количество()) );
		Возврат;
	КонецЕсли;
	
	ДобавитьВЛог("совпадающих строко-документов : " + СокрлП(ТабличноеПоле32.Количество()) );
	ДобавитьВЛог("совпадающих заказов : " + СокрлП(ТабличноеПоле34.Количество()) );
	ДобавитьВЛог("выбрано в качестве регистраторов движений по рег. Заказы Поставщику : " + СокрлП(ТабличноеПоле36.Количество()) );
	//ДобавитьВЛог("------------------------------------------------------------------------------------------------");
	ДобавитьВЛог("err: итого косячных заказов : " + СокрлП(ТабличноеПоле31.Количество() - ТабличноеПоле34.Количество()) + " = " + СокрЛП(ТабличноеПоле35.Количество()));
	ДобавитьВЛог("err: строк с ошибками заполнения : " + СокрлП(ТабличноеПоле33.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Количество()*100/ТабличноеПоле30.Количество() )) + "%");
	//ДобавитьВЛог("итого количество : " + СокрлП(ТабличноеПоле33.Итог("p59")) );
	//ДобавитьВЛог("итого сумма : " + СокрлП(ТабличноеПоле33.Итог("p62")) );
	ДобавитьВЛог("из них : " );
	
	табСч = Новый ТаблицаЗначений;
	табСч.Колонки.Добавить("СчИт",Новый ОписаниеТипов("Число"));
	табСч.Колонки.Добавить("СчКомент", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
	
	Если ТабличноеПоле33.Итог("Сч_СуммаДокумента") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_СуммаДокумента");
		стр.СчКомент = СокрЛП("итого Сч_СуммаДокумента : " + СокрлП(ТабличноеПоле33.Итог("Сч_СуммаДокумента"))  + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_СуммаДокумента")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_УчитыватьНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_УчитыватьНДС");
		стр.СчКомент = СокрЛП("итого Сч_УчитыватьНДС : " + СокрлП(ТабличноеПоле33.Итог("Сч_УчитыватьНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_УчитыватьНДС")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_СуммаВклНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_СуммаВклНДС");
		стр.СчКомент = СокрЛП("итого Сч_СуммаВклНДС : " + СокрлП(ТабличноеПоле33.Итог("Сч_СуммаВклНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_СуммаВклНДС")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Комент") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Комент");
		стр.СчКомент = СокрЛП("итого Сч_Комент : " + СокрлП(ТабличноеПоле33.Итог("Сч_Комент")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Комент")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_КурсВзаиморасчетов") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_КурсВзаиморасчетов");
		стр.СчКомент = СокрЛП("итого Сч_КурсВзаиморасчетов : " + СокрлП(ТабличноеПоле33.Итог("Сч_КурсВзаиморасчетов")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_КурсВзаиморасчетов")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Валюта_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Валюта_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Валюта_Наименование : " + СокрлП(ТабличноеПоле33.Итог("Сч_Валюта_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Валюта_Наименование")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	
	Если ТабличноеПоле33.Итог("Сч_Организация_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Организация_Код");
		стр.СчКомент = СокрЛП("итого Сч_Организация_Код : " + СокрлП(ТабличноеПоле33.Итог("Сч_Организация_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Организация_Код")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Договор_флОферта") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Договор_флОферта");
		стр.СчКомент = СокрЛП("итого Сч_Договор_флОферта : " + СокрлП(ТабличноеПоле33.Итог("Сч_Договор_флОферта")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Договор_флОферта")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Договор_ВидДоговора") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Договор_ВидДоговора");
		стр.СчКомент = СокрЛП("итого Сч_Договор_ВидДоговора : " + СокрлП(ТабличноеПоле33.Итог("Сч_Договор_ВидДоговора")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Договор_ВидДоговора")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Договор") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Договор");
		стр.СчКомент = СокрЛП("итого Сч_Договор : " + СокрлП(ТабличноеПоле33.Итог("Сч_Договор")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Договор")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	
	Если ТабличноеПоле33.Итог("Сч_Склад") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Склад");
		стр.СчКомент = СокрЛП("итого Сч_Склад : " + СокрлП(ТабличноеПоле33.Итог("Сч_Склад")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Склад")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Склад_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Склад_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Склад_Наименование : " + СокрлП(ТабличноеПоле33.Итог("Сч_Склад_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Склад_Наименование")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Склад_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Склад_Код");
		стр.СчКомент = СокрЛП("итого Сч_Склад_Код : " + СокрлП(ТабличноеПоле33.Итог("Сч_Склад_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Склад_Код")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;

	Если ТабличноеПоле33.Итог("Сч_ТТ") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_ТТ");
		стр.СчКомент = СокрЛП("итого Сч_ТТ : " + СокрлП(ТабличноеПоле33.Итог("Сч_ТТ")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_ТТ")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Контра") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Контра");
		стр.СчКомент = СокрЛП("итого Сч_Контра : " + СокрлП(ТабличноеПоле33.Итог("Сч_Контра")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Контра")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Контра_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Контра_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Контра_Наименование : " + СокрлП(ТабличноеПоле33.Итог("Сч_Контра_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Контра_Наименование")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Контра_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Контра_Код");
		стр.СчКомент = СокрЛП("итого Сч_Контра_Код : " + СокрлП(ТабличноеПоле33.Итог("Сч_Контра_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Контра_Код")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	
	Если ТабличноеПоле33.Итог("Сч_Тов") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Тов");
		стр.СчКомент = СокрЛП("итого Сч_Тов : " + СокрлП(ТабличноеПоле33.Итог("Сч_Тов")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Тов")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Тов_Артикул") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Тов_Артикул");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Артикул : " + СокрлП(ТабличноеПоле33.Итог("Сч_Тов_Артикул")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Тов_Артикул")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Тов_Код") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Тов_Код");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Код : " + СокрлП(ТабличноеПоле33.Итог("Сч_Тов_Код")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Тов_Код")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Тов_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Тов_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_Тов_Наименование : " + СокрлП(ТабличноеПоле33.Итог("Сч_Тов_Наименование")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Тов_Наименование")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_ЕИ_Наименование") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_ЕИ_Наименование");
		стр.СчКомент = СокрЛП("итого Сч_ЕИ_Наименование : " + СокрлП(ТабличноеПоле33.Итог("Сч_ЕИ_Наименование"))+ " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_ЕИ_Наименование")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_ЕИ") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_ЕИ");
		стр.СчКомент = СокрЛП("итого Сч_ЕИ : " + СокрлП(ТабличноеПоле33.Итог("Сч_ЕИ")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_ЕИ")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Кол") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Кол");
		стр.СчКомент = СокрЛП("итого Сч_Кол : " + СокрлП(ТабличноеПоле33.Итог("Сч_Кол")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Кол")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Коэф") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Коэф");
		стр.СчКомент = СокрЛП("итого Сч_Коэф : " + СокрлП(ТабличноеПоле33.Итог("Сч_Коэф")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Коэф")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Цена") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Цена");
		стр.СчКомент = СокрЛП("итого Сч_Цена : " + СокрлП(ТабличноеПоле33.Итог("Сч_Цена")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Цена")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_Сумма") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_Сумма");
		стр.СчКомент = СокрЛП("итого Сч_Сумма : " + СокрлП(ТабличноеПоле33.Итог("Сч_Сумма")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_Сумма")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле33.Итог("Сч_СуммаНДС") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле33.Итог("Сч_СуммаНДС");
		стр.СчКомент = СокрЛП("итого Сч_СуммаНДС : " + СокрлП(ТабличноеПоле33.Итог("Сч_СуммаНДС")) + " -> " + СокрЛП(Цел( ТабличноеПоле33.Итог("Сч_СуммаНДС")*100/ТабличноеПоле33.Количество() )) + "%");
	КонецЕсли;
	
	табСч.Сортировать("СчИт Убыв");
	Для каждого стрсч из табСч цикл
		ДобавитьВЛог(стрсч.СчКомент);
	КонецЦикла;
	
	ДобавитьВЛог("err: список косячных заказов: ");
	ТабличноеПоле35.Сортировать("Сч Убыв");
	СЧЧС = 0;
	Для каждого стрdsсч из ТабличноеПоле35 цикл
		СЧЧС = СЧЧС + 1;
		ДобавитьВЛог(СокрлП(СЧЧС) + ". " + СокрлП(стрdsсч.p0) + " = " + СокрлП(стрdsсч.Док8) + " = " + СокрлП(стрdsсч.Заказ1) + " => " + СокрлП(стрdsсч.Сч));
	КонецЦикла;
	
КонецПроцедуры
Процедура ВывестиРезультатСраненияПоДвижениямКорневыхЗаявок()
	
	ТабличноеПоле36 = ПравилаИгры.ТабличноеПоле36;
	ТабличноеПоле37 = ПравилаИгры.ТабличноеПоле37;
	ТабличноеПоле38 = ПравилаИгры.ТабличноеПоле38;
	ТабличноеПоле39 = ПравилаИгры.ТабличноеПоле39;
	ТабличноеПоле40 = ПравилаИгры.ТабличноеПоле40;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 6 результат сравнения данных 1с7 и 1с8 по движениям корневых заявок");
	//ДобавитьВЛог("________________________________________________________________________________________________");
	//ДобавитьВЛог("////////////////////////////////////////////////////////////////////////////////////////////////");
	ДобавитьВЛог("регистраторов 1С7 выбрано : " + СокрлП(ТабличноеПоле36.Количество()) );
	ДобавитьВЛог("получено строк по движениям из 1С7 : " + СокрлП(ТабличноеПоле37.Количество()) );
	
	Если ТабличноеПоле39.Количество() = 0 тогда
		ДобавитьВЛог("итого косячных регистраторов : не выявлено, т.е. " + СокрлП(ТабличноеПоле39.Количество()) );
		Возврат;
	КонецЕсли;
	
	ДобавитьВЛог("совпало строк по движениям : " + СокрлП(ТабличноеПоле38.Количество()) );
	//ДобавитьВЛог("------------------------------------------------------------------------------------------------");
	ДобавитьВЛог("err: итого косячных регистраторов : "  + СокрлП(ТабличноеПоле39.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле39.Количество()*100/ТабличноеПоле36.Количество() )) + "%");
	ДобавитьВЛог("err: строк с косяками по движениям : " + СокрлП(ТабличноеПоле40.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле40.Количество()*100/ТабличноеПоле37.Количество() )) + "%");
	ДобавитьВЛог("из них : " );
	
	табСч = Новый ТаблицаЗначений;
	табСч.Колонки.Добавить("СчИт",Новый ОписаниеТипов("Число"));
	табСч.Колонки.Добавить("СчКомент", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
	
	Если ТабличноеПоле40.Итог("Сч_Номенклатура") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_Номенклатура");
		стр.СчКомент = СокрЛП("итого Сч_Номенклатура : " + СокрлП(ТабличноеПоле40.Итог("Сч_Номенклатура"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_Номенклатура")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_Фирма") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_Фирма");
		стр.СчКомент = СокрЛП("итого Сч_Фирма : " + СокрлП(ТабличноеПоле40.Итог("Сч_Фирма"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_Фирма")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_ДоговорКонтрагента_uid7") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_ДоговорКонтрагента_uid7");
		стр.СчКомент = СокрЛП("итого Сч_ДоговорКонтрагента_uid7 : " + СокрлП(ТабличноеПоле40.Итог("Сч_ДоговорКонтрагента_uid7"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_ДоговорКонтрагента_uid7")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_КоличествоПриход") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_КоличествоПриход");
		стр.СчКомент = СокрЛП("итого Сч_КоличествоПриход : " + СокрлП(ТабличноеПоле40.Итог("Сч_КоличествоПриход"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_КоличествоПриход")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_КоличествоРасход") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_КоличествоРасход");
		стр.СчКомент = СокрЛП("итого Сч_КоличествоРасход : " + СокрлП(ТабличноеПоле40.Итог("Сч_КоличествоРасход"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_КоличествоРасход")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_СуммаРеглПриход") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_СуммаРеглПриход");
		стр.СчКомент = СокрЛП("итого Сч_СуммаРеглПриход : " + СокрлП(ТабличноеПоле40.Итог("Сч_СуммаРеглПриход"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_СуммаРеглПриход")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле40.Итог("Сч_СуммаРеглРасход") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле40.Итог("Сч_СуммаРеглРасход");
		стр.СчКомент = СокрЛП("итого Сч_СуммаРеглРасход : " + СокрлП(ТабличноеПоле40.Итог("Сч_СуммаРеглРасход"))  + " -> " + СокрЛП(Цел( ТабличноеПоле40.Итог("Сч_СуммаРеглРасход")*100/ТабличноеПоле40.Количество() )) + "%");
	КонецЕсли;
	
	табСч.Сортировать("СчИт Убыв");
	Для каждого стрсч из табСч цикл
		ДобавитьВЛог(стрсч.СчКомент);
	КонецЦикла;
	
	ДобавитьВЛог("err: список косячных заказов: ");
	ТабличноеПоле39.Сортировать("ЗП");
	СЧЧС = 0;
	Для каждого стрdsсч из ТабличноеПоле39 цикл
		СЧЧС = СЧЧС + 1;
		ДобавитьВЛог(СокрлП(СЧЧС) + ". " + СокрлП(стрdsсч.p0) + " = " + СокрлП(стрdsсч.ЗП) + " => " + СокрлП(стрdsсч.Регистратор));
	КонецЦикла;
	
КонецПроцедуры
Процедура ВывестиРезультатСраненияПоЗаказамОстатки()
	
	ТабличноеПоле41 = ПравилаИгры.ТабличноеПоле41;
	ТабличноеПоле42 = ПравилаИгры.ТабличноеПоле42;
	ТабличноеПоле43 = ПравилаИгры.ТабличноеПоле43;
	ТабличноеПоле44 = ПравилаИгры.ТабличноеПоле44;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 6 результат сравнения данных 7 и 8 по остаткам заказов поставщику");
	ДобавитьВЛог("________________________________________________________________________________________________");
	ДобавитьВЛог("////////////////////////////////////////////////////////////////////////////////////////////////");
	ДобавитьВЛог("всего получено строк с остатками 1с7-1с8 : " + СокрлП(ТабличноеПоле41.Количество()) );
	
	Если ТабличноеПоле44.Количество() = 0 тогда
		ДобавитьВЛог("итого косячных заказов : не выявлено, т.е. " + СокрлП(ТабличноеПоле43.Количество()) );
		Возврат;
	КонецЕсли;
	
	ДобавитьВЛог("совпало строк по остаткам : " + СокрлП(ТабличноеПоле41.Количество() - ТабличноеПоле44.Количество()) );
	ДобавитьВЛог("------------------------------------------------------------------------------------------------");
	ДобавитьВЛог("err: итого косячных заказов : "  + СокрлП(ТабличноеПоле43.Количество()) ) ;//+ " -> " + СокрЛП(Цел( ТабличноеПоле39.Количество()*100/ТабличноеПоле36.Количество() )) + "%");
	ДобавитьВЛог("err: строк с косяками по остаткам : " + СокрлП(ТабличноеПоле44.Количество()) + " -> " + СокрЛП(Цел( ТабличноеПоле44.Количество()*100/ТабличноеПоле41.Количество() )) + "%");
	ДобавитьВЛог("из них : " );
	
	табСч = Новый ТаблицаЗначений;
	табСч.Колонки.Добавить("СчИт",Новый ОписаниеТипов("Число"));
	табСч.Колонки.Добавить("СчКомент", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
	
	Если ТабличноеПоле44.Итог("Сч_Заказ") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_Заказ");
		стр.СчКомент = СокрЛП("итого Сч_Заказ : " + СокрлП(ТабличноеПоле44.Итог("Сч_Заказ"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_Заказ")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле44.Итог("Сч_Номенклатура") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_Номенклатура");
		стр.СчКомент = СокрЛП("итого Сч_Номенклатура : " + СокрлП(ТабличноеПоле44.Итог("Сч_Номенклатура"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_Номенклатура")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле44.Итог("Сч_Фирма") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_Фирма");
		стр.СчКомент = СокрЛП("итого Сч_Фирма : " + СокрлП(ТабличноеПоле44.Итог("Сч_Фирма"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_Фирма")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле44.Итог("Сч_ДоговорКонтрагента_uid7") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_ДоговорКонтрагента_uid7");
		стр.СчКомент = СокрЛП("итого Сч_ДоговорКонтрагента_uid7 : " + СокрлП(ТабличноеПоле44.Итог("Сч_ДоговорКонтрагента_uid7"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_ДоговорКонтрагента_uid7")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле44.Итог("Сч_КоличествоОстаток") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_КоличествоОстаток");
		стр.СчКомент = СокрЛП("итого Сч_КоличествоОстаток : " + СокрлП(ТабличноеПоле44.Итог("Сч_КоличествоОстаток"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_КоличествоОстаток")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	Если ТабличноеПоле44.Итог("Сч_СуммаРеглОстаток") > 0 тогда
		стр = табСч.Добавить();
		стр.СчИт = ТабличноеПоле44.Итог("Сч_СуммаРеглОстаток");
		стр.СчКомент = СокрЛП("итого Сч_СуммаРеглОстаток : " + СокрлП(ТабличноеПоле44.Итог("Сч_СуммаРеглОстаток"))  + " -> " + СокрЛП(Цел( ТабличноеПоле44.Итог("Сч_СуммаРеглОстаток")*100/ТабличноеПоле44.Количество() )) + "%");
	КонецЕсли;
	
	табСч.Сортировать("СчИт Убыв");
	Для каждого стрсч из табСч цикл
		ДобавитьВЛог(стрсч.СчКомент);
	КонецЦикла;
	
	ДобавитьВЛог("err: в качестве примера список косячных заказов: ");
	СЧЧС = 0;
	Для каждого стрdsсч из ТабличноеПоле43 цикл
		СЧЧС = СЧЧС + 1;
		ДобавитьВЛог(СокрлП(СЧЧС) + ". " + СокрлП(стрdsсч.ЗаказПоставщику_id) + " = " + СокрлП(стрdsсч.Заказ) );
	КонецЦикла;
	
КонецПроцедуры


// запросы

Процедура Опросить7()
	
	имяселекта = "select from sql db ДОкументыЗаявкиПокупателей";
	Шоумастгоон(имяселекта);
	
	НачПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.НачПериода);
	КонПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.КонПериода);
	
	ДобавитьВЛог("НачПериодаСтр >= " + НачПериодаСтр);
	ДобавитьВЛог("КонПериодаСтр <  " + КонПериодаСтр);
	
	Ч = ПравилаИгры.Ч;
	////Если НЕ ПравилаИгры.АвтоПеребор тогда
	////	Если НЕ ВвестиЧисло(
	////				        Ч,
	////				        "Желаемое кол строк",
	////				        6, // длина числа, включая дробную часть без разделителя
	////				        0  // длина дробной части
	////					    )
	////					    Тогда
	////        Возврат;
	////	КонецЕсли;
	////КонецЕсли;
	//Если Ч < 1 тогда
	//	Возврат;
	//КонецЕсли;
	//Если Ч > ПравилаИгры.Чмакс тогда
	//	Ч = ПравилаИгры.Чмакс;
	//КонецЕсли;
	ДобавитьВЛог("SELECT top " + СокрЛП(Ч) );
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 1 опрашиваем 7 по заявкам покупателя");
	
	CommandText77_Заявки = "
	|select " + ?(Вход_Тест, " top " + СокрЛП(Формат(Ч, "ЧЦ=15; ЧДЦ=0; ЧГ=0")) , "" ) + "
	|	   TabJ.IDDOCDEF
	|	  --,TabJ.IDDOC as ЗП
	|	  ,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as dtt
	|	  ,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as dnm

	|	  ,ISNULL(СпрКонтра.DESCR, '') As СпрКонтра_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрКонтра.code,'',8), '') As СпрКонтра_код   
	|	  ,ISNULL(СпрКонтра.SP13668, '') As СпрКонтра_UID
	|	  ,ISNULL(СпрКонтра.SP7656, '') As СпрКонтра_ИНН

	|	  ,RefD.DESCR as Договор_Нм
	|	  ,RefD.SP10485 as Договор_Номер
	|	  ,RefD.SP10486 as Договор_Дата
	|	  ,RefD.SP10548 as Договор_ПродажаЗакупка 
	|	  ,RefD.SP12635 as Договор_флОферта
	|	  ,ISNULL(СпрФирмы.DESCR, '') As Договор_СпрФирмы_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As Договор_СпрФирмы_код
	|	  
	|	  ,ISNULL(СпрФирмы2.DESCR, '') As СпрФирмы_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрФирмы2.code,'',9), '') As СпрФирмы_код

	|	  -- Фирма.ЮрЛицо,
	|	  -- Фирма.УпрАналитика
	|	  ,СпрЮрЛицо.DESCR as СпрЮрЛицо_стр
	//|	  ,ISNULL(dbo.AddToPrefixStr(СпрЮрЛицо.code,'',9), '') As СпрЮрЛицо_код
	|	  ,СпрЮрЛицо.SP664 as СпрЮрЛицо_ОфициальноеНаимен

	|	  ,СпрБанкСч.DESCR  as БанковскийСчет_стр
	|	  ,СпрБанкСч.SP4219  as БанковскийСчет_нм

	|	  , 
	|	  CASE
	|		  WHEN DH.SP4760 = '   3O1   ' THEN '1 Неподтвержденная'
	|		  WHEN DH.SP4760 = '   3O2   ' THEN '2 НаСклад'
	|		  WHEN DH.SP4760 = '   3O3   ' THEN '3 НаПоставку'
	|		  ELSE '0 хз'
	|	  END AS ВидОперации_Нм
	|	  , 
	|	  CASE
	|		  WHEN DH.SP7995 = '   67A   ' THEN '1 Работа'
	|		  WHEN DH.SP7995 = '   67B   ' THEN '2 Выполн'
	|		  WHEN DH.SP7995 = '   67C   ' THEN '3 отказ'
	|		  WHEN DH.SP7995 = '   67D   ' THEN '4 Коррект'
	|		  ELSE '0 хз'
	|	  END AS СостояниеЗаявки_Нм 

	|	  ,ISNULL(СпрСклады.DESCR, '') As СпрСклады_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрСклады.code,'',9), '') As СпрСклады_код 
	|--	  ,ISNULL(СпрСклады2.DESCR, '') As СпрСклады_Получатель_Стр
	|--	  ,ISNULL(dbo.AddToPrefixStr(СпрСклады2.code,'',9), '') As СпрСклады_Получатель_код 

	|	  ,DH.SP660 as Комментарий
	|--	  ,DH.SP2436 as Валюта   
	|	  ,ISNULL(СпрВалюты.DESCR, '') As СпрВалюты_Стр
	|	  ,ISNULL(СпрВалюты.SP18, '') As СпрВалюты_Стр2
	|--   ,ISNULL(СпрВалюты.SP15, '') As СпрВалюты_ИмяФайлаПрописи
	|      ,DH.SP2437 as Курс
	|--	  ,ISNULL(СпрТипыЦен.DESCR, '') As СпрТипыЦен_Стр
	|--	  ,ISNULL(СпрТипыЦен.SP220, '') As СпрТипыЦен_Стр2  
	|      ,DH.SP2439 as УчитыватьНДС     
	|      ,DH.SP2440 as СуммаВклНДС      
	|      ,DH.SP2451 as Сумма            
	|      ,DH.SP2452 as СуммаНДС 
	|--	  ,DH.SP2443 as СуммаВВалютеВзаиморасчетов       

	|      ,DH.SP2438 as ДатаОплаты       
	|      ,DH.SP4434 as ДатаОтгрузки     
	|	  ,DH.SP8101 as ПоставкиПрекратит

	|/*           
	|	  -- Справочник.Скидки
	|	  ,ISNULL(СпрСкидки1.DESCR, '') As СпрСкидки1_Стр
	|	  ,ISNULL(СпрСкидки1.SP429, 0) As СпрСкидки1_Процент 	  
	|	  ,DH.SP2445 as Скидка
	|      ,DH.SP8783 as НаценкаФакторинг 
	|      ,DH.SP8784 as НаценкаТранспорт 
	|      ,DH.SP8785 as СкидкаГАЗ        
	|      ,DH.SP8786 as СкидкаЗМЗ        

	|	  ,DH.SP12930 as Акция           

	|   -- простые типы данных
	|      ,DH.SP7973 as НомерЖурнала     
	|      ,DH.SP8623 as ВыклАвтоСоздание 
	|           
	|      ,DH.SP8256 as СуммаРезерва    
	|	  ,DH.SP8893 as НомерНачальный   
	|      ,DH.SP8894 as ДатаНачальная    
	|      ,DH.SP8993 as ИД_изСайта       
	|      ,DH.SP8994 as Док_ОбщНО        
	|      ,DH.SP9213 as флВидОперации    
	|      ,DH.SP9289 as Дней_вРаботе     
	|      ,DH.SP10186 as КоэфДоставки     
	|      ,DH.SP10940 as УдаленныйМагазин
	|      ,DH.SP11882 as МожноРезервироват
	|      ,DH.SP8773 as ПроцентПриб_АТ       
	|      ,DH.SP8535 as ВыгруженАТ
	|*/
	|	  ,DT.LINENO_
	|      ,DT.SP11061 ID_Site      
	|	  ,ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код
	|	  ,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул
	|	  ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID
	|      ,DT.SP2447 Количество 
	|	  ,ISNULL(СпрЕИ.DESCR, '') As СпрЕИ_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрЕИ.code,'',9), '') As СпрЕИ_код
	|	  ,DT.SP2449 Коэффициент
	|      ,DT.SP2450 Цена
	|      ,DT.SP2451 Сумма 
	|      --,DT.SP2454 СтавкаНДС
	|      ,DT.SP2452 СуммаНДС

	|	  -- ПрайсПоставщика
	|	  ,ISNULL(СпрКонтра2.DESCR, 'резервируется на складе') As Поставщик_изСайта_Стр
	|	  ,ISNULL(dbo.AddToPrefixStr(СпрКонтра2.code,'',8), 'ЦС') As Поставщик_изСайта_код
	|	  ,DT.SP9129 Коммент_изСайта

	|	  -- СтрокаЗаявки СправочникСсылка.ИдентификаторыСтрокЗаявок
	|      ,DT.SP13768 СрокГарантированн
	|      ,DT.SP13750 СрокОжидаемый
	|      ,DT.SP13751 СрокГарант_Заказа
	|      ,DT.SP13752 СрокОжид_Заказа
	|	  ,DT.SP12257 ЦенаЗакупки

	
|,ISNULL(СпрЕИ.SP13724, '') As СпрЕИ_УИД	
	
	|      --,DT.SP7968 КолРез
	|      --,DT.SP8773 ПроцентПриб_АТ
	|      --,DT.SP8850 СрокПоставки

	|/*      
	|     
	|      ,DT.SP12072 КодДругойБазы

	|      --,DT.SP2455
	|      --,DT.SP2453
	|      --,DT.SP7732 внНом
	|      --,DT.SP7969 СкидкаПроцент
	|      --,DT.SP8899 Отказ

	|	  ,DT.SP9078 ДнейПоставки
	|      ,DT.SP9079 РегионПоставки_из
	|      
	|      ,DT.SP9144 КолОтказ
	|      ,DT.SP9238 ЗаменаТМЦ
	|      ,DT.SP9239 УжеЗаменен
	|      ,DT.SP9794 ЗаказСоздан
	|      ,DT.SP10094 МинКолПартии
	|      ,DT.SP10379 КолСнятие
	|      ,DT.SP10515 ВидСостояния
	|      ,DT.SP10915 ДатаУстРезерва
	|      ,DT.SP10930 ЦенаНач
	|      ,DT.SP11327 КтоМенялЦену
	|      
	|      ,DT.SP13485 Склад_ТЧ
	|*/

|,'''' + TabJ.IDDOC + '''' as ЗП
	
	|	  ,DH.SP8893 as НомерНачальный   
	|      ,DH.SP8894 as ДатаНачальная
	|, case
	|		when TabJ.DOCNO = DH.SP8893 then 1
	|       else 0
	|  end as ПризнакКорня
	
	|  FROM dbo.DT2457 as DT (NOLOCK)

	|	left JOIN dbo.DH2457  As DH (NOLOCK) ON (DT.IDDOC = DH.IDDOC)
	|	left JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.IDDOC = TabJ.IDDOC)
	|	left JOIN SC4014 AS СпрФирмы2 (NOLOCK) ON TabJ.SP4056 = СпрФирмы2.ID
	|	left JOIN SC131 AS СпрЮрЛицо (NOLOCK) ON TabJ.SP5365 = СпрЮрЛицо.ID
	|	left JOIN SC204  As RefD (NOLOCK) ON (DH.SP2435 = RefD.ID)
	|	left JOIN SC4014 AS СпрФирмы (NOLOCK) ON isnull(RefD.SP8254, RefD.SP11068) = СпрФирмы.ID
	|	left JOIN SC172 AS СпрКонтра (NOLOCK) ON DH.SP2434 = СпрКонтра.ID
	|	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON DT.SP2446 = СпрНоменклатура.ID
	|	left JOIN SC55 AS СпрСклады (NOLOCK) ON DH.SP4437 = СпрСклады.ID
	|	left JOIN SC14 AS СпрВалюты (NOLOCK) ON DH.SP2436 = СпрВалюты.ID
	|	left JOIN SC75 AS СпрЕИ (NOLOCK) ON DT.SP2448 = СпрЕИ.ID
	|	left JOIN SC172 AS СпрКонтра2 (NOLOCK) ON DT.SP9011 = СпрКонтра2.ID
	|	left JOIN SC1710 AS СпрБанкСч (NOLOCK) ON DH.SP2621 = СпрБанкСч.ID
	|	--left JOIN SC55 AS СпрСклады2 (NOLOCK) ON DH.SP11574 = СпрСклады.ID
	|	--left JOIN SC426 AS СпрСкидки1 (NOLOCK) ON DH.SP8785 = СпрСкидки1.ID
	|	--left JOIN SC219 AS СпрТипыЦен (NOLOCK) ON DH.SP2444 = СпрТипыЦен.ID
	|	
	|	
	|  WHERE
	|	    TabJ.DATE_TIME_IDDOC >= '" + НачПериодаСтр + "'
	|	AND TabJ.DATE_TIME_IDDOC <  '" + КонПериодаСтр + "' 
	|	AND TabJ.CLOSED = 1
	
	//|	AND DT.IDDOC = '1S5UZW   '

	|" + ?(ПравилаИгры.ВыбиратьТолькоЗаявки,"  and TabJ.DOCNO = DH.SP8893","") + "

	|  ORDER BY
	|	TabJ.DATE_TIME_IDDOC, TabJ.DOCNO, DT.LINENO_
	|";
		
	Сч = 0;
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
		тзДанные77_Заявки = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 27 ИЛИ ii = 28  ИЛИ ii = 29 ИЛИ ii = 30 ИЛИ ii = 31  ИЛИ ii = 41 ИЛИ ii = 44 ИЛИ ii = 45 ИЛИ ii = 46 ИЛИ ii = 47  ИЛИ ii = 55 тогда
				тзДанные77_Заявки.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Заявки.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		тзДанные77_Заявки.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		тзДанные77_Заявки.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаявкаПокупателя"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Заявки.Колонки.Добавить("Док8",	ОписаниеТиповДок);

		тзДанные77_Заявки.Колонки.Добавить("ТТ",Новый ОписаниеТипов("СправочникСсылка.ТорговыеТочки"));
		тзДанные77_Заявки.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		тзДанные77_Заявки.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Заявки.Колонки.Добавить("ЕИ",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		тзДанные77_Заявки.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );
		
		ОтборЗаявки = Новый Структура;
		СтрНомеров = "";

		Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрлП(Сч));
			
			НоваяСтрока = тзДанные77_Заявки.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 27 ИЛИ iii = 29 ИЛИ iii = 29 ИЛИ iii = 30 ИЛИ iii = 31 ИЛИ iii = 41 ИЛИ iii = 44 ИЛИ iii = 45 ИЛИ iii = 46 ИЛИ iii = 47  ИЛИ iii = 55 ИЛИ iii = 60 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрока.Док8Номер = НоваяСтрока.p2;
			
			УИДконтра = СокрЛП(НоваяСтрока.p5);
			ИДконтра = Новый УникальныйИдентификатор( УИДконтра );
			Найденнаяконтра = Справочники.ТорговыеТочки.ПолучитьСсылку( ИДконтра );
			ПараметрыКонтры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаяконтра,"Код,Владелец");
			
			//Сообщить("УИДконтра" + УИДконтра);
			//Сообщить("Найденнаяконтра = "  + СокрЛП(Найденнаяконтра) + " код " + СокрЛП(Найденнаяконтра.Код));
			//Сообщить("ПараметрыКонтры.Код = "  + СокрЛП(ПараметрыКонтры.Код) );
			//Сообщить("ПараметрыКонтры.Владелец = "  + СокрЛП(ПараметрыКонтры.Владелец) + " код " + СокрЛП(ПараметрыКонтры.Владелец.Код) );
			//Сообщить("ПараметрыКонтры.Владелец.ГоловнойКонтрагент = "  + СокрЛП(ПараметрыКонтры.Владелец.ГоловнойКонтрагент) + " код " + СокрЛП(ПараметрыКонтры.Владелец.ГоловнойКонтрагент.Код) );
			
			Если ЗначениеЗаполнено(ПараметрыКонтры.Код) тогда
				НоваяСтрока.ТТ = Найденнаяконтра;
				НоваяСтрока.Контрагент = ПараметрыКонтры.Владелец;
				//////Если ЗначениеЗаполнено(ПараметрыКонтры.Владелец.ГоловнойКонтрагент) тогда
				//////	НоваяСтрока.Контрагент = ПараметрыКонтры.Владелец.ГоловнойКонтрагент;
				//////КонецЕсли;
			КонецЕсли;
			
			УИДтов = СокрЛП(НоваяСтрока.p40);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			ПараметрыТовара = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(НайденнаяНоменклатура,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыТовара.Код) тогда
				НоваяСтрока.Номенклатура = НайденнаяНоменклатура;
			КонецЕсли;
			
			УИДеи = СокрЛП(НоваяСтрока.p56);
			ИДеи = Новый УникальныйИдентификатор( УИДеи );
			Найденнаяеи = Справочники.ЕдиницыИзмерения.ПолучитьСсылку( ИДеи );
			ПараметрыЕИ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаяеи,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыЕИ.Код) тогда
				НоваяСтрока.ЕИ = Найденнаяеи;
			КонецЕсли;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		
		ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле2;
		ТабличноеПоле2.Колонки.Добавить("p2", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("p1", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("p57", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		ТабличноеПоле2.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		ТабличноеПоле2.Колонки.Добавить("Сч",Новый ОписаниеТипов("Число"));

		ТЗДок8 = НайтиДок8ПоНомеру(тзДанные77_Заявки.ВыгрузитьКолонку("Док8Номер"));
		ТЗДок8_Количество = ТЗДок8.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗДок8_Количество = " + СокрлП(ТЗДок8_Количество));
		Если ТЗДок8_Количество > 0 тогда
			Счп = 0;
			Для каждого стрд из тзДанные77_Заявки цикл
				Счп = Счп + 1;
				Шоумастгоон(имяселекта + "->" + СокрлП(Счп));
				
				НайденнаяСтрока = ТЗДок8.Найти(стрд.Док8Номер, "Номер");
				Если НайденнаяСтрока = Неопределено Тогда
				Иначе
					тДок = НайденнаяСтрока.Заявка;
					
					НовСтр = ТабличноеПоле2.Добавить();
					НовСтр.p2  = СокрЛП(стрд.p2);
					НовСтр.p1  = СокрЛП(стрд.p1);
					НовСтр.p57 = СокрЛП(стрд.p57);
					НовСтр.Сч = 1;
					
					Если ТипЗнч(тДок) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда
						стрд.Заявка = тДок;
						стрд.Док8 = тДок;
						НовСтр.Заявка = тДок;
					ИначеЕсли ТипЗнч(тДок) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
						стрд.Корректировка = тДок;
						стрд.Док8 = тДок;
						НовСтр.Корректировка = тДок;
					КонецЕсли;					
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ТабличноеПоле2.Свернуть("p2,p1,p57,Заявка,Корректировка","Сч");
		
		ПравилаИгры.Вставить("ТабличноеПоле1",тзДанные77_Заявки);
		ПравилаИгры.Вставить("ТабличноеПоле2",ТабличноеПоле2);
		
		ВыборкаSQL.Close();
	
КонецПроцедуры
Функция Опросить7_ДвиженияПоРезервам(пар_стридрегистраторов)
	имяселекта = "select from sql db ДвиженияПоРезервамПоСпискуРегистраторов";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	если нЕ значениезаполнено(пар_стридрегистраторов) тогда
		Возврат тзрез;
	конецесли;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 4 опрашиваем 7 движения по резервам ");
	
	CommandText77_Заявки = "
	
															|select	
															|		'''' + TMP_2.Регистратор + '''' as Регистратор
															|		
															|		,ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр
															|		,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As СпрФирмы_код
															|		
															|	    ,ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр
															|	    ,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код
															|	    ,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул
															|	    ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID
															|		
															|		,ISNULL(СпрСклады.DESCR, '') As СпрСклады_Стр
															|		,ISNULL(dbo.AddToPrefixStr(СпрСклады.code,'',9), '') As СпрСклады_код 
															|														
															|	    --,TabJ.IDDOCDEF as ЗаявкаДф
															|		,'''' + TabJ.IDDOC + ''''  as ЗаявкаИд
															|		,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as ЗаявкаДт
															|		,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as ЗаявкаНм
															|		
															|		,TMP_2.РезервПлюс
															|		,TMP_2.РезервМинус

															|FROM				
															|		(		
															|				select	
															|					TMP_1.Регистратор,
															|					TMP_1.Фирма,									
															|					TMP_1.Номенклатура,									
															|					TMP_1.Склад,
															|					TMP_1.Заявка,
															|					SUM(TMP_1.ПриходРезерв) As РезервПлюс,
															|					SUM(TMP_1.РасходРезерв) As РезервМинус
															|														
															|				From										
															|					(									
															|							
															|							SELECT	--*
															|													
															|								TabRegRez.SP4475 As Фирма,						
															|								TabRegRez.SP4477 As Номенклатура,						
															|								TabRegRez.SP4476 As Склад,
															|								TabRegRez.SP4762 As Заявка,						
															|								(TabRegRez.SP4479*((TabRegRez.DEBKRED+1)%2)) As ПриходРезерв,						
															|								(TabRegRez.SP4479*TabRegRez.DEBKRED) As РасходРезерв,
															|								TabRegRez.IDDOC as Регистратор						
															|							
															|							FROM							
															|								RA4480 As TabRegRez (NOLOCK)						
															|								INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabRegRez.IDDOC = TabJ.IDDOC)						
															|							WHERE							
															|								--TabJ.DATE_TIME_IDDOC >= '20161001' AND TabJ.DATE_TIME_IDDOC < '20161002'						
															|								--TabJ.IDDOCDEF = 2457 --AND
															
															|								TabRegRez.IDDOC IN (" + пар_стридрегистраторов + ")
															
															                                |/*
																							| TabRegRez.IDDOC IN 
																							|	(
																							|		select	distinct													
																							|			DH2.IDDOC													
																							|		from	 
																							|			dbo.DH2457 As DH2 (NOLOCK) 
																							|		where
																							|			DH2.SP8893 IN
																							|				(		 
																							|					select distinct 
																							|						TabJ.DOCNO
																							|					from dbo.DH2457 As DH1 (NOLOCK) 
																							|						left JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH1.IDDOC = TabJ.IDDOC)
																							|					where 	
																							|						DH1.IDDOC  IN (" + пар_стридрегистраторов + ")
																							|				)
		                                                                                    |	)
																							|*/
													
		
															|								
															|					) as TMP_1 									
															|								
															|					  
															|														
															|				GROUP BY 									
															|					TMP_1.Регистратор,
															|					TMP_1.Фирма,
															|					TMP_1.Номенклатура,									
															|					TMP_1.Склад,
															|					TMP_1.Заявка									


															|	) as TMP_2

															|	 left JOIN SC4014 AS СпрФирмы (NOLOCK) ON TMP_2.Фирма = СпрФирмы.ID
															|	 left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID
															|	 left JOIN SC55 AS СпрСклады (NOLOCK) ON TMP_2.Склад = СпрСклады.ID
															
															|	 left JOIN DH2457  As DH (NOLOCK) ON (TMP_2.Заявка = DH.IDDOC)
															|	 left JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.SP8893 = TabJ.DOCNO)
															|WHERE
															|	TabJ.IDDOCDEF = 2457 
															|	AND TabJ.DATE_TIME_IDDOC >= '2017-01-01 00:00:00'

															|order by

															|	TMP_2.Регистратор,																				
															|	TMP_2.Заявка,
															|	TMP_2.Фирма,
															|	TMP_2.Склад,
															|	TMP_2.Номенклатура
	
	|";
		
	
	ДобавитьВЛог("пар_стридрегистраторов = " + пар_стридрегистраторов);
	
	Сч = 0;
	ОтборЗаявки = Новый Соответствие;
	
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
		
		тзДанные77_Резервы = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 12 ИЛИ ii = 13 тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаявкаПокупателя"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Резервы.Колонки.Добавить("Регистратор",	ОписаниеТиповДок);
		
		тзДанные77_Резервы.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		тзДанные77_Резервы.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		///////////////////тзДанные77_Резервы.Колонки.Добавить("IDSite", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );


		ОтборПоИдСайта = Новый Структура();
    	Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 12 ИЛИ iii = 13 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			т_Регистратор = Документы.ЗаявкаПокупателя.ПустаяСсылка();
			НайденнаяСтрока = ПравилаИгры.ТабличноеПоле6.Найти(НоваяСтрока.p0, "p57");
			Если НайденнаяСтрока = Неопределено Тогда
				ДобавитьВЛог("караул1 - не найден регистратор");
			    Продолжить;
			Иначе
				т_Регистратор = НайденнаяСтрока.Док8;
			КонецЕсли;
			НоваяСтрока.Регистратор = т_Регистратор;
			
			т_Заявка = ОтборЗаявки.Получить(НоваяСтрока.p11);
			
			Если НЕ ЗначениеЗаполнено(т_Заявка) тогда
				т_Регистратор_ДокументОснование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(т_Регистратор,"ДокументОснование");
				Если ЗначениеЗаполнено(т_Регистратор_ДокументОснование) тогда
					
					Параметры_т_Регистратор_ДокументОснование = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(т_Регистратор_ДокументОснование,"Номер,Дата");
					Если  Параметры_т_Регистратор_ДокументОснование.Номер = НоваяСтрока.p11 
						И Год(Параметры_т_Регистратор_ДокументОснование.Дата) = Число(Лев(НоваяСтрока.p10, 4)) тогда
						т_Заявка = т_Регистратор_ДокументОснование;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(т_Заявка) тогда
				т_Заявка = НайтиЗаявкуПоНомеруДате(НоваяСтрока.p11,НоваяСтрока.p10);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(т_Заявка) тогда
				НоваяСтрока.Заявка = т_Заявка;
				ОтборЗаявки.Вставить(НоваяСтрока.p11,т_Заявка);
			Иначе
				ДобавитьВЛог("караул2 - не найдена заявка");
			КонецЕсли;

			УИДтов = СокрЛП(НоваяСтрока.p6);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			
			ПараметрыТовара = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(НайденнаяНоменклатура,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыТовара.Код) тогда
				НоваяСтрока.Номенклатура = НайденнаяНоменклатура;
			Иначе
				ДобавитьВЛог("караул3 - не определена номенклатура");
			КонецЕсли;
			
			НайденнаяСсылкаС = Справочники.Склады.НайтиПоКоду(СокрЛП(НоваяСтрока.p8));
			Если НайденнаяСсылкаС = Справочники.Склады.ПустаяСсылка() Тогда
				ДобавитьВЛог("караул4 - хз какой склад");
			Иначе
				НоваяСтрока.Склад = НайденнаяСсылкаС;
			КонецЕсли;
			
			НайденнаяСсылкаФ = Справочники.Организации.НайтиПоКоду(СокрЛП(НоваяСтрока.p2));
			Если НайденнаяСсылкаФ = Справочники.Организации.ПустаяСсылка() Тогда
				ДобавитьВЛог("караул5 - хз фирма");
			Иначе
				НоваяСтрока.Фирма = НайденнаяСсылкаФ;
			КонецЕсли;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		ВыборкаSQL.Close();
		
		//тзрез = тзДанные77_Резервы.Скопировать(); 
	
	Возврат тзДанные77_Резервы;
	
КонецФункции
Функция Опросить7_ОстаткиПоРезервам(пар_стридрегистраторов, пар_стридсклада, пар_стркодсклада,PERIODR,PERIODN,PERIODK, ДобавитьДвиженияЗаПериод = Истина, Логировать)
	имяселекта = "select from sql db ОстаткиПоРезервамПоВыбранномуСкладуНаДату";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 7 опрашиваем 7 остатки по резервам ");
	
	CommandText77_Заявки = "
	|														select	
	|																-- ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр
	|																--,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As СпрФирмы_код
	|																
	|															     ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр
	|															    ,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код
	|															    ,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул
	|															    ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID
	|																
	|																,ISNULL(СпрСклады.DESCR, '') As СпрСклады_Стр
	|																,ISNULL(dbo.AddToPrefixStr(СпрСклады.code,'',9), '') As СпрСклады_код 
	|																												
	|															    --,TabJ.IDDOCDEF as ЗаявкаДф
	|																,'''' + TabJ.IDDOC + ''''  as ЗаявкаИд
	|																,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as ЗаявкаДт
	|																,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as ЗаявкаНм

	|																,TMP_2.Резерв
	|														FROM		
	|															    (	
	|																		select	
	|																			--TMP_1.Фирма,									
	|																			TMP_1.Номенклатура,									
	|																			TMP_1.Склад,
	|																			TMP_1.Заявка,
	|																			SUM(TMP_1.НачОстРезерв + TMP_1.ПриходРезерв - TMP_1.РасходРезерв) As Резерв
	|																												
	|																		From										
	|																			(									
	|																					

	|																					SELECT							
	|																						TabRegOstRez.SP4475 As Фирма,						
	|																						TabRegOstRez.SP4477 As Номенклатура,						
	|																						TabRegOstRez.SP4476 As Склад,
	|																						TabRegOstRez.SP4762	As Заявка,
	|																						TabRegOstRez.SP4479 As НачОстРезерв,						
	|																						0 As ПриходРезерв,						
	|																						0 As РасходРезерв				
	|																					FROM							
	|																						RG4480 As TabRegOstRez (NOLOCK)						
	|																					WHERE							
	|																						TabRegOstRez.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112)						
	//|                                                     " + ?(пар_стридсклада = "", "", " AND TabRegOstRez.SP4476 = " + пар_стридсклада ) + "
	//|                                              " + ?(пар_стридрегистраторов = "", "", " AND TabRegOstRez.SP4762 IN (" + пар_стридрегистраторов + ")") + "
	
	 |" + ?( ДобавитьДвиженияЗаПериод ,
	 
	 
	 "
	|																					UNION ALL							
	|																												
	|																					SELECT							
	|																						TabRegRez.SP4475 As Фирма,						
	|																						TabRegRez.SP4477 As Номенклатура,						
	|																						TabRegRez.SP4476 As Склад,
	|																						TabRegRez.SP4762 As Заявка,						
	|																						0 As НачОстРезерв,						
	|																						(TabRegRez.SP4479*((TabRegRez.DEBKRED+1)%2)) As ПриходРезерв,						
	|																						(TabRegRez.SP4479*TabRegRez.DEBKRED) As РасходРезерв
	|																					FROM							
	|																						RA4480 As TabRegRez (NOLOCK)						
	|																						INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabRegRez.IDDOC = TabJ.IDDOC)						
	|																					WHERE							
	|																						TabJ.DATE_TIME_IDDOC >= '" + PERIODN + "' AND TabJ.DATE_TIME_IDDOC < '" + PERIODK + "'						
	//|                                                     " + ?(пар_стридсклада = "", "", " AND TabRegRez.SP4476 = " + пар_стридсклада ) + "
	//|                                              " + ?(пар_стридрегистраторов = "", "", " AND TabRegRez.SP4762 IN (" + пар_стридрегистраторов + ")") + "
	|" 
	 
	 , "") 	+ "
	
	
	
	|																			) as TMP_1 									
	|																												
	|																		GROUP BY 									
	|																			--TMP_1.Фирма,
	|																			TMP_1.Номенклатура,									
	|																			TMP_1.Склад,
	|																			TMP_1.Заявка									
|																		having
|																			SUM(TMP_1.НачОстРезерв + TMP_1.ПриходРезерв - TMP_1.РасходРезерв) <> 0

	|														        ) as TMP_2


	|															 --left JOIN SC4014 AS СпрФирмы (NOLOCK) ON TMP_2.Фирма = СпрФирмы.ID
	|															 left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID
	|															 left JOIN SC55 AS СпрСклады (NOLOCK) ON TMP_2.Склад = СпрСклады.ID
	|															 
	/////////////////////////////////////////////////////////////left JOIN _1SJOURN  As TabJ (NOLOCK) ON (TMP_2.Заявка = TabJ.IDDOC)
															|	 left JOIN DH2457  As DH (NOLOCK) ON (TMP_2.Заявка = DH.IDDOC)
															|	 left JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.SP8893 = TabJ.DOCNO)
															|WHERE
															|	TabJ.IDDOCDEF = 2457 
															|	AND TabJ.DATE_TIME_IDDOC >= '2017-01-01 00:00:00'

	|														order by

	|															TMP_2.Заявка,
	|															--TMP_2.Фирма,
	|															TMP_2.Склад,
	|															TMP_2.Номенклатура
	|
	
	|";
	
	
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
		
	Сч = 0;
		тзДанные77_Резервы = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 9 тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		тзДанные77_Резервы.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		//тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		тзДанные77_Резервы.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		тзДанные77_Резервы.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );

		//тзДанные77_Резервы.ВыбратьСтроку();

		//л_СкладФильтр = Справочники.Склады.ПустаяСсылка();
		//Если ЗначениеЗаполнено(пар_стркодсклада) тогда
		//	л_СкладФильтр = Справочники.Склады.НайтиПоКоду(СокрЛП(пар_стркодсклада));
		//	ДобавитьВЛог("л_СкладФильтр = " + СокрЛП(л_СкладФильтр));
		//КонецЕсли;
		//////////////л_СкладФильтр = ПравилаИгры.ВыбСклад;
		//////////////ДобавитьВЛог("л_СкладФильтр = " + СокрЛП(л_СкладФильтр));		
	
		ОтборПоИдСайта = Новый Структура();
    	Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			//ДобавитьВЛог(Сч);
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 9 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			//т_Заявка = НайтиЗаявкуПоНомеруДате(НоваяСтрока.p10,НоваяСтрока.p9);
			//Если ЗначениеЗаполнено(т_Заявка) тогда
			//	НоваяСтрока.Заявка = т_Заявка;
			//Иначе
			//	ДобавитьВЛог("караул2 - не найдена заявка");
			//КонецЕсли;
			НоваяСтрока.Док8Номер = НоваяСтрока.p8;
			
			УИДтов = СокрЛП(НоваяСтрока.p3);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			
			ПараметрыТовара = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(НайденнаяНоменклатура,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыТовара.Код) тогда
				НоваяСтрока.Номенклатура = НайденнаяНоменклатура;
			Иначе
				ДобавитьВЛог("караул3 - не определена номенклатура");
			КонецЕсли;
			
			////НайденнаяСсылкаС = л_СкладФильтр;
			////Если НайденнаяСсылкаС = Справочники.Склады.ПустаяСсылка() тогда
			
			код7ки = СокрЛП(НоваяСтрока.p5);
			лиднули = Лев("000000000",9-стрДлина(код7ки));
			кодскл = лиднули + код7ки;
			
			
				//НайденнаяСсылкаС = Справочники.Склады.НайтиПоКоду(кодскл);
				НайденнаяСсылкаС = Справочники.Склады.НайтиПоКоду(кодскл);
				
				//Запрос = Новый Запрос;
				//Запрос.Текст =
				//                              "ВЫБРАТЬ
				// |	Склады.Ссылка  КАК Скл
				// |ИЗ
				// |	Справочник.Склады КАК Склады
				// |ГДЕ
				// |	Склады.Код = &КодП";
				//Запрос.УстановитьПараметр("КодП", кодскл);
				//трез = Запрос.Выполнить().Выгрузить();
				//Если трез.Количество() > 0 тогда
				//	НайденнаяСсылкаС = трез[0].Скл;
				//КонецЕсли;
				
				Если НайденнаяСсылкаС = Справочники.Склады.ПустаяСсылка() Тогда
					ДобавитьВЛог("караул4 - не найден склад {" + кодскл + "}");
				Иначе
					НоваяСтрока.Склад = НайденнаяСсылкаС;
					//ДобавитьВЛог("караул4444 - найден склад {" + кодскл + "}");
				КонецЕсли;
			////Иначе
			////	НоваяСтрока.Склад = НайденнаяСсылкаС;
			////КонецЕсли;
			
			//НайденнаяСсылкаФ = Справочники.Организации.НайтиПоКоду(СокрЛП(НоваяСтрока.p1));
			//Если НайденнаяСсылкаФ = Справочники.Организации.ПустаяСсылка() Тогда
			//	ДобавитьВЛог("караул5 - не найдена фирма");
			//Иначе
			//	НоваяСтрока.Фирма = НайденнаяСсылкаФ;
			//КонецЕсли;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		//тзДанные77_Резервы.ВыбратьСтроку();
		ИмяВременногоФайлика = ПолучитьИмяВременногоФайла("txt");
		//Сообщить(ИмяВременногоФайлика);
		
		стр_ост = "";
		счсчсч = 0;
		
		ТЗДок8 = НайтиЗаявку8ПоНомеру(тзДанные77_Резервы.ВыгрузитьКолонку("Док8Номер"));
		ТЗДок8_Количество = ТЗДок8.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗДок8_Количество = " + СокрлП(ТЗДок8_Количество));
		Если ТЗДок8_Количество > 0 тогда
			Счп = 0;
			Для каждого стрд из тзДанные77_Резервы цикл
				Счп = Счп + 1;
				Шоумастгоон(имяселекта + "->" + СокрлП(Счп));
				
				сЦылкаНаЗаявку = "";
				НайденнаяСтрока = ТЗДок8.Найти(стрд.Док8Номер, "Номер");
				Если НайденнаяСтрока = Неопределено Тогда
					ДобавитьВЛог("караул22 - не найдена заявка " + стрд.Док8Номер);
				Иначе
					стрд.Заявка = НайденнаяСтрока.Заявка;
					сЦылкаНаЗаявку = НайденнаяСтрока.Заявка.УникальныйИдентификатор();
				КонецЕсли;
				
	//0|															     ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр
	//1|															    ,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код
	//2|															    ,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул
	//3|															    ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID
	//4|																,ISNULL(СпрСклады.DESCR, '') As СпрСклады_Стр
	//5|																,ISNULL(dbo.AddToPrefixStr(СпрСклады.code,'',9), '') As СпрСклады_код 
	//6|																,'''' + TabJ.IDDOC + ''''  as ЗаявкаИд
	//7|																,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as ЗаявкаДт
	//8|																,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as ЗаявкаНм
	//9|																,TMP_2.Резерв
		// тзДанные77_Резервы.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		// тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		// тзДанные77_Резервы.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
				Если Логировать тогда
			        счсчсч = счсчсч + 1;
					//Состояние(СокрлП(счсчсч));
					
					стр_ост = стр_ост + Символы.ПС + СокрлП(стрд.p5) + ";" + СокрлП(стрд.p3)  + ";" + сЦылкаНаЗаявку  + ";" + Формат(стрд.p9,"ЧЦ=15; ЧДЦ=2; ЧРГ=");
					
					Если Цел(счсчсч/1000) = счсчсч/1000 тогда
						ЗаписатьКусманчикВФал(стр_ост,ИмяВременногоФайлика);
						стр_ост = "";
					КонецЕсли;
					
				КонецЕсли;	
				
				
			КонецЦикла;
			
			
			Если Логировать тогда
				
				Если ЗначениеЗаполнено(стр_ост) тогда
					ЗаписатьКусманчикВФал(стр_ост,ИмяВременногоФайлика);
				КонецЕсли;
				
				ОстФайл_Имя = СтрЗаменить(ПравилаИгры.ИмяФайлаДляЗагрузкиОстатков1с77в1с83ПоРезервам,"ДтВрмОст",РазвернутьДатуВстроку(ПравилаИгры.ДтПоУмолчанию));
				ОстФайл = Новый Файл(ОстФайл_Имя);
				Если ОстФайл.Существует() Тогда
					УдалитьФайлы(ОстФайл_Имя);  
				КонецЕсли;
				
				//Сообщить(ОстФайл_Имя);
				ПереместитьФайл(ИмяВременногоФайлика, ОстФайл_Имя);
			КонецЕсли;
			
		КонецЕсли;
		
		ВыборкаSQL.Close();
		
		тзрез = тзДанные77_Резервы.Скопировать(); 
		
	
	Возврат тзрез;
	
КонецФункции
Функция Опросить7_ОстаткиПоЗаявкам(пар_стридрегистраторов,PERIODR,PERIODN,PERIODK)
	имяселекта = "select from sql db ОстаткиПоЗаявкам";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 9 опрашиваем 7 остатки по заявкам ");
	
	тзДанные77_Резервы = Новый ТаблицаЗначений;
	
	CommandText77_Заявки = "
															|select	 --top 100
															
															|		 ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр
															|		,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As СпрФирмы_код
															|		
															|	    ,ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр
															|	    ,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код
															|	    ,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул
															|	    ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID
															|		
															|	    --,TabJ.IDDOCDEF as ЗаявкаДф
															|		,'''' + TabJ.IDDOC + ''''  as ЗаявкаИд
															|		,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as ЗаявкаДт
															|		,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as ЗаявкаНм

															|		,TMP_2.вРаботе
															|FROM		
															|	    (	

															|				select	
															|					TMP_1.Фирма,									
															|					TMP_1.Номенклатура,									
															|					TMP_1.Заявка,
															|					SUM(TMP_1.НачОст + TMP_1.Приход - TMP_1.Расход) As вРаботе
															|												
															|				From										
															|					(									
															|							SELECT	--top 10						
															|								TabRegOstRez.SP4668 As Фирма,						
															|								TabRegOstRez.SP4669 As Номенклатура,						
															|								TabRegOstRez.SP4671	As Заявка,
															|								TabRegOstRez.SP4672 As НачОст,						
															|								0 As Приход,						
															|								0 As Расход				
															|							FROM							
															|								RG4674 As TabRegOstRez (NOLOCK)						
															|							WHERE							
															//|								TabRegOstRez.PERIOD = CONVERT(DateTime, '20160901',112) AND
															|								TabRegOstRez.SP9647 = 3 AND
	|																						TabRegOstRez.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112)						
	|                                               " + ?(пар_стридрегистраторов = "", "", "AND TabRegOstRez.SP4669 IN (" + пар_стридрегистраторов + ")") + "
															|							UNION ALL							

															|							SELECT  --top 10						
															|								TabRegRez.SP4668 As Фирма,						
															|								TabRegRez.SP4669 As Номенклатура,						
															|								TabRegRez.SP4671 As Заявка,						
															|								0 As НачОст,						
															|								(TabRegRez.SP4672*((TabRegRez.DEBKRED+1)%2)) As Приход,						
															|								(TabRegRez.SP4672*TabRegRez.DEBKRED) As Расход
															|							FROM							
															|								RA4674 As TabRegRez (NOLOCK)						
															|								INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabRegRez.IDDOC = TabJ.IDDOC)						
															|							WHERE							
	//														|								TabJ.DATE_TIME_IDDOC >= '20161001' AND TabJ.DATE_TIME_IDDOC < '20161002'						
	|																						TabJ.DATE_TIME_IDDOC >= '" + PERIODN + "' AND TabJ.DATE_TIME_IDDOC < '" + PERIODK + "'						
	|                                               " + ?(пар_стридрегистраторов = "", "", "AND TabRegRez.SP4671 IN (" + пар_стридрегистраторов + ")") + "
															|					) as TMP_1 									
															|														
															|				GROUP BY 									
															|					TMP_1.Фирма,
															|					TMP_1.Номенклатура,									
															|					TMP_1.Заявка
															|					
															|				having
															|					SUM(TMP_1.НачОст + TMP_1.Приход - TMP_1.Расход) > 0										
															|      
															|	    ) as TMP_2

															|	 left JOIN SC4014 AS СпрФирмы (NOLOCK) ON TMP_2.Фирма = СпрФирмы.ID
															|	 left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID
															|	 left JOIN _1SJOURN  As TabJ (NOLOCK) ON (TMP_2.Заявка = TabJ.IDDOC)

															|--WHERE
															|--	TMP_2.вРаботе > 0

															|order by

															|	TMP_2.Заявка,
															|	TMP_2.Фирма,
															|	TMP_2.Номенклатура
	|";
		
	
	//	rsRES77 = NEW COMObject("ADODB.Recordset");
	Сч = 0;
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
	
	
	
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 9 тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		тзДанные77_Резервы.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));


//		ОтборПоИдСайта = Новый Структура();
    	Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			//ДобавитьВЛог(Сч);
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 9 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			т_Заявка = НайтиЗаявкуПоНомеруДате(НоваяСтрока.p8,НоваяСтрока.p7);
			Если ЗначениеЗаполнено(т_Заявка) тогда
				НоваяСтрока.Заявка = т_Заявка;
			Иначе
				ДобавитьВЛог("караул2");
			КонецЕсли;

			УИДтов = СокрЛП(НоваяСтрока.p5);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			НайденнаяНоменклатура_Код = "";
			Попытка
				НайденнаяНоменклатура_Код = НайденнаяНоменклатура.ПолучитьОбъект().Код;
			Исключение
			КонецПопытки;
			Если ЗначениеЗаполнено(НайденнаяНоменклатура_Код) тогда
				НоваяСтрока.Номенклатура = НайденнаяНоменклатура;
			Иначе
				ДобавитьВЛог("караул3");
			КонецЕсли;
			
			НайденнаяСсылкаФ = Справочники.Организации.НайтиПоКоду(СокрЛП(НоваяСтрока.p1));
			Если НайденнаяСсылкаФ = Справочники.Организации.ПустаяСсылка() Тогда
				ДобавитьВЛог("караул5");
			Иначе
				НоваяСтрока.Фирма = НайденнаяСсылкаФ;
			КонецЕсли;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		ВыборкаSQL.Close();
		
		тзрез = тзДанные77_Резервы.Скопировать(); 
	
	Возврат тзрез;
	
КонецФункции
Функция Опросить7_Склады()
	имяселекта = "select from sql db СправочникСкладов";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	
	тзДанные77_склады = Новый ТаблицаЗначений;
	
	CommandText77_Заявки = "
	|select	 
	|		СпрСклады.ID As СпрСклады_ИД,
	|		СпрСклады.DESCR As СпрСклады_Стр,
	//|   	СпрСклады.code As СпрСклады_Код7,
	|   	dbo.AddToPrefixStr(СпрСклады.code,'',9) As СпрСклады_Код8 
	|from		
	|		SC55 AS СпрСклады (NOLOCK)
	|order by
	|		СпрСклады.DESCR
	|";
		
	
	Сч = 0;
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
        //ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
		
		тзДанные77_Скл = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			тзДанные77_Скл.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		КонецЦикла;
		
		ОтборПоИдСайта = Новый Структура();
    	Пока не ВыборкаSQL.eof() Цикл
			Сч = Сч + 1;
			Шоумастгоон(имяселекта  + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Скл.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
			КонецЦикла;
				
			ВыборкаSQL.MoveNext();	
		КонецЦикла;	
		
		ВыборкаSQL.Close();
		
		тзрез = тзДанные77_Скл.Скопировать(); 
	
	Возврат тзрез;
	
КонецФункции
Функция Опросить7_ТекСостояния()
	имяселекта = "select from sql db ТекСостоянияЗаявок";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 77 опрашиваем 7 тек состояния ");
	
	Ч = ПравилаИгры.Ч;
	отбор_заказов_по_логину = "rozn@part-kom.ru";
	глубина_запроса_в_днях = Строка(ПравилаИгры.сколько_дней_в_месяце_смотреть_максимум);//"30";
	
	CommandText77_Заявки = "
	|select " + ?(Вход_Тест, " top " + СокрЛП(Формат(Ч, "ЧЦ=15; ЧДЦ=0; ЧГ=0")) , "" ) + "
	|	*
	//|   ,dbo.AddToPrefixStr(SP8933,'',11) as dnm
	|   , LEFT ( SP8933 , 3 )+ '0'+ SUBSTRING ( SP8933 , 4 , 7 ) as dnm  

	//|,	' 6W2'+id as id_from_join_history  
	//|,	ID_Site
	//|,	DESCR as Описание
	
	//|,	SP8932 as Логин 
	
	//|,	SP8933 as ЗаявкаНомер
	//|,	SP8934 as ЗаявкаДата
	//|,	SP8936 as Наименование
	
	//|,	SP8937 as Артикул
	//|,	SP11018 as АртикулДоЗамены
	//|,	SP8938 as Изготовитель 
	//|,	SP8940 as Цена       13 
	
	//|,	SP8943 as КолЗаявка  14
	//|,	SP8944 as КолЗаказ   15
	//|,	SP8942 as ДатаПоступления  
	//|,	SP8945 as КолОтказ   17     
	//|,	SP8946 as КолРезерв  18
	//|,	SP8947 as КолОтгружено 19
	
	//|,	SP8941 as ОснСостояние    справочники.длясайта виды состояний
	//|,	SP9086 as ДопСостояние
	
	//|,	SP9131 as КодПоставщика  22
	
	//|,	SP9164 as ДатаМСК          
	//|,	SP9170 as СостояниеМСК
	//|,	SP9821 as ДнейПоставки
	//|,	SP9822 as ДляСайтаАрхив
	//|,	SP9959 as ВремяЗагрЗаявки
	//|,	SP10090 as МинКолПартии
	//|,	SP10134 as ДляСайта       
	//|,	SP10155 as ЦенаПоставщика   
	//|,	SP10403 as ДатаПереноса     
	//|,	SP10404 as НачКолЗаявка    
	//|,	SP10761 as СрокПоставки     
	//|,	SP10797 as ЗаказНомер      
	//|,	SP10798 as ЗаказДата 
	//|,	SP10894 as НачЦенаПродажи
	//|,	SP9127 as КомментИзСайта  
	//|,	SP9165 as КомментМСК
	//
	//|,	SP9221 as ДатаИзменения
	//|,	SP9222 as ОснСостояние
	//|,	SP9223 as ДопСостояние
	//|,	SP9405 as ВремяИзменения
	//|,	SP9406 as КодПоставщика
	//|,	SP10405 as Кол

	//|,	SP11316 as КодСкладаРезерва
	//|,	SP11318 as КодСкладаРезерва
	//|,	DAYS_AVG_SUPPLIER as ОжидСрокЗаказа
	//|,	DAYS_GARANT_SUPPLIER as ГарантСрокЗаказа
	//|,	DAYS_AVG_CLIENT as ОжидСрокЗаявки
	//|,	DAYS_GARANT_CLIENT as ГарантСрокЗаявки
	//
	//|,	SP10893 as ПарамПерезаказа
	//|,	SP10895 as ВремяПослИзменения
	//|,	SP10896 as ДатаОТгрузкиПоследняя
	
	|FROM dbo.SC8930 WITH (nolock) 
	|where SP10895 > getdate()-"+СокрЛП(глубина_запроса_в_днях)+" -- and SP8932 like '"+отбор_заказов_по_логину+"' 
	|ORDER BY SP8934 DESC, SP8932, SP8933, SP8937, SP8941, SP10403
	|";
	
	
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL2.Open(CommandText77_Заявки, СоединениеSQL2);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
		
	Сч = 0;
		тзДанные77_Резервы = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL2.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 13 или ii = 14 или ii = 15  или ii = 17 или ii = 18 или ii = 19 или ii = 22  тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		тзДанные77_Резервы.Колонки.Добавить("Заявка",Новый ОписаниеТипов("ДокументСсылка.ЗаявкаПокупателя"));
		тзДанные77_Резервы.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаявкаПокупателя"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Резервы.Колонки.Добавить("Док8",	ОписаниеТиповДок);
		тзДанные77_Резервы.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );
		
		тзДанные77_Резервы.Колонки.Добавить("СтрЗаявки",Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокЗаявок"));
		
		тзДанные77_Резервы.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		тзДанные77_Резервы.Колонки.Добавить("ТТ",Новый ОписаниеТипов("СправочникСсылка.ТорговыеТочки"));
		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		//тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		
		
		тзДанные77_Резервы.Колонки.Добавить("Прайс_Код", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(9, ДопустимаяДлина.Переменная)) );
		тзДанные77_Резервы.Колонки.Добавить("Прайс",Новый ОписаниеТипов("СправочникСсылка.ПрайсыПоставщиков"));
		тзДанные77_Резервы.Колонки.Добавить("Поставщик",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		тзДанные77_Резервы.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		//////////////л_СкладФильтр = ПравилаИгры.ВыбСклад;
		//////////////ДобавитьВЛог("л_СкладФильтр = " + СокрЛП(л_СкладФильтр));		
	
		ОтборПоИдСайта = Новый Структура();
    	Пока не ВыборкаSQL2.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			Для iii = 0 ПО ВыборкаSQL2.Fields.Count-1 Цикл
				Если iii = 13 или iii = 14 или iii = 15  или iii = 17 или iii = 18 или iii = 19 или iii = 22  тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL2.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL2.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрока.Док8Номер = НоваяСтрока.p48;
			
			ВыборкаSQL2.MoveNext();
		КонецЦикла;
		
		ТЗКА = НайтиКАпоЛогину(тзДанные77_Резервы.ВыгрузитьКолонку("p6"));
		ТЗКА_Количество = ТЗКА.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗКА_Количество = " + СокрлП(ТЗКА_Количество));
		
		ТЗТов =  НайтиТов8ПоНомеру(тзДанные77_Резервы.ВыгрузитьКолонку("p10"),тзДанные77_Резервы.ВыгрузитьКолонку("p12"));
		ТЗТов_Количество = ТЗТов.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗТов_Количество = " + СокрлП(ТЗТов_Количество));
		
		ТЗДок8 = НайтиДок8ПоНомеру(тзДанные77_Резервы.ВыгрузитьКолонку("Док8Номер"));
		ТЗДок8_Количество = ТЗДок8.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗДок8_Количество = " + СокрлП(ТЗДок8_Количество));
		
		Если ТЗДок8_Количество > 0 или ТЗТов_Количество > 0 тогда
			Счп = 0;
			Для каждого стрд из тзДанные77_Резервы цикл
				Счп = Счп + 1;
				Шоумастгоон(имяселекта + "->" + СокрлП(Счп));
				/////
				НайденнаяСтрока = ТЗДок8.Найти(стрд.Док8Номер, "Номер");
				Если НайденнаяСтрока = Неопределено Тогда
				Иначе
					тДок = НайденнаяСтрока.Заявка;
					Если ТипЗнч(тДок) = Тип("ДокументСсылка.ЗаявкаПокупателя") Тогда
						стрд.Заявка = тДок;
						стрд.Док8 = тДок;
					ИначеЕсли ТипЗнч(тДок) = Тип("ДокументСсылка.КорректировкаЗаявкиПокупателя") Тогда
						стрд.Корректировка = тДок;
						стрд.Док8 = тДок;
					КонецЕсли;					
				КонецЕсли;
				/////
				лТов  = Справочники.Номенклатура.ПустаяСсылка();
				Отбор = Новый Структура();
				Отбор.Вставить("Артикул",СокрЛП(стрд.p10));
				Отбор.Вставить("Изготовитель_Наименование",СокрлП(стрд.p12));
				Строки = ТЗТов.НайтиСтроки(Отбор);
				КолВар = Строки.Количество();
				Если КолВар > 0 Тогда
					лАдрес = Строки[0];
					Если КолВар > 1 тогда
						Для Каждого ЭлементМассива из Строки Цикл
					        Если ВРЕГ(СокрЛП(ЭлементМассива.Наименование)) = ВРЕГ(СокрЛП(стрд.p9)) тогда
								лАдрес = ЭлементМассива;
								Прервать;
							КонецЕсли;
					    КонецЦикла;			   
				    КонецЕсли;
					лТов = лАдрес.Номенклатура;
				КонецЕсли;
				Если НЕ лТов  = Справочники.Номенклатура.ПустаяСсылка() тогда
					стрд.Номенклатура = лТов;	
				КонецЕсли;
				/////
				НайденнаяСтрока = ТЗКА.Найти(стрд.p6, "Логин_Код");
				Если НайденнаяСтрока = Неопределено Тогда
				Иначе
				    стрд.Контрагент = НайденнаяСтрока.КА;
					стрд.ТТ = НайденнаяСтрока.ТТ;
				КонецЕсли;
				////
				стрд.Прайс_Код = Строка(Формат(стрд.p22,"ЧЦ=9; ЧВН=; ЧГ=0"));
			КонецЦикла;
		КонецЕсли;
		
		ТЗСтрИД = НайтиСтрокуЗаявки8(тзДанные77_Резервы.ВыгрузитьКолонку("p2"), тзДанные77_Резервы.ВыгрузитьКолонку("Заявка"));
		ТЗСтрИД_Количество = ТЗСтрИД.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗСтрИД_Количество = " + СокрлП(ТЗСтрИД_Количество));
		
		ТЗПрайсы = НайтиПрайсыПоКоду(тзДанные77_Резервы.ВыгрузитьКолонку("Прайс_Код"));
		ТЗПрайсы_Количество = ТЗПрайсы.Количество();
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗПрайсы_Количество = " + СокрлП(ТЗПрайсы_Количество));
		
		Если ТЗСтрИД_Количество > 0 или ТЗПрайсы_Количество > 0 тогда
			Счп = 0;
			Для каждого стрд из тзДанные77_Резервы цикл
				Счп = Счп + 1;
				Шоумастгоон(имяселекта + "->" + СокрлП(Счп));
                /////
				лСтрИд  = Справочники.ИдентификаторыСтрокЗаявок.ПустаяСсылка();
				Отбор = Новый Структура();
				Отбор.Вставить("Заявка",стрд.Заявка);
				Отбор.Вставить("IDSite",СокрлП(стрд.p2));
				Строки = ТЗСтрИД.НайтиСтроки(Отбор);
				КолВар = Строки.Количество();
				Если КолВар > 0 Тогда
					лАдрес = Строки[0];
					лСтрИд = лАдрес.СтрокаЗаявки;
				КонецЕсли;
				Если НЕ лСтрИд  = Справочники.ИдентификаторыСтрокЗаявок.ПустаяСсылка() тогда
					стрд.СтрЗаявки = лСтрИд;	
				КонецЕсли;
				/////
				НайденнаяСтрока = ТЗПрайсы.Найти(стрд.Прайс_Код, "Прайс_Код");
				Если НайденнаяСтрока = Неопределено Тогда
				Иначе
					стрд.Прайс = НайденнаяСтрока.Прайс;
					стрд.Поставщик = НайденнаяСтрока.Поставщик;
				    стрд.Склад = НайденнаяСтрока.Склад;
				КонецЕсли;
                /////
			КонецЦикла;
		КонецЕсли;
		
		ВыборкаSQL2.Close();
		
		тзрез = тзДанные77_Резервы.Скопировать(); 
		
	
	Возврат тзрез;
	
КонецФункции

Процедура Опросить7_хедеры_НО()
	
	имяселекта = "select from sql db НакладныеНаОтгрузку	";
	Шоумастгоон(имяселекта);
	
	НачПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.НачПериода);
	КонПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.КонПериода);
	
	ДобавитьВЛог(имяселекта + "НачПериодаСтр >= " + НачПериодаСтр);
	ДобавитьВЛог(имяселекта + "КонПериодаСтр <  " + КонПериодаСтр);
	
	////////////Ч = ПравилаИгры.Ч;
	////////////Если НЕ ПравилаИгры.АвтоПеребор тогда
	////////////	Если НЕ ВвестиЧисло(
	////////////				        Ч,
	////////////				        "Желаемое кол строк",
	////////////				        6, // длина числа, включая дробную часть без разделителя
	////////////				        0  // длина дробной части
	////////////					    )
	////////////					    Тогда
	////////////        Возврат;
	////////////	КонецЕсли;
	////////////КонецЕсли;
	////////////Если Ч < 1 тогда
	////////////	Возврат;
	////////////КонецЕсли;
	////////////Если Ч > ПравилаИгры.Чмакс тогда
	////////////	Ч = ПравилаИгры.Чмакс;
	////////////КонецЕсли;
	////////////ДобавитьВЛог("SELECT top " + СокрЛП(Ч) );
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	//пар_стридсклада = ПравилаИгры.ВыбСклад_Ид;
	
	ТекДтВрм =  ТекущаяДата();
	ДобавитьВЛог(СокрлП(ТекДтВрм) + " - ШАГ 1 опрашиваем 7 хедеры НО");
	
	CommandText77_Контрагенты = 
	"
	|SELECT --top 1000
	/////////////|	  top " + СокрЛП(Формат(Ч, "ЧЦ=15; ЧДЦ=0; ЧГ=0"))+ "
	|	  TabJ.IDDOC
	|    ,TabJ.DOCNO
	|    ,TabJ.DATE_TIME_IDDOC
	|	 ,'''' + TabJ.IDDOC + ''''
	
	|FROM dbo.DH7638  As DH (NOLOCK) 
	|INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.IDDOC = TabJ.IDDOC)
	
	|WHERE
	|	    TabJ.DATE_TIME_IDDOC >= '" + НачПериодаСтр + "'
	|	AND TabJ.DATE_TIME_IDDOC <  '" + КонПериодаСтр + "' 
	|	AND TabJ.CLOSED = 1
	////////////////////|  " + ?(пар_стридсклада = "", "", " AND DH.SP7606 = " + пар_стридсклада ) + "
	
	|
	|ORDER BY
	|	TabJ.DATE_TIME_IDDOC DESC
	|";
	
	
	//ДГ = СокрлП( Формат( ДеньГода(ТекДтВрм) , "ЧЦ=3; ЧДЦ=; ЧВН="        )   );
	//метка = ДГ +"_"+ СокрЛП(Год(ТекДтВрм)) + СокрЛП(Месяц(ТекДтВрм)) + СокрЛП(День(ТекДтВрм)) + СокрЛП(Час(ТекДтВрм))+ СокрЛП(Минута(ТекДтВрм))+СокрЛП(Секунда(ТекДтВрм));
	//метка = СтрЗаменить(метка," ","");

	СохранитьТекстВФайл(CommandText77_Контрагенты, "select_from_77_NO_"+  ПравилаИгры.метка);
	
	Сч = 0;
	Попытка
		ВыборкаSQL.Open(CommandText77_Контрагенты, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Контрагенты) + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	тзДанные77_НО = Новый ТаблицаЗначений;
	
	Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
		инд_К = "p"+СокрЛП(ii);
		имя_К = инд_К;
		тзДанные77_НО.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
	КонецЦикла;
	
	Пока не ВыборкаSQL.eof() Цикл
		Сч = Сч + 1;
		Шоумастгоон(имяселекта + СокрлП(Сч));
		
		НоваяСтрока = тзДанные77_НО.Добавить();
		Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
		КонецЦикла;
		
		ВыборкаSQL.MoveNext();
	КонецЦикла;
	ВыборкаSQL.Close();
	
	ДобавитьВЛог("тзДанные77_НО.Количество() = " + СокрЛП(тзДанные77_НО.Количество()));
	
	тзДанные77_НОРН = Новый ТаблицаЗначений;
	
	СчidВсего = 0 ;
	Счid  = 0;
	Счid_Дт  = 0;
	Стрid = "";
	
	Если тзДанные77_НО.Количество() > 0 тогда 
	
		ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - опрашиваем подчиненные НО Реализации");
		
		
		Для каждого стр из тзДанные77_НО цикл
			
			СчidВсего = СчidВсего + 1  ;
			Шоумастгоон(имяселекта + " " + СокрлП(Сч) + " -> " + СокрлП(СчidВсего));
			
			CommandText77_Контрагенты = 
			"
			|SELECT 
			|		   '''' + TabJ.IDDOC +'''',
			|    	   TabJ.DOCNO
			|		  ,left(TabJ.DATE_TIME_IDDOC, 8) as ДатаДок
			|		  , case
			|				when TabJ.DATE_TIME_IDDOC >= '" + КонПериодаСтр + "' then 1
			|				else 0
			|		    end Сч_БольшеДатыВремениРассыитываемогоОстатка
			|         ,'" + стр.p1 + "' as NODOCNO
			|         ,'" + стр.p0 + "' as NOID
			|FROM [dbo].[DH1611] as DH
			|   INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.IDDOC = TabJ.IDDOC)
			|where 
			|  TabJ.IDDOC IN (SELECT CHILDID FROM dbo._1SCRDOC (NOLOCK) WHERE CHILD_DATE_TIME_IDDOC >= '" + НачПериодаСтр + "' AND PARENTVAL = 'O1 5W6' + '" + стр.p0 + "' AND MDID = 0)
			|  AND TabJ.CLOSED = 1
			|";
			
			
			Счр = 0;
			Попытка
				ВыборкаSQL.Open(CommandText77_Контрагенты, СоединениеSQL);
			Исключение
				ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Контрагенты) + Символы.ПС + ОписаниеОшибки());
				Возврат;
			КонецПопытки;
			
			Если тзДанные77_НОРН.Колонки.Количество() = 0 тогда
				Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
					инд_К = "p"+СокрЛП(ii);
					имя_К = инд_К;
					Если ii = 3 тогда
						тзДанные77_НОРН.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
					Иначе
						тзДанные77_НОРН.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
				
			Пока не ВыборкаSQL.eof() Цикл
				Счр = Счр + 1;
				Шоумастгоон(имяселекта + " " + СокрлП(Сч) + " -> " + СокрлП(СчidВсего) + " : " + СокрлП(Счр));
				
				НоваяСтрока = тзДанные77_НОРН.Добавить();
				Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
					Если iii = 3 тогда
						НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
					Иначе
						НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
					КонецЕсли;
				КонецЦикла;
				
				ВыборкаSQL.MoveNext();
			КонецЦикла;
			
			ВыборкаSQL.Close();
			
		КонецЦикла;
		
		ДобавитьВЛог(имяселекта + " " + СокрлП(СчidВсего) + " из" + СокрлП(Сч));
		ДобавитьВЛог("Количество найденных Реализаций на основании НО Счid = " + СокрЛП(тзДанные77_НОРН.Количество()));
		ДобавитьВЛог("Количество Реал по НО, которые за чертой расчета остатков Счid_Дт = " + СокрЛП(тзДанные77_НОРН.Итог("p3")));
		
		ОтборПоПризнаку = Новый Структура();
		ОтборПоПризнаку.Вставить("p3",1);
		Строки = тзДанные77_НОРН.НайтиСтроки(ОтборПоПризнаку);
		Если Строки.Количество() > 0 Тогда
			Для Каждого ЭлементМассива из Строки Цикл
				Стрid = Стрid + "'" + ЭлементМассива.p5 + "',";
			КонецЦикла;		
			Стрid = Лев(Стрid, Стрдлина(Стрid)-1);
		КонецЕсли;
	
	КонецЕсли;

	СохранитьТекстВФайл(Стрid, "desired_result_NO_id_"+  ПравилаИгры.метка);
	ПравилаИгры.Вставить("ТабличноеПоле20", тзДанные77_НО);
	ПравилаИгры.Вставить("ТабличноеПоле21", тзДанные77_НОРН);
	ПравилаИгры.Вставить("стридНО", Стрid);
КонецПроцедуры
Процедура Опросить7_ТоварныйОстаток()
	имяселекта = "select from sql db ИтогиПоОстаткамНоменклатуры	";
	Шоумастгоон(имяселекта);
	
	//ДатОстСтр = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(ПравилаИгры.ДтПоУмолчанию,-1)));
	
	Темп_Дата = ПравилаИгры.ДтПоУмолчанию;
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата);
	
	ДобавитьДвиженияЗаПериод = Ложь;
	ДобавитьВЛог("PERIODR =  " + PERIODR);
	Если НЕ Темп_Дата = НачалоМесяца(Темп_Дата) тогда
		ДобавитьДвиженияЗаПериод = Истина;
		ДобавитьВЛог("PERIODN =  " + PERIODN);
		ДобавитьВЛог("PERIODK =  " + PERIODK);
	КонецЕсли;
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	    Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	//пар_стридсклада = ПравилаИгры.ВыбСклад_Ид;
	
	ТекДтВрм =  ТекущаяДата();
	ДобавитьВЛог(СокрлП(ТекДтВрм) + " - ШАГ 2 опрашиваем 7 итоги по остаткам и движения НО");
	
	
Если ПравилаИгры.ДтПоУмолчанию = Дата(2017,7,1) тогда	
//	ПравилаИгры.Вставить("стридНО","'1S8O6D   ','1S8O6D   ','1S8O6B   ','1S8O6B   ','1S8O6B   ','1S8O6B   ','1S8O68   ','1S8O68   ','1S8O68   ','1S8O68   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O63   ','1S8O63   ','1S8O63   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5R   ','1S8O5R   ','1S8O5O   ','1S8O5O   ','1S8O5M   ','1S8O5M   ','1S8O5M   ','1S8O5K   ','1S8O5K   ','1S8O5K   ','1S8O5K   ','1S8O5I   ','1S8O5I   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5B   ','1S8O5B   ','1S8O5B   ','1S8O5B   ','1S8O59   ','1S8O59   ','1S8O59   ','1S8O56   ','1S8O56   ','1S8O56   ','1S8O56   ','1S8O54   ','1S8O54   ','1S8O54   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O4Z   ','1S8O4Z   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4U   ','1S8O4U   ','1S8O4U   ','1S8O4U   ','1S8O4S   ','1S8O4S   ','1S8O4S   ','1S8O4Q   ','1S8O4Q   ','1S8O4O   ','1S8O4O   ','1S8O4O   ','1S8O4M   ','1S8O4M   ','1S8O4M   ','1S8O4J   ','1S8O4J   ','1S8O4J   ','1S8O4G   ','1S8O4G   ','1S8O4G   ','1S8O4G   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O48   ','1S8O48   ','1S8O48   ','1S8O45   ','1S8O45   ','1S8O43   ','1S8O43   ','1S8O41   ','1S8O41   ','1S8O41   ','1S8O3Z   ','1S8O3Z   ','1S8O3Z   ','1S8O3Z   ','1S8O3W   ','1S8O3W   ','1S8O3W   ','1S8O3U   ','1S8O3U   ','1S8O3R   ','1S8O3R   ','1S8O3R   ','1S8O3R   ','1S8O3P   ','1S8O3P   ','1S8O3P   ','1S8O3N   ','1S8O3N   ','1S8NSB   ','1S8NSB   ','1S8MO2   ','1S8MO2   ','1S8KB5   ','1S8KB5   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGS   ','1S8EGS   ','1S8EGS   ','1S8EGP   ','1S8EGP   ','1S8EGP   ','1S8EGP   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8K9X   ','1S8K9X   ','1S8EFJ   ','1S8EFJ   ','1S8EFJ   ','1S8EFJ   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EE1   ','1S8EE1   ','1S8EE1   ','1S8EE1   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ECZ   ','1S8ECZ   ','1S8ECZ   ','1S8ECK   ','1S8ECK   ','1S8ECK   ','1S8ECK   ','1S8EC5   ','1S8EC5   ','1S8EC5   ','1S8EC5   ','1S8K9V   ','1S8K9V   ','1S8EC2   ','1S8EC2   ','1S8EC2   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8K9S   ','1S8K9S   ','1S8K9Q   ','1S8K9Q   ','1S8K9O   ','1S8K9O   ','1S8K9O   ','1S8K9M   ','1S8K9M   ','1S8K9K   ','1S8K9K   ','1S8E9P   ','1S8E9P   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E8L   ','1S8E8L   ','1S8E8L   ','1S8E8L   ','1S8E84   ','1S8E84   ','1S8E84   ','1S8E71   ','1S8E71   ','1S8E71   ','1S8K9I   ','1S8K9I   ','1S8E6D   ','1S8E6D   ','1S8E6D   ','1S8E62   ','1S8E62   ','1S8E62   ','1S8K9G   ','1S8K9G   ','1S8E50   ','1S8E50   ','1S8E50   ','1S8K9E   ','1S8K9E   ','1S8K9B   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8K99   ','1S8K99   ','1S8K99   ','1S8K96   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8K93   ','1S8K93   ','1S8K91   ','1S8K91   ','1S8K8S   ','1S8K8S   ','1S8K88   ','1S8K88   ','1S8K3W   ','1S8K3W   ','1S8K3W   ','1S8K3T   ','1S8K3T   ','1S8K3R   ','1S8K3R   ','1S8K3P   ','1S8K3P   ','1S8K3P   ','1S8K3M   ','1S8K3M   ','1S8K3M   ','1S8K3K   ','1S8K3K   ','1S8K3I   ','1S8K3I   ','1S8K3I   ','1S8K3G   ','1S8K3G   ','1S8K3E   ','1S8K3E   ','1S8K3B   ','1S8K3B   ','1S8K39   ','1S8K39   ','1S8K36   ','1S8K36   ','1S8K34   ','1S8K34   ','1S8K31   ','1S8K31   ','1S8K31   ','1S8K2Z   ','1S8K2Z   ','1S8K2X   ','1S8K2X   ','1S8K2U   ','1S8K2U   ','1S8K2S   ','1S8K2S   ','1S8K2S   ','1S8K2S   ','1S8K2Q   ','1S8K2Q   ','1S8K2Q   ','1S8K2N   ','1S8K2N   ','1S8K2L   ','1S8K2L   ','1S8K2J   ','1S8K2J   ','1S8K2H   ','1S8K2H   ','1S8K2E   ','1S8K2E   ','1S8K2E   ','1S8K2E   ','1S8K2C   ','1S8K2C   ','1S8K29   ','1S8K29   ','1S8K29   ','1S8K27   ','1S8K27   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K21   ','1S8K21   ','1S8K21   ','1S8K21   ','1S8K1Y   ','1S8K1Y   ','1S8K1Y   ','1S8K1V   ','1S8K1V   ','1S8K1T   ','1S8K1T   ','1S8K1Q   ','1S8K1Q   ','1S8K1N   ','1S8K1N   ','1S8K1K   ','1S8K1K   ','1S8K1H   ','1S8K1H   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1C   ','1S8K1C   ','1S8K1C   ','1S8K1C   ','1S8K1A   ','1S8K1A   ','1S8K1A   ','1S8K1A   ','1S8IL0   ','1S8IL0   ','1S8IJO   ','1S8IJO   ','1S8II5   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II0   ','1S8II0   ','1S8II0   ','1S8IHY   ','1S8IHY   ','1S8IHY   ','1S8IHY   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHU   ','1S8IHU   ','1S8IHU   ','1S8IHS   ','1S8IHS   ','1S8IHS   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHN   ','1S8IHN   ','1S8IHN   ','1S8IHL   ','1S8IHL   ','1S8IHJ   ','1S8IHJ   ','1S8IHJ   ','1S8IHJ   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHE   ','1S8IHE   ','1S8IHE   ','1S8IHB   ','1S8IHB   ','1S8IHB   ','1S8IH9   ','1S8IH9   ','1S8IH9   ','1S8IH9   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH5   ','1S8IH5   ','1S8IH3   ','1S8IH3   ','1S8IH3   ','1S8IH3   ','1S8IH1   ','1S8IH1   ','1S8IGZ   ','1S8IGZ   ','1S8IGZ   ','1S8IGX   ','1S8IGX   ','1S8IGX   ','1S8IGX   ','1S8IGV   ','1S8IGV   ','1S8IGT   ','1S8IGT   ','1S8IGT   ','1S8IGQ   ','1S8IGQ   ','1S8IGQ   ','1S8IGQ   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGM   ','1S8IGM   ','1S8IGM   ','1S8IGK   ','1S8IGK   ','1S8IGK   ','1S8IGK   ','1S8IGH   ','1S8IGH   ','1S8IGF   ','1S8IGF   ','1S8IGD   ','1S8IGD   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IG8   ','1S8IG8   ','1S8IG6   ','1S8IG6   ','1S8IG6   ','1S8IG4   ','1S8IG4   ','1S8IG2   ','1S8IG2   ','1S8IG2   ','1S8IG2   ','1S8IG0   ','1S8IG0   ','1S8IFY   ','1S8IFY   ','1S8IFW   ','1S8IFW   ','1S8IFW   ','1S8IFU   ','1S8IFU   ','1S8IFU   ','1S8IFU   ','1S8IFS   ','1S8IFS   ','1S8IFP   ','1S8IFP   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFJ   ','1S8IFJ   ','1S8IFJ   ','1S8IFG   ','1S8IFG   ','1S8IFG   ','1S8IFE   ','1S8IFE   ','1S8IFE   ','1S8IFE   ','1S8IFC   ','1S8IFC   ','1S8IFA   ','1S8IFA   ','1S8IFA   ','1S8IF7   ','1S8IF7   ','1S8IF7   ','1S8IF7   ','1S8IF4   ','1S8IF4   ','1S8IF4   ','1S8IF4   ','1S8IF1   ','1S8IF1   ','1S8IF1   ','1S8IF1   ','1S8IEZ   ','1S8IEZ   ','1S8IEW   ','1S8IEW   ','1S8IEU   ','1S8IEU   ','1S8IER   ','1S8IER   ','1S8IER   ','1S8IER   ','1S8IEO   ','1S8IEO   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEJ   ','1S8IEJ   ','1S8IEJ   ','1S8IEJ   ','1S8IEH   ','1S8IEH   ','1S8IEH   ','1S8IEH   ','1S8IEF   ','1S8IEF   ','1S8IEF   ','1S8IEF   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IEB   ','1S8IEB   ','1S8IE8   ','1S8IE8   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE3   ','1S8IE3   ','1S8IE3   ','1S8IE3   ','1S8IE0   ','1S8IE0   ','1S8IDX   ','1S8IDX   ','1S8IDX   ','1S8IDV   ','1S8IDV   ','1S8IDS   ','1S8IDS   ','1S8IDP   ','1S8IDP   ','1S8IDP   ','1S8IDP   ','1S8IDN   ','1S8IDN   ','1S8IDL   ','1S8IDL   ','1S8IDL   ','1S8IDI   ','1S8IDI   ','1S8IDI   ','1S8IDG   ','1S8IDG   ','1S8IDG   ','1S8IDD   ','1S8IDD   ','1S8IDD   ','1S8IDB   ','1S8IDB   ','1S8IDB   ','1S8ID9   ','1S8ID9   ','1S8ID9   ','1S8ID7   ','1S8ID7   ','1S8ID5   ','1S8ID5   ','1S8ID2   ','1S8ID2   ','1S8ID0   ','1S8ID0   ','1S8ID0   ','1S8ID0   ','1S8ICX   ','1S8ICX   ','1S8ICV   ','1S8ICV   ','1S8ICV   ','1S8ICV   ','1S8ICT   ','1S8ICT   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICN   ','1S8ICN   ','1S8ICN   ','1S8ICN   ','1S8ICK   ','1S8ICK   ','1S8ICK   ','1S8ICK   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICF   ','1S8ICF   ','1S8ICD   ','1S8ICD   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8IC7   ','1S8IC7   ','1S8IC4   ','1S8IC4   ','1S8IC4   ','1S8IC1   ','1S8IC1   ','1S8IC1   ','1S8IC1   ','1S8IBZ   ','1S8IBZ   ','1S8IBZ   ','1S8IBZ   ','1S8IBX   ','1S8IBX   ','1S8IBX   ','1S8IBU   ','1S8IBU   ','1S8IBU   ','1S8IBR   ','1S8IBR   ','1S8IBR   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBN   ','1S8IBN   ','1S8IBN   ','1S8IBN   ','1S8IBJ   ','1S8IBJ   ','1S8IBH   ','1S8IBH   ','1S8IBF   ','1S8IBF   ','1S8IBD   ','1S8IBD   ','1S8IBD   ','1S8IBB   ','1S8IBB   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB4   ','1S8IB4   ','1S8IB2   ','1S8IB2   ','1S8IB2   ','1S8IB2   ','1S8IAZ   ','1S8IAZ   ','1S8IAZ   ','1S8IAO   ','1S8IAO   ','1S8IAO   ','1S8IAO   ','1S8I2W   ','1S8I2W   ','1S8I2W   ','1S8I2U   ','1S8I2U   ','1S8I2R   ','1S8I2R   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2N   ','1S8I2N   ','1S8I2K   ','1S8I2K   ','1S8I2I   ','1S8I2I   ','1S8I2G   ','1S8I2G   ','1S8I2E   ','1S8I2E   ','1S8I2E   ','1S8I2C   ','1S8I2C   ','1S8I29   ','1S8I29   ','1S8I29   ','1S8I29   ','1S8I27   ','1S8I27   ','1S8I24   ','1S8I24   ','1S8I22   ','1S8I22   ','1S8I20   ','1S8I20   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1V   ','1S8I1V   ','1S8I1V   ','1S8I1V   ','1S8I1T   ','1S8I1T   ','1S8I1T   ','1S8I1T   ','1S8I1Q   ','1S8I1Q   ','1S8I1N   ','1S8I1N   ','1S8I1N   ','1S8I1L   ','1S8I1L   ','1S8I1L   ','1S8I1L   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1H   ','1S8I1H   ','1S8I1H   ','1S8I1F   ','1S8I1F   ','1S8I1C   ','1S8I1C   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I17   ','1S8I17   ','1S8I17   ','1S8I14   ','1S8I14   ','1S8I12   ','1S8I12   ','1S8I0Z   ','1S8I0Z   ','1S8I0X   ','1S8I0X   ','1S8I0V   ','1S8I0V   ','1S8I0T   ','1S8I0T   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8HZG   ','1S8HZG   ','1S8HZG   ','1S8HZG   ','1S8HZE   ','1S8HZE   ','1S8HZE   ','1S8HZB   ','1S8HZB   ','1S8HZB   ','1S8HZB   ','1S8HZ8   ','1S8HZ8   ','1S8HZ5   ','1S8HZ5   ','1S8HZ5   ','1S8HZ2   ','1S8HZ2   ','1S8HZ2   ','1S8HYZ   ','1S8HYZ   ','1S8HYZ   ','1S8HYZ   ','1S8HYW   ','1S8HYW   ','1S8HYT   ','1S8HYT   ','1S8HYT   ','1S8HYT   ','1S8HYQ   ','1S8HYQ   ','1S8HYQ   ','1S8HYQ   ','1S8HYN   ','1S8HYN   ','1S8HYN   ','1S8HYN   ','1S8HYK   ','1S8HYK   ','1S8HYK   ','1S8HYI   ','1S8HYI   ','1S8HYI   ','1S8HYI   ','1S8HYG   ','1S8HYG   ','1S8HYG   ','1S8HYG   ','1S8HYE   ','1S8HYE   ','1S8HYE   ','1S8HYC   ','1S8HYC   ','1S8HY9   ','1S8HY9   ','1S8HY6   ','1S8HY6   ','1S8HY6   ','1S8HY6   ','1S8HY3   ','1S8HY0   ','1S8HY0   ','1S8HXY   ','1S8HXY   ','1S8HXV   ','1S8HXV   ','1S8HXV   ','1S8HXS   ','1S8HXS   ','1S8HXP   ','1S8HXP   ','1S8HXP   ','1S8HXN   ','1S8HXN   ','1S8HXK   ','1S8HXK   ','1S8HXI   ','1S8HXI   ','1S8HXF   ','1S8HXF   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HX7   ','1S8HX7   ','1S8HX7   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX2   ','1S8HX2   ','1S8HX0   ','1S8HX0   ','1S8HWY   ','1S8HWY   ','1S8HWV   ','1S8HWV   ','1S8HWV   ','1S8HWT   ','1S8HWT   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWO   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWI   ','1S8HWI   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HW9   ','1S8HW9   ','1S8HW7   ','1S8HW7   ','1S8HW4   ','1S8HW4   ','1S8HW4   ','1S8HW4   ','1S8HW2   ','1S8HW2   ','1S8HW2   ','1S8HW2   ','1S8HVZ   ','1S8HVZ   ','1S8HVW   ','1S8HVW   ','1S8HVW   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVR   ','1S8HVR   ','1S8HVR   ','1S8HVO   ','1S8HVO   ','1S8HVO   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVK   ','1S8HVK   ','1S8HVI   ','1S8HVI   ','1S8HVF   ','1S8HVF   ','1S8HVF   ','1S8HVC   ','1S8HVC   ','1S8HV9   ','1S8HV9   ','1S8HV7   ','1S8HV7   ','1S8HV7   ','1S8HV4   ','1S8HV4   ','1S8HV2   ','1S8HV2   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUX   ','1S8HUX   ','1S8HUV   ','1S8HUV   ','1S8HUV   ','1S8HUV   ','1S8HUT   ','1S8HUT   ','1S8HUT   ','1S8HUQ   ','1S8HUQ   ','1S8HUQ   ','1S8HUQ   ','1S8HUO   ','1S8HUO   ','1S8HUO   ','1S8HUL   ','1S8HUL   ','1S8HUL   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUH   ','1S8HUH   ','1S8HUH   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUD   ','1S8HUD   ','1S8HUD   ','1S8HUD   ','1S8HUB   ','1S8HUB   ','1S8HU8   ','1S8HU8   ','1S8HU8   ','1S8HU6   ','1S8HU6   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HTY   ','1S8HTY   ','1S8HTY   ','1S8HTY   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTT   ','1S8HTT   ','1S8HTR   ','1S8HTR   ','1S8HTR   ','1S8HTO   ','1S8HTL   ','1S8HP4   ','1S8HP4   ','1S8HJY   ','1S8HJY   ','1S8H7U   ','1S8H7U   ','1S8H5K   ','1S8H5K   ','1S8H4Y   ','1S8FMC   ','1S8FMC   ','1S8FLE   ','1S8FLE   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FHL   ','1S8FHL   ','1S8FHL   ','1S8FCW   ','1S8FCW   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBV   ','1S8FBV   ','1S8FBV   ','1S8FBT   ','1S8FBT   ','1S8FBT   ','1S8FBF   ','1S8FBF   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB6   ','1S8FB6   ','1S8FB6   ','1S8FB4   ','1S8FB4   ','1S8FB2   ','1S8FB2   ','1S8FB0   ','1S8FB0   ','1S8FAJ   ','1S8FAJ   ','1S8FAJ   ','1S8FAH   ','1S8FAH   ','1S8FAH   ','1S8FAF   ','1S8FAF   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAA   ','1S8FAA   ','1S8FAA   ','1S8FAA   ','1S8FA8   ','1S8FA8   ','1S8FA6   ','1S8FA6   ','1S8FA3   ','1S8FA3   ','1S8FA3   ','1S8FA1   ','1S8FA1   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9W   ','1S8F9W   ','1S8F9W   ','1S8F9T   ','1S8F9T   ','1S8F9R   ','1S8F9R   ','1S8F9O   ','1S8F9O   ','1S8F9M   ','1S8F9M   ','1S8F9I   ','1S8F9I   ','1S8F9I   ','1S8F9F   ','1S8F9F   ','1S8F9D   ','1S8F9D   ','1S8F9A   ','1S8F9A   ','1S8F98   ','1S8F98   ','1S8F98   ','1S8F96   ','1S8F96   ','1S8F96   ','1S8F94   ','1S8F94   ','1S8F94   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F8Z   ','1S8F8Z   ','1S8F8Z   ','1S8F8Z   ','1S8F8W   ','1S8F8W   ','1S8F8W   ','1S8F8W   ','1S8F8U   ','1S8F8U   ','1S8F8U   ','1S8F8R   ','1S8F8R   ','1S8F8R   ','1S8F8P   ','1S8F8P   ','1S8F8M   ','1S8F8M   ','1S8F8K   ','1S8F8K   ','1S8F8H   ','1S8F8H   ','1S8F8F   ','1S8F8F   ','1S8F8F   ','1S8F8C   ','1S8F8C   ','1S8F8C   ','1S8F8C   ','1S8F89   ','1S8F89   ','1S8F89   ','1S8F87   ','1S8F87   ','1S8F87   ','1S8F87   ','1S8F84   ','1S8F84   ','1S8F81   ','1S8F81   ','1S8F81   ','1S8F81   ','1S8F7Y   ','1S8F7Y   ','1S8F7Y   ','1S8F7Y   ','1S8F7W   ','1S8F7W   ','1S8F7T   ','1S8F7T   ','1S8F7T   ','1S8F7Q   ','1S8F7Q   ','1S8F7Q   ','1S8F7O   ','1S8F7O   ','1S8F7O   ','1S8F7O   ','1S8F7M   ','1S8F7M   ','1S8F7M   ','1S8F7M   ','1S8F7K   ','1S8F7K   ','1S8F7K   ','1S8F7H   ','1S8F7H   ','1S8F7H   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7B   ','1S8F7B   ','1S8F78   ','1S8F78   ','1S8F78   ','1S8F78   ','1S8F76   ','1S8F76   ','1S8F76   ','1S8F76   ','1S8F73   ','1S8F73   ','1S8F70   ','1S8F70   ','1S8F6X   ','1S8F6X   ','1S8F6X   ','1S8F6V   ','1S8F6V   ','1S8F6T   ','1S8F6T   ','1S8F6T   ','1S8F6T   ','1S8F6R   ','1S8F6R   ','1S8F6O   ','1S8F6O   ','1S8F6O   ','1S8F6L   ','1S8F6L   ','1S8F6J   ','1S8F6J   ','1S8F6G   ','1S8F6G   ','1S8F6D   ','1S8F6D   ','1S8F6A   ','1S8F6A   ','1S8F68   ','1S8F68   ','1S8F66   ','1S8F66   ','1S8F66   ','1S8F66   ','1S8F64   ','1S8F64   ','1S8F61   ','1S8F61   ','1S8F61   ','1S8F5Y   ','1S8F5Y   ','1S8F5Y   ','1S8F5Y   ','1S8F5V   ','1S8F5V   ','1S8F5V   ','1S8F5T   ','1S8F5T   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5P   ','1S8F5P   ','1S8F5P   ','1S8F5P   ','1S8F5N   ','1S8F5N   ','1S8F5N   ','1S8F5N   ','1S8F5L   ','1S8F5L   ','1S8F5L   ','1S8F5J   ','1S8F5J   ','1S8F5J   ','1S8F5J   ','1S8F5H   ','1S8F5H   ','1S8F5F   ','1S8F5F   ','1S8F5F   ','1S8F5D   ','1S8F5D   ','1S8F5D   ','1S8F5B   ','1S8F5B   ','1S8F59   ','1S8F59   ','1S8F59   ','1S8F57   ','1S8F57   ','1S8F55   ','1S8F55   ','1S8F53   ','1S8F53   ','1S8F51   ','1S8F51   ','1S8F4Z   ','1S8F4Z   ','1S8F4Z   ','1S8F4X   ','1S8F4X   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EH1   ','1S8EH1   ','1S8EH1   ','1S8EH1   ','1S8EGX   ','1S8EGX   ','1S8EGV   ','1S8EGV   ','1S8EGV   ','1S8EGV   ','1S8EGN   ','1S8EGN   ','1S8EGN   ','1S8EGN   ','1S8EGL   ','1S8EGL   ','1S8EGL   ','1S8EGJ   ','1S8EGJ   ','1S8EGJ   ','1S8EGJ   ','1S8EGG   ','1S8EGG   ','1S8EGD   ','1S8EGD   ','1S8EGB   ','1S8EGB   ','1S8EGB   ','1S8EGB   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG0   ','1S8EG0   ','1S8EG0   ','1S8EFY   ','1S8EFY   ','1S8EFY   ','1S8EFY   ','1S8EFW   ','1S8EFW   ','1S8EFW   ','1S8EFW   ','1S8EFU   ','1S8EFU   ','1S8EFU   ','1S8EFS   ','1S8EFS   ','1S8EFQ   ','1S8EFQ   ','1S8EFQ   ','1S8EFQ   ','1S8EFN   ','1S8EFN   ','1S8EFN   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFC   ','1S8EFC   ','1S8EFA   ','1S8EFA   ','1S8EFA   ','1S8EF8   ','1S8EF8   ','1S8EF6   ','1S8EF6   ','1S8EF6   ','1S8EF3   ','1S8EF1   ','1S8EF1   ','1S8EEZ   ','1S8EEZ   ','1S8EEX   ','1S8EEX   ','1S8EEX   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EES   ','1S8EES   ','1S8EEQ   ','1S8EEQ   ','1S8EEQ   ','1S8EEN   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEG   ','1S8EEG   ','1S8EEC   ','1S8EEC   ','1S8EEC   ','1S8EEC   ','1S8EEA   ','1S8EEA   ','1S8EE8   ','1S8EE8   ','1S8EE8   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE3   ','1S8EE3   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDV   ','1S8EDV   ','1S8EDQ   ','1S8EDQ   ','1S8EDQ   ','1S8EDN   ','1S8EDN   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDJ   ','1S8EDJ   ','1S8EDJ   ','1S8EDJ   ','1S8EDG   ','1S8EDG   ','1S8EDG   ','1S8EDE   ','1S8EDE   ','1S8EDC   ','1S8EDC   ','1S8EDC   ','1S8ED9   ','1S8ED9   ','1S8ED7   ','1S8ED7   ','1S8ED5   ','1S8ED5   ','1S8ED1   ','1S8ED1   ','1S8ECW   ','1S8ECW   ','1S8ECT   ','1S8ECT   ','1S8ECT   ','1S8ECR   ','1S8ECR   ','1S8ECR   ','1S8ECR   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECM   ','1S8ECM   ','1S8ECM   ','1S8ECH   ','1S8ECH   ','1S8ECH   ','1S8ECH   ','1S8ECE   ','1S8ECE   ','1S8ECE   ','1S8ECC   ','1S8ECC   ','1S8ECA   ','1S8ECA   ','1S8ECA   ','1S8ECA   ','1S8EC7   ','1S8EC7   ','1S8EBX   ','1S8EBU   ','1S8EBU   ','1S8EBS   ','1S8EBS   ','1S8EBS   ','1S8EBP   ','1S8EBP   ','1S8EBN   ','1S8EBN   ','1S8EBN   ','1S8EBN   ','1S8EBL   ','1S8EBL   ','1S8EBJ   ','1S8EBJ   ','1S8EBJ   ','1S8EBJ   ','1S8EBH   ','1S8EBH   ','1S8EBH   ','1S8EBE   ','1S8EBE   ','1S8EBE   ','1S8EBB   ','1S8EBB   ','1S8EB9   ','1S8EB9   ','1S8EB9   ','1S8EB6   ','1S8EB6   ','1S8EB6   ','1S8EB4   ','1S8EB4   ','1S8EB4   ','1S8EB4   ','1S8EB1   ','1S8EB1   ','1S8EAY   ','1S8EAY   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAU   ','1S8EAU   ','1S8EAS   ','1S8EAS   ','1S8EAS   ','1S8EAS   ','1S8EAP   ','1S8EAP   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAK   ','1S8EAK   ','1S8EAK   ','1S8EAH   ','1S8EAH   ','1S8EAH   ','1S8EAH   ','1S8EAF   ','1S8EAF   ','1S8EAF   ','1S8EAD   ','1S8EAD   ','1S8EAB   ','1S8EAB   ','1S8EAB   ','1S8EA9   ','1S8EA9   ','1S8EA6   ','1S8EA6   ','1S8EA3   ','1S8EA3   ','1S8EA1   ','1S8EA1   ','1S8EA1   ','1S8EA1   ','1S8E9Z   ','1S8E9Z   ','1S8E9Z   ','1S8E9W   ','1S8E9W   ','1S8E9U   ','1S8E9U   ','1S8E9R   ','1S8E9R   ','1S8E9M   ','1S8E9M   ','1S8E9K   ','1S8E9K   ','1S8E9K   ','1S8E9K   ','1S8E9I   ','1S8E9I   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9E   ','1S8E9E   ','1S8E9E   ','1S8E9A   ','1S8E9A   ','1S8E9A   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E93   ','1S8E93   ','1S8E93   ','1S8E90   ','1S8E90   ','1S8E90   ','1S8E8X   ','1S8E8X   ','1S8E8X   ','1S8E8V   ','1S8E8T   ','1S8E8T   ','1S8E8R   ','1S8E8R   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8N   ','1S8E8J   ','1S8E8J   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8D   ','1S8E8D   ','1S8E8D   ','1S8E8D   ','1S8E8B   ','1S8E8B   ','1S8E88   ','1S8E88   ','1S8E88   ','1S8E86   ','1S8E86   ','1S8E82   ','1S8E82   ','1S8E82   ','1S8E7Z   ','1S8E7Z   ','1S8E7X   ','1S8E7X   ','1S8E7X   ','1S8E7V   ','1S8E7V   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7R   ','1S8E7R   ','1S8E7R   ','1S8E7O   ','1S8E7O   ','1S8E7M   ','1S8E7M   ','1S8E7M   ','1S8E7M   ','1S8E7K   ','1S8E7K   ','1S8E7K   ','1S8E7I   ','1S8E7I   ','1S8E7G   ','1S8E7G   ','1S8E7G   ','1S8E7E   ','1S8E7E   ','1S8E7E   ','1S8E7C   ','1S8E7C   ','1S8E7C   ','1S8E7C   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E78   ','1S8E78   ','1S8E75   ','1S8E73   ','1S8E73   ','1S8E6Z   ','1S8E6Z   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6T   ','1S8E6T   ','1S8E6T   ','1S8E6R   ','1S8E6R   ','1S8E6R   ','1S8E6R   ','1S8E6O   ','1S8E6O   ','1S8E6M   ','1S8E6M   ','1S8E6M   ','1S8E6J   ','1S8E6J   ','1S8E6J   ','1S8E6G   ','1S8E6G   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E69   ','1S8E69   ','1S8E69   ','1S8E67   ','1S8E67   ','1S8E64   ','1S8E64   ','1S8E60   ','1S8E60   ','1S8E5X   ','1S8E5X   ','1S8E5X   ','1S8E5X   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5S   ','1S8E5S   ','1S8E5S   ','1S8E5P   ','1S8E5P   ','1S8E5P   ','1S8E5M   ','1S8E5M   ','1S8E5M   ','1S8E5M   ','1S8E5K   ','1S8E5K   ','1S8E5K   ','1S8E5I   ','1S8E5I   ','1S8E5I   ','1S8E5I   ','1S8E5G   ','1S8E5G   ','1S8E5E   ','1S8E5E   ','1S8E5E   ','1S8E5B   ','1S8E5B   ','1S8E59   ','1S8E59   ','1S8E59   ','1S8E56   ','1S8E56   ','1S8E53   ','1S8E53   ','1S8E4X   ','1S8E4X   ','1S8E4U   ','1S8E4U   ','1S8E4R   ','1S8E4R   ','1S8E4P   ','1S8E4P   ','1S8E4M   ','1S8E4M   ','1S8E4M   ','1S8E4I   ','1S8E4I   ','1S8E4I   ','1S8E4I   ','1S8E4G   ','1S8E4G   ','1S8E4G   ','1S8E4G   ','1S8E4E   ','1S8E4E   ','1S8E4E   ','1S8E4C   ','1S8E4C   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E47   ','1S8E47   ','1S8E47   ','1S8E47   ','1S8E45   ','1S8E45   ','1S8E45   ','1S8E43   ','1S8E43   ','1S8E40   ','1S8E40   ','1S8E40   ','1S8E40   ','1S8E3X   ','1S8E3X   ','1S8E3V   ','1S8E3V   ','1S8E3V   ','1S8E3V   ','1S8E3S   ','1S8E3S   ','1S8E3S   ','1S8E3P   ','1S8E3P   ','1S8E3P   ','1S8E3K   ','1S8E3K   ','1S8E3K   ','1S8E3K   ','1S8E3I   ','1S8E3I   ','1S8E3I   ','1S8E3G   ','1S8E3G   ','1S8E3G   ','1S8E3E   ','1S8E3E   ','1S8E2L   ','1S8E2L   ','1S8E2J   ','1S8E2J   ','1S8E2H   ','1S8E2H   ','1S8E2F   ','1S8E2F   ','1S8DPY   ','1S8DPY   ','1S8DPR   ','1S8DPR   ','1S8DPR   ','1S8DPK   ','1S8DPK   ','1S8BRM   ','1S8BRM   ','1S8AT0   ','1S8AT0   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASU   ','1S8ASU   ','1S8ARK   ','1S8ARK   ','1S8APY   ','1S8APY   ','1S8APY   ','1S8AJN   ','1S8AJN   ','1S8ACQ   ','1S8ACQ   ','1S8A9V   ','1S8A9V   ','1S88V3   ','1S88V3   ','1S88OT   ','1S87RK   ','1S87RK   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B6   ','1S87B6   ','1S87B6   ','1S87AJ   ','1S87AJ   ','1S86MK   ','1S86MK   ','1S86O3   ','1S86O3   ','1S86O3   ','1S86JX   ','1S86CL   ','1S86CL   ','1S86CJ   ','1S86CJ   ','1S85XT   ','1S85XT   ','1S85VI   ','1S85VI   ','1S85VG   ','1S85VG   ','1S85VE   ','1S85VE   ','1S85VA   ','1S85VA   ','1S85V7   ','1S85V7   ','1S85V5   ','1S85V5   ','1S85V5   ','1S85V5   ','1S85V2   ','1S85V2   ','1S85V2   ','1S85PS   ','1S85PS   ','1S85O5   ','1S85O5   ','1S85O5   ','1S85O2   ','1S85O2   ','1S85NZ   ','1S85NZ   ','1S85NZ   ','1S85NW   ','1S85NW   ','1S85NW   ','1S85NU   ','1S85NU   ','1S85NU   ','1S85NU   ','1S85NR   ','1S85NR   ','1S85NP   ','1S85NP   ','1S85NM   ','1S85NM   ','1S85NK   ','1S85NK   ','1S85NK   ','1S85NH   ','1S85NH   ','1S85NF   ','1S85NF   ','1S85ND   ','1S85ND   ','1S85ND   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85N7   ','1S85N7   ','1S85N4   ','1S85N4   ','1S85N2   ','1S85N2   ','1S85N0   ','1S85N0   ','1S85MX   ','1S85MX   ','1S85MV   ','1S85MV   ','1S85HU   ','1S85HU   ','1S84YN   ','1S84YN   ','1S84YL   ','1S84YL   ','1S84YL   ','1S84OR   ','1S84OR   ','1S84H7   ','1S84H7   ','1S84GV   ','1S84GV   ','1S84GS   ','1S84GS   ','1S84GS   ','1S84GP   ','1S84GP   ','1S84GP   ','1S84GN   ','1S84GN   ','1S84GK   ','1S84GK   ','1S84GK   ','1S84GI   ','1S84GI   ','1S84GF   ','1S84GF   ','1S84GF   ','1S84GD   ','1S84GD   ','1S84GB   ','1S84GB   ','1S84C6   ','1S84C6   ','1S84C6   ','1S84AP   ','1S84AP   ','1S84AN   ','1S84AN   ','1S84AN   ','1S84AL   ','1S84AL   ','1S84AJ   ','1S84AJ   ','1S84AJ   ','1S84AJ   ','1S84AH   ','1S84AH   ','1S84AH   ','1S84AF   ','1S84AF   ','1S84AC   ','1S84AC   ','1S84AA   ','1S84AA   ','1S84A7   ','1S84A7   ','1S84A5   ','1S84A5   ','1S84A3   ','1S84A3   ','1S8485   ','1S8482   ','1S8482   ','1S8480   ','1S8480   ','1S847X   ','1S847X   ','1S847X   ','1S847V   ','1S847V   ','1S847T   ','1S847T   ','1S847R   ','1S847R   ','1S847R   ','1S843Z   ','1S843Z   ','1S843Z   ','1S843X   ','1S843X   ','1S843X   ','1S843T   ','1S843T   ','1S843Q   ','1S843Q   ','1S8424   ','1S8424   ','1S8422   ','1S8422   ','1S8420   ','1S8420   ','1S83Z1   ','1S83Z1   ','1S83Z1   ','1S83YZ   ','1S83YZ   ','1S83YX   ','1S83YX   ','1S83YV   ','1S83YV   ','1S83YS   ','1S83YS   ','1S83YQ   ','1S83YQ   ','1S83Y2   ','1S83Y2   ','1S83Y2   ','1S83Y2   ','1S83Y0   ','1S83Y0   ','1S83XW   ','1S83XW   ','1S83XT   ','1S83XT   ','1S83XR   ','1S83XR   ','1S83XN   ','1S83XN   ','1S83XK   ','1S83XK   ','1S83XI   ','1S83XI   ','1S83XF   ','1S83XF   ','1S83XC   ','1S83XC   ','1S83X9   ','1S83X9   ','1S83X6   ','1S83X6   ','1S83X2   ','1S83X2   ','1S83VB   ','1S83VB   ','1S83VB   ','1S83V9   ','1S83V9   ','1S83V6   ','1S83V6   ','1S83V6   ','1S83V4   ','1S83V4   ','1S83V2   ','1S83V2   ','1S83V0   ','1S83V0   ','1S83UX   ','1S83UX   ','1S83UV   ','1S83UV   ','1S83US   ','1S83US   ','1S83UQ   ','1S83UQ   ','1S83UN   ','1S83UN   ','1S83TE   ','1S83TE   ','1S83TC   ','1S83TC   ','1S83TC   ','1S83T9   ','1S83T9   ','1S83T9   ','1S83T7   ','1S83T7   ','1S83T5   ','1S83T5   ','1S83T3   ','1S83T3   ','1S83SZ   ','1S83SZ   ','1S83ST   ','1S83ST   ','1S83SQ   ','1S83SQ   ','1S83SQ   ','1S83SN   ','1S83SN   ','1S83SK   ','1S83SK   ','1S83SH   ','1S83SH   ','1S83SH   ','1S83SE   ','1S83SE   ','1S83SE   ','1S83SC   ','1S83SC   ','1S83SC   ','1S83S9   ','1S83S9   ','1S83S7   ','1S83S7   ','1S83S5   ','1S83S5   ','1S83S2   ','1S83S2   ','1S83S0   ','1S83S0   ','1S83RX   ','1S83RX   ','1S83RS   ','1S83RS   ','1S83RS   ','1S83RQ   ','1S83RQ   ','1S83RN   ','1S83RN   ','1S83RN   ','1S83RK   ','1S83RK   ','1S83RI   ','1S83RI   ','1S83RI   ','1S83RF   ','1S83RF   ','1S83RD   ','1S83RD   ','1S83RB   ','1S83RB   ','1S83RB   ','1S83R9   ','1S83R9   ','1S83R7   ','1S83R7   ','1S83R4   ','1S83R4   ','1S83R1   ','1S83R1   ','1S83QZ   ','1S83QZ   ','1S83QZ   ','1S83QX   ','1S83QX   ','1S83QV   ','1S83QV   ','1S83PN   ','1S83PN   ','1S83PN   ','1S83PK   ','1S83PK   ','1S83PI   ','1S83PI   ','1S83PF   ','1S83PF   ','1S83PC   ','1S83PC   ','1S83N8   ','1S83N8   ','1S83N8   ','1S83N5   ','1S83N5   ','1S83N5   ','1S83N2   ','1S83N2   ','1S83MZ   ','1S83MZ   ','1S83MZ   ','1S83MW   ','1S83MW   ','1S83MW   ','1S83MT   ','1S83MT   ','1S83MT   ','1S83MR   ','1S83MR   ','1S83MP   ','1S83MP   ','1S83MP   ','1S83MM   ','1S83MJ   ','1S83MJ   ','1S83MG   ','1S83MG   ','1S83ME   ','1S83ME   ','1S83MC   ','1S83MC   ','1S83MC   ','1S83L0   ','1S83L0   ','1S83KY   ','1S83KY   ','1S83KW   ','1S83KW   ','1S83KU   ','1S83KU   ','1S83KS   ','1S83KS   ','1S83KS   ','1S83KP   ','1S83KP   ','1S83KN   ','1S83KN   ','1S83KK   ','1S83KK   ','1S83KI   ','1S83KI   ','1S83HM   ','1S83HM   ','1S83HJ   ','1S83HJ   ','1S83HG   ','1S83HG   ','1S83HE   ','1S83HE   ','1S83HB   ','1S83HB   ','1S83H8   ','1S83H8   ','1S83H8   ','1S83H5   ','1S83H5   ','1S83H5   ','1S83H2   ','1S83H2   ','1S83H0   ','1S83H0   ','1S83H0   ','1S83GY   ','1S83GY   ','1S83GV   ','1S83GV   ','1S83GT   ','1S83GT   ','1S83GT   ','1S83GQ   ','1S83GQ   ','1S83GQ   ','1S83GO   ','1S83GO   ','1S83GL   ','1S83GL   ','1S83GJ   ','1S83GJ   ','1S83GG   ','1S83GG   ','1S83GG   ','1S83GE   ','1S83GE   ','1S83GE   ','1S83GB   ','1S83GB   ','1S83GB   ','1S83G9   ','1S83G9   ','1S83G6   ','1S83G6   ','1S83G3   ','1S83G3   ','1S83G1   ','1S83G1   ','1S83DB   ','1S83DB   ','1S83D8   ','1S83D8   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D4   ','1S83D4   ','1S83D4   ','1S83D2   ','1S83D2   ','1S83CZ   ','1S83CZ   ','1S83CX   ','1S83CX   ','1S83CX   ','1S83CX   ','1S83CV   ','1S83CV   ','1S83CS   ','1S83CQ   ','1S83CQ   ','1S83CO   ','1S83CO   ','1S83CL   ','1S83CL   ','1S83CD   ','1S83CD   ','1S83CB   ','1S83CB   ','1S83C8   ','1S83C8   ','1S83C5   ','1S83C5   ','1S83C5   ','1S83C2   ','1S83C2   ','1S83BZ   ','1S83BZ   ','1S83BW   ','1S83BW   ','1S83BW   ','1S83BT   ','1S83BT   ','1S83BQ   ','1S83BQ   ','1S83BO   ','1S83BO   ','1S83BM   ','1S83BM   ','1S83BJ   ','1S83BJ   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AW   ','1S83AW   ','1S83AW   ','1S83AW   ','1S83AT   ','1S83AT   ','1S83AQ   ','1S83AQ   ','1S83AQ   ','1S83AN   ','1S83AN   ','1S83AL   ','1S83AL   ','1S83AI   ','1S83AI   ','1S83AI   ','1S83AG   ','1S83AG   ','1S83AG   ','1S83AE   ','1S83AE   ','1S83AB   ','1S83AB   ','1S83AB   ','1S83A9   ','1S83A9   ','1S83A6   ','1S83A6   ','1S83A3   ','1S83A3   ','1S83A3   ','1S83A1   ','1S83A1   ','1S839Y   ','1S839Y   ','1S839Y   ','1S839W   ','1S839W   ','1S839W   ','1S839W   ','1S839W   ','1S839U   ','1S839U   ','1S838A   ','1S838A   ','1S8387   ','1S8387   ','1S8383   ','1S8383   ','1S8380   ','1S8380   ','1S837Y   ','1S837Y   ','1S837V   ','1S837V   ','1S837V   ','1S837S   ','1S837S   ','1S837P   ','1S837P   ','1S837M   ','1S837M   ','1S837J   ','1S837J   ','1S837J   ','1S837J   ','1S837H   ','1S837H   ','1S836X   ','1S836X   ','1S836X   ','1S836X   ','1S836X   ','1S836U   ','1S836U   ','1S836S   ','1S836S   ','1S836P   ','1S836P   ','1S836N   ','1S836N   ','1S836N   ','1S836N   ','1S836L   ','1S836L   ','1S836L   ','1S836L   ','1S836L   ','1S836I   ','1S836I   ','1S836I   ','1S836I   ','1S836G   ','1S836G   ','1S836E   ','1S836E   ','1S836B   ','1S8369   ','1S8369   ','1S8369   ','1S8366   ','1S8366   ','1S8366   ','1S8364   ','1S8364   ','1S8364   ','1S8362   ','1S8362   ','1S8362   ','1S8348   ','1S8348   ','1S831F   ','1S831F   ','1S831D   ','1S831D   ','1S831B   ','1S831B   ','1S831B   ','1S8305   ','1S8305   ','1S8303   ','1S8303   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82Z9   ','1S82Z9   ','1S82Z7   ','1S82Z7   ','1S82Z4   ','1S82Z4   ','1S82Z4   ','1S82Z4   ','1S82Z2   ','1S82Z2   ','1S82Z2   ','1S82YZ   ','1S82YZ   ','1S82YX   ','1S82YX   ','1S82YU   ','1S82YU   ','1S82YU   ','1S82YS   ','1S82YS   ','1S82YP   ','1S82YP   ','1S82YM   ','1S82YM   ','1S82YM   ','1S82YM   ','1S82YJ   ','1S82YJ   ','1S82YH   ','1S82YH   ','1S82YF   ','1S82YF   ','1S82YC   ','1S82YC   ','1S82Y9   ','1S82Y9   ','1S82Y9   ','1S82Y6   ','1S82Y6   ','1S82XJ   ','1S82XJ   ','1S82XJ   ','1S82XH   ','1S82XH   ','1S82XH   ','1S82XF   ','1S82XF   ','1S82XC   ','1S82XC   ','1S82X9   ','1S82X9   ','1S82X5   ','1S82X5   ','1S82X2   ','1S82X2   ','1S82WZ   ','1S82WZ   ','1S82WZ   ','1S82WZ   ','1S82WW   ','1S82WW   ','1S82WS   ','1S82WS   ','1S82WS   ','1S82WP   ','1S82WP   ','1S82WM   ','1S82WM   ','1S82WJ   ','1S82WJ   ','1S82WH   ','1S82WH   ','1S82WD   ','1S82WD   ','1S82WB   ','1S82WB   ','1S82WB   ','1S82W9   ','1S82W9   ','1S82W6   ','1S82W6   ','1S82W3   ','1S82W3   ','1S82W3   ','1S82W0   ','1S82W0   ','1S82W0   ','1S82VY   ','1S82VY   ','1S82VY   ','1S82VY   ','1S82VV   ','1S82VV   ','1S82VT   ','1S82VT   ','1S82VR   ','1S82VR   ','1S82VP   ','1S82VP   ','1S82VN   ','1S82VN   ','1S82VN   ','1S82VL   ','1S82VL   ','1S82VI   ','1S82VI   ','1S82VF   ','1S82VF   ','1S82UN   ','1S82UN   ','1S82UL   ','1S82UL   ','1S82UJ   ','1S82UJ   ','1S82UG   ','1S82UG   ','1S82UD   ','1S82UD   ','1S82UB   ','1S82UB   ','1S82U9   ','1S82U9   ','1S82U9   ','1S82U9   ','1S82U6   ','1S82U6   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U0   ','1S82U0   ','1S82U0   ','1S82TX   ','1S82TX   ','1S82TX   ','1S82TV   ','1S82TV   ','1S82TT   ','1S82TT   ','1S82TQ   ','1S82TQ   ','1S82TO   ','1S82TO   ','1S82TL   ','1S82TL   ','1S82M2   ','1S82M2   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LX   ','1S82LX   ','1S82LU   ','1S82LU   ','1S82LU   ','1S82LR   ','1S82LR   ','1S82LR   ','1S82LO   ','1S82LO   ','1S82LL   ','1S82LL   ','1S82LJ   ','1S82LJ   ','1S82LJ   ','1S82LG   ','1S82LG   ','1S82LG   ','1S82LE   ','1S82LE   ','1S82LE   ','1S82LE   ','1S82LC   ','1S82LC   ','1S82LA   ','1S82LA   ','1S82L7   ','1S82L7   ','1S82L4   ','1S82L4   ','1S82L1   ','1S82L1   ','1S82L1   ','1S82KZ   ','1S82KZ   ','1S82KX   ','1S82KX   ','1S82KX   ','1S82KV   ','1S82KV   ','1S82KT   ','1S82KT   ','1S82KT   ','1S828Z   ','1S828Z   ','1S81U7   ','1S81U7   ','1S81KI   ','1S81KI   ','1S81KI   ','1S81KG   ','1S81KG   ','1S81KD   ','1S81KD   ','1S81KD   ','1S81KD   ','1S81KA   ','1S81KA   ','1S81KA   ','1S81KA   ','1S81K8   ','1S81K8   ','1S81K6   ','1S81K6   ','1S81K3   ','1S81K0   ','1S81K0   ','1S81K0   ','1S81JX   ','1S81JV   ','1S81JV   ','1S81AQ   ','1S81AQ   ','1S81AN   ','1S81AN   ','1S81AN   ','1S813Q   ','1S813Q   ','1S813N   ','1S813N   ','1S813K   ','1S813K   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813E   ','1S813B   ','1S813B   ','1S7ZQ5   ','1S7ZQ5   ','1S7ZJB   ','1S7ZJB   ','1S7ZJ8   ','1S7ZJ8   ','1S7ZHF   ','1S7ZHF   ','1S7XR9   ','1S7XR9   ','1S7XR9   ','1S7XR7   ','1S7XR7   ','1S7XR5   ','1S7XR5   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR1   ','1S7XR1   ','1S7XQY   ','1S7XQY   ','1S7XQW   ','1S7XQW   ','1S7XQU   ','1S7XQU   ','1S7XQU   ','1S7XQU   ','1S7XQS   ','1S7XQS   ','1S7XQS   ','1S7XQS   ','1S7XQP   ','1S7XQP   ','1S7XQP   ','1S7XQN   ','1S7XQN   ','1S7XQN   ','1S7XQL   ','1S7XQL   ','1S7XQI   ','1S7XQI   ','1S7XQI   ','1S7XQG   ','1S7XQG   ','1S7XQG   ','1S7XQE   ','1S7XQE   ','1S7XQC   ','1S7XQC   ','1S7XQA   ','1S7XQA   ','1S7XQ8   ','1S7XQ8   ','1S7XQ6   ','1S7XQ6   ','1S7XQ4   ','1S7XQ4   ','1S7XQ1   ','1S7XQ1   ','1S7XN6   ','1S7XN6   ','1S7XN6   ','1S7XN6   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN1   ','1S7XN1   ','1S7XMZ   ','1S7XMZ   ','1S7XMX   ','1S7XMX   ','1S7XMX   ','1S7XMX   ','1S7XMV   ','1S7XMV   ','1S7XMS   ','1S7XMS   ','1S7XMQ   ','1S7XMQ   ','1S7XMN   ','1S7XMN   ','1S7XML   ','1S7XML   ','1S7XMJ   ','1S7XMJ   ','1S7XMH   ','1S7XMH   ','1S7XMF   ','1S7XMF   ','1S7XMD   ','1S7XMD   ','1S7XMB   ','1S7XMB   ','1S7XM9   ','1S7XM9   ','1S7XM9   ','1S7XF0   ','1S7XF0   ','1S7XEX   ','1S7XEX   ','1S7XEU   ','1S7XEU   ','1S7XER   ','1S7XER   ','1S7XER   ','1S7XER   ','1S7XEO   ','1S7XEO   ','1S7XEM   ','1S7XEM   ','1S7XEJ   ','1S7XEH   ','1S7XEH   ','1S7XEE   ','1S7XEE   ','1S7XEB   ','1S7XEB   ','1S7XEB   ','1S7XEB   ','1S7XE8   ','1S7XE8   ','1S7XE8   ','1S7XE5   ','1S7XE5   ','1S7XE5   ','1S7XE3   ','1S7XE3   ','1S7XE0   ','1S7XE0   ','1S7XDY   ','1S7XDY   ','1S7XDU   ','1S7XDU   ','1S7XDU   ','1S7XDS   ','1S7XDS   ','1S7TI2   ','1S7TI2   ','1S7TI0   ','1S7TI0   ','1S7THY   ','1S7THY   ','1S7THY   ','1S7THV   ','1S7THV   ','1S7THS   ','1S7THS   ','1S7THP   ','1S7THP   ','1S7THP   ','1S7THM   ','1S7THM   ','1S7THK   ','1S7THK   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THE   ','1S7THE   ','1S7THC   ','1S7THC   ','1S7THA   ','1S7THA   ','1S7TG4   ','1S7TG4   ','1S7TG4   ','1S7TG2   ','1S7TG2   ','1S7TFZ   ','1S7TFX   ','1S7TFX   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFS   ','1S7TFS   ','1S7TFQ   ','1S7TFQ   ','1S7TFO   ','1S7TFO   ','1S7TFO   ','1S7TFM   ','1S7TFM   ','1S7TFM   ','1S7TFJ   ','1S7TFJ   ','1S7TFG   ','1S7TFG   ','1S7T33   ','1S7T33   ','1S7T30   ','1S7T30   ','1S7T2Y   ','1S7T2Y   ','1S7T2Y   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2U   ','1S7T2U   ','1S7T2R   ','1S7T2R   ','1S7T2O   ','1S7T2L   ','1S7T2L   ','1S7T2J   ','1S7T2J   ','1S7T2J   ','1S7T2H   ','1S7T2H   ','1S7T2H   ','1S7T2F   ','1S7T2F   ','1S7T2F   ','1S7T2F   ','1S7T2C   ','1S7T2C   ','1S7T29   ','1S7T29   ','1S7T29   ','1S7T26   ','1S7T26   ','1S7T24   ','1S7T24   ','1S7T22   ','1S7T22   ','1S7NWI   ','1S7NWI   ','1S7HOB   ','1S7HOB   ','1S5FSR   ','1S5FSR   ','1S5AF6   ','1S5AF6   '");	
	ПравилаИгры.Вставить("стридНО","'1S8O6D   ','1S8O6D   ','1S8O6B   ','1S8O6B   ','1S8O6B   ','1S8O6B   ','1S8O68   ','1S8O68   ','1S8O68   ','1S8O68   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O66   ','1S8O63   ','1S8O63   ','1S8O63   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O60   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5X   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5U   ','1S8O5R   ','1S8O5R   ','1S8O5O   ','1S8O5O   ','1S8O5M   ','1S8O5M   ','1S8O5M   ','1S8O5K   ','1S8O5K   ','1S8O5K   ','1S8O5K   ','1S8O5I   ','1S8O5I   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5F   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5D   ','1S8O5B   ','1S8O5B   ','1S8O5B   ','1S8O5B   ','1S8O59   ','1S8O59   ','1S8O59   ','1S8O56   ','1S8O56   ','1S8O56   ','1S8O56   ','1S8O54   ','1S8O54   ','1S8O54   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O52   ','1S8O4Z   ','1S8O4Z   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4W   ','1S8O4U   ','1S8O4U   ','1S8O4U   ','1S8O4U   ','1S8O4S   ','1S8O4S   ','1S8O4S   ','1S8O4Q   ','1S8O4Q   ','1S8O4O   ','1S8O4O   ','1S8O4O   ','1S8O4M   ','1S8O4M   ','1S8O4M   ','1S8O4J   ','1S8O4J   ','1S8O4J   ','1S8O4G   ','1S8O4G   ','1S8O4G   ','1S8O4G   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4D   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O4A   ','1S8O48   ','1S8O48   ','1S8O48   ','1S8O45   ','1S8O45   ','1S8O43   ','1S8O43   ','1S8O41   ','1S8O41   ','1S8O41   ','1S8O3Z   ','1S8O3Z   ','1S8O3Z   ','1S8O3Z   ','1S8O3W   ','1S8O3W   ','1S8O3W   ','1S8O3U   ','1S8O3U   ','1S8O3R   ','1S8O3R   ','1S8O3R   ','1S8O3R   ','1S8O3P   ','1S8O3P   ','1S8O3P   ','1S8O3N   ','1S8O3N   ','1S8NSB   ','1S8NSB   ','1S8MO2   ','1S8MO2   ','1S8KB5   ','1S8KB5   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGZ   ','1S8EGS   ','1S8EGS   ','1S8EGS   ','1S8EGP   ','1S8EGP   ','1S8EGP   ','1S8EGP   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG7   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8EG2   ','1S8K9X   ','1S8K9X   ','1S8EFJ   ','1S8EFJ   ','1S8EFJ   ','1S8EFJ   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EEE   ','1S8EE1   ','1S8EE1   ','1S8EE1   ','1S8EE1   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDZ   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8EDT   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ED3   ','1S8ECZ   ','1S8ECZ   ','1S8ECZ   ','1S8ECK   ','1S8ECK   ','1S8ECK   ','1S8ECK   ','1S8EC5   ','1S8EC5   ','1S8EC5   ','1S8EC5   ','1S8K9V   ','1S8K9V   ','1S8EC2   ','1S8EC2   ','1S8EC2   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8EC0   ','1S8K9S   ','1S8K9S   ','1S8K9Q   ','1S8K9Q   ','1S8K9O   ','1S8K9O   ','1S8K9O   ','1S8K9M   ','1S8K9M   ','1S8K9K   ','1S8K9K   ','1S8E9P   ','1S8E9P   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E9C   ','1S8E8L   ','1S8E8L   ','1S8E8L   ','1S8E8L   ','1S8E84   ','1S8E84   ','1S8E84   ','1S8E71   ','1S8E71   ','1S8E71   ','1S8K9I   ','1S8K9I   ','1S8E6D   ','1S8E6D   ','1S8E6D   ','1S8E62   ','1S8E62   ','1S8E62   ','1S8K9G   ','1S8K9G   ','1S8E50   ','1S8E50   ','1S8E50   ','1S8K9E   ','1S8K9E   ','1S8K9B   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8E4K   ','1S8K99   ','1S8K99   ','1S8K99   ','1S8K96   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8E3M   ','1S8K93   ','1S8K93   ','1S8K91   ','1S8K91   ','1S8K8S   ','1S8K8S   ','1S8K88   ','1S8K88   ','1S8K3W   ','1S8K3W   ','1S8K3W   ','1S8K3T   ','1S8K3T   ','1S8K3R   ','1S8K3R   ','1S8K3P   ','1S8K3P   ','1S8K3P   ','1S8K3M   ','1S8K3M   ','1S8K3M   ','1S8K3K   ','1S8K3K   ','1S8K3I   ','1S8K3I   ','1S8K3I   ','1S8K3G   ','1S8K3G   ','1S8K3E   ','1S8K3E   ','1S8K3B   ','1S8K3B   ','1S8K39   ','1S8K39   ','1S8K36   ','1S8K36   ','1S8K34   ','1S8K34   ','1S8K31   ','1S8K31   ','1S8K31   ','1S8K2Z   ','1S8K2Z   ','1S8K2X   ','1S8K2X   ','1S8K2U   ','1S8K2U   ','1S8K2S   ','1S8K2S   ','1S8K2S   ','1S8K2S   ','1S8K2Q   ','1S8K2Q   ','1S8K2Q   ','1S8K2N   ','1S8K2N   ','1S8K2L   ','1S8K2L   ','1S8K2J   ','1S8K2J   ','1S8K2H   ','1S8K2H   ','1S8K2E   ','1S8K2E   ','1S8K2E   ','1S8K2E   ','1S8K2C   ','1S8K2C   ','1S8K29   ','1S8K29   ','1S8K29   ','1S8K27   ','1S8K27   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K24   ','1S8K21   ','1S8K21   ','1S8K21   ','1S8K21   ','1S8K1Y   ','1S8K1Y   ','1S8K1Y   ','1S8K1V   ','1S8K1V   ','1S8K1T   ','1S8K1T   ','1S8K1Q   ','1S8K1Q   ','1S8K1N   ','1S8K1N   ','1S8K1K   ','1S8K1K   ','1S8K1H   ','1S8K1H   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1E   ','1S8K1C   ','1S8K1C   ','1S8K1C   ','1S8K1C   ','1S8K1A   ','1S8K1A   ','1S8K1A   ','1S8K1A   ','1S8IL0   ','1S8IL0   ','1S8IJO   ','1S8IJO   ','1S8II5   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II2   ','1S8II0   ','1S8II0   ','1S8II0   ','1S8IHY   ','1S8IHY   ','1S8IHY   ','1S8IHY   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHW   ','1S8IHU   ','1S8IHU   ','1S8IHU   ','1S8IHS   ','1S8IHS   ','1S8IHS   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHQ   ','1S8IHN   ','1S8IHN   ','1S8IHN   ','1S8IHL   ','1S8IHL   ','1S8IHJ   ','1S8IHJ   ','1S8IHJ   ','1S8IHJ   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHH   ','1S8IHE   ','1S8IHE   ','1S8IHE   ','1S8IHB   ','1S8IHB   ','1S8IHB   ','1S8IH9   ','1S8IH9   ','1S8IH9   ','1S8IH9   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH7   ','1S8IH5   ','1S8IH5   ','1S8IH3   ','1S8IH3   ','1S8IH3   ','1S8IH3   ','1S8IH1   ','1S8IH1   ','1S8IGZ   ','1S8IGZ   ','1S8IGZ   ','1S8IGX   ','1S8IGX   ','1S8IGX   ','1S8IGX   ','1S8IGV   ','1S8IGV   ','1S8IGT   ','1S8IGT   ','1S8IGT   ','1S8IGQ   ','1S8IGQ   ','1S8IGQ   ','1S8IGQ   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGO   ','1S8IGM   ','1S8IGM   ','1S8IGM   ','1S8IGK   ','1S8IGK   ','1S8IGK   ','1S8IGK   ','1S8IGH   ','1S8IGH   ','1S8IGF   ','1S8IGF   ','1S8IGD   ','1S8IGD   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IGB   ','1S8IG8   ','1S8IG8   ','1S8IG6   ','1S8IG6   ','1S8IG6   ','1S8IG4   ','1S8IG4   ','1S8IG2   ','1S8IG2   ','1S8IG2   ','1S8IG2   ','1S8IG0   ','1S8IG0   ','1S8IFY   ','1S8IFY   ','1S8IFW   ','1S8IFW   ','1S8IFW   ','1S8IFU   ','1S8IFU   ','1S8IFU   ','1S8IFU   ','1S8IFS   ','1S8IFS   ','1S8IFP   ','1S8IFP   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFM   ','1S8IFJ   ','1S8IFJ   ','1S8IFJ   ','1S8IFG   ','1S8IFG   ','1S8IFG   ','1S8IFE   ','1S8IFE   ','1S8IFE   ','1S8IFE   ','1S8IFC   ','1S8IFC   ','1S8IFA   ','1S8IFA   ','1S8IFA   ','1S8IF7   ','1S8IF7   ','1S8IF7   ','1S8IF7   ','1S8IF4   ','1S8IF4   ','1S8IF4   ','1S8IF4   ','1S8IF1   ','1S8IF1   ','1S8IF1   ','1S8IF1   ','1S8IEZ   ','1S8IEZ   ','1S8IEW   ','1S8IEW   ','1S8IEU   ','1S8IEU   ','1S8IER   ','1S8IER   ','1S8IER   ','1S8IER   ','1S8IEO   ','1S8IEO   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEL   ','1S8IEJ   ','1S8IEJ   ','1S8IEJ   ','1S8IEJ   ','1S8IEH   ','1S8IEH   ','1S8IEH   ','1S8IEH   ','1S8IEF   ','1S8IEF   ','1S8IEF   ','1S8IEF   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IED   ','1S8IEB   ','1S8IEB   ','1S8IE8   ','1S8IE8   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE6   ','1S8IE3   ','1S8IE3   ','1S8IE3   ','1S8IE3   ','1S8IE0   ','1S8IE0   ','1S8IDX   ','1S8IDX   ','1S8IDX   ','1S8IDV   ','1S8IDV   ','1S8IDS   ','1S8IDS   ','1S8IDP   ','1S8IDP   ','1S8IDP   ','1S8IDP   ','1S8IDN   ','1S8IDN   ','1S8IDL   ','1S8IDL   ','1S8IDL   ','1S8IDI   ','1S8IDI   ','1S8IDI   ','1S8IDG   ','1S8IDG   ','1S8IDG   ','1S8IDD   ','1S8IDD   ','1S8IDD   ','1S8IDB   ','1S8IDB   ','1S8IDB   ','1S8ID9   ','1S8ID9   ','1S8ID9   ','1S8ID7   ','1S8ID7   ','1S8ID5   ','1S8ID5   ','1S8ID2   ','1S8ID2   ','1S8ID0   ','1S8ID0   ','1S8ID0   ','1S8ID0   ','1S8ICX   ','1S8ICX   ','1S8ICV   ','1S8ICV   ','1S8ICV   ','1S8ICV   ','1S8ICT   ','1S8ICT   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICQ   ','1S8ICN   ','1S8ICN   ','1S8ICN   ','1S8ICN   ','1S8ICK   ','1S8ICK   ','1S8ICK   ','1S8ICK   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICI   ','1S8ICF   ','1S8ICF   ','1S8ICD   ','1S8ICD   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8ICA   ','1S8IC7   ','1S8IC7   ','1S8IC4   ','1S8IC4   ','1S8IC4   ','1S8IC1   ','1S8IC1   ','1S8IC1   ','1S8IC1   ','1S8IBZ   ','1S8IBZ   ','1S8IBZ   ','1S8IBZ   ','1S8IBX   ','1S8IBX   ','1S8IBX   ','1S8IBU   ','1S8IBU   ','1S8IBU   ','1S8IBR   ','1S8IBR   ','1S8IBR   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBP   ','1S8IBN   ','1S8IBN   ','1S8IBN   ','1S8IBN   ','1S8IBJ   ','1S8IBJ   ','1S8IBH   ','1S8IBH   ','1S8IBF   ','1S8IBF   ','1S8IBD   ','1S8IBD   ','1S8IBD   ','1S8IBB   ','1S8IBB   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB8   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB6   ','1S8IB4   ','1S8IB4   ','1S8IB2   ','1S8IB2   ','1S8IB2   ','1S8IB2   ','1S8IAZ   ','1S8IAZ   ','1S8IAZ   ','1S8IAO   ','1S8IAO   ','1S8IAO   ','1S8IAO   ','1S8I2W   ','1S8I2W   ','1S8I2W   ','1S8I2U   ','1S8I2U   ','1S8I2R   ','1S8I2R   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2P   ','1S8I2N   ','1S8I2N   ','1S8I2K   ','1S8I2K   ','1S8I2I   ','1S8I2I   ','1S8I2G   ','1S8I2G   ','1S8I2E   ','1S8I2E   ','1S8I2E   ','1S8I2C   ','1S8I2C   ','1S8I29   ','1S8I29   ','1S8I29   ','1S8I29   ','1S8I27   ','1S8I27   ','1S8I24   ','1S8I24   ','1S8I22   ','1S8I22   ','1S8I20   ','1S8I20   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1X   ','1S8I1V   ','1S8I1V   ','1S8I1V   ','1S8I1V   ','1S8I1T   ','1S8I1T   ','1S8I1T   ','1S8I1T   ','1S8I1Q   ','1S8I1Q   ','1S8I1N   ','1S8I1N   ','1S8I1N   ','1S8I1L   ','1S8I1L   ','1S8I1L   ','1S8I1L   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1J   ','1S8I1H   ','1S8I1H   ','1S8I1H   ','1S8I1F   ','1S8I1F   ','1S8I1C   ','1S8I1C   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I19   ','1S8I17   ','1S8I17   ','1S8I17   ','1S8I14   ','1S8I14   ','1S8I12   ','1S8I12   ','1S8I0Z   ','1S8I0Z   ','1S8I0X   ','1S8I0X   ','1S8I0V   ','1S8I0V   ','1S8I0T   ','1S8I0T   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8I0Q   ','1S8HZG   ','1S8HZG   ','1S8HZG   ','1S8HZG   ','1S8HZE   ','1S8HZE   ','1S8HZE   ','1S8HZB   ','1S8HZB   ','1S8HZB   ','1S8HZB   ','1S8HZ8   ','1S8HZ8   ','1S8HZ5   ','1S8HZ5   ','1S8HZ5   ','1S8HZ2   ','1S8HZ2   ','1S8HZ2   ','1S8HYZ   ','1S8HYZ   ','1S8HYZ   ','1S8HYZ   ','1S8HYW   ','1S8HYW   ','1S8HYT   ','1S8HYT   ','1S8HYT   ','1S8HYT   ','1S8HYQ   ','1S8HYQ   ','1S8HYQ   ','1S8HYQ   ','1S8HYN   ','1S8HYN   ','1S8HYN   ','1S8HYN   ','1S8HYK   ','1S8HYK   ','1S8HYK   ','1S8HYI   ','1S8HYI   ','1S8HYI   ','1S8HYI   ','1S8HYG   ','1S8HYG   ','1S8HYG   ','1S8HYG   ','1S8HYE   ','1S8HYE   ','1S8HYE   ','1S8HYC   ','1S8HYC   ','1S8HY9   ','1S8HY9   ','1S8HY6   ','1S8HY6   ','1S8HY6   ','1S8HY6   ','1S8HY3   ','1S8HY0   ','1S8HY0   ','1S8HXY   ','1S8HXY   ','1S8HXV   ','1S8HXV   ','1S8HXV   ','1S8HXS   ','1S8HXS   ','1S8HXP   ','1S8HXP   ','1S8HXP   ','1S8HXN   ','1S8HXN   ','1S8HXK   ','1S8HXK   ','1S8HXI   ','1S8HXI   ','1S8HXF   ','1S8HXF   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXC   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HXA   ','1S8HX7   ','1S8HX7   ','1S8HX7   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX5   ','1S8HX2   ','1S8HX2   ','1S8HX0   ','1S8HX0   ','1S8HWY   ','1S8HWY   ','1S8HWV   ','1S8HWV   ','1S8HWV   ','1S8HWT   ','1S8HWT   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWR   ','1S8HWO   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWL   ','1S8HWI   ','1S8HWI   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWF   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HWC   ','1S8HW9   ','1S8HW9   ','1S8HW7   ','1S8HW7   ','1S8HW4   ','1S8HW4   ','1S8HW4   ','1S8HW4   ','1S8HW2   ','1S8HW2   ','1S8HW2   ','1S8HW2   ','1S8HVZ   ','1S8HVZ   ','1S8HVW   ','1S8HVW   ','1S8HVW   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVT   ','1S8HVR   ','1S8HVR   ','1S8HVR   ','1S8HVO   ','1S8HVO   ','1S8HVO   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVM   ','1S8HVK   ','1S8HVK   ','1S8HVI   ','1S8HVI   ','1S8HVF   ','1S8HVF   ','1S8HVF   ','1S8HVC   ','1S8HVC   ','1S8HV9   ','1S8HV9   ','1S8HV7   ','1S8HV7   ','1S8HV7   ','1S8HV4   ','1S8HV4   ','1S8HV2   ','1S8HV2   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUZ   ','1S8HUX   ','1S8HUX   ','1S8HUV   ','1S8HUV   ','1S8HUV   ','1S8HUV   ','1S8HUT   ','1S8HUT   ','1S8HUT   ','1S8HUQ   ','1S8HUQ   ','1S8HUQ   ','1S8HUQ   ','1S8HUO   ','1S8HUO   ','1S8HUO   ','1S8HUL   ','1S8HUL   ','1S8HUL   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUJ   ','1S8HUH   ','1S8HUH   ','1S8HUH   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUF   ','1S8HUD   ','1S8HUD   ','1S8HUD   ','1S8HUD   ','1S8HUB   ','1S8HUB   ','1S8HU8   ','1S8HU8   ','1S8HU8   ','1S8HU6   ','1S8HU6   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU4   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HU1   ','1S8HTY   ','1S8HTY   ','1S8HTY   ','1S8HTY   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTV   ','1S8HTT   ','1S8HTT   ','1S8HTR   ','1S8HTR   ','1S8HTR   ','1S8HTO   ','1S8HTL   ','1S8HP4   ','1S8HP4   ','1S8HJY   ','1S8HJY   ','1S8H7U   ','1S8H7U   ','1S8H5K   ','1S8H5K   ','1S8H4Y   ','1S8FMC   ','1S8FMC   ','1S8FLE   ','1S8FLE   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FJI   ','1S8FHL   ','1S8FHL   ','1S8FHL   ','1S8FCW   ','1S8FCW   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBX   ','1S8FBV   ','1S8FBV   ','1S8FBV   ','1S8FBT   ','1S8FBT   ','1S8FBT   ','1S8FBF   ','1S8FBF   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBD   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FBB   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB9   ','1S8FB6   ','1S8FB6   ','1S8FB6   ','1S8FB4   ','1S8FB4   ','1S8FB2   ','1S8FB2   ','1S8FB0   ','1S8FB0   ','1S8FAJ   ','1S8FAJ   ','1S8FAJ   ','1S8FAH   ','1S8FAH   ','1S8FAH   ','1S8FAF   ','1S8FAF   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAC   ','1S8FAA   ','1S8FAA   ','1S8FAA   ','1S8FAA   ','1S8FA8   ','1S8FA8   ','1S8FA6   ','1S8FA6   ','1S8FA3   ','1S8FA3   ','1S8FA3   ','1S8FA1   ','1S8FA1   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9Y   ','1S8F9W   ','1S8F9W   ','1S8F9W   ','1S8F9T   ','1S8F9T   ','1S8F9R   ','1S8F9R   ','1S8F9O   ','1S8F9O   ','1S8F9M   ','1S8F9M   ','1S8F9I   ','1S8F9I   ','1S8F9I   ','1S8F9F   ','1S8F9F   ','1S8F9D   ','1S8F9D   ','1S8F9A   ','1S8F9A   ','1S8F98   ','1S8F98   ','1S8F98   ','1S8F96   ','1S8F96   ','1S8F96   ','1S8F94   ','1S8F94   ','1S8F94   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F92   ','1S8F8Z   ','1S8F8Z   ','1S8F8Z   ','1S8F8Z   ','1S8F8W   ','1S8F8W   ','1S8F8W   ','1S8F8W   ','1S8F8U   ','1S8F8U   ','1S8F8U   ','1S8F8R   ','1S8F8R   ','1S8F8R   ','1S8F8P   ','1S8F8P   ','1S8F8M   ','1S8F8M   ','1S8F8K   ','1S8F8K   ','1S8F8H   ','1S8F8H   ','1S8F8F   ','1S8F8F   ','1S8F8F   ','1S8F8C   ','1S8F8C   ','1S8F8C   ','1S8F8C   ','1S8F89   ','1S8F89   ','1S8F89   ','1S8F87   ','1S8F87   ','1S8F87   ','1S8F87   ','1S8F84   ','1S8F84   ','1S8F81   ','1S8F81   ','1S8F81   ','1S8F81   ','1S8F7Y   ','1S8F7Y   ','1S8F7Y   ','1S8F7Y   ','1S8F7W   ','1S8F7W   ','1S8F7T   ','1S8F7T   ','1S8F7T   ','1S8F7Q   ','1S8F7Q   ','1S8F7Q   ','1S8F7O   ','1S8F7O   ','1S8F7O   ','1S8F7O   ','1S8F7M   ','1S8F7M   ','1S8F7M   ','1S8F7M   ','1S8F7K   ','1S8F7K   ','1S8F7K   ','1S8F7H   ','1S8F7H   ','1S8F7H   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7E   ','1S8F7B   ','1S8F7B   ','1S8F78   ','1S8F78   ','1S8F78   ','1S8F78   ','1S8F76   ','1S8F76   ','1S8F76   ','1S8F76   ','1S8F73   ','1S8F73   ','1S8F70   ','1S8F70   ','1S8F6X   ','1S8F6X   ','1S8F6X   ','1S8F6V   ','1S8F6V   ','1S8F6T   ','1S8F6T   ','1S8F6T   ','1S8F6T   ','1S8F6R   ','1S8F6R   ','1S8F6O   ','1S8F6O   ','1S8F6O   ','1S8F6L   ','1S8F6L   ','1S8F6J   ','1S8F6J   ','1S8F6G   ','1S8F6G   ','1S8F6D   ','1S8F6D   ','1S8F6A   ','1S8F6A   ','1S8F68   ','1S8F68   ','1S8F66   ','1S8F66   ','1S8F66   ','1S8F66   ','1S8F64   ','1S8F64   ','1S8F61   ','1S8F61   ','1S8F61   ','1S8F5Y   ','1S8F5Y   ','1S8F5Y   ','1S8F5Y   ','1S8F5V   ','1S8F5V   ','1S8F5V   ','1S8F5T   ','1S8F5T   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5R   ','1S8F5P   ','1S8F5P   ','1S8F5P   ','1S8F5P   ','1S8F5N   ','1S8F5N   ','1S8F5N   ','1S8F5N   ','1S8F5L   ','1S8F5L   ','1S8F5L   ','1S8F5J   ','1S8F5J   ','1S8F5J   ','1S8F5J   ','1S8F5H   ','1S8F5H   ','1S8F5F   ','1S8F5F   ','1S8F5F   ','1S8F5D   ','1S8F5D   ','1S8F5D   ','1S8F5B   ','1S8F5B   ','1S8F59   ','1S8F59   ','1S8F59   ','1S8F57   ','1S8F57   ','1S8F55   ','1S8F55   ','1S8F53   ','1S8F53   ','1S8F51   ','1S8F51   ','1S8F4Z   ','1S8F4Z   ','1S8F4Z   ','1S8F4X   ','1S8F4X   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EWH   ','1S8EH1   ','1S8EH1   ','1S8EH1   ','1S8EH1   ','1S8EGX   ','1S8EGX   ','1S8EGV   ','1S8EGV   ','1S8EGV   ','1S8EGV   ','1S8EGN   ','1S8EGN   ','1S8EGN   ','1S8EGN   ','1S8EGL   ','1S8EGL   ','1S8EGL   ','1S8EGJ   ','1S8EGJ   ','1S8EGJ   ','1S8EGJ   ','1S8EGG   ','1S8EGG   ','1S8EGD   ','1S8EGD   ','1S8EGB   ','1S8EGB   ','1S8EGB   ','1S8EGB   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG9   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG5   ','1S8EG0   ','1S8EG0   ','1S8EG0   ','1S8EFY   ','1S8EFY   ','1S8EFY   ','1S8EFY   ','1S8EFW   ','1S8EFW   ','1S8EFW   ','1S8EFW   ','1S8EFU   ','1S8EFU   ','1S8EFU   ','1S8EFS   ','1S8EFS   ','1S8EFQ   ','1S8EFQ   ','1S8EFQ   ','1S8EFQ   ','1S8EFN   ','1S8EFN   ','1S8EFN   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFL   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFG   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFE   ','1S8EFC   ','1S8EFC   ','1S8EFA   ','1S8EFA   ','1S8EFA   ','1S8EF8   ','1S8EF8   ','1S8EF6   ','1S8EF6   ','1S8EF6   ','1S8EF3   ','1S8EF1   ','1S8EF1   ','1S8EEZ   ','1S8EEZ   ','1S8EEX   ','1S8EEX   ','1S8EEX   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EEV   ','1S8EES   ','1S8EES   ','1S8EEQ   ','1S8EEQ   ','1S8EEQ   ','1S8EEN   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEL   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEJ   ','1S8EEG   ','1S8EEG   ','1S8EEC   ','1S8EEC   ','1S8EEC   ','1S8EEC   ','1S8EEA   ','1S8EEA   ','1S8EE8   ','1S8EE8   ','1S8EE8   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE5   ','1S8EE3   ','1S8EE3   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDX   ','1S8EDV   ','1S8EDV   ','1S8EDQ   ','1S8EDQ   ','1S8EDQ   ','1S8EDN   ','1S8EDN   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDL   ','1S8EDJ   ','1S8EDJ   ','1S8EDJ   ','1S8EDJ   ','1S8EDG   ','1S8EDG   ','1S8EDG   ','1S8EDE   ','1S8EDE   ','1S8EDC   ','1S8EDC   ','1S8EDC   ','1S8ED9   ','1S8ED9   ','1S8ED7   ','1S8ED7   ','1S8ED5   ','1S8ED5   ','1S8ED1   ','1S8ED1   ','1S8ECW   ','1S8ECW   ','1S8ECT   ','1S8ECT   ','1S8ECT   ','1S8ECR   ','1S8ECR   ','1S8ECR   ','1S8ECR   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECP   ','1S8ECM   ','1S8ECM   ','1S8ECM   ','1S8ECH   ','1S8ECH   ','1S8ECH   ','1S8ECH   ','1S8ECE   ','1S8ECE   ','1S8ECE   ','1S8ECC   ','1S8ECC   ','1S8ECA   ','1S8ECA   ','1S8ECA   ','1S8ECA   ','1S8EC7   ','1S8EC7   ','1S8EBX   ','1S8EBU   ','1S8EBU   ','1S8EBS   ','1S8EBS   ','1S8EBS   ','1S8EBP   ','1S8EBP   ','1S8EBN   ','1S8EBN   ','1S8EBN   ','1S8EBN   ','1S8EBL   ','1S8EBL   ','1S8EBJ   ','1S8EBJ   ','1S8EBJ   ','1S8EBJ   ','1S8EBH   ','1S8EBH   ','1S8EBH   ','1S8EBE   ','1S8EBE   ','1S8EBE   ','1S8EBB   ','1S8EBB   ','1S8EB9   ','1S8EB9   ','1S8EB9   ','1S8EB6   ','1S8EB6   ','1S8EB6   ','1S8EB4   ','1S8EB4   ','1S8EB4   ','1S8EB4   ','1S8EB1   ','1S8EB1   ','1S8EAY   ','1S8EAY   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAW   ','1S8EAU   ','1S8EAU   ','1S8EAS   ','1S8EAS   ','1S8EAS   ','1S8EAS   ','1S8EAP   ','1S8EAP   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAM   ','1S8EAK   ','1S8EAK   ','1S8EAK   ','1S8EAH   ','1S8EAH   ','1S8EAH   ','1S8EAH   ','1S8EAF   ','1S8EAF   ','1S8EAF   ','1S8EAD   ','1S8EAD   ','1S8EAB   ','1S8EAB   ','1S8EAB   ','1S8EA9   ','1S8EA9   ','1S8EA6   ','1S8EA6   ','1S8EA3   ','1S8EA3   ','1S8EA1   ','1S8EA1   ','1S8EA1   ','1S8EA1   ','1S8E9Z   ','1S8E9Z   ','1S8E9Z   ','1S8E9W   ','1S8E9W   ','1S8E9U   ','1S8E9U   ','1S8E9R   ','1S8E9R   ','1S8E9M   ','1S8E9M   ','1S8E9K   ','1S8E9K   ','1S8E9K   ','1S8E9K   ','1S8E9I   ','1S8E9I   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9G   ','1S8E9E   ','1S8E9E   ','1S8E9E   ','1S8E9A   ','1S8E9A   ','1S8E9A   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E97   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E95   ','1S8E93   ','1S8E93   ','1S8E93   ','1S8E90   ','1S8E90   ','1S8E90   ','1S8E8X   ','1S8E8X   ','1S8E8X   ','1S8E8V   ','1S8E8T   ','1S8E8T   ','1S8E8R   ','1S8E8R   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8P   ','1S8E8N   ','1S8E8J   ','1S8E8J   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8H   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8F   ','1S8E8D   ','1S8E8D   ','1S8E8D   ','1S8E8D   ','1S8E8B   ','1S8E8B   ','1S8E88   ','1S8E88   ','1S8E88   ','1S8E86   ','1S8E86   ','1S8E82   ','1S8E82   ','1S8E82   ','1S8E7Z   ','1S8E7Z   ','1S8E7X   ','1S8E7X   ','1S8E7X   ','1S8E7V   ','1S8E7V   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7T   ','1S8E7R   ','1S8E7R   ','1S8E7R   ','1S8E7O   ','1S8E7O   ','1S8E7M   ','1S8E7M   ','1S8E7M   ','1S8E7M   ','1S8E7K   ','1S8E7K   ','1S8E7K   ','1S8E7I   ','1S8E7I   ','1S8E7G   ','1S8E7G   ','1S8E7G   ','1S8E7E   ','1S8E7E   ','1S8E7E   ','1S8E7C   ','1S8E7C   ','1S8E7C   ','1S8E7C   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E7A   ','1S8E78   ','1S8E78   ','1S8E75   ','1S8E73   ','1S8E73   ','1S8E6Z   ','1S8E6Z   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6W   ','1S8E6T   ','1S8E6T   ','1S8E6T   ','1S8E6R   ','1S8E6R   ','1S8E6R   ','1S8E6R   ','1S8E6O   ','1S8E6O   ','1S8E6M   ','1S8E6M   ','1S8E6M   ','1S8E6J   ','1S8E6J   ','1S8E6J   ','1S8E6G   ','1S8E6G   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E6B   ','1S8E69   ','1S8E69   ','1S8E69   ','1S8E67   ','1S8E67   ','1S8E64   ','1S8E64   ','1S8E60   ','1S8E60   ','1S8E5X   ','1S8E5X   ','1S8E5X   ','1S8E5X   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5U   ','1S8E5S   ','1S8E5S   ','1S8E5S   ','1S8E5P   ','1S8E5P   ','1S8E5P   ','1S8E5M   ','1S8E5M   ','1S8E5M   ','1S8E5M   ','1S8E5K   ','1S8E5K   ','1S8E5K   ','1S8E5I   ','1S8E5I   ','1S8E5I   ','1S8E5I   ','1S8E5G   ','1S8E5G   ','1S8E5E   ','1S8E5E   ','1S8E5E   ','1S8E5B   ','1S8E5B   ','1S8E59   ','1S8E59   ','1S8E59   ','1S8E56   ','1S8E56   ','1S8E53   ','1S8E53   ','1S8E4X   ','1S8E4X   ','1S8E4U   ','1S8E4U   ','1S8E4R   ','1S8E4R   ','1S8E4P   ','1S8E4P   ','1S8E4M   ','1S8E4M   ','1S8E4M   ','1S8E4I   ','1S8E4I   ','1S8E4I   ','1S8E4I   ','1S8E4G   ','1S8E4G   ','1S8E4G   ','1S8E4G   ','1S8E4E   ','1S8E4E   ','1S8E4E   ','1S8E4C   ','1S8E4C   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E4A   ','1S8E47   ','1S8E47   ','1S8E47   ','1S8E47   ','1S8E45   ','1S8E45   ','1S8E45   ','1S8E43   ','1S8E43   ','1S8E40   ','1S8E40   ','1S8E40   ','1S8E40   ','1S8E3X   ','1S8E3X   ','1S8E3V   ','1S8E3V   ','1S8E3V   ','1S8E3V   ','1S8E3S   ','1S8E3S   ','1S8E3S   ','1S8E3P   ','1S8E3P   ','1S8E3P   ','1S8E3K   ','1S8E3K   ','1S8E3K   ','1S8E3K   ','1S8E3I   ','1S8E3I   ','1S8E3I   ','1S8E3G   ','1S8E3G   ','1S8E3G   ','1S8E3E   ','1S8E3E   ','1S8E2L   ','1S8E2L   ','1S8E2J   ','1S8E2J   ','1S8E2H   ','1S8E2H   ','1S8E2F   ','1S8E2F   ','1S8DPY   ','1S8DPY   ','1S8DPR   ','1S8DPR   ','1S8DPR   ','1S8DPK   ','1S8DPK   ','1S8BRM   ','1S8BRM   ','1S8AT0   ','1S8AT0   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASX   ','1S8ASU   ','1S8ASU   ','1S8ARK   ','1S8ARK   ','1S8APY   ','1S8APY   ','1S8APY   ','1S8AJN   ','1S8AJN   ','1S8ACQ   ','1S8ACQ   ','1S8A9V   ','1S8A9V   ','1S88V3   ','1S88V3   ','1S88OT   ','1S87RK   ','1S87RK   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B9   ','1S87B6   ','1S87B6   ','1S87B6   ','1S87AJ   ','1S87AJ   ','1S86MK   ','1S86MK   ','1S86O3   ','1S86O3   ','1S86O3   ','1S86JX   ','1S86CL   ','1S86CL   ','1S86CJ   ','1S86CJ   ','1S85XT   ','1S85XT   ','1S85VI   ','1S85VI   ','1S85VG   ','1S85VG   ','1S85VE   ','1S85VE   ','1S85VA   ','1S85VA   ','1S85V7   ','1S85V7   ','1S85V5   ','1S85V5   ','1S85V5   ','1S85V5   ','1S85V2   ','1S85V2   ','1S85V2   ','1S85PS   ','1S85PS   ','1S85O5   ','1S85O5   ','1S85O5   ','1S85O2   ','1S85O2   ','1S85NZ   ','1S85NZ   ','1S85NZ   ','1S85NW   ','1S85NW   ','1S85NW   ','1S85NU   ','1S85NU   ','1S85NU   ','1S85NU   ','1S85NR   ','1S85NR   ','1S85NP   ','1S85NP   ','1S85NM   ','1S85NM   ','1S85NK   ','1S85NK   ','1S85NK   ','1S85NH   ','1S85NH   ','1S85NF   ','1S85NF   ','1S85ND   ','1S85ND   ','1S85ND   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85NA   ','1S85N7   ','1S85N7   ','1S85N4   ','1S85N4   ','1S85N2   ','1S85N2   ','1S85N0   ','1S85N0   ','1S85MX   ','1S85MX   ','1S85MV   ','1S85MV   ','1S85HU   ','1S85HU   ','1S84YN   ','1S84YN   ','1S84YL   ','1S84YL   ','1S84YL   ','1S84OR   ','1S84OR   ','1S84H7   ','1S84H7   ','1S84GV   ','1S84GV   ','1S84GS   ','1S84GS   ','1S84GS   ','1S84GP   ','1S84GP   ','1S84GP   ','1S84GN   ','1S84GN   ','1S84GK   ','1S84GK   ','1S84GK   ','1S84GI   ','1S84GI   ','1S84GF   ','1S84GF   ','1S84GF   ','1S84GD   ','1S84GD   ','1S84GB   ','1S84GB   ','1S84C6   ','1S84C6   ','1S84C6   ','1S84AP   ','1S84AP   ','1S84AN   ','1S84AN   ','1S84AN   ','1S84AL   ','1S84AL   ','1S84AJ   ','1S84AJ   ','1S84AJ   ','1S84AJ   ','1S84AH   ','1S84AH   ','1S84AH   ','1S84AF   ','1S84AF   ','1S84AC   ','1S84AC   ','1S84AA   ','1S84AA   ','1S84A7   ','1S84A7   ','1S84A5   ','1S84A5   ','1S84A3   ','1S84A3   ','1S8485   ','1S8482   ','1S8482   ','1S8480   ','1S8480   ','1S847X   ','1S847X   ','1S847X   ','1S847V   ','1S847V   ','1S847T   ','1S847T   ','1S847R   ','1S847R   ','1S847R   ','1S843Z   ','1S843Z   ','1S843Z   ','1S843X   ','1S843X   ','1S843X   ','1S843T   ','1S843T   ','1S843Q   ','1S843Q   ','1S8424   ','1S8424   ','1S8422   ','1S8422   ','1S8420   ','1S8420   ','1S83Z1   ','1S83Z1   ','1S83Z1   ','1S83YZ   ','1S83YZ   ','1S83YX   ','1S83YX   ','1S83YV   ','1S83YV   ','1S83YS   ','1S83YS   ','1S83YQ   ','1S83YQ   ','1S83Y2   ','1S83Y2   ','1S83Y2   ','1S83Y2   ','1S83Y0   ','1S83Y0   ','1S83XW   ','1S83XW   ','1S83XT   ','1S83XT   ','1S83XR   ','1S83XR   ','1S83XN   ','1S83XN   ','1S83XK   ','1S83XK   ','1S83XI   ','1S83XI   ','1S83XF   ','1S83XF   ','1S83XC   ','1S83XC   ','1S83X9   ','1S83X9   ','1S83X6   ','1S83X6   ','1S83X2   ','1S83X2   ','1S83VB   ','1S83VB   ','1S83VB   ','1S83V9   ','1S83V9   ','1S83V6   ','1S83V6   ','1S83V6   ','1S83V4   ','1S83V4   ','1S83V2   ','1S83V2   ','1S83V0   ','1S83V0   ','1S83UX   ','1S83UX   ','1S83UV   ','1S83UV   ','1S83US   ','1S83US   ','1S83UQ   ','1S83UQ   ','1S83UN   ','1S83UN   ','1S83TE   ','1S83TE   ','1S83TC   ','1S83TC   ','1S83TC   ','1S83T9   ','1S83T9   ','1S83T9   ','1S83T7   ','1S83T7   ','1S83T5   ','1S83T5   ','1S83T3   ','1S83T3   ','1S83SZ   ','1S83SZ   ','1S83ST   ','1S83ST   ','1S83SQ   ','1S83SQ   ','1S83SQ   ','1S83SN   ','1S83SN   ','1S83SK   ','1S83SK   ','1S83SH   ','1S83SH   ','1S83SH   ','1S83SE   ','1S83SE   ','1S83SE   ','1S83SC   ','1S83SC   ','1S83SC   ','1S83S9   ','1S83S9   ','1S83S7   ','1S83S7   ','1S83S5   ','1S83S5   ','1S83S2   ','1S83S2   ','1S83S0   ','1S83S0   ','1S83RX   ','1S83RX   ','1S83RS   ','1S83RS   ','1S83RS   ','1S83RQ   ','1S83RQ   ','1S83RN   ','1S83RN   ','1S83RN   ','1S83RK   ','1S83RK   ','1S83RI   ','1S83RI   ','1S83RI   ','1S83RF   ','1S83RF   ','1S83RD   ','1S83RD   ','1S83RB   ','1S83RB   ','1S83RB   ','1S83R9   ','1S83R9   ','1S83R7   ','1S83R7   ','1S83R4   ','1S83R4   ','1S83R1   ','1S83R1   ','1S83QZ   ','1S83QZ   ','1S83QZ   ','1S83QX   ','1S83QX   ','1S83QV   ','1S83QV   ','1S83PN   ','1S83PN   ','1S83PN   ','1S83PK   ','1S83PK   ','1S83PI   ','1S83PI   ','1S83PF   ','1S83PF   ','1S83PC   ','1S83PC   ','1S83N8   ','1S83N8   ','1S83N8   ','1S83N5   ','1S83N5   ','1S83N5   ','1S83N2   ','1S83N2   ','1S83MZ   ','1S83MZ   ','1S83MZ   ','1S83MW   ','1S83MW   ','1S83MW   ','1S83MT   ','1S83MT   ','1S83MT   ','1S83MR   ','1S83MR   ','1S83MP   ','1S83MP   ','1S83MP   ','1S83MM   ','1S83MJ   ','1S83MJ   ','1S83MG   ','1S83MG   ','1S83ME   ','1S83ME   ','1S83MC   ','1S83MC   ','1S83MC   ','1S83L0   ','1S83L0   ','1S83KY   ','1S83KY   ','1S83KW   ','1S83KW   ','1S83KU   ','1S83KU   ','1S83KS   ','1S83KS   ','1S83KS   ','1S83KP   ','1S83KP   ','1S83KN   ','1S83KN   ','1S83KK   ','1S83KK   ','1S83KI   ','1S83KI   ','1S83HM   ','1S83HM   ','1S83HJ   ','1S83HJ   ','1S83HG   ','1S83HG   ','1S83HE   ','1S83HE   ','1S83HB   ','1S83HB   ','1S83H8   ','1S83H8   ','1S83H8   ','1S83H5   ','1S83H5   ','1S83H5   ','1S83H2   ','1S83H2   ','1S83H0   ','1S83H0   ','1S83H0   ','1S83GY   ','1S83GY   ','1S83GV   ','1S83GV   ','1S83GT   ','1S83GT   ','1S83GT   ','1S83GQ   ','1S83GQ   ','1S83GQ   ','1S83GO   ','1S83GO   ','1S83GL   ','1S83GL   ','1S83GJ   ','1S83GJ   ','1S83GG   ','1S83GG   ','1S83GG   ','1S83GE   ','1S83GE   ','1S83GE   ','1S83GB   ','1S83GB   ','1S83GB   ','1S83G9   ','1S83G9   ','1S83G6   ','1S83G6   ','1S83G3   ','1S83G3   ','1S83G1   ','1S83G1   ','1S83DB   ','1S83DB   ','1S83D8   ','1S83D8   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D6   ','1S83D4   ','1S83D4   ','1S83D4   ','1S83D2   ','1S83D2   ','1S83CZ   ','1S83CZ   ','1S83CX   ','1S83CX   ','1S83CX   ','1S83CX   ','1S83CV   ','1S83CV   ','1S83CS   ','1S83CQ   ','1S83CQ   ','1S83CO   ','1S83CO   ','1S83CL   ','1S83CL   ','1S83CD   ','1S83CD   ','1S83CB   ','1S83CB   ','1S83C8   ','1S83C8   ','1S83C5   ','1S83C5   ','1S83C5   ','1S83C2   ','1S83C2   ','1S83BZ   ','1S83BZ   ','1S83BW   ','1S83BW   ','1S83BW   ','1S83BT   ','1S83BT   ','1S83BQ   ','1S83BQ   ','1S83BO   ','1S83BO   ','1S83BM   ','1S83BM   ','1S83BJ   ','1S83BJ   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AY   ','1S83AW   ','1S83AW   ','1S83AW   ','1S83AW   ','1S83AT   ','1S83AT   ','1S83AQ   ','1S83AQ   ','1S83AQ   ','1S83AN   ','1S83AN   ','1S83AL   ','1S83AL   ','1S83AI   ','1S83AI   ','1S83AI   ','1S83AG   ','1S83AG   ','1S83AG   ','1S83AE   ','1S83AE   ','1S83AB   ','1S83AB   ','1S83AB   ','1S83A9   ','1S83A9   ','1S83A6   ','1S83A6   ','1S83A3   ','1S83A3   ','1S83A3   ','1S83A1   ','1S83A1   ','1S839Y   ','1S839Y   ','1S839Y   ','1S839W   ','1S839W   ','1S839W   ','1S839W   ','1S839W   ','1S839U   ','1S839U   ','1S838A   ','1S838A   ','1S8387   ','1S8387   ','1S8383   ','1S8383   ','1S8380   ','1S8380   ','1S837Y   ','1S837Y   ','1S837V   ','1S837V   ','1S837V   ','1S837S   ','1S837S   ','1S837P   ','1S837P   ','1S837M   ','1S837M   ','1S837J   ','1S837J   ','1S837J   ','1S837J   ','1S837H   ','1S837H   ','1S836X   ','1S836X   ','1S836X   ','1S836X   ','1S836X   ','1S836U   ','1S836U   ','1S836S   ','1S836S   ','1S836P   ','1S836P   ','1S836N   ','1S836N   ','1S836N   ','1S836N   ','1S836L   ','1S836L   ','1S836L   ','1S836L   ','1S836L   ','1S836I   ','1S836I   ','1S836I   ','1S836I   ','1S836G   ','1S836G   ','1S836E   ','1S836E   ','1S836B   ','1S8369   ','1S8369   ','1S8369   ','1S8366   ','1S8366   ','1S8366   ','1S8364   ','1S8364   ','1S8364   ','1S8362   ','1S8362   ','1S8362   ','1S8348   ','1S8348   ','1S831F   ','1S831F   ','1S831D   ','1S831D   ','1S831B   ','1S831B   ','1S831B   ','1S8305   ','1S8305   ','1S8303   ','1S8303   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82ZC   ','1S82Z9   ','1S82Z9   ','1S82Z7   ','1S82Z7   ','1S82Z4   ','1S82Z4   ','1S82Z4   ','1S82Z4   ','1S82Z2   ','1S82Z2   ','1S82Z2   ','1S82YZ   ','1S82YZ   ','1S82YX   ','1S82YX   ','1S82YU   ','1S82YU   ','1S82YU   ','1S82YS   ','1S82YS   ','1S82YP   ','1S82YP   ','1S82YM   ','1S82YM   ','1S82YM   ','1S82YM   ','1S82YJ   ','1S82YJ   ','1S82YH   ','1S82YH   ','1S82YF   ','1S82YF   ','1S82YC   ','1S82YC   ','1S82Y9   ','1S82Y9   ','1S82Y9   ','1S82Y6   ','1S82Y6   ','1S82XJ   ','1S82XJ   ','1S82XJ   ','1S82XH   ','1S82XH   ','1S82XH   ','1S82XF   ','1S82XF   ','1S82XC   ','1S82XC   ','1S82X9   ','1S82X9   ','1S82X5   ','1S82X5   ','1S82X2   ','1S82X2   ','1S82WZ   ','1S82WZ   ','1S82WZ   ','1S82WZ   ','1S82WW   ','1S82WW   ','1S82WS   ','1S82WS   ','1S82WS   ','1S82WP   ','1S82WP   ','1S82WM   ','1S82WM   ','1S82WJ   ','1S82WJ   ','1S82WH   ','1S82WH   ','1S82WD   ','1S82WD   ','1S82WB   ','1S82WB   ','1S82WB   ','1S82W9   ','1S82W9   ','1S82W6   ','1S82W6   ','1S82W3   ','1S82W3   ','1S82W3   ','1S82W0   ','1S82W0   ','1S82W0   ','1S82VY   ','1S82VY   ','1S82VY   ','1S82VY   ','1S82VV   ','1S82VV   ','1S82VT   ','1S82VT   ','1S82VR   ','1S82VR   ','1S82VP   ','1S82VP   ','1S82VN   ','1S82VN   ','1S82VN   ','1S82VL   ','1S82VL   ','1S82VI   ','1S82VI   ','1S82VF   ','1S82VF   ','1S82UN   ','1S82UN   ','1S82UL   ','1S82UL   ','1S82UJ   ','1S82UJ   ','1S82UG   ','1S82UG   ','1S82UD   ','1S82UD   ','1S82UB   ','1S82UB   ','1S82U9   ','1S82U9   ','1S82U9   ','1S82U9   ','1S82U6   ','1S82U6   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U3   ','1S82U0   ','1S82U0   ','1S82U0   ','1S82TX   ','1S82TX   ','1S82TX   ','1S82TV   ','1S82TV   ','1S82TT   ','1S82TT   ','1S82TQ   ','1S82TQ   ','1S82TO   ','1S82TO   ','1S82TL   ','1S82TL   ','1S82M2   ','1S82M2   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LZ   ','1S82LX   ','1S82LX   ','1S82LU   ','1S82LU   ','1S82LU   ','1S82LR   ','1S82LR   ','1S82LR   ','1S82LO   ','1S82LO   ','1S82LL   ','1S82LL   ','1S82LJ   ','1S82LJ   ','1S82LJ   ','1S82LG   ','1S82LG   ','1S82LG   ','1S82LE   ','1S82LE   ','1S82LE   ','1S82LE   ','1S82LC   ','1S82LC   ','1S82LA   ','1S82LA   ','1S82L7   ','1S82L7   ','1S82L4   ','1S82L4   ','1S82L1   ','1S82L1   ','1S82L1   ','1S82KZ   ','1S82KZ   ','1S82KX   ','1S82KX   ','1S82KX   ','1S82KV   ','1S82KV   ','1S82KT   ','1S82KT   ','1S82KT   ','1S828Z   ','1S828Z   ','1S81U7   ','1S81U7   ','1S81KI   ','1S81KI   ','1S81KI   ','1S81KG   ','1S81KG   ','1S81KD   ','1S81KD   ','1S81KD   ','1S81KD   ','1S81KA   ','1S81KA   ','1S81KA   ','1S81KA   ','1S81K8   ','1S81K8   ','1S81K6   ','1S81K6   ','1S81K3   ','1S81K0   ','1S81K0   ','1S81K0   ','1S81JX   ','1S81JV   ','1S81JV   ','1S81AQ   ','1S81AQ   ','1S81AN   ','1S81AN   ','1S81AN   ','1S813Q   ','1S813Q   ','1S813N   ','1S813N   ','1S813K   ','1S813K   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813H   ','1S813E   ','1S813B   ','1S813B   ','1S7ZQ5   ','1S7ZQ5   ','1S7ZJB   ','1S7ZJB   ','1S7ZJ8   ','1S7ZJ8   ','1S7ZHF   ','1S7ZHF   ','1S7XR9   ','1S7XR9   ','1S7XR9   ','1S7XR7   ','1S7XR7   ','1S7XR5   ','1S7XR5   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR3   ','1S7XR1   ','1S7XR1   ','1S7XQY   ','1S7XQY   ','1S7XQW   ','1S7XQW   ','1S7XQU   ','1S7XQU   ','1S7XQU   ','1S7XQU   ','1S7XQS   ','1S7XQS   ','1S7XQS   ','1S7XQS   ','1S7XQP   ','1S7XQP   ','1S7XQP   ','1S7XQN   ','1S7XQN   ','1S7XQN   ','1S7XQL   ','1S7XQL   ','1S7XQI   ','1S7XQI   ','1S7XQI   ','1S7XQG   ','1S7XQG   ','1S7XQG   ','1S7XQE   ','1S7XQE   ','1S7XQC   ','1S7XQC   ','1S7XQA   ','1S7XQA   ','1S7XQ8   ','1S7XQ8   ','1S7XQ6   ','1S7XQ6   ','1S7XQ4   ','1S7XQ4   ','1S7XQ1   ','1S7XQ1   ','1S7XN6   ','1S7XN6   ','1S7XN6   ','1S7XN6   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN4   ','1S7XN1   ','1S7XN1   ','1S7XMZ   ','1S7XMZ   ','1S7XMX   ','1S7XMX   ','1S7XMX   ','1S7XMX   ','1S7XMV   ','1S7XMV   ','1S7XMS   ','1S7XMS   ','1S7XMQ   ','1S7XMQ   ','1S7XMN   ','1S7XMN   ','1S7XML   ','1S7XML   ','1S7XMJ   ','1S7XMJ   ','1S7XMH   ','1S7XMH   ','1S7XMF   ','1S7XMF   ','1S7XMD   ','1S7XMD   ','1S7XMB   ','1S7XMB   ','1S7XM9   ','1S7XM9   ','1S7XM9   ','1S7XF0   ','1S7XF0   ','1S7XEX   ','1S7XEX   ','1S7XEU   ','1S7XEU   ','1S7XER   ','1S7XER   ','1S7XER   ','1S7XER   ','1S7XEO   ','1S7XEO   ','1S7XEM   ','1S7XEM   ','1S7XEJ   ','1S7XEH   ','1S7XEH   ','1S7XEE   ','1S7XEE   ','1S7XEB   ','1S7XEB   ','1S7XEB   ','1S7XEB   ','1S7XE8   ','1S7XE8   ','1S7XE8   ','1S7XE5   ','1S7XE5   ','1S7XE5   ','1S7XE3   ','1S7XE3   ','1S7XE0   ','1S7XE0   ','1S7XDY   ','1S7XDY   ','1S7XDU   ','1S7XDU   ','1S7XDU   ','1S7XDS   ','1S7XDS   ','1S7TI2   ','1S7TI2   ','1S7TI0   ','1S7TI0   ','1S7THY   ','1S7THY   ','1S7THY   ','1S7THV   ','1S7THV   ','1S7THS   ','1S7THS   ','1S7THP   ','1S7THP   ','1S7THP   ','1S7THM   ','1S7THM   ','1S7THK   ','1S7THK   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THH   ','1S7THE   ','1S7THE   ','1S7THC   ','1S7THC   ','1S7THA   ','1S7THA   ','1S7TG4   ','1S7TG4   ','1S7TG4   ','1S7TG2   ','1S7TG2   ','1S7TFZ   ','1S7TFX   ','1S7TFX   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFU   ','1S7TFS   ','1S7TFS   ','1S7TFQ   ','1S7TFQ   ','1S7TFO   ','1S7TFO   ','1S7TFO   ','1S7TFM   ','1S7TFM   ','1S7TFM   ','1S7TFJ   ','1S7TFJ   ','1S7TFG   ','1S7TFG   ','1S7T33   ','1S7T33   ','1S7T30   ','1S7T30   ','1S7T2Y   ','1S7T2Y   ','1S7T2Y   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2W   ','1S7T2U   ','1S7T2U   ','1S7T2R   ','1S7T2R   ','1S7T2O   ','1S7T2L   ','1S7T2L   ','1S7T2J   ','1S7T2J   ','1S7T2J   ','1S7T2H   ','1S7T2H   ','1S7T2H   ','1S7T2F   ','1S7T2F   ','1S7T2F   ','1S7T2F   ','1S7T2C   ','1S7T2C   ','1S7T29   ','1S7T29   ','1S7T29   ','1S7T26   ','1S7T26   ','1S7T24   ','1S7T24   ','1S7T22   ','1S7T22   ','1S7NWI   ','1S7NWI   ','1S7HOB   ','1S7HOB   ','1S5FSR   ','1S5FSR   ','1S5AF6   ','1S5AF6   '");	
КОнецЕсли;

//добавим исключение
текнаборидно = ПравилаИгры.стридНО;
Если ЗначениеЗаполнено(текнаборидно) тогда
	//'1RE0K0   ' OДИ0142682 от 19.06  04102017 по просьбе ГСВ
	стрисклидно = "'1RE0K0   '";
	Если СтрНайти(текнаборидно, стрисклидно) = 0 Тогда
		ПравилаИгры.Вставить("стридНО",текнаборидно + "," + стрисклидно);
	КонецЕсли;
КонецЕсли;


	CommandText77_Контрагенты = "
	

 |   															-- 3 рассчитываем сумму остатка по средней цене
 |   															select 	     
 |   																TMP_2.Номенклатура,                                 			 --p0
 |   																ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр,        --p1
 //|   																ISNULL(СпрНоменклатура.code, '') As СпрНоменклатура_код,         --p2
 |																	ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_код,      --p2

 |   																TMP_2.Фирма,                                         			 --p3 
 |   																ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр,                      --p4
 //|   																ISNULL(СпрФирмы.code, '') As СпрФирмы_код,                       --p5
 |																	ISNULL(LOWER (idФирмы._Id), '')  As СпрФирмы_код,                --p5

 |   																TMP_2.Склад,                                         			 --p6
 |   																ISNULL(СпрСклады.DESCR, '') As СпрСклады_Стр,                    --p7
 //|   																ISNULL(СпрСклады.code, '') As СпрСклады_код,                     --p8
|																	ISNULL(LOWER (idСклады._Id), '') As СпрСклады_код,               --p8 
 |
 |   																TMP_2.флЗапрещеныПеремещение as VMI,                 			 --p9

 |   																TMP_2.ОстИт,                                         			 --p10
 |   																ISNULL(TbPr.ЦенаСр,0) as ЦенаСр,                     			 --p11
 |   																TMP_2.ОстИт * ISNULL(TbPr.ЦенаСр,0) as ОстИтСумма,    			 --p12
 
 
																	|ISNULL(TbPr.ЦенаСрРуб,0) as ЦенаСрРуб,                          --p13
																	|TMP_2.ОстИт * ISNULL(TbPr.ЦенаСрРуб,0) as ОстИтСуммаРуб,        --p14
																	|ISNULL(TbPr.ЦенаСрБезНДС,0) as ЦенаСрБезНДС,                    --p15
																	|TMP_2.ОстИт * ISNULL(TbPr.ЦенаСрБезНДС,0) as ОстИтСуммаБезНДС   --p16
 
 
 |   															FROM													
 |   																(		-- 2 рассчитываем остаток номенклатуры										
 |   																		select	
 |   																			TMP_1.Номенклатура,									
 |   																			TMP_1.Фирма,									
 |   																			TMP_1.Склад,
 |   																			cast(ISNULL(СпрСкл.SP12508,0) as int) as флЗапрещеныПеремещение,
 |   																			SUM(TMP_1.Ост) As Ост,
 |   																			SUM(TMP_1.РасходНО) As РасходНО,
 |   																			SUM(TMP_1.Ост + TMP_1.Приход - TMP_1.Расход + TMP_1.РасходНО - TMP_1.ПриходНО) As ОстИт
 |   																		From										
 |   																			(		-- 1.1 берём конечный остаток по регистру Остатки ТМЦ							
 |   																					SELECT							
 |   																						TabRegOst.SP4062 As Фирма,						
 |   																						TabRegOst.SP408 As Номенклатура,						
 |   																						TabRegOst.SP418 As Склад,						
 |   																						TabRegOst.SP411 As Ост,
 |   																						0 Приход,						
 |   																						0 Расход,						
 |   																						0 РасходНО,						
 |   																						0 ПриходНО
 |   																					FROM							
 |   																						RG405 As TabRegOst (NOLOCK)						
 |   																					WHERE							
 |   																						TabRegOst.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112) 
 
 //////////////////////////////////|                                                     " + ?(пар_стридсклада = "", "", " AND TabRegOst.SP418 = " + пар_стридсклада ) + "
 
 |   																						
 |   																						and TabRegOst.SP411  <> 0
 
 
|" + ?(НЕ ДобавитьДвиженияЗаПериод,"","  
|																						UNION ALL							
|																													
|																						SELECT							
|																							TabReg.SP4062 As Фирма,						
|																							TabReg.SP408 As Номенклатура,						
|																							TabReg.SP418 As Склад,						
|																							0 As Ост,						
|																							(TabReg.SP411*((TabReg.DEBKRED+1)%2)) As Приход,						
|																							(TabReg.SP411*TabReg.DEBKRED) As Расход,						
|																							0 РасходНО,						
|																							0 ПриходНО						
|																						FROM							
|																							RA405 As TabReg (NOLOCK)						
|																							INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabReg.IDDOC = TabJ.IDDOC)						
|																						WHERE							
|																							TabJ.DATE_TIME_IDDOC >= '"+PERIODN+"' AND TabJ.DATE_TIME_IDDOC < '"+PERIODK+"'						
 
 |													") + "

 |" + ?(НЕ ЗначениеЗаполнено(ПравилаИгры.стридНО),""," 									UNION ALL							
 |   																				
 |   																					--1.2 выбирем движения НО, у которых нет реализации или она после 01/03/16
 |   																					SELECT	
 |   																						TabReg.SP4062 As Фирма,						
 |   																						TabReg.SP408 As Номенклатура,						
 |   																						TabReg.SP418 As Склад,		
 |   																						0 As Ост,	
 |   																						0 Приход,						
 |   																						0 Расход,						
 |   																						(TabReg.SP411*TabReg.DEBKRED) As РасходНО,						
|	 																						case
|																								when TabReg.DEBKRED = 0 then 
|																								   TabReg.SP411
|																								else
|																									0
|																							end As ПриходНО 
 |   																					FROM							
 |   																						RA405 As TabReg (NOLOCK)						
 |   																						INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabReg.IDDOC = TabJ.IDDOC)
 |   																					WHERE	
  //////////////////////////////////|                                                     " + ?(пар_стридсклада = "", "", "  TabReg.SP418 = " + пар_стридсклада ) + "
|   																						    TabReg.IDDOC IN (" + СокрЛП(ПравилаИгры.стридНО) + ")
|   																						-- AND TabReg.SP420 = 0  -- Внутреннее	
 
 
 
 |													") + "
 |   																						                                                                        
 |   																			) as TMP_1 
 |   																			
 |   																			left JOIN SC55 AS СпрСкл (NOLOCK) ON TMP_1.Склад = СпрСкл.ID	
 |   																												
 |   																			GROUP BY 									
 |   																			TMP_1.Фирма,
 |   																			TMP_1.Номенклатура,									
 |   																			TMP_1.Склад,
 |   																			СпрСкл.SP12508
 
 |																				HAVING
 |                                                                              	SUM(TMP_1.Ост + TMP_1.Приход - TMP_1.Расход + TMP_1.РасходНО) > 0
 |   																												
 |   																	) as TMP_2 -- результат расчета остатка номенклатуры

 |   																	left JOIN 

 |   																	(   -- расчитаем среднюю цену по регистру партий
 |   																		select
 |   																			tbl1.Фирма,
 |   																			tbl1.Номенклатура,
 |   																			tbl1.СуммаУпр / tbl1.Количество as ЦенаСр,
 
																				|tbl1.СуммаРуб / tbl1.Количество as ЦенаСрРуб,
																				|tbl1.СуммаБезНДС / tbl1.Количество as ЦенаСрБезНДС
 
 
 |   																		from
 |   																			(
 |   																			 select 
 |   																				 SP4061 as Фирма, 
 |   																				 SP331 as Номенклатура,     
 |   																				 --SP341 as Партия, 
 |   																				 sum(SP342) as Количество, 
 |   																				 sum(SP421) as СуммаУпр,
 
																			 		|sum(SP343) as СуммаРуб,
																			 		|sum(SP344) as СуммаБезНДС

 
 |   																			 from RG328 (nolock)
 |																				 group by SP4061, SP331, PERIOD --, SP341
 |																				 having   
 |																					 PERIOD = CONVERT(DateTime, '" + PERIODR + "',112)
 |   																				 and sum(SP342) > 0 
 |   																				 and sum(SP421) >= 0
 |
 |   																			) as tbl1
 |   																		) as TbPr ON TMP_2.Фирма = TbPr.Фирма AND TMP_2.Номенклатура = TbPr.Номенклатура
 |   
 |   																	left JOIN SC4014 AS СпрФирмы (NOLOCK) ON TMP_2.Фирма = СпрФирмы.ID
 |   																	left JOIN SC55 AS СпрСклады (NOLOCK) ON TMP_2.Склад = СпрСклады.ID
 |   																	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID
 
 |																		left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON TMP_2.Фирма = idФирмы._Object
 |																		left JOIN adoURBD_Guids AS idСклады (NOLOCK) ON TMP_2.Склад = idСклады._Object

 |   														where
 |   															TMP_2.ОстИт > 0
 
| 															and idФирмы._MetaType = 11 and idФирмы._MetaId = 4014
|															and idСклады._MetaType = 11 and idСклады._MetaId = 55

	
	
		|";
		
	//ДГ = СокрлП( Формат( ДеньГода(ТекДтВрм) , "ЧЦ=3; ЧДЦ=; ЧВН="        )   );
	//метка = ДГ +"_"+ СокрЛП(Год(ТекДтВрм)) + СокрЛП(Месяц(ТекДтВрм)) + СокрЛП(День(ТекДтВрм)) + СокрЛП(Час(ТекДтВрм))+ СокрЛП(Минута(ТекДтВрм))+СокрЛП(Секунда(ТекДтВрм));
	//метка = СтрЗаменить(метка," ","");
		
	СохранитьТекстВФайл(CommandText77_Контрагенты, "select_from_77_wh_balance_" +  ПравилаИгры.метка  );
	
	тзДанные77_НОТаб = Новый ТаблицаЗначений;
	
		Счр = 0;
		Попытка
			ВыборкаSQL.Open(CommandText77_Контрагенты, СоединениеSQL);
		Исключение
			ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Контрагенты) + Символы.ПС + ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		ДобавитьВЛог("запрос sql "+ "select_from_77_wh_balance_" +  ПравилаИгры.метка);
		
		Если тзДанные77_НОТаб.Колонки.Количество() = 0 тогда
			Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				инд_К = "p"+СокрЛП(ii);
				имя_К = инд_К;
				Если ii > 8 тогда
					тзДанные77_НОТаб.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
				Иначе
					тзДанные77_НОТаб.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
			
		Пока не ВыборкаSQL.eof() Цикл
			Счр = Счр + 1;
			Шоумастгоон(имяселекта + СокрлП(Счр) );
			
			НоваяСтрока = тзДанные77_НОТаб.Добавить();
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii > 8 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		ВыборкаSQL.Close();
		
		
	ДобавитьВЛог(имяселекта + СокрлП(Счр));
	ПравилаИгры.Вставить("ТабличноеПоле22", тзДанные77_НОТаб);
		
КонецПроцедуры
Процедура Опросить7_ПартийныйОстаток()
	имяселекта = "select from sql db ИтогиПоПартийнымОстаткамНоменклатуры	";
	Шоумастгоон(имяселекта);
	
	//ДатОстСтр = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(ПравилаИгры.ДтПоУмолчанию,-1)));
	//ДобавитьВЛог("ДатКонОстСтр =  " + ДатОстСтр);
	
	Темп_Дата = ПравилаИгры.ДтПоУмолчанию;
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата);
	
	ДобавитьДвиженияЗаПериод = Ложь;
	ДобавитьВЛог("PERIODR =  " + PERIODR);
	Если НЕ Темп_Дата = НачалоМесяца(Темп_Дата) тогда
		ДобавитьДвиженияЗаПериод = Истина;
		ДобавитьВЛог("PERIODN =  " + PERIODN);
		ДобавитьВЛог("PERIODK =  " + PERIODK);
	КонецЕсли;
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Продолжить выполнение операции?';"
	//	+ " en = 'Do you want to continue?'"), Режим, 0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	//пар_стридсклада = ПравилаИгры.ВыбСклад_Ид;
	
	ТекДтВрм =  ТекущаяДата();
	ДобавитьВЛог(СокрлП(ТекДтВрм) + " - ШАГ 3 опрашиваем 7 итоги по партийным остаткам");
	
	CommandText77_Контрагенты = "
	
	| select
	|	tblvmi.*
	|	, case
	|		when tblvmi.СтатусПартии = '   A94   '  then 1
	|		else 0
	|	end as VMI,                                            					--p19            !!!!!!!!!!!!!!!! был p17 !!!!!!!!!!!!!!!!
	
	| ISNULL(LOWER(СпрКонтра.SP13668), '') as СпрПартии_КА_Поставщик,					--p20            !!!!!!!!!!!!!!!! был p18 !!!!!!!!!!!!!!!!
	
	| ISNULL(LOWER(СпрДоговора.SP13669), '') as СпрПартии_Договор_УИД					--p21
	
	| from
	|	(
	|	 select    --top 100
	|		RG.Номенклатура,                         					--p0
	|		ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр,	        --p1
	|		ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_код,         --p2
	
	|		RG.Фирма,                               					--p3
	|		ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр,                         --p4
	|       ISNULL(LOWER (idФирмы._Id), '')  As СпрФирмы_код,                                       --p5
	
	|		Prt.SP12669 as Склад,                             					--p6
	|		ISNULL(СпрСклады.DESCR, '') as СкладСтр,                            --p7
	
	//|		ISNULL(LOWER (idСклады._Id), '')               As СпрСклады_код,                        --p8
	|		ISNULL(LOWER (idСклады._Id), ISNULL(СпрСклады.code, '') )               As СпрСклады_код,                        --p8
	
	
	|		ISNULL(Prt.ROW_ID, 0) as ПартияROW_ID,                              --p9
	|       ISNULL(LOWER (idПартии._Id), '') as ПартияКод,                               	        --p10
	|		RG.Партия,                                   				--p11
	
	|		RG.СтатусПартии,                         					--p12
	
	|		max(RG.ДатаПартии) as ПартияДт,                      			 		--p13
	|		max(    CONVERT (  nvarchar(20) , DATEADD(second, ISNULL(Prt.ROW_ID, 0), RG.ДатаПартии) , 120)   ) as ПартияДтВрм2,     --p14
	|		sum(RG.ОстКол + RG.ПриходКол - RG.РасходКол) as КоличествоОстаток,                                                                    				--p15
	|		sum(RG.ОстСум + RG.ПриходСум - RG.РасходСум) as СтоимостьОстаток,                                                                      				--p16
																		|sum(RG.ОстСумРуб + RG.ПриходСумРуб - RG.РасходСумРуб) as СтоимостьОстатокРуб,                 --p17
																		|sum(RG.ОстСумБезНДС + RG.ПриходСумБезНДС - RG.РасходСумБезНДС) as СтоимостьОстатокБезНДС      --p18
	|	 from 
	|		 (   --RG328 as RG (nolock)
	
			|	 select    
			|		RG.SP331 as Номенклатура,                         					
			|		RG.SP4061 as Фирма,	
	        |		RG.SP341 as Партия,
	        |		RG.SP340 as СтатусПартии,
			|		RG.SP1554 as ДатаПартии,
			|		RG.SP342 as ОстКол,
			|		RG.SP421 as ОстСум,
																		|RG.SP343 as ОстСумРуб,
																		|RG.SP344 as ОстСумБезНДС,
			|		0 as ПриходКол,
			|		0 as РасходКол,
			|		0 as ПриходСум,
			|		0 as РасходСум,
																		|0 as ПриходСумРуб,
																		|0 as РасходСумРуб,
																		|0 as ПриходСумБезНДС,
																		|0 as РасходСумБезНДС
			|	from
			|		RG328 as RG (nolock)
			|	 where
			|		RG.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112) 
			
|" + ?(НЕ ДобавитьДвиженияЗаПериод,"","  
			|
			|	UNION ALL							
			
			|	SELECT							
			|		TabReg.SP331 as Номенклатура,                         					
			|		TabReg.SP4061 as Фирма,	
	        |		TabReg.SP341 as Партия,
	        |		TabReg.SP340 as СтатусПартии,
			|		TabReg.SP1554 as ДатаПартии,
			|		0 as ОстКол,
			|		0 as ОстСум,
																		|0 as ОстСумРуб,
																		|0 as ОстСумБезНДС,
|					(TabReg.SP342*((TabReg.DEBKRED+1)%2)) As ПриходКол,						
|					(TabReg.SP342*TabReg.DEBKRED) As РасходКол,						

|					(TabReg.SP421*((TabReg.DEBKRED+1)%2)) As ПриходСум,						
|					(TabReg.SP421*TabReg.DEBKRED) As РасходСум,
																		|(TabReg.SP343*((TabReg.DEBKRED+1)%2)) As ПриходСумРуб,						
																		|(TabReg.SP343*TabReg.DEBKRED) As РасходСумРуб,
																		|
																		|(TabReg.SP344*((TabReg.DEBKRED+1)%2)) As ПриходСумБезНДС,						
																		|(TabReg.SP344*TabReg.DEBKRED) As РасходСумБезНДС
|				FROM							
|					RA328 As TabReg (NOLOCK)						
|					INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabReg.IDDOC = TabJ.IDDOC)						
|				WHERE							
|					TabJ.DATE_TIME_IDDOC >= '"+PERIODN+"' AND TabJ.DATE_TIME_IDDOC < '"+PERIODK+"'						
 
 |													") + "
			
	|		) as RG
	
	|	 	left join SC214 as Prt (nolock) ON (RG.Партия = Prt.ID)
	|	 	left JOIN SC55 AS СпрСклады (NOLOCK) ON Prt.SP12669 = СпрСклады.ID
	|	 	left JOIN SC4014 AS СпрФирмы (NOLOCK) ON RG.Фирма = СпрФирмы.ID
	|	 	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON RG.Номенклатура = СпрНоменклатура.ID
	
	|		left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON RG.Фирма = idФирмы._Object
	//|		left JOIN adoURBD_Guids AS idСклады (NOLOCK) ON Prt.SP12669 = idСклады._Object
	|       left JOIN (select _Object, _Id  from adoURBD_Guids (NOLOCK) where _MetaType = 11 and _MetaId = 55) AS idСклады  ON Prt.SP12669 = idСклады._Object
	|		left JOIN adoURBD_Guids AS idПартии (NOLOCK) ON RG.Партия  = idПартии._Object
	
	|	 where
	
	|	    RG.Партия is not null
	|	and Prt.ROW_ID is not null
	|	and RG.ДатаПартии is not null
	
	//|	and Prt.SP10026 = 0
	
	|	and idФирмы._MetaType = 11 and idФирмы._MetaId = 4014
	//|	and idСклады._MetaType = 11 and idСклады._MetaId = 55
	|	and idПартии._MetaType = 11 and idПартии._MetaId = 214
	
	|group by
	|	RG.Номенклатура,	
	|	ISNULL(СпрНоменклатура.DESCR, ''),
	|	ISNULL(СпрНоменклатура.SP13121, ''),
	|	RG.Фирма,
	|	ISNULL(СпрФирмы.DESCR, ''), 
	|	ISNULL(LOWER (idФирмы._Id), ''),
	|	Prt.SP12669,
	|	ISNULL(СпрСклады.DESCR, ''),
	//|	ISNULL(LOWER (idСклады._Id), ''),
	|	ISNULL(LOWER (idСклады._Id), ISNULL(СпрСклады.code, '') ), 
	|	ISNULL(Prt.ROW_ID, 0),
	|	ISNULL(LOWER (idПартии._Id), ''),
	|	RG.Партия,
	|	RG.СтатусПартии
	
	|HAVING 
	|	sum(RG.ОстКол + RG.ПриходКол - RG.РасходКол) >  0  and
	|	sum(RG.ОстСум + RG.ПриходСум - RG.РасходСум) >= 0
	|
	
	|	) as tblvmi
	
	|	left JOIN SC214 AS СпрПартии (NOLOCK) ON tblvmi.Партия = СпрПартии.ID
	|	left JOIN SC172 AS СпрКонтра (NOLOCK) ON СпрПартии.SP436 = СпрКонтра.ID
	
	|	left JOIN SC204 AS СпрДоговора (NOLOCK) ON СпрПартии.SP217 = СпрДоговора.ID
	
	|";
	
	СохранитьТекстВФайл(CommandText77_Контрагенты, "select_from_77_wh_parts_" +  ПравилаИгры.метка  );
	
	тзДанные77_Партии = Новый ТаблицаЗначений;
	
	Счр = 0;
	Попытка
		ВыборкаSQL.Open(CommandText77_Контрагенты, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Контрагенты) + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если тзДанные77_Партии.Колонки.Количество() = 0 тогда
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii > 14 и ii < 20 тогда
				тзДанные77_Партии.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Партии.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	тзДанные77_Партии.Колонки.Добавить("ДтВрм", Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	тзДанные77_Партии.Колонки.Добавить("Занято", Новый ОписаниеТипов("Число"));
	тзДанные77_Партии_Колонки_Количество = тзДанные77_Партии.Колонки.Количество();
	
	Пока не ВыборкаSQL.eof() Цикл
		Счр = Счр + 1;
		Шоумастгоон(имяселекта + СокрлП(Счр) );
		
		НоваяСтрока = тзДанные77_Партии.Добавить();
		Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			Если iii > 14 И iii < 20 тогда
				НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
			Иначе
				НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				
				Если iii = 14 тогда
					дтврмстр = Строка(ВыборкаSQL.Fields(iii).Value);
					
					дтврмстр_год = Сред(дтврмстр,1,4);
					дтврмстр_месяц = Сред(дтврмстр,6,2);
					дтврмстр_число = Сред(дтврмстр,9,2);
					дтврмстр_час   = Сред(дтврмстр,12,2);
					дтврмстр_минута= Сред(дтврмстр,15,2);
					дтврмстр_секунада= Сред(дтврмстр,18,2);
					
					стр_ДтВрм = Дата(дтврмстр_год,дтврмстр_месяц,дтврмстр_число,дтврмстр_час,дтврмстр_минута,дтврмстр_секунада);
					НоваяСтрока.Установить(тзДанные77_Партии_Колонки_Количество - 2, стр_ДтВрм);
					
				КонецЕсли;
					
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаSQL.MoveNext();
	КонецЦикла;
	
	ВыборкаSQL.Close();
	
	ДобавитьВЛог(имяселекта + СокрлП(Счр));
	ПравилаИгры.Вставить("ТабличноеПоле23", тзДанные77_Партии);
		
КонецПроцедуры
Функция   Опросить7_ПолучитьПертиюПоКодуНоменклатуры(пар_ТовКод)
	
	рез = Новый Структура("ПартияКод,ПартияИД,ПартияКАуид","","");
	//ДатОстСтр = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(ПравилаИгры.ДтПоУмолчанию,-1)));
	
	Темп_Дата = ПравилаИгры.ДтПоУмолчанию;
	PERIODR = РазвернутьДатуВстроку(НачалоМесяца(ДобавитьМесяц(Темп_Дата,-1)));
	PERIODN = РазвернутьДатуВстроку(НачалоМесяца(Темп_Дата));
	PERIODK = РазвернутьДатуВстроку(Темп_Дата);
	
	ДобавитьДвиженияЗаПериод = Ложь;
	//ДобавитьВЛог("PERIODR =  " + PERIODR);
	Если НЕ Темп_Дата = НачалоМесяца(Темп_Дата) тогда
		ДобавитьДвиженияЗаПериод = Истина;
		//ДобавитьВЛог("PERIODN =  " + PERIODN);
		//ДобавитьВЛог("PERIODK =  " + PERIODK);
	КонецЕсли;
	
	Connection77 = New COMОбъект("ADODB.Connection");
	Connection77.ConnectionString = "DRIVER=SQL Server; UID=user1c;DATABASE=work_p1c;Pwd=h8BFX4as; SERVER=srv1c-nn";
	Попытка
		Connection77.Open(); 
	Исключение
		Сообщить("соединение77 НЕ выполнено");
		Возврат рез;
	КонецПопытки;
	 
	CommandText77_Контрагенты = "
	
	| select   top 1
	|	tblvmi.*
	|	, case
	|		when tblvmi.СтатусПартии = '   A94   '  then 1
	|		else 0
	|	end as VMI,                                            					--p19   !!!!!!!!!!!!!!!! был p17 !!!!!!!!!!!!!!!!
	
	| ISNULL(СпрКонтра.SP13668, '') as СпрПартии_КА_Поставщик					--p20   !!!!!!!!!!!!!!!! был p18 !!!!!!!!!!!!!!!!
	
	| from
	|	(
	|	 select    --top 100
	|		RG.Номенклатура,                         					--p0
	|		ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр,	        --p1
	|		ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_код,         --p2
	
	|		RG.Фирма,                               					--p3
	|		ISNULL(СпрФирмы.DESCR, '') As СпрФирмы_Стр,                         --p4
	|       ISNULL(LOWER (idФирмы._Id), '')  As СпрФирмы_код,                                       --p5
	
	|		Prt.SP12669 as Склад,                             					--p6
	|		ISNULL(СпрСклады.DESCR, '') as СкладСтр,                            --p7
	
	//|		ISNULL(LOWER (idСклады._Id), '')               As СпрСклады_код,                        --p8
	|		ISNULL(LOWER (idСклады._Id), ISNULL(СпрСклады.code, '') )               As СпрСклады_код,                        --p8
	
	|		ISNULL(Prt.ROW_ID, 0) as ПартияROW_ID,                              --p9
	|       ISNULL(LOWER (idПартии._Id), '') as ПартияКод,                               	        --p10
	|		RG.Партия,                                   				--p11
	
	|		RG.СтатусПартии,                         					--p12
	
	|		max(RG.ДатаПартии) as ПартияДт,                      			 		--p13
	|		max(    CONVERT (  nvarchar(20) , DATEADD(second, ISNULL(Prt.ROW_ID, 0), RG.ДатаПартии) , 120)   ) as ПартияДтВрм2,     --p14
	|		sum(RG.ОстКол + RG.ПриходКол - RG.РасходКол) as КоличествоОстаток,                                                                    				--p15
	|		sum(RG.ОстСум + RG.ПриходСум - RG.РасходСум) as СтоимостьОстаток,                                                                      				--p16
																		|sum(RG.ОстСумРуб + RG.ПриходСумРуб - RG.РасходСумРуб) as СтоимостьОстатокРуб,                 --p17
																		|sum(RG.ОстСумБезНДС + RG.ПриходСумБезНДС - RG.РасходСумБезНДС) as СтоимостьОстатокБезНДС      --p18
	|	 from 
	|		 (   --RG328 as RG (nolock)
	
			|	 select    
			|		RG.SP331 as Номенклатура,                         					
			|		RG.SP4061 as Фирма,	
	        |		RG.SP341 as Партия,
	        |		RG.SP340 as СтатусПартии,
			|		RG.SP1554 as ДатаПартии,
			|		RG.SP342 as ОстКол,
			|		RG.SP421 as ОстСум,
																		|RG.SP343 as ОстСумРуб,
																		|RG.SP344 as ОстСумБезНДС,
			|		0 as ПриходКол,
			|		0 as РасходКол,
			|		0 as ПриходСум,
			|		0 as РасходСум,
																		|0 as ПриходСумРуб,
																		|0 as РасходСумРуб,
																		|0 as ПриходСумБезНДС,
																		|0 as РасходСумБезНДС
			|	from
			|		RG328 as RG (nolock)
			|	 where
			|		RG.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112) 
			|		and  RG.SP331 IN ('" + пар_ТовКод + "')
|" + ?(НЕ ДобавитьДвиженияЗаПериод,"","  
			|
			|	UNION ALL							
			
			|	SELECT							
			|		TabReg.SP331 as Номенклатура,                         					
			|		TabReg.SP4061 as Фирма,	
	        |		TabReg.SP341 as Партия,
	        |		TabReg.SP340 as СтатусПартии,
			|		TabReg.SP1554 as ДатаПартии,
			|		0 as ОстКол,
			|		0 as ОстСум,
																		|0 as ОстСумРуб,
																		|0 as ОстСумБезНДС,
|					(TabReg.SP342*((TabReg.DEBKRED+1)%2)) As ПриходКол,						
|					(TabReg.SP342*TabReg.DEBKRED) As РасходКол,						

|					(TabReg.SP421*((TabReg.DEBKRED+1)%2)) As ПриходСум,						
|					(TabReg.SP421*TabReg.DEBKRED) As РасходСум,						
																		|(TabReg.SP343*((TabReg.DEBKRED+1)%2)) As ПриходСумРуб,						
																		|(TabReg.SP343*TabReg.DEBKRED) As РасходСумРуб,
																		|
																		|(TabReg.SP344*((TabReg.DEBKRED+1)%2)) As ПриходСумБезНДС,						
																		|(TabReg.SP344*TabReg.DEBKRED) As РасходСумБезНДС
|				FROM							
|					RA328 As TabReg (NOLOCK)						
|					INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabReg.IDDOC = TabJ.IDDOC)						
|				WHERE							
|					TabJ.DATE_TIME_IDDOC >= '"+PERIODN+"' AND TabJ.DATE_TIME_IDDOC < '"+PERIODK+"'						
|					and  TabReg.SP331 IN ('" + пар_ТовКод + "')
 |													") + "
			
	|		) as RG
	
	|	 	left join SC214 as Prt (nolock) ON (RG.Партия = Prt.ID)
	|	 	left JOIN SC55 AS СпрСклады (NOLOCK) ON Prt.SP12669 = СпрСклады.ID
	|	 	left JOIN SC4014 AS СпрФирмы (NOLOCK) ON RG.Фирма = СпрФирмы.ID
	|	 	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON RG.Номенклатура = СпрНоменклатура.ID
	
	|		left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON RG.Фирма = idФирмы._Object
	//|		left JOIN adoURBD_Guids AS idСклады (NOLOCK) ON Prt.SP12669 = idСклады._Object
	|       left JOIN (select _Object, _Id  from adoURBD_Guids (NOLOCK) where _MetaType = 11 and _MetaId = 55) AS idСклады  ON Prt.SP12669 = idСклады._Object
	|		left JOIN adoURBD_Guids AS idПартии (NOLOCK) ON RG.Партия  = idПартии._Object
	
	|	 where
	
	|	    RG.Партия is not null
	|	and Prt.ROW_ID is not null
	|	and RG.ДатаПартии is not null
	
	|	and idФирмы._MetaType = 11 and idФирмы._MetaId = 4014
	//|	and idСклады._MetaType = 11 and idСклады._MetaId = 55
	|	and idПартии._MetaType = 11 and idПартии._MetaId = 214
	
	|group by
	|	RG.Номенклатура,	
	|	ISNULL(СпрНоменклатура.DESCR, ''),
	|	ISNULL(СпрНоменклатура.SP13121, ''),
	|	RG.Фирма,
	|	ISNULL(СпрФирмы.DESCR, ''), 
	|	ISNULL(LOWER (idФирмы._Id), ''),
	|	Prt.SP12669,
	|	ISNULL(СпрСклады.DESCR, ''),
	//|	ISNULL(LOWER (idСклады._Id), ''),
	|	ISNULL(LOWER (idСклады._Id), ISNULL(СпрСклады.code, '') ) ,
	|	ISNULL(Prt.ROW_ID, 0),
	|	ISNULL(LOWER (idПартии._Id), ''),
	|	RG.Партия,
	|	RG.СтатусПартии
	
	|HAVING 
	|	sum(RG.ОстКол + RG.ПриходКол - RG.РасходКол) >  0 and
	|	sum(RG.ОстСум + RG.ПриходСум - RG.РасходСум) >= 0
	|
	
	|	) as tblvmi
	
	|	left JOIN SC214 AS СпрПартии (NOLOCK) ON tblvmi.Партия = СпрПартии.ID
	|	left JOIN SC172 AS СпрКонтра (NOLOCK) ON СпрПартии.SP436 = СпрКонтра.ID
	
	
	| order by
	| 		tblvmi.ПартияДтВрм2 DESC
	
		|";
	 
	 
	 
	Попытка
		rsRES77 = NEW COMObject("ADODB.Recordset");
		rsRES77.Open(CommandText77_Контрагенты, Connection77);
		
		тзДанные77_ПартииВСЕ = Новый ТаблицаЗначений;
		Для ii = 0 ПО rsRES77.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			
			//тзДанные77_ПартииВСЕ.Колонки.Добавить(инд_К,,имя_К,10);
			Если ii > 14 и ii < 20 тогда
				тзДанные77_ПартииВСЕ.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_ПартииВСЕ.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
			
		КонецЦикла;
		
		Пока не rsRES77.eof() Цикл
			
			НоваяСтрока = тзДанные77_ПартииВСЕ.Добавить();
			
			Для iii = 0 ПО rsRES77.Fields.Count-1 Цикл
				Если iii > 14 И iii < 20 тогда
					НоваяСтрока.Установить(iii,Число(rsRES77.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(rsRES77.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			rsRES77.MoveNext();
		КонецЦикла;
		
		//|	Prt.code as ПартияКод,                                --p10
		//|	RG.SP341 as Партия,                                   --p11
		
		Если тзДанные77_ПартииВСЕ.Количество() > 0 тогда	 
			рез.Вставить("ПартияКод",тзДанные77_ПартииВСЕ[0].p10);
			рез.Вставить("ПартияИД",тзДанные77_ПартииВСЕ[0].p11);
			рез.Вставить("ПартияКАуид",тзДанные77_ПартииВСЕ[0].p20);
		КонецЕсли;
		
		rsRES77.Close();
		Connection77.Close();
	Исключение
		
		Сообщить("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Контрагенты));
		Connection77.Close();
	КонецПопытки;
	 
	
	
	 Возврат рез;
КонецФункции

Процедура Опросить7_ЗаказыПоставщику()
	имяселекта = "select from sql db ДокументыЗаказыПоставщиков";
	Шоумастгоон(имяселекта);
	
	НачПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.НачПериода);
	КонПериодаСтр = РазвернутьДатуВстроку(ПравилаИгры.КонПериода);
	
	
	Ч = ПравилаИгры.Ч;
	//Если Ч < 1 тогда
	//	Возврат;
	//КонецЕсли;
	//Если Ч > ПравилаИгры.Чмакс тогда
	//	Ч = ПравилаИгры.Чмакс;
	//КонецЕсли;
	//ДобавитьВЛог("SELECT top " + СокрЛП(Ч) );
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 1 опрашиваем 1c7 по заказам поставщика");
	ДобавитьВЛог("Вход_Тест = " + СокрлП(Вход_Тест) + " " + ?(Вход_Тест, " top " + СокрЛП(Формат(Ч, "ЧЦ=15; ЧДЦ=0; ЧГ=0")) , "" ));
	ДобавитьВЛог("НачПериодаСтр >= " + НачПериодаСтр);
	ДобавитьВЛог("КонПериодаСтр <  " + КонПериодаСтр);
	
	CommandText77_Заявки = "
	
	|select " + ?(Вход_Тест, " top " + СокрЛП(Формат(Ч, "ЧЦ=15; ЧДЦ=0; ЧГ=0")) , "" ) + "

	|	 '''' + DH.IDDOC + ''''                                                                        -- p0
	|	,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as dtt            -- p1
	|   ,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as dnm                                                   -- p2
	|	,dbo.AddToPrefixStr(DH.SP9683,'',11) as Ш_НомерНачальный   --|C   |10    |0                    -- p3
	|	,DH.SP9684 as Ш_ДатаНачальная    --|D   |0     |0                                              -- p4

	|	,DH.SP2719 as Ш_Контрагент       --|C   |9     |0                                              -- p5 
	|	,ISNULL(СпрКонтра.DESCR, '') As СпрКонтра_Стр                                                  -- p6
	|	,ISNULL(dbo.AddToPrefixStr(СпрКонтра.code,'',8), '') As СпрКонтра_код                          -- p7
	|	,ISNULL(СпрКонтра.SP13668, '') As СпрКонтра_UID                                                -- p8
	|	,ISNULL(СпрКонтра.SP7656, '') As СпрКонтра_ИНН                                                 -- p9

	|	,DH.SP2720 as Ш_Договор          --|C   |9     |0                                              -- p10
	|	,RefD.SP13669 as Ш_Договор_uid                                                                 -- p11
	|	,RefD.DESCR as Ш_Договор_Нм                                                                    -- p12
	|	,RefD.SP10485 as Ш_Договор_Номер                                                               -- p13
	|	,RefD.SP10486 as Ш_Договор_Дата                                                                -- p14
	|	,RefD.SP10548 as Ш_Договор_ПродажаЗакупка                                                      -- p15
	|	,RefD.SP12635 as Ш_Договор_флОферта                                                            -- p16
	|	,ISNULL(СпрФирмы.DESCR, '') As Ш_Договор_СпрФирмы_Стр                                          -- p17
	|	,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As Ш_Договор_СпрФирмы_код                  -- p18
	|	,ISNULL(СпрФирмы2.DESCR, '') As Ш_СпрФирмы_Стр                                                 -- p19
	|	,ISNULL(dbo.AddToPrefixStr(СпрФирмы2.code,'',9), '') As Ш_СпрФирмы_код                         -- p20
	|	,ISNULL(LOWER (idФирмы._Id), '')  As Ш_СпрФирмы_uid                                            -- p21
	|	,СпрЮрЛицо.DESCR as Ш_СпрЮрЛицо_стр                                                            -- p22
	|	,СпрЮрЛицо.SP664 as Ш_СпрЮрЛицо_ОфициальноеНаимен                                              -- p23

	|	,DH.SP12341 as Ш_Склад           --|C   |9     |0                                              -- p24
	|	,ISNULL(СпрСклады.DESCR, '') As Ш_СпрСклады_Стр                                                -- p25
	|	,ISNULL(dbo.AddToPrefixStr(СпрСклады.code,'',9), '') As Ш_СпрСклады_код                        -- p26
	|	,ISNULL(LOWER (idСклады._Id), '')  As Ш_СпрСклады_uid                                          -- p27

	|	,DH.SP2721 as Ш_Валюта           --|C   |9     |0                                              -- p28
	|	,ISNULL(СпрВалюты.DESCR, '') As Ш_СпрВалюты_Стр                                                -- p29
	|	,ISNULL(СпрВалюты.SP18, '') As Ш_СпрВалюты_Стр2                                                -- p30

	|	,DH.SP2722 as Ш_Курс             --|N   |9     |4                                              -- p31
	|	,DH.SP2724 as Ш_УчитыватьНДС     --|N   |1     |0                                              -- p32
	|	,DH.SP2725 as Ш_СуммаВклНДС      --|N   |1     |0                                              -- p33
	|	,DH.SP2736 as Ш_Сумма            --|N   |14    |2                                              -- p34
	|	,DH.SP2737 as Ш_СуммаНДС         --|N   |14    |2                                              -- p35
	|	,DH.SP660  as Ш_Комментарий       --|M   |0     |0                                             -- p36

	|	,DH.SP2730 as Ш_ДокОснование     --|C   |13    |0                                              -- p37
	|	,DH.SP2729 as Ш_ТипЦен           --|C   |9     |0                                              -- p38
	|	,DH.SP2728 as Ш_СуммаВзаиморасчет--|N   |14    |2                                              -- p39
	|	,DH.SP2723 as Ш_ДатаОплаты       --|D   |0     |0                                              -- p40
	|	,DH.SP4439 as Ш_ДатаОтгрузки     --|D   |0     |0                                              -- p41
	|	,DH.SP8540 as Ш_атИзготовитель   --|C   |9     |0                                              -- p42
	|	,DH.SP8541 as Ш_атПоставщик      --|C   |9     |0                                              -- p43


	|    ,DT.SP12611  as Т_ID_Site_изЗаявки --|C   |20    |0                                           -- p44

	|	,DT.SP4684  as Т_ПоЗаявке         --|C   |9     |0                                             -- p45
	|	,DHзаявки.SP8893 as Т_ПоЗаявке_НомерНачальный                                                  -- p46
	|	,DHзаявки.SP8894 as Т_ПоЗаявке_ДатаНачальная                                                   -- p47
	|	,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJзаявки.DATE_TIME_IDDOC), 120) as Т_ПоЗаявке_dtt -- p48
	|	,dbo.AddToPrefixStr(TabJзаявки.DOCNO,'',11) as Т_ПоЗаявке_dnm                                  -- p49
	|	  
	|	,DT.SP2731  as Т_Номенклатура     --|C   |9     |0                                             -- p50
	|	,ISNULL(СпрНоменклатура.DESCR, '') As СпрНоменклатура_Стр                                      -- p51
	|	,ISNULL(dbo.AddToPrefixStr(СпрНоменклатура.code,'',9), '') As СпрНоменклатура_код              -- p52
	|	,ISNULL(СпрНоменклатура.SP85, '') As СпрНоменклатура_Артикул                                   -- p53
	|	,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID                                    -- p54

	|	,DT.SP2733  as Т_Единица          --|C   |9     |0                                             -- p55
	|	,ISNULL(СпрЕИ.DESCR, '') As Т_СпрЕИ_Стр                                                        -- p56
	|	,ISNULL(dbo.AddToPrefixStr(СпрЕИ.code,'',9), '') As Т_СпрЕИ_код                                -- p57
	|	,ISNULL(СпрЕИ.SP13724, '') As Т_СпрЕИ_УИД                                                      -- p58

	|	,DT.SP2732  as Т_Количество       --|N   |13    |3                                             -- p59
	|	,DT.SP2734  as Т_Коэффициент      --|N   |9     |3                                             -- p60
	|	,DT.SP2735  as Т_Цена             --|N   |14    |2                                             -- p61
	|	,DT.SP2736  as Т_Сумма            --|N   |14    |2                                             -- p62
	|	,DT.SP2739  as Т_СтавкаНДС        --|C   |9     |0                                             -- p63
	|	,DT.SP2737  as Т_СуммаНДС         --|N   |14    |2                                             -- p64
	|	
	|	,DT.SP7726  as Т_внНом            --|N   |4     |0                                             -- p65
	|	,DT.SP8649  as Т_КолНач           --|N   |9     |3                                             -- p66
	|	,DT.SP8650  as Т_ПослПоставщик    --|C   |9     |0                                             -- p67
	|	,DT.SP8903  as Т_ДатаОтгрузкиТЧ   --|D   |0     |0                                             -- p68
	|	,DT.SP9076  as Т_ВидСостояния     --|C   |9     |0                                             -- p69
	|	,DT.SP9182  as Т_ПроверкаУстОтказа--|N   |1     |0                                             -- p70
	|	,DT.SP9233  as Т_ЗаменаТМЦ        --|C   |9     |0                                             -- p71
	|	,DT.SP9234  as Т_УжеЗаменен       --|N   |1     |0                                             -- p72
	|	,DT.SP10092  as Т_МинКолПартии     --|C   |5     |0                                            -- p73
	|	,DT.SP10177  as Т_ДнейПоставки_Зак --|C   |15    |0                                            -- p74
	|	,DT.SP10178  as Т_РегионПоставки_За--|C   |9     |0                                            -- p75
	|	,DT.SP10309  as Т_ДопКомментарий   --|C   |100   |0                                            -- p76
	|	,DT.SP12612  as Т_КолОтказ         --|N   |9     |3                                            -- p77
	|	,DT.SP13766  as Т_СрокГарантированн--|C   |19    |0                                            -- p78
	|	,DT.SP13748  as Т_СрокОжидаемый_Зак--|C   |19    |0                                            -- p79

	|  ,ISNULL(LOWER (idЗП._Id), '')  As Ш_ДокЗП_uid                                                   -- p80

	|from 
	|	dbo.DT2742 as DT (NOLOCK)
	|	left JOIN dbo.DH2742 as DH (nolock) ON (DT.IDDOC = DH.IDDOC)
	|	left JOIN _1SJOURN  As TabJ (NOLOCK) ON (DH.IDDOC = TabJ.IDDOC)
	|	left JOIN SC172 AS СпрКонтра (NOLOCK) ON DH.SP2719 = СпрКонтра.ID
	|	left JOIN SC55 AS СпрСклады (NOLOCK) ON DH.SP12341 = СпрСклады.ID
	|	left JOIN SC14 AS СпрВалюты (NOLOCK) ON DH.SP2721 = СпрВалюты.ID
	|	left JOIN SC204  As RefD (NOLOCK) ON (DH.SP2720 = RefD.ID)
	|	left JOIN SC4014 AS СпрФирмы (NOLOCK) ON isnull(RefD.SP11068, RefD.SP8254) = СпрФирмы.ID
	|	left JOIN SC4014 AS СпрФирмы2 (NOLOCK) ON TabJ.SP4056 = СпрФирмы2.ID
	|	left JOIN SC131 AS СпрЮрЛицо (NOLOCK) ON TabJ.SP5365 = СпрЮрЛицо.ID
	|	left JOIN dbo.DH2457  As DHзаявки (NOLOCK) ON DT.SP4684 = DHзаявки.IDDOC 
	|	left JOIN _1SJOURN  As TabJзаявки (NOLOCK) ON (DHзаявки.IDDOC = TabJзаявки.IDDOC)
	|	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON DT.SP2731 = СпрНоменклатура.ID
	|	left JOIN SC75 AS СпрЕИ (NOLOCK) ON DT.SP2733 = СпрЕИ.ID
	
	//|	left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON TabJ.SP4056 = idФирмы._Object
	//|	left JOIN adoURBD_Guids AS idСклады (NOLOCK) ON DH.SP12341 = idСклады._Object
	//|	left JOIN adoURBD_Guids AS idЗП (NOLOCK) ON DH.IDDOC = idЗП._Object
	|left JOIN (select * from adoURBD_Guids (NOLOCK) where _MetaType = 11 and _MetaId = 4014) AS idФирмы  ON TabJ.SP4056 = idФирмы._Object
	|left JOIN (select * from adoURBD_Guids (NOLOCK) where _MetaType = 11 and _MetaId = 55) AS idСклады  ON DH.SP12341 = idСклады._Object
	|left JOIN (select * from adoURBD_Guids (NOLOCK) where (_MetaType = 12 or _MetaType = 22) and _MetaId = 2742) AS idЗП  ON DH.IDDOC = idЗП._Object
	

	|WHERE
	|	    TabJ.DATE_TIME_IDDOC >= '" + НачПериодаСтр + "'
	|	AND TabJ.DATE_TIME_IDDOC <  '" + КонПериодаСтр + "' 
	|	AND TabJ.CLOSED = 1
	//|	and idФирмы._MetaType = 11 and idФирмы._MetaId = 4014
	//|	and idСклады._MetaType = 11 and idСклады._MetaId = 55
	//|	and idЗП._MetaType = 12 and idЗП._MetaId = 2742
	|" + ?(ПравилаИгры.ВыбиратьТолькоЗаявки,"  and TabJ.DOCNO = DH.SP9683","") + "
	//|  and TabJ.DOCNO = DH.SP9683
	
	|	and idФирмы._Id is not null
	|	and idСклады._Id is not null
	|	and idЗП._Id is not null

	|ORDER BY
	|	TabJ.DATE_TIME_IDDOC, TabJ.DOCNO, DT.LINENO_
	
	|";
	
	СохранитьТекстВФайл(CommandText77_Заявки, "select_from_77_zakaz_DHDT_" +  ПравилаИгры.метка  );
	ДобавитьВЛог("запрос sql select_from_77_zakaz_DHDT_"+  ПравилаИгры.метка);
	Сч = 0;
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса sql select_from_77_zakaz_DHDT_"+  ПравилаИгры.метка + Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
		тзДанные77_Заявки = Новый ТаблицаЗначений;

		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 15 ИЛИ ii = 16 ИЛИ ii = 31 ИЛИ ii = 32  ИЛИ ii = 33 ИЛИ ii = 34 ИЛИ ii = 35 или ii = 59 ИЛИ ii = 60  ИЛИ ii = 61 ИЛИ ii = 62 ИЛИ ii = 64  тогда
				тзДанные77_Заявки.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Заявки.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		тзДанные77_Заявки.Колонки.Добавить("Заказ",Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику"));
		тзДанные77_Заявки.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("ДокументСсылка.КорректировкаЗаказаПоставщику"));
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаказаПоставщику"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Заявки.Колонки.Добавить("Док8",	ОписаниеТиповДок);

		тзДанные77_Заявки.Колонки.Добавить("ТТ",Новый ОписаниеТипов("СправочникСсылка.ТорговыеТочки"));
		тзДанные77_Заявки.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		тзДанные77_Заявки.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Заявки.Колонки.Добавить("ЕИ",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		тзДанные77_Заявки.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );
		тзДанные77_Заявки.Колонки.Добавить("МХ",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		ОтборЗаявки = Новый Структура;
		СтрНомеров = "";

		Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрлП(Сч));
			
			НоваяСтрока = тзДанные77_Заявки.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 15 ИЛИ iii = 16 ИЛИ iii = 31 ИЛИ iii = 32  ИЛИ iii = 33 ИЛИ iii = 34 ИЛИ iii = 35 или iii = 59 ИЛИ iii = 60  ИЛИ iii = 61 ИЛИ iii = 62 ИЛИ iii = 64  тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрока.Док8Номер = НоваяСтрока.p2;
			
			УИДконтра = СокрЛП(НоваяСтрока.p8);
			ИДконтра = Новый УникальныйИдентификатор( УИДконтра );
			Найденнаяконтра = Справочники.ТорговыеТочки.ПолучитьСсылку( ИДконтра );
			ПараметрыКонтры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаяконтра,"Код,Владелец");
			
			Если ЗначениеЗаполнено(ПараметрыКонтры.Код) тогда
				НоваяСтрока.ТТ = Найденнаяконтра;
				НоваяСтрока.Контрагент = ПараметрыКонтры.Владелец;
				//Если ЗначениеЗаполнено(ПараметрыКонтры.Владелец.ГоловнойКонтрагент) тогда
				//	НоваяСтрока.Контрагент = ПараметрыКонтры.Владелец.ГоловнойКонтрагент;
				//КонецЕсли;
			КонецЕсли;
			
			УИДтов = СокрЛП(НоваяСтрока.p54);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			ПараметрыТовара = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(НайденнаяНоменклатура,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыТовара.Код) тогда
				НоваяСтрока.Номенклатура = НайденнаяНоменклатура;
			КонецЕсли;
			
			УИДеи = СокрЛП(НоваяСтрока.p58);
			ИДеи = Новый УникальныйИдентификатор( УИДеи );
			Найденнаяеи = Справочники.ЕдиницыИзмерения.ПолучитьСсылку( ИДеи );
			ПараметрыЕИ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаяеи,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыЕИ.Код) тогда
				НоваяСтрока.ЕИ = Найденнаяеи;
			КонецЕсли;
			
			УИДмх = СокрЛП(НоваяСтрока.p27);
			ИДмх = Новый УникальныйИдентификатор( УИДмх );
			Найденнаямх = Справочники.Склады.ПолучитьСсылку( ИДмх );
			ПараметрыМХ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаямх,"Код");
			
			Если ЗначениеЗаполнено(ПараметрыМХ.Код) тогда
				НоваяСтрока.МХ = Найденнаямх;
			КонецЕсли;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		//Предупреждение(СокрЛП(тзДанные77_Заявки.Количество()));
		//тзДанные77_Заявки.ВыбратьСтроку();
		
		ТабличноеПоле2 = ПравилаИгры.ТабличноеПоле31;
		ТабличноеПоле2.Колонки.Добавить("p2", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("p1", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("p0", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
		ТабличноеПоле2.Колонки.Добавить("Заказ",Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику"));
		ТабличноеПоле2.Колонки.Добавить("Корректировка",Новый ОписаниеТипов("ДокументСсылка.КорректировкаЗаказаПоставщику"));
		ТабличноеПоле2.Колонки.Добавить("Сч",Новый ОписаниеТипов("Число"));

		//ТЗДок8 = НайтиДок8ПоНомеруЗП(тзДанные77_Заявки.ВыгрузитьКолонку("Док8Номер"));
		//ТЗДок8_Количество = ТЗДок8.Количество();
		////ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ТЗДок8_Количество = " + СокрлП(ТЗДок8_Количество));
		//Если ТЗДок8_Количество > 0 тогда
			Счп = 0;
			Для каждого стрд из тзДанные77_Заявки цикл
				Счп = Счп + 1;
				Шоумастгоон(имяселекта + "->" + СокрлП(Счп));
				
				//НайденнаяСтрока = ТЗДок8.Найти(стрд.Док8Номер, "Номер");
				//Если НайденнаяСтрока = Неопределено Тогда
				//Иначе
				//	тДок = НайденнаяСтрока.Заявка;
				
				
				тДок = Неопределено;				
				НайденнаяСтрока = ТабличноеПоле2.Найти(СокрЛП(стрд.p2), "p2");
				Если НайденнаяСтрока = Неопределено Тогда
					
					УИДзп = СокрЛП(стрд.p80);
					ИДзп = Новый УникальныйИдентификатор( УИДзп );
					
					Найденнаязп = Документы.ЗаказПоставщику.ПустаяСсылка();
					Если стрд.p2 = стрд.p3 тогда
						Найденнаязп = Документы.ЗаказПоставщику.ПолучитьСсылку( ИДзп );
					Иначе
						Найденнаязп = Документы.КорректировкаЗаказаПоставщику.ПолучитьСсылку( ИДзп );
					КонецЕсли;
					
					Параметрызп = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Найденнаязп,"Номер");
					
					Если ЗначениеЗаполнено(Параметрызп.Номер) тогда
						Если СокрлП(Параметрызп.Номер) = СокрлП(стрд.p2) тогда
							тДок = Найденнаязп;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
				    тДок = ?( ЗначениеЗаполнено(НайденнаяСтрока.Заказ)  , НайденнаяСтрока.Заказ , НайденнаяСтрока.Корректировка );
				КонецЕсли; 
								
				Если тДок = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				
					НовСтр = ТабличноеПоле2.Добавить();
					НовСтр.p2  = СокрЛП(стрд.p2);
					НовСтр.p1  = СокрЛП(стрд.p1);
					НовСтр.p0 = СокрЛП(стрд.p0);
					НовСтр.Сч = 1;
					
					Если ТипЗнч(тДок) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
						стрд.Заказ = тДок;
						стрд.Док8 = тДок;
						НовСтр.Заказ = тДок;
					ИначеЕсли ТипЗнч(тДок) = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
						стрд.Корректировка = тДок;
						стрд.Док8 = тДок;
						НовСтр.Корректировка = тДок;
					КонецЕсли;					
					
				//КонецЕсли;
			КонецЦикла;
		//КонецЕсли;
		
		ТабличноеПоле2.Свернуть("p2,p1,p0,Заказ,Корректировка","Сч");

		ПравилаИгры.Вставить("ТабличноеПоле30",тзДанные77_Заявки);
		ПравилаИгры.Вставить("ТабличноеПоле31",ТабличноеПоле2);
		
		ВыборкаSQL.Close();
	
		//Сообщить(СокрлП(тзДанные77_Заявки.Количество()));
		//тзДанные77_Заявки.ВыбратьСтроку();
		//Сообщить(СокрлП(ТабличноеПоле2.Количество()));
		//ТабличноеПоле2.ВыбратьСтроку();
	
КонецПроцедуры
Функция Опросить7_ДвиженияПоЗаказам(пар_стридрегистраторов)
	имяселекта = "select from sql db ДвиженияПоКорневымЗаказамПоСпискуРегистраторов";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	если нЕ значениезаполнено(пар_стридрегистраторов) тогда
		Возврат тзрез;
	конецесли;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 4 опрашиваем 1c7 движения по корневым заказам ");
	
	CommandText77_Заявки = "
	
		|select
		|   '''' + TMP_2.IDDOC + ''''  as Регистратор                                                     -- p0
		|  ,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as dtt            -- p1
		|  ,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as dnm                                                   -- p2

		|  ,TMP_2.Номенклатура																			  -- p3
		|  ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID                                    -- p4

		|  ,TMP_2.Фирма                                                                                   -- p5
		|  ,ISNULL(LOWER (idФирмы._Id), '')  As Ш_СпрФирмы_uid                                            -- p6
		|  	         
		|  ,TMP_2.ДоговорПоставщика                                                                       -- p7
		|  ,RefD.SP13669 as Ш_Договор_uid                                                                 -- p8

		|  ,TMP_2.ЗаказПоставщику                                                                         -- p9

		|  ,TMP_2.КоличествоПриход                                                                        -- p10
		|  ,TMP_2.КоличествоРасход                                                                        -- p11
		|  ,TMP_2.СтоимостьПриход                                                                         -- p12
		|  ,TMP_2.СтоимостьРасход                                                                         -- p13
		|from
		|	   (
		|		select
		|			   TMP_1.IDDOC
		|			  ,TMP_1.Номенклатура
		|			  ,TMP_1.Фирма	         
		|			  ,TMP_1.ДоговорПоставщика
		|			  ,TMP_1.ЗаказПоставщику
		|			  ,SUM(TMP_1.КоличествоПриход) as КоличествоПриход
		|			  ,SUM(TMP_1.КоличествоРасход) as КоличествоРасход
		|			  ,SUM(TMP_1.СтоимостьПриход) as СтоимостьПриход
		|			  ,SUM(TMP_1.СтоимостьРасход) as СтоимостьРасход
		|		from
		|			(
		|				SELECT 
		|					   TabRegRez.IDDOC
		|					  ,TabRegRez.SP466 as Номенклатура       --|C   |9     |0
		|					  ,TabRegRez.SP4467 as Фирма	         --|C   |9     |0
		|					  ,TabRegRez.SP470 as ДоговорПоставщика  --|C   |9     |0
		|					  ,TabRegRez.SP4470 as ЗаказПоставщику
		|					  ,(TabRegRez.SP4471*((TabRegRez.DEBKRED+1)%2)) As КоличествоПриход
		|					  ,(TabRegRez.SP4471*TabRegRez.DEBKRED) As КоличествоРасход
		|					  ,(TabRegRez.SP4472*((TabRegRez.DEBKRED+1)%2)) As СтоимостьПриход
		|					  ,(TabRegRez.SP4472*TabRegRez.DEBKRED) As СтоимостьРасход

		|				FROM dbo.RA464 as TabRegRez (NOLOCK)
		|				where
		|					 TabRegRez.IDDOC in (" + пар_стридрегистраторов + ")
		|			) as TMP_1

		|		GROUP BY 
		|			   TMP_1.IDDOC
		|			  ,TMP_1.Номенклатура
		|			  ,TMP_1.Фирма	         
		|			  ,TMP_1.ДоговорПоставщика
		|			  ,TMP_1.ЗаказПоставщику

		|		)  as TMP_2

		|   left JOIN _1SJOURN  As TabJ (NOLOCK) ON (TMP_2.IDDOC = TabJ.IDDOC)
		|	left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON TMP_2.Фирма = idФирмы._Object
		|	left JOIN SC204  As RefD (NOLOCK) ON TMP_2.ДоговорПоставщика = RefD.ID
		|	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID

		|where 
		|	idФирмы._MetaType = 11 and idФирмы._MetaId = 4014	
	|";
	
	ДобавитьВЛог("пар_стридрегистраторов = " + пар_стридрегистраторов);

	СохранитьТекстВФайл(CommandText77_Заявки, "select_from_77_zakaz_move_" +  ПравилаИгры.метка  );
	
	Сч = 0;
	ОтборЗаявки = Новый Соответствие;
	
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса sql " + "select_from_77_zakaz_move_" +  ПравилаИгры.метка + Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
		
		ДобавитьВЛог("запрос sql " + "select_from_77_zakaz_move_" +  ПравилаИгры.метка );
		
		тзДанные77_Резервы = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 10 ИЛИ ii = 11 ИЛИ ii = 12 ИЛИ ii = 13 тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаказаПоставщику"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Резервы.Колонки.Добавить("Регистратор",	ОписаниеТиповДок);

		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		//тзДанные77_Резервы.Колонки.Добавить("Договор",Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
		//тзДанные77_Резервы.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		//тзДанные77_Резервы.Колонки.Добавить("ТТ",Новый ОписаниеТипов("СправочникСсылка.ТорговыеТочки"));
		
		//тзДанные77_Заявки.Колонки.Добавить("ЕИ",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		//тзДанные77_Заявки.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );
		//тзДанные77_Заявки.Колонки.Добавить("МХ",Новый ОписаниеТипов("СправочникСсылка.Склады"));
	

		ОтборПоИдСайта = Новый Структура();
		Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 10 ИЛИ iii = 11 ИЛИ iii = 12 ИЛИ iii = 13 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			т_Регистратор = Документы.ЗаказПоставщику.ПустаяСсылка();
			НайденнаяСтрока = ПравилаИгры.ТабличноеПоле36.Найти(НоваяСтрока.p0, "p0");
			Если НайденнаяСтрока = Неопределено Тогда
				ДобавитьВЛог("караул1 - не найден регистратор");
			    Продолжить;
			Иначе
				т_Регистратор = НайденнаяСтрока.Заказ;
			КонецЕсли;
			НоваяСтрока.Регистратор = т_Регистратор;
			

			УИДтов = СокрЛП(НоваяСтрока.p4);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			НоваяСтрока.Номенклатура = НайденнаяНоменклатура; 
			
			УИДфрм = СокрЛП(НоваяСтрока.p6);
			ИДфрм = Новый УникальныйИдентификатор( УИДфрм );
			НайденнаяФирма = Справочники.Организации.ПолучитьСсылку( ИДфрм );
			НоваяСтрока.Фирма = НайденнаяФирма;
			
			//УИДдог = СокрЛП(НоваяСтрока.p8);
			//ИДдог = Новый УникальныйИдентификатор( УИДдог );
			//НайденныйДог = Справочники.ДоговорыКонтрагентов.ПолучитьСсылку( ИДдог );
			//НоваяСтрока.Договор = НайденныйДог;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		ВыборкаSQL.Close();
		
		//тзрез = тзДанные77_Резервы.Скопировать(); 
	
	Возврат тзДанные77_Резервы;
	
КонецФункции
Функция Опросить7_ОстаткиПоЗаказам(ДобавитьДвиженияЗаПериод,PERIODR,PERIODN,PERIODK)
	имяселекта = "select from sql db ОстаткиПоЗаказамНаДату";
	Шоумастгоон(имяселекта);
	
	тзрез = новый ТаблицаЗначений;
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 7 опрашиваем 7 остатки по заказам ");
	
	CommandText77_Заявки = " 
	
		|select	
		
		|   '''' + TMP_2.ЗаказПоставщику + ''''  as ЗаказПоставщику                                       -- p0
		|  ,CONVERT (  nvarchar(20) ,dbo.ufn_adoGetDateTime(TabJ.DATE_TIME_IDDOC), 120) as dtt            -- p1
		|  ,dbo.AddToPrefixStr(TabJ.DOCNO,'',11) as dnm                                                   -- p2
		|  ,ISNULL(LOWER (idЗП._Id), '')  As Ш_ДокЗП_uid                                                  -- p3

		|  ,TMP_2.Номенклатура																			  -- p4
		|  ,ISNULL(СпрНоменклатура.SP13121, '') As СпрНоменклатура_UID                                    -- p5

		|  ,TMP_2.Фирма                                                                                   -- p6
		|  ,ISNULL(LOWER (idФирмы._Id), '')  As Ш_СпрФирмы_uid                                            -- p7
		|  	         
		|  ,TMP_2.ДоговорПоставщика                                                                       -- p8
		|  ,RefD.SP13669 as Ш_Договор_uid                                                                 -- p9

		|  ,TMP_2.Количество		                                                                      -- p10
		|  ,TMP_2.Стоимость			                                                                      -- p11
		
		|																												
		|From										
		|	(									
	
		|		select
		|			   TMP_1.Номенклатура
		|			  ,TMP_1.Фирма	         
		|			  ,TMP_1.ДоговорПоставщика
		|			  ,TMP_1.ЗаказПоставщику
		
		|			  ,SUM(TMP_1.КоличествоНачОст + TMP_1.КоличествоПриход - TMP_1.КоличествоРасход) As Количество					
		|			  ,SUM(TMP_1.СтоимостьНачОст + TMP_1.СтоимостьПриход - TMP_1.СтоимостьРасход) As Стоимость
		
		|		from
		|			(
		
		|				SELECT							
		
		|					   TabRegOstRez.SP466 as Номенклатура       --|C   |9     |0
		|					  ,TabRegOstRez.SP4467 as Фирма	            --|C   |9     |0
		|					  ,TabRegOstRez.SP470 as ДоговорПоставщика  --|C   |9     |0
		|					  ,TabRegOstRez.SP4470 as ЗаказПоставщику
		
		|                     ,TabRegOstRez.SP4471 As КоличествоНачОст
		|                     ,TabRegOstRez.SP4472 As СтоимостьНачОст
		|					  ,0 As КоличествоПриход
		|					  ,0 As КоличествоРасход
		|					  ,0 As СтоимостьПриход
		|					  ,0 As СтоимостьРасход
		
		|				FROM							
		|					RG464 As TabRegOstRez (NOLOCK)						
		|				WHERE							
		|					TabRegOstRez.PERIOD = CONVERT(DateTime, '" + PERIODR + "',112)						
		
		|" + ?(НЕ ДобавитьДвиженияЗаПериод,"","  
		
		|				UNION ALL							
		
		
		
		|				SELECT 
		|					   TabRegRez.SP466 as Номенклатура       --|C   |9     |0
		|					  ,TabRegRez.SP4467 as Фирма	         --|C   |9     |0
		|					  ,TabRegRez.SP470 as ДоговорПоставщика  --|C   |9     |0
		|					  ,TabRegRez.SP4470 as ЗаказПоставщику
		
		|                     ,0 As КоличествоНачОст
		|                     ,0 As СтоимостьНачОст
		|					  ,(TabRegRez.SP4471*((TabRegRez.DEBKRED+1)%2)) As КоличествоПриход
		|					  ,(TabRegRez.SP4471*TabRegRez.DEBKRED) As КоличествоРасход
		|					  ,(TabRegRez.SP4472*((TabRegRez.DEBKRED+1)%2)) As СтоимостьПриход
		|					  ,(TabRegRez.SP4472*TabRegRez.DEBKRED) As СтоимостьРасход

		|				FROM dbo.RA464 as TabRegRez (NOLOCK)
		|					INNER JOIN _1SJOURN  As TabJ (NOLOCK) ON (TabRegRez.IDDOC = TabJ.IDDOC)						
		|				WHERE							
		|					TabJ.DATE_TIME_IDDOC >= '" + PERIODN + "' AND TabJ.DATE_TIME_IDDOC < '" + PERIODK + "'	
		
 		|													") + "
		
		|			) as TMP_1
		
		|			GROUP BY 									
		|				TMP_1.Номенклатура,
		|				TMP_1.Фирма,									
		|				TMP_1.ДоговорПоставщика,
		|				TMP_1.ЗаказПоставщику									
		|			having
		|				SUM(TMP_1.КоличествоНачОст + TMP_1.КоличествоПриход - TMP_1.КоличествоРасход) *	SUM(TMP_1.СтоимостьНачОст + TMP_1.СтоимостьПриход - TMP_1.СтоимостьРасход) <> 0
		
		|) as TMP_2
	
		|   left JOIN _1SJOURN  As TabJ (NOLOCK) ON (TMP_2.ЗаказПоставщику = TabJ.IDDOC)
		
		//|	left JOIN adoURBD_Guids AS idФирмы (NOLOCK) ON TMP_2.Фирма = idФирмы._Object
		//|	left JOIN adoURBD_Guids AS idЗП (NOLOCK) ON TMP_2.ЗаказПоставщику = idЗП._Object
		
		|	left JOIN SC204  As RefD (NOLOCK) ON TMP_2.ДоговорПоставщика = RefD.ID
		|	left JOIN SC84 AS СпрНоменклатура (NOLOCK) ON TMP_2.Номенклатура = СпрНоменклатура.ID

		|left JOIN (select * from adoURBD_Guids (NOLOCK) where _MetaType = 11 and _MetaId = 4014) AS idФирмы  ON TMP_2.Фирма = idФирмы._Object
		|left JOIN (select * from adoURBD_Guids (NOLOCK) where (_MetaType = 12 or _MetaType = 22) and _MetaId = 2742) AS idЗП  ON TMP_2.ЗаказПоставщику = idЗП._Object
		
		|where 
		//|		idФирмы._MetaType = 11 and idФирмы._MetaId = 4014	
		//|	and idЗП._MetaType = 12 and idЗП._MetaId = 2742
	
		|	    idФирмы._Id is not null
		|	and idЗП._Id is not null

		
		
	|";
	
	СохранитьТекстВФайл(CommandText77_Заявки, "select_from_77_zakaz_balance_" +  ПравилаИгры.метка  );
	
	Сч = 0;
	ОтборЗаявки = Новый Соответствие;
	
	Попытка
		//КомандаSQL.CommandText = CommandText77_Заявки;
		//ВыборкаSQL = КомандаSQL.Execute();
		
		ВыборкаSQL.Open(CommandText77_Заявки, СоединениеSQL);
	Исключение
		ДобавитьВЛог("Ошибка запроса 77 "+ Символы.ПС +Сокрлп(CommandText77_Заявки) + Символы.ПС + ОписаниеОшибки());
		Возврат тзрез;
	КонецПопытки;
	
	ДобавитьВЛог("запрос sql " + "select_from_77_zakaz_balance_" +  ПравилаИгры.метка );		
	
	тзДанные77_Резервы = Новый ТаблицаЗначений;
		
		Для ii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
			инд_К = "p"+СокрЛП(ii);
			имя_К = инд_К;
			Если ii = 11 ИЛИ ii = 10 тогда
				тзДанные77_Резервы.Колонки.Добавить(инд_К,Новый ОписаниеТипов("Число"));
			Иначе
				тзДанные77_Резервы.Колонки.Добавить(инд_К, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)) );
			КонецЕсли;
		КонецЦикла;
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
		Массив.Добавить(Тип("ДокументСсылка.КорректировкаЗаказаПоставщику"));
		ОписаниеТиповДок = Новый ОписаниеТипов(Массив);
		тзДанные77_Резервы.Колонки.Добавить("Заказ",	ОписаниеТиповДок);

		тзДанные77_Резервы.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзДанные77_Резервы.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		//тзДанные77_Резервы.Колонки.Добавить("Договор",Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
		//тзДанные77_Резервы.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		//тзДанные77_Резервы.Колонки.Добавить("ТТ",Новый ОписаниеТипов("СправочникСсылка.ТорговыеТочки"));
		
		//тзДанные77_Заявки.Колонки.Добавить("ЕИ",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		//тзДанные77_Заявки.Колонки.Добавить("Док8Номер", Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(11, ДопустимаяДлина.Переменная)) );
		//тзДанные77_Заявки.Колонки.Добавить("МХ",Новый ОписаниеТипов("СправочникСсылка.Склады"));
	

		ОтборПоИдСайта = Новый Структура();
		Пока не ВыборкаSQL.eof() Цикл
			
			Сч = Сч + 1;
			Шоумастгоон(имяселекта + СокрЛП(Сч));
			
			НоваяСтрока = тзДанные77_Резервы.Добавить();
			
			Для iii = 0 ПО ВыборкаSQL.Fields.Count-1 Цикл
				Если iii = 11 ИЛИ iii = 10 тогда
					НоваяСтрока.Установить(iii,Число(ВыборкаSQL.Fields(iii).Value));
				Иначе
					НоваяСтрока.Установить(iii,Строка(ВыборкаSQL.Fields(iii).Value));
				КонецЕсли;
			КонецЦикла;
			
			//т_Регистратор = Документы.ЗаказПоставщику.ПустаяСсылка();
			//НайденнаяСтрока = ПравилаИгры.ТабличноеПоле36.Найти(НоваяСтрока.p0, "p0");
			//Если НайденнаяСтрока = Неопределено Тогда
			//	ДобавитьВЛог("караул1 - не найден ПЗ");
			//    Продолжить;
			//Иначе
			//	т_Регистратор = НайденнаяСтрока.Заказ;
			//КонецЕсли;
			//НоваяСтрока.Заказ = т_Регистратор;
			
			УИДзп = СокрЛП(НоваяСтрока.p3);
			ИДзп = Новый УникальныйИдентификатор( УИДзп );
			НайденнаяЗП = Документы.ЗаказПоставщику.ПолучитьСсылку( ИДзп );
			НоваяСтрока.Заказ = НайденнаяЗП; 
			

			УИДтов = СокрЛП(НоваяСтрока.p5);
			ИДтов = Новый УникальныйИдентификатор( УИДтов );
			НайденнаяНоменклатура = Справочники.Номенклатура.ПолучитьСсылку( ИДтов );
			НоваяСтрока.Номенклатура = НайденнаяНоменклатура; 
			
			УИДфрм = СокрЛП(НоваяСтрока.p7);
			ИДфрм = Новый УникальныйИдентификатор( УИДфрм );
			НайденнаяФирма = Справочники.Организации.ПолучитьСсылку( ИДфрм );
			НоваяСтрока.Фирма = НайденнаяФирма;
			
			ВыборкаSQL.MoveNext();
		КонецЦикла;
		
		ВыборкаSQL.Close();
		
	Возврат тзДанные77_Резервы;
	
КонецФункции


Процедура Опросить8()
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 2 сравниваем данные 7 и 8 ");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.p0,
	
	|	ТЗ1.p1,
	|	ТЗ1.p2,
	|	ТЗ1.p3,
	|	ТЗ1.p4,
	//|	ТЗ1.p5,
	|	ТЗ1.p6,
	|	ТЗ1.p7,
	|	ТЗ1.p8,
	|	ТЗ1.p9,
	|	ТЗ1.p10,
	
	|	ТЗ1.p11,
	|	ТЗ1.p12,
	|	ТЗ1.p13,
	|	ТЗ1.p14,
	|	ТЗ1.p15,
	|	ТЗ1.p16,
	|	ТЗ1.p17,
	|	ТЗ1.p18,
	|	ТЗ1.p19,
	|	ТЗ1.p20,
	
	|	ТЗ1.p21,
	|	ТЗ1.p22,
	|	ТЗ1.p23,
	|	ТЗ1.p24,
	|	ТЗ1.p25,
	|	ТЗ1.p26,
	|	ТЗ1.p27,
	|	ТЗ1.p28,
	|	ТЗ1.p29,
	|	ТЗ1.p30,
	
	|	ТЗ1.p31,
	|	ТЗ1.p32,
	|	ТЗ1.p33,
	|	ТЗ1.p34,
	|	ТЗ1.p35,
	|	ТЗ1.p36,
	|	ТЗ1.p37,
	|	ТЗ1.p38,
	|	ТЗ1.p39,
	//|	ТЗ1.p40,
	
	|	ТЗ1.p41,
	|	ТЗ1.p42,
	|	ТЗ1.p43,
	|	ТЗ1.p44,
	|	ТЗ1.p45,
	|	ТЗ1.p46,
	|	ТЗ1.p47,
	|	ТЗ1.p48,
	|	ТЗ1.p49,
	|	ТЗ1.p50,
	
	|	ТЗ1.p51,
	|	ТЗ1.p52,
	|	ТЗ1.p53,
	|	ТЗ1.p54,
	|	ТЗ1.p55,
	|	ТЗ1.p56,
	|	ТЗ1.p57,
	
	|	ТЗ1.p58, 
	|	ТЗ1.p59,
	|	ТЗ1.p60,
	
	|	ТЗ1.Заявка,
	|	ТЗ1.Корректировка,
	|	ТЗ1.Док8,
	|	ТЗ1.ТТ,
	|	ТЗ1.Контрагент,
	|	ТЗ1.Номенклатура,
	|	ТЗ1.ЕИ
	
	|ПОМЕСТИТЬ Заявка_77
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	
	|	ЗаявкаПокупателя.Ссылка КАК Заявка,

	|	ЗаявкаПокупателя.Контрагент,
	|	ЗаявкаПокупателя.БанковскийСчет,
	|	ЗаявкаПокупателя.ДоговорКонтрагента,
	|	ЗаявкаПокупателя.Организация,
	|	ЗаявкаПокупателя.Комментарий,
	|	ЗаявкаПокупателя.ВалютаДокумента,
	|	ЗаявкаПокупателя.КурсВзаиморасчетов,
	|	ЗаявкаПокупателя.УчитыватьНДС,
	|	ЗаявкаПокупателя.СуммаВключаетНДС,
	|	ЗаявкаПокупателя.СуммаДокумента,
	|	ЗаявкаПокупателя.Склад,
	|	ЗаявкаПокупателя.СтатусДокумента,
	|	ЗаявкаПокупателя.Подтверждена,
	|	ЗаявкаПокупателя.ТорговаяТочка,
	|	ЗаявкаПокупателя.ДатаОплаты,
	|	ЗаявкаПокупателя.ДатаОтгрузки,
	|	ЗаявкаПокупателя.ВидОперации,
	
	
	|	ЗаявкаПокупателяТовары.Номенклатура,
	|	ЗаявкаПокупателяТовары.Количество,
	|	ЗаявкаПокупателяТовары.ЕдиницаИзмерения,
	|	ЗаявкаПокупателяТовары.Коэффициент,
	|	ЗаявкаПокупателяТовары.Цена,
	|	ЗаявкаПокупателяТовары.Сумма,
	|	ЗаявкаПокупателяТовары.СтавкаНДС,
	|	ЗаявкаПокупателяТовары.СуммаНДС,
	//|	ЗаявкаПокупателяТовары.СтрокаЗаявки,
	|	ЗаявкаПокупателяТовары.ПрайсПоставщика,
	|	ЗаявкаПокупателяТовары.Отмена,
	//|	ЗаявкаПокупателяТовары.КлючСвязи,
	|	ЗаявкаПокупателяТовары.КомментарийИзСайта,
	|	ЗаявкаПокупателяТовары.СрокГарантированный,
	|	ЗаявкаПокупателяТовары.СрокОжидаемый,
	
	///////////////////////////////|ВЫРАЗИТЬ(ЗаявкаПокупателяТовары.СрокОжидаемый  КАК Строка(100)) КАК ДтВрм,
	
	|	ЗаявкаПокупателяТовары.СрокГарантированныйЗаказа,
	|	ЗаявкаПокупателяТовары.СрокОжидаемыйЗаказа,
	|	ЗаявкаПокупателяТовары.ЦенаЗакупки,
	|	ЗаявкаПокупателяТовары.IDSite
	//|	ЗаявкаПокупателяТовары.ПроцентСкидкиНаценки
	
	|,	ЗаявкаПокупателяТовары.Номенклатура.Наименование КАК СпрНоменклатура_Наименование
	|,	ЗаявкаПокупателяТовары.Номенклатура.Код КАК СпрНоменклатура_код
	|,	ЗаявкаПокупателяТовары.Номенклатура.Артикул КАК СпрНоменклатура_Артикул
	
	|,	ЗаявкаПокупателяТовары.ЕдиницаИзмерения.Наименование КАК СпрЕИ_Наименование
	
	|,	ЗаявкаПокупателя.ТорговаяТочка.Наименование КАК СпрТТ_Наименование
	|,	ЗаявкаПокупателя.ТорговаяТочка.Код КАК СпрТТ_Код
	
	|,	ЗаявкаПокупателя.Организация.Наименование КАК СпрОрг_Наименование
	|,	ЗаявкаПокупателя.Организация.Код КАК СпрОрг_Код
	
	|,	ЗаявкаПокупателя.БанковскийСчет.Наименование КАК СпрБанк_Наименование
	|,	ЗаявкаПокупателя.БанковскийСчет.НомерСчета КАК СпрБанк_НомерСчета
	
	|,	ЗаявкаПокупателя.Склад.Наименование КАК СпрСкл_Наименование
	|,	ЗаявкаПокупателя.Склад.Код КАК СпрСкл_Код
	
	|ПОМЕСТИТЬ Заявка_83
	|ИЗ
	|	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
	|		ПО ЗаявкаПокупателяТовары.Ссылка = ЗаявкаПокупателя.Ссылка
	|ГДЕ
	|	ЗаявкаПокупателяТовары.Ссылка В(&СпсЗаявок)
	|	И ЗаявкаПокупателя.Проведен = Истина
	
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	
	|	ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	
	|	ЗаявкаПокупателя.Ссылка КАК Заявка,

	|	ЗаявкаПокупателя.Контрагент,
	|	ЗаявкаПокупателя.БанковскийСчет,
	|	ЗаявкаПокупателя.ДоговорКонтрагента,
	|	ЗаявкаПокупателя.Организация,
	|	ЗаявкаПокупателя.Комментарий,
	|	ЗаявкаПокупателя.ВалютаДокумента,
	|	ЗаявкаПокупателя.КурсВзаиморасчетов,
	|	ЗаявкаПокупателя.УчитыватьНДС,
	|	ЗаявкаПокупателя.СуммаВключаетНДС,
	|	ЗаявкаПокупателя.СуммаДокумента,
	|	ЗаявкаПокупателя.Склад,
	|	ЗаявкаПокупателя.СтатусДокумента,
	|	ЗаявкаПокупателя.Подтверждена,
	|	ЗаявкаПокупателя.ТорговаяТочка,
	|	ЗаявкаПокупателя.ДатаОплаты,
	|	ЗаявкаПокупателя.ДатаОтгрузки,
	|	ЗаявкаПокупателя.ВидОперации,
	
	
	|	ЗаявкаПокупателяТовары.Номенклатура,
	|	ЗаявкаПокупателяТовары.Количество,
	|	ЗаявкаПокупателяТовары.ЕдиницаИзмерения,
	|	ЗаявкаПокупателяТовары.Коэффициент,
	|	ЗаявкаПокупателяТовары.Цена,
	|	ЗаявкаПокупателяТовары.Сумма,
	|	ЗаявкаПокупателяТовары.СтавкаНДС,
	|	ЗаявкаПокупателяТовары.СуммаНДС,
	//|	ЗаявкаПокупателяТовары.СтрокаЗаявки,
	|	ЗаявкаПокупателяТовары.ПрайсПоставщика,
	|	ЗаявкаПокупателяТовары.Отмена,
	//|	ЗаявкаПокупателяТовары.КлючСвязи,
	|	ЗаявкаПокупателяТовары.КомментарийИзСайта,
	|	ЗаявкаПокупателяТовары.СрокГарантированный,
	|	ЗаявкаПокупателяТовары.СрокОжидаемый,
	
	///////////////////////////////|ВЫРАЗИТЬ(ЗаявкаПокупателяТовары.СрокОжидаемый  КАК Строка(100)) КАК ДтВрм,
	
	|	ЗаявкаПокупателяТовары.СрокГарантированныйЗаказа,
	|	ЗаявкаПокупателяТовары.СрокОжидаемыйЗаказа,
	|	ЗаявкаПокупателяТовары.ЦенаЗакупки,
	|	ЗаявкаПокупателяТовары.IDSite
	//|	ЗаявкаПокупателяТовары.ПроцентСкидкиНаценки
	
	|,	ЗаявкаПокупателяТовары.Номенклатура.Наименование КАК СпрНоменклатура_Наименование
	|,	ЗаявкаПокупателяТовары.Номенклатура.Код КАК СпрНоменклатура_код
	|,	ЗаявкаПокупателяТовары.Номенклатура.Артикул КАК СпрНоменклатура_Артикул
	
	|,	ЗаявкаПокупателяТовары.ЕдиницаИзмерения.Наименование КАК СпрЕИ_Наименование
	
	|,	ЗаявкаПокупателя.ТорговаяТочка.Наименование КАК СпрТТ_Наименование
	|,	ЗаявкаПокупателя.ТорговаяТочка.Код КАК СпрТТ_Код
	
	|,	ЗаявкаПокупателя.Организация.Наименование КАК СпрОрг_Наименование
	|,	ЗаявкаПокупателя.Организация.Код КАК СпрОрг_Код
	
	|,	ЗаявкаПокупателя.БанковскийСчет.Наименование КАК СпрБанк_Наименование
	|,	ЗаявкаПокупателя.БанковскийСчет.НомерСчета КАК СпрБанк_НомерСчета
	
	|,	ЗаявкаПокупателя.Склад.Наименование КАК СпрСкл_Наименование
	|,	ЗаявкаПокупателя.Склад.Код КАК СпрСкл_Код
	
	|ИЗ
	|	Документ.КорректировкаЗаявкиПокупателя.Товары КАК ЗаявкаПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя КАК ЗаявкаПокупателя
	|		ПО ЗаявкаПокупателяТовары.Ссылка = ЗаявкаПокупателя.Ссылка
	|ГДЕ
	|	ЗаявкаПокупателяТовары.Ссылка В(&СпсКорректировок)
	|	И ЗаявкаПокупателя.Проведен = Истина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявка_77.*,
	|	Заявка_83.*,
	|
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p28 = 1 И Заявка_83.УчитыватьНДС = Истина ТОГДА 0
	|	 	КОГДА Заявка_77.p28 = 0 И Заявка_83.УчитыватьНДС = Ложь   ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_УчитыватьНДС,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p29 = 1 И Заявка_83.СуммаВключаетНДС = Истина ТОГДА 0
	|	 	КОГДА Заявка_77.p29 = 0 И Заявка_83.СуммаВключаетНДС = Ложь   ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_СуммаВклНДС,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p30 =  Заявка_83.СуммаДокумента ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_СуммаДокумента,
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p27 =  Заявка_83.КурсВзаиморасчетов ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Курс,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p24 =  ВЫРАЗИТЬ(Заявка_83.Комментарий  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Комент,
	| 0 КАК Сч_Комент,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p22 =  ВЫРАЗИТЬ(Заявка_83.СпрСкл_Наименование  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Скл_Наименование,
		| 0 КАК Сч_Скл_Наименование,

	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p23 =  ВЫРАЗИТЬ(Заявка_83.СпрСкл_Код  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Скл_Код,
		| 0 КАК Сч_Скл_Код,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p18 =  ВЫРАЗИТЬ(Заявка_83.СпрБанк_Наименование  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Банк_Наименование,
		| 0 КАК Сч_Банк_Наименование,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p19 =  ВЫРАЗИТЬ(Заявка_83.СпрБанк_НомерСчета  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Банк_НомерСчета,
	| 0 КАК Сч_Банк_НомерСчета,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p14 =  ВЫРАЗИТЬ(Заявка_83.СпрОрг_Наименование  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Орг_Наименование,
	| 0 КАК Сч_Орг_Наименование,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p15 =  ВЫРАЗИТЬ(Заявка_83.СпрОрг_Код  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Орг_Код,
	| 0 КАК Сч_Орг_Код,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p15 =  Заявка_77.p13 ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Орг_Код2,
	| 0 КАК Сч_Орг_Код2,
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Контрагент =  Заявка_83.Контрагент И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя ТОГДА 0
	|	 	КОГДА Заявка_77.Контрагент <>  Заявка_83.Контрагент И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя ТОГДА 1
	|	ИНАЧЕ 0
	|		КОНЕЦ КАК Сч_Контра,
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.ТТ =  Заявка_83.ТорговаяТочка И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя  ТОГДА 0
	|	 	КОГДА Заявка_77.ТТ <>  Заявка_83.ТорговаяТочка И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя  ТОГДА 1
	|	ИНАЧЕ 0
	|		КОНЕЦ КАК Сч_ТТ,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p3 =  ВЫРАЗИТЬ(Заявка_83.СпрТТ_Наименование  КАК Строка(100)) И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя   ТОГДА 0
	//|	 	КОГДА Заявка_77.p3 <>  ВЫРАЗИТЬ(Заявка_83.СпрТТ_Наименование  КАК Строка(100)) И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя   ТОГДА 1
	//|	ИНАЧЕ 0
	//|		КОНЕЦ КАК Сч_ТТ_Наименование,
	| 0 КАК Сч_ТТ_Наименование,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p4 =  ВЫРАЗИТЬ(Заявка_83.СпрТТ_Код  КАК Строка(100)) И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя    ТОГДА 0
	//|	 	КОГДА Заявка_77.p4 <>  ВЫРАЗИТЬ(Заявка_83.СпрТТ_Код  КАК Строка(100)) И Заявка_83.ВидОперации = &ВидОперацииЗаявкаПокупателя    ТОГДА 1
	//|	ИНАЧЕ 0
	//|		КОНЕЦ КАК Сч_ТТ_Код,
	| 0 КАК Сч_ТТ_Код,
	
	
	//|	  ,ISNULL(СпрКонтра.SP7656, '') As СпрКонтра_ИНН
	
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Номенклатура =  Заявка_83.Номенклатура ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p37 =  ВЫРАЗИТЬ(Заявка_83.СпрНоменклатура_Наименование  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Тов_Наименование,
	| 0 КАК Сч_Тов_Наименование,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p38 =  ВЫРАЗИТЬ(Заявка_83.СпрНоменклатура_код  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_Тов_Код,
	| 0 КАК Сч_Тов_Код,
	
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p39 =  ВЫРАЗИТЬ(Заявка_83.СпрНоменклатура_Артикул  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов_Артикул,
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p42 =  ВЫРАЗИТЬ(Заявка_83.СпрЕИ_Наименование  КАК Строка(100)) ТОГДА 0
	//|	ИНАЧЕ 1
	//|		КОНЕЦ КАК Сч_ЕИ_Наименование,
	| 0 КАК Сч_ЕИ_Наименование,
	
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.ЕИ =  Заявка_83.ЕдиницаИзмерения ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_ЕИ,
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p41 =  Заявка_83.Количество ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Кол,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p44 =  Заявка_83.Коэффициент ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Коэф,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p45 =  Заявка_83.Цена ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Цена,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p46 =  Заявка_83.Сумма ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Сумма,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p47 =  Заявка_83.СуммаНДС ТОГДА 0
	//-----------------------------------------------------------------------------------1
	|	ИНАЧЕ 0 
	|		КОНЕЦ КАК Сч_СуммаНДС,
	
	//|	  ,ISNULL(СпрКонтра2.DESCR, 'резервируется на складе') As Поставщик_изСайта_Стр    48 
	//|	  ,ISNULL(dbo.AddToPrefixStr(СпрКонтра2.code,'',8), 'ЦС') As Поставщик_изСайта_код   49
	
	//|	ВЫБОР 
	//|	 	КОГДА Заявка_77.p50 =  ВЫРАЗИТЬ(Заявка_83.КомментарийИзСайта  КАК Строка(100)) ТОГДА 0
	////-----------------------------------------------------------------------------------1
	//|	ИНАЧЕ 0 
	//|		КОНЕЦ КАК Сч_КоментСайта,
	| 0 КАК Сч_КоментСайта,
	
	
	
	//|      ,DT.SP13768 СрокГарантированн          51
	//|      ,DT.SP13750 СрокОжидаемый                52
	//|      ,DT.SP13751 СрокГарант_Заказа              53
	//|      ,DT.SP13752 СрокОжид_Заказа                  54
	
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.p55 =  Заявка_83.ЦенаЗакупки ТОГДА 0
	//-----------------------------------------------------------------------------------1
	|	ИНАЧЕ 0 
	|		КОНЕЦ КАК Сч_ЦенаЗакупки,
	
	
	|	1 КАК Сч
	
	|ПОМЕСТИТЬ Заявки7783
	|ИЗ
	|	Заявка_77 КАК Заявка_77
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заявка_83 КАК Заявка_83
	|		ПО  Заявка_77.Док8 = Заявка_83.Заявка
	|		 И  Заявка_77.p36 = Заявка_83.IDSite
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заявки7783
	|ГДЕ  
	
	//|       Сч_СуммаДокумента > 0 ИЛИ 
	|       Сч_УчитыватьНДС  > 0 
	|   ИЛИ Сч_СуммаВклНДС  > 0
	|   ИЛИ Сч_Курс  > 0
	
	|	ИЛИ	Сч_Скл_Наименование > 0 ИЛИ Сч_Скл_Код > 0 
	
	|   ИЛИ Сч_Банк_НомерСчета > 0 ИЛИ Сч_Банк_Наименование > 0
	|   ИЛИ Сч_Орг_Наименование > 0 ИЛИ Сч_Орг_Код > 0  ИЛИ Сч_Орг_Код2 > 0 
	|   ИЛИ Сч_ТТ > 0 ИЛИ Сч_Контра > 0 ИЛИ Сч_ТТ_Наименование > 0 ИЛИ Сч_ТТ_Код > 0
	|   ИЛИ Сч_Тов > 0 ИЛИ Сч_Тов_Артикул > 0 ИЛИ Сч_Тов_Код > 0 ИЛИ Сч_Тов_Наименование > 0
	|   ИЛИ Сч_ЕИ_Наименование > 0 ИЛИ Сч_ЕИ > 0  
	|	ИЛИ Сч_Кол > 0 ИЛИ Сч_Коэф > 0 ИЛИ	Сч_Цена > 0 ИЛИ Сч_Сумма > 0
	
	|   ИЛИ Сч_СуммаНДС > 0
	|   ИЛИ Сч_ЦенаЗакупки > 0  
	|   ИЛИ Сч_Комент > 0       
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	Заявки7783 КАК Заявки7783
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	КОСЯКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   Заявки7783.Док8
	|,  Заявки7783.p57
	|ИЗ
	|	Заявки7783
	|ГДЕ
	|	НЕ Заявки7783.Док8 В (выбрать косяки.Док8 из косяки)
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	Заявки7783
	|ГДЕ
	|	НЕ Заявки7783.Док8 В (выбрать косяки.Док8 из косяки)
	
	|";
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  ПравилаИгры.ТабличноеПоле1);
	Запрос.УстановитьПараметр("СпсЗаявок",  ПравилаИгры.ТабличноеПоле2.ВыгрузитьКолонку("Заявка"));
	Запрос.УстановитьПараметр("СпсКорректировок",  ПравилаИгры.ТабличноеПоле2.ВыгрузитьКолонку("Корректировка"));
	Запрос.УстановитьПараметр("ВидОперацииЗаявкаПокупателя",  Перечисления.ВидыОперацийЗаявкаПокупателя.ЗаявкаПокупателя);
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Совпаденния = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить();
	Регистраторы = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
	КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Предупреждение("Результат Анализа",3);
	//	РезАнализа = РезультатОпроса[РезультатОпроса_Количество - 4].Выгрузить();
	//	РезАнализа.ВыбратьСтроку();
	//	Предупреждение("КОСЯКИ",3);
	//	КОСЯКИ.ВыбратьСтроку();
	//	Предупреждение("Регистраторы",3);
	//	Регистраторы.ВыбратьСтроку();
	//	Предупреждение("Совпаденния",3);
	//	Совпаденния.ВыбратьСтроку();
	//КонецЕсли;
	
	ТабличноеПоле3 = Регистраторы.Скопировать();
	ТабличноеПоле4 = Совпаденния.Скопировать();
	ТабличноеПоле5 = КОСЯКИ.Скопировать();
	ТабличноеПоле10 = КОСЯКИ.Скопировать();
	ТабличноеПоле10.свернуть("Док8,p57","Сч");
	
	ПравилаИгры.Вставить("ТабличноеПоле3",ТабличноеПоле3);
	ПравилаИгры.Вставить("ТабличноеПоле4",ТабличноеПоле4);
	ПравилаИгры.Вставить("ТабличноеПоле5",ТабличноеПоле5);
	ПравилаИгры.Вставить("ТабличноеПоле10",ТабличноеПоле10);
	
КонецПроцедуры
Процедура Опросить8_ДвиженияПоРезервам()
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 5 сравниваем данные 7 и 8 по резервам ");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.p0,
	
	|	ТЗ1.p1,
	|	ТЗ1.p2,
	|	ТЗ1.p3,
	|	ТЗ1.p4,
	|	ТЗ1.p5,
	|	ТЗ1.p6,
	|	ТЗ1.p7,
	|	ТЗ1.p8,
	|	ТЗ1.p9,
	|	ТЗ1.p10,
	
	|	ТЗ1.p11,
	|	ТЗ1.p12 КАК КоличествоПриход,
	|	ТЗ1.p13 КАК КоличествоРасход,
	
	|	ТЗ1.Регистратор,
	|	ТЗ1.Заявка,
	|	ТЗ1.Фирма,
	|	ТЗ1.Склад,
	|	ТЗ1.Номенклатура
	//|	ТЗ1.IDSite
	
	|ПОМЕСТИТЬ Заявка_77
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|	РезервыТоваровОбороты.Регистратор,
	|	РезервыТоваровОбороты.СтрокаЗаявки.Заявка КАК Заявка,
	|	РезервыТоваровОбороты.СтрокаЗаявки.Заявка.Организация КАК Фирма,
	|	РезервыТоваровОбороты.Склад,
	|	РезервыТоваровОбороты.Номенклатура,
	//|	РезервыТоваровОбороты.СтрокаЗаявки.IDSite КАК IDSite,
	|	СУММА(РезервыТоваровОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(РезервыТоваровОбороты.КоличествоРасход) КАК КоличествоРасход
	|ПОМЕСТИТЬ Заявка_83
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Обороты(, , Регистратор, ) КАК РезервыТоваровОбороты
	|ГДЕ
	|	РезервыТоваровОбороты.Регистратор В (&РегистраторыСпс)
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОбороты.Регистратор,
	|	РезервыТоваровОбороты.СтрокаЗаявки.Заявка,
	|	РезервыТоваровОбороты.СтрокаЗаявки.Заявка.Организация,
	|	РезервыТоваровОбороты.Склад,
	|	РезервыТоваровОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявка_77.*,
	|	Заявка_83.*,
	|
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Номенклатура = Заявка_83.Номенклатура ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Номенклатура,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Склад = Заявка_83.Склад ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Склад,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Фирма = Заявка_83.Фирма ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Фирма,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.Заявка = Заявка_83.Заявка ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Заявка,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.КоличествоПриход = Заявка_83.КоличествоПриход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоПриход,
	|	ВЫБОР 
	|	 	КОГДА Заявка_77.КоличествоРасход = Заявка_83.КоличествоРасход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоРасход,
	
	|	1 КАК Сч
	
	|ПОМЕСТИТЬ Заявки7783
	|ИЗ
	|	Заявка_77 КАК Заявка_77
	|		ЛЕВОЕ СОЕДИНЕНИЕ Заявка_83 КАК Заявка_83
	|		ПО  Заявка_77.Регистратор = Заявка_83.Регистратор
	|		 И  Заявка_77.Заявка = Заявка_83.Заявка
	|		 И  Заявка_77.Фирма = Заявка_83.Фирма
	|		 И  Заявка_77.Склад = Заявка_83.Склад
	|		 И  Заявка_77.Номенклатура = Заявка_83.Номенклатура
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заявки7783
	|ГДЕ  
	
	|       Сч_Номенклатура  > 0 ИЛИ Сч_Склад  > 0
	|   ИЛИ Сч_Фирма > 0 ИЛИ Сч_Заявка  > 0
	|	ИЛИ	Сч_КоличествоПриход > 0 ИЛИ Сч_КоличествоРасход > 0 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	Заявки7783 КАК Заявки7783
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	КОСЯКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   Заявки7783.Регистратор
	|,  Заявки7783.p0
	|ИЗ
	|	Заявки7783
	|ГДЕ
	|	Заявки7783.Регистратор В (выбрать косяки.Регистратор из косяки)
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	Заявки7783
	|ГДЕ
	|	НЕ Заявки7783.Заявка В (выбрать косяки.Заявка из косяки)
	
	|";
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  ПравилаИгры.ТабличноеПоле7);
	Запрос.УстановитьПараметр("РегистраторыСпс",  ПравилаИгры.ТабличноеПоле6.ВыгрузитьКолонку("Док8"));
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Совпаденния = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить();
	Регистраторы = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
	КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
	Анализ = РезультатОпроса[РезультатОпроса_Количество - 4].Выгрузить();
	Анализ.Свернуть("Склад,Склад1","КоличествоПриход,КоличествоРасход,КоличествоПриход1,КоличествоРасход1,Сч_Номенклатура,Сч_Фирма,Сч_Заявка,Сч_Склад,Сч_КоличествоПриход,Сч_КоличествоРасход,Сч");
	                 //Фирма,Фирма1,
	ТабличноеПоле9 = Регистраторы.Скопировать();
	ТабличноеПоле8 = КОСЯКИ.Скопировать();
	ТабличноеПоле15 = Анализ.Скопировать();
	
	ПравилаИгры.Вставить("ТабличноеПоле9",ТабличноеПоле9);
	ПравилаИгры.Вставить("ТабличноеПоле8",ТабличноеПоле8);
	ПравилаИгры.Вставить("ТабличноеПоле15",ТабличноеПоле15);
	
КонецПроцедуры
Функция Опросить8_ОстаткиПоРезервам(партТЗ77,парДтВрм)
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 8 сравниваем остатки 7 и 8 по резервам ");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.p0,
	|	ТЗ1.p1,
	|	ТЗ1.p2,
	|	ТЗ1.p3,
	|	ТЗ1.p4,
	|	ТЗ1.p5,
	|	ТЗ1.p6,
	|	ТЗ1.p7,
	|	ТЗ1.p8,
	|	ТЗ1.p9,
	|	ТЗ1.Док8Номер,
	|	ТЗ1.Заявка,
	|	ТЗ1.Склад,
	|	ТЗ1.Номенклатура
	|ПОМЕСТИТЬ Заявка_77
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОстатки.СтрокаЗаявки.Заявка КАК Заявка,
	|	РезервыТоваровОстатки.Склад,
	|	РезервыТоваровОстатки.Номенклатура,
	|	СУММА(РезервыТоваровОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ Заявка_83
	|ИЗ
	|	РегистрНакопления.РезервыТоваров.Остатки(
	|			&ДтВрм,
	|				Склад В (&СпсСкл)
//	|				И СтрокаЗаявки.Заявка В (&СпсЗаявок)
//	|				И Номенклатура В (&СпсТов)
	|											 ) КАК РезервыТоваровОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОстатки.СтрокаЗаявки.Заявка,
	|	РезервыТоваровОстатки.Склад,
	|	РезервыТоваровОстатки.Номенклатура
	
	|ИМЕЮЩИЕ
	|	СУММА(РезервыТоваровОстатки.КоличествоОстаток) <> 0
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявка_77.p0,
	|	Заявка_77.p1,
	|	Заявка_77.p2,
	|	Заявка_77.p3,
	|	Заявка_77.p4,
	|	Заявка_77.p5,
	|	Заявка_77.p6,
	|	Заявка_77.p7,
	|	Заявка_77.p8,
	//|	ЕСТЬNULL(Заявка_77.p9,0) КАК p9,
	|	Заявка_77.p9,
	|	Заявка_77.Док8Номер,
	|	Заявка_77.Заявка,
	|	Заявка_77.Склад,
	|	Заявка_77.Номенклатура,
	|	Заявка_83.Заявка КАК Заявка1,
	|	Заявка_83.Склад КАК Склад1,
	|	Заявка_83.Номенклатура КАК Номенклатура1,
	//|	ЕСТЬNULL(Заявка_83.КоличествоОстаток,0) КАК КоличествоОстаток,
	|   Заявка_83.КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА Заявка_77.p9 = Заявка_83.КоличествоОстаток
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоОстаток,
	|	1 КАК Сч
	|ПОМЕСТИТЬ Заявки7783
	|ИЗ
	|	Заявка_77 КАК Заявка_77
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Заявка_83 КАК Заявка_83
	|		ПОЛНОЕ СОЕДИНЕНИЕ Заявка_83 КАК Заявка_83
	|			ПО Заявка_77.Заявка = Заявка_83.Заявка
	|			 И Заявка_77.Склад = Заявка_83.Склад
	|			 И Заявка_77.Номенклатура = Заявка_83.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ  *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заявки7783 КАК Заявки7783
	|ГДЕ
	|	Заявки7783.Сч_КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	Заявки7783 КАК Заявки7783
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	КОСЯКИ КАК КОСЯКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Заявки7783.Заявка
	|ИЗ
	|	Заявки7783 КАК Заявки7783
	|ГДЕ
	|	Заявки7783.Заявка В
	|			(ВЫБРАТЬ
	|				косяки.Заявка
	|			ИЗ
	|				косяки)";
	Запрос.УстановитьПараметр("ДтВрм",  парДтВрм);
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  партТЗ77);
	Запрос.УстановитьПараметр("СпсЗаявок",  партТЗ77.ВыгрузитьКолонку("Заявка"));
	Запрос.УстановитьПараметр("СпсТов",  партТЗ77.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СпсСкл",  партТЗ77.ВыгрузитьКолонку("Склад"));
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	
	Возврат РезультатОпроса;
	
КонецФункции

Функция Опросить8_Состояния() экспорт
	
	ТабличноеПоле17 = ПравилаИгры.ТабличноеПоле17;
	ТабличноеПоле17.Очистить();
	ПравилаИгры.Вставить("ТабличноеПоле17", ТабличноеПоле17);
	
	Запрос = Новый Запрос;  //%Отбор%, %Заявка%
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкиПокупателейОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	ЗаявкиПокупателейОстатки.Номенклатура,
	               |	ЗаявкиПокупателейОстатки.КоличествоОстаток КАК Заявлено,
	               |	ЗаявкиПокупателейОстатки.СуммаУпрОстаток КАК Сумма
	               |ПОМЕСТИТЬ втСтрокиЗаявки
	               |ИЗ
	               |	РегистрНакопления.ЗаявкиПокупателей.Остатки(, %Отбор%) КАК ЗаявкиПокупателейОстатки
	               |ГДЕ
	               |	ЗаявкиПокупателейОстатки.КоличествоОстаток > 0
				   |	И НЕ ЗаявкиПокупателейОстатки.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)
				   |	И НЕ ЗаявкиПокупателейОстатки.Номенклатура = Значение(Справочник.ИдентификаторыСтрокЗаявок.ПустаяСсылка)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РезервыТоваровОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	РезервыТоваровОстатки.КоличествоОстаток КАК Количество,
	               |	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве) КАК Состояние
	               |ПОМЕСТИТЬ втРезервы
	               |ИЗ
	               |	РегистрНакопления.РезервыТоваров.Остатки(
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК РезервыТоваровОстатки
	               |ГДЕ
	               |	РезервыТоваровОстатки.КоличествоОстаток > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОтказыПоЗаявкамОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	               |					ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаявкиПокупателя
	               |				ТОГДА ОтказыПоЗаявкамОбороты.КоличествоОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоОтказаноЗаявки,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	               |					ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПоставщику
	               |				ТОГДА ОтказыПоЗаявкамОбороты.КоличествоОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоОтказаноЗаказы,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |					ИЛИ ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.КорректировкаПоступленияТоваровУслуг
	               |				ТОГДА ОтказыПоЗаявкамОбороты.КоличествоОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоОтказаноРазмещения,
	               |	СУММА(ВЫБОР
	               |		КОГДА ОтказыПоЗаявкамОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ТОГДА ОтказыПоЗаявкамОбороты.КоличествоОборот
	               |		ИНАЧЕ 0
	               |	КОНЕЦ) КАК КоличествоОтказаноПродажи
	               |ПОМЕСТИТЬ втОтказыПоДокументам
	               |ИЗ
	               |	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	               |			,
	               |			,
	               |			Регистратор,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК ОтказыПоЗаявкамОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОтказыПоЗаявкамОбороты.СтрокаЗаявки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродажиОбороты.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	ПродажиОбороты.КоличествоОборот КАК Количество,
	               |	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выдано) КАК Состояние
	               |ПОМЕСТИТЬ втПродажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			,
	               |			,
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК ПродажиОбороты
	               |ГДЕ
	               |	ПродажиОбороты.КоличествоОборот > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РазмещенияСтрокЗаказовОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	РазмещенияСтрокЗаказовОстатки.КоличествоОстаток КАК Количество,
	               |	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВПутиПК) КАК Состояние
	               |ПОМЕСТИТЬ втОтгруженоПоставщиком
	               |ИЗ
	               |	РегистрНакопления.РазмещенияСтрокЗаказов.Остатки(
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК РазмещенияСтрокЗаказовОстатки
	               |ГДЕ
	               |	РазмещенияСтрокЗаказовОстатки.КоличествоОстаток > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыКРезервированиюОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	ТоварыКРезервированиюОстатки.КоличествоОстаток КАК Количество,
	               |	ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ПриемкаПК) КАК Состояние
	               |ПОМЕСТИТЬ втПринятыНаСкладе
	               |ИЗ
	               |	РегистрНакопления.ТоварыКРезервированию.Остатки(
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК ТоварыКРезервированиюОстатки
	               |ГДЕ
	               |	ТоварыКРезервированиюОстатки.КоличествоОстаток > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыПоставщикамОстатки.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(втОтгруженоПоставщиком.Количество, 0) - ЕСТЬNULL(втПринятыНаСкладе.Количество, 0) - ЕСТЬNULL(втРезервы.Количество, 0) - ЕСТЬNULL(втПродажи.Количество, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаказы, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноРазмещения, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноПродажи, 0) КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ЗаказыПоставщикамОстатки.СтрокаЗаявки.СостояниеЗаказа = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПолученОтветПоставщика)
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Выкуплен)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйЗаказ)
	               |	КОНЕЦ КАК Состояние
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК ЗаказыПоставщикамОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтказыПоДокументам КАК втОтказыПоДокументам
	               |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = втОтказыПоДокументам.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтгруженоПоставщиком КАК втОтгруженоПоставщиком
	               |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = втОтгруженоПоставщиком.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втПринятыНаСкладе КАК втПринятыНаСкладе
	               |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = втПринятыНаСкладе.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажи КАК втПродажи
	               |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = втПродажи.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
	               |		ПО ЗаказыПоставщикамОстатки.СтрокаЗаявки = втРезервы.СтрокаЗаявки
	               |ГДЕ
	               |	ЗаказыПоставщикамОстатки.КоличествоОстаток - ЕСТЬNULL(втОтгруженоПоставщиком.Количество, 0) - ЕСТЬNULL(втПринятыНаСкладе.Количество, 0) - ЕСТЬNULL(втРезервы.Количество, 0) - ЕСТЬNULL(втПродажи.Количество, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаказы, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноРазмещения, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноПродажи, 0) > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЗаказы.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	втЗаказы.Количество КАК Количество,
	               |	втЗаказы.Состояние КАК Состояние
	               |ПОМЕСТИТЬ ТекущиеСостоянияСтрокЗаявок
	               |ИЗ
	               |	втЗаказы КАК втЗаказы
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втСтрокиЗаявки.СтрокаЗаявки,
	               |	втСтрокиЗаявки.Заявлено - ЕСТЬNULL(втРезервы.Количество, 0) - ЕСТЬNULL(втПродажи.Количество, 0) - ЕСТЬNULL(втПринятыНаСкладе.Количество, 0) - ЕСТЬNULL(втЗаказы.Количество, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаявки, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаказы, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноРазмещения, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноПродажи, 0) - ЕСТЬNULL(втОтгруженоПоставщиком.Количество, 0),
	               |	ВЫБОР
	               |		КОГДА втСтрокиЗаявки.СтрокаЗаявки.ПоследняяКорректировка.СтатусДокумента ЕСТЬ NULL
	               |			ТОГДА ВЫБОР
	               |					КОГДА втСтрокиЗаявки.СтрокаЗаявки.Заявка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяНеподтвержден)
	               |						ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	               |					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА втСтрокиЗаявки.СтрокаЗаявки.ПоследняяКорректировка.СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяНеподтвержден)
	               |					ТОГДА ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.НовыйНеподтвержден)
	               |				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.Новый)
	               |			КОНЕЦ
	               |	КОНЕЦ
	               |ИЗ
	               |	втСтрокиЗаявки КАК втСтрокиЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтказыПоДокументам КАК втОтказыПоДокументам
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втОтказыПоДокументам.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втРезервы.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втПродажи КАК втПродажи
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втПродажи.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказы КАК втЗаказы
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втЗаказы.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втПринятыНаСкладе КАК втПринятыНаСкладе
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втПринятыНаСкладе.СтрокаЗаявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втОтгруженоПоставщиком КАК втОтгруженоПоставщиком
	               |		ПО втСтрокиЗаявки.СтрокаЗаявки = втОтгруженоПоставщиком.СтрокаЗаявки
	               |ГДЕ
	               |	втСтрокиЗаявки.Заявлено - ЕСТЬNULL(втРезервы.Количество, 0) - ЕСТЬNULL(втПродажи.Количество, 0) - ЕСТЬNULL(втПринятыНаСкладе.Количество, 0) - ЕСТЬNULL(втЗаказы.Количество, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаявки, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноЗаказы, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноРазмещения, 0) - ЕСТЬNULL(втОтказыПоДокументам.КоличествоОтказаноПродажи, 0) - ЕСТЬNULL(втОтгруженоПоставщиком.Количество, 0) > 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втОтгруженоПоставщиком.СтрокаЗаявки,
	               |	втОтгруженоПоставщиком.Количество,
	               |	втОтгруженоПоставщиком.Состояние
	               |ИЗ
	               |	втОтгруженоПоставщиком КАК втОтгруженоПоставщиком
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втПринятыНаСкладе.СтрокаЗаявки,
	               |	втПринятыНаСкладе.Количество,
	               |	втПринятыНаСкладе.Состояние
	               |ИЗ
	               |	втПринятыНаСкладе КАК втПринятыНаСкладе
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втРезервы.СтрокаЗаявки,
	               |	втРезервы.Количество,
	               |	втРезервы.Состояние
	               |ИЗ
	               |	втРезервы КАК втРезервы
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втПродажи.СтрокаЗаявки,
	               |	втПродажи.Количество,
	               |	втПродажи.Состояние
	               |ИЗ
	               |	втПродажи КАК втПродажи
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОтказыПоЗаявкамОбороты.СтрокаЗаявки,
	               |	ОтказыПоЗаявкамОбороты.КоличествоОборот,
	               |	ОтказыПоЗаявкамОбороты.ПричинаОтказа
	               |ИЗ
	               |	РегистрНакопления.ОтказыПоЗаявкам.Обороты(
	               |			,
	               |			,
	               |			,
	               |			СтрокаЗаявки В
	               |				(ВЫБРАТЬ
	               |					втСтрокиЗаявки.СтрокаЗаявки
	               |				ИЗ
	               |					втСтрокиЗаявки)) КАК ОтказыПоЗаявкамОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СтрокаЗаявки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втРезервы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втОтказыПоДокументам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втПродажи
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втОтгруженоПоставщиком
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втПринятыНаСкладе
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втЗаказы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.Заявка КАК Заявка,
	               |	ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.Заявка.Контрагент КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.ПоследняяКорректировка.СтатусДокумента ЕСТЬ NULL
	               |			ТОГДА ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.Заявка.СтатусДокумента
	               |		ИНАЧЕ ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.ПоследняяКорректировка.СтатусДокумента
	               |	КОНЕЦ КАК СтатусДокумента,
	               |	ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.IDSite КАК IDSite,
	               |	ТекущиеСостоянияСтрокЗаявок.Количество КАК Количество,
	               |	ТекущиеСостоянияСтрокЗаявок.Состояние,
	               |	втСтрокиЗаявки.Номенклатура КАК Номенклатура,
	               |	втСтрокиЗаявки.Номенклатура.Изготовитель КАК Изготовитель,
	               |	втСтрокиЗаявки.Номенклатура.Артикул КАК Артикул,
	               |	втСтрокиЗаявки.Сумма / втСтрокиЗаявки.Заявлено КАК Цена,
	               |	втСтрокиЗаявки.Сумма КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА ТекущиеСостоянияСтрокЗаявок.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве)
	               |			ТОГДА ТекущиеСостоянияСтрокЗаявок.Количество * втСтрокиЗаявки.Сумма / втСтрокиЗаявки.Заявлено
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаРезерва,
	               |	ВЫБОР
	               |		КОГДА ТекущиеСостоянияСтрокЗаявок.Состояние = ЗНАЧЕНИЕ(Справочник.СостоянияСтрокДокументов.ВРезерве)
	               |			ТОГДА ТекущиеСостоянияСтрокЗаявок.Количество
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Резерв,
	               |	ТекущиеСостоянияСтрокЗаявок.Состояние.ВидОтказа КАК ВидОтказа,
	               |	ВЫБОР
	               |		КОГДА ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.ПоследняяКорректировка.СуммаДокумента ЕСТЬ NULL
	               |			ТОГДА ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.Заявка.СуммаДокумента
	               |		ИНАЧЕ ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки.ПоследняяКорректировка.СуммаДокумента
	               |	КОНЕЦ КАК СуммаДокумента
	               |ИЗ
	               |	ТекущиеСостоянияСтрокЗаявок КАК ТекущиеСостоянияСтрокЗаявок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтрокиЗаявки КАК втСтрокиЗаявки
	               |		ПО ТекущиеСостоянияСтрокЗаявок.СтрокаЗаявки = втСтрокиЗаявки.СтрокаЗаявки
				   //|ИТОГИ
				   //|	МАКСИМУМ(Контрагент),
				   //|	МАКСИМУМ(СтатусДокумента),
				   //|	СУММА(Количество),
				   //|	МАКСИМУМ(Номенклатура),
				   //|	МАКСИМУМ(Сумма),
				   //|	МАКСИМУМ(Цена),
				   //|	СУММА(СуммаРезерва),
				   //|	МАКСИМУМ(Изготовитель),
				   //|	МАКСИМУМ(Артикул),
				   //|	СУММА(Резерв),
				   //|	МАКСИМУМ(СуммаДокумента)
				   //|ПО  %Заявка%
				   //|	СтрокаЗаявки
				   //|;
				   //|
				   //|////////////////////////////////////////////////////////////////////////////////
				   //|ВЫБРАТЬ РАЗЛИЧНЫЕ
				   //|	РазмещенияСтрокЗаказовОбороты.СтрокаЗаявки,
				   //|	ВЫРАЗИТЬ(РазмещенияСтрокЗаказовОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг) КАК Поступление,
				   //|	ВЫРАЗИТЬ(РазмещенияСтрокЗаказовОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер КАК Номер
				   //|ИЗ
				   //|	РегистрНакопления.РазмещенияСтрокЗаказов.Обороты(
				   //|			,
				   //|			,
				   //|			Регистратор,
				   //|			СтрокаЗаявки В
				   //|				(ВЫБРАТЬ
				   //|					втСтрокиЗаявки.СтрокаЗаявки
				   //|				ИЗ
				   //|					втСтрокиЗаявки)) КАК РазмещенияСтрокЗаказовОбороты
				   //|ГДЕ
				   //|	РазмещенияСтрокЗаказовОбороты.КоличествоПриход > 0
				   //|	И РазмещенияСтрокЗаказовОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
				   |";                 	             				     
				   
	ВыводВРазрезеДокументов = Ложь;				   
				   
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Заявка%", ?(ВыводВРазрезеДокументов, " Заявка, ", ""));				
	
	УстановитьПараметрыВЗапросы(Запрос);
	ДобавитьОтборВЗапрос(Запрос.Текст); 
	
	Результаты = Запрос.ВыполнитьПакет();
	РезультатЗапроса = Результаты.Получить(Результаты.Количество() - 1).Выгрузить();
	
	ПравилаИгры.Вставить("ТабличноеПоле17",РезультатЗапроса);

	Возврат ПравилаИгры;
КонецФункции
Процедура ДобавитьОтборВЗапрос(ТекстЗапроса)
	
	Отбор = "";
	
	//Если ЗначениеЗаполнено(Контрагент) Тогда 
	//	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда 
	//		Отбор = Отбор + "ДоговорКонтрагента.Владелец = &Контрагент ";
	//	Иначе
	//		Отбор = Отбор + "ДоговорКонтрагента.Владелец В (&Контрагент) ";
	//	КонецЕсли;
	//КонецЕсли;
	//Если ЗначениеЗаполнено(IDSite) Тогда 
	//	Отбор = Отбор + ?(ПустаяСтрока(Отбор), "", " И ")  + " СтрокаЗаявки.IDSite = &IDSite";
	//КонецЕсли;
	//Если ЗначениеЗаполнено(Номенклатура) Тогда 
	//	Отбор = Отбор + ?(ПустаяСтрока(Отбор), "", " И ")  + " Номенклатура = &Номенклатура";
	//КонецЕсли;
	//Если ЗначениеЗаполнено(Менеджер) Тогда 
	//	Отбор = Отбор + ?(ПустаяСтрока(Отбор), "", " И ")  + " СтрокаЗаявки.Заявка.Менеджер = &Менеджер";
	//КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////////////Если ЗначениеЗаполнено(ПравилаИгры.ВыбСклад) Тогда 
	//////////////////////////////////////////////////////////////////////////////////	Отбор = Отбор + ?(ПустаяСтрока(Отбор), "", " И ")  + " СтрокаЗаявки.Заявка.Склад = &Склад";
	//////////////////////////////////////////////////////////////////////////////////КонецЕсли;
	
	//Если ЗначениеЗаполнено(Заявка) Тогда 
	//	Отбор = Отбор + ?(ПустаяСтрока(Отбор), "", " И ")  + " СтрокаЗаявки.Заявка = &Заявка";
	//КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Отбор%", Отбор);

КонецПроцедуры
Процедура УстановитьПараметрыВЗапросы(Запрос)
	
	СтатусыНовыйЗаказ = Новый Массив;
	СтатусыНовыйЗаказ.Добавить(Справочники.СтатусыДокументов.НовыйЗаказПоставщику);
	СтатусыНовыйЗаказ.Добавить(Справочники.СтатусыДокументов.ПроведенЗаказПоставщику);
	СтатусыНовыйЗаказ.Добавить(Справочники.СтатусыДокументов.ОбработанПоставщиком);
	
	Запрос.УстановитьПараметр("СтатусыНовыйЗаказ", СтатусыНовыйЗаказ);
	//Запрос.УстановитьПараметр("IDSite", IDSite);
	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//Запрос.УстановитьПараметр("Контрагент", Контрагент);
	//Запрос.УстановитьПараметр("Менеджер", Менеджер);
	
	//////////////////////////////////////////////////////////////////////////////////Запрос.УстановитьПараметр("Склад", ПравилаИгры.ВыбСклад);
	
	//Запрос.УстановитьПараметр("Заявка", Заявка);

КонецПроцедуры

Функция Опросить8_ОстаткиНоменклатуры() экспорт
	
	ТабличноеПоле25 = ПравилаИгры.ТабличноеПоле25;
	
	Если ТабличноеПоле25.Количество() = 0 тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ТЗ77.Тов,
	|	ТЗ77.Тов_Ссылка,
	|	ТЗ77.ТовКод,
	|	ТЗ77.Фирма,
	|	ТЗ77.Фирма_Ссылка,
	|	ТЗ77.ФирмаКод,
	|	ТЗ77.Склад,
	|	ТЗ77.Склад_Ссылка,
	|	ТЗ77.СкладКод,
	|	ТЗ77.p11 как ПартияID,
	|	ТЗ77.Партия_Ссылка,
	|	ТЗ77.p10 как ПартияКод,
	|	ТЗ77.p19 как VMI,
	|	ТЗ77.КСписаниюСтр КАК Ост_Кол,
	|	ТЗ77.СуммаСписанияСтр КАК Ост_Сум,
	|	ТЗ77.Поставщик_Ссылка,
	|	ТЗ77.p20 как ПартияПоставщикУИД
	
	|ПОМЕСТИТЬ ПартииНаСкладах_77
	|ИЗ
	|	&тзДанные77_Остатки КАК ТЗ77
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Фирма_Ссылка,
	|	Ост77.ФирмаКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод,
	|	Ост77.ПартияID,
	|	Ост77.Партия_Ссылка,
	|	Ост77.ПартияКод,
	|	СУММА(Ост77.Ост_Кол) КАК Ост_Кол,
	|	СУММА(Ост77.Ост_Сум) КАК Ост_Сум
	|
	|ПОМЕСТИТЬ ТоварыНаСкладах_77_св_vmi
	|ИЗ
	|	ПартииНаСкладах_77 как Ост77
	|
	|СГРУППИРОВАТЬ ПО
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Фирма_Ссылка,
	|	Ост77.ФирмаКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод,
	|	Ост77.ПартияID,
	|	Ост77.Партия_Ссылка,
	|	Ост77.ПартияКод
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод,
	|	Ост77.ПартияID,
	|	Ост77.Партия_Ссылка,
	|	Ост77.ПартияКод,
	|	СУММА(Ост77.Ост_Кол) КАК Ост_Кол,
	|	СУММА(Ост77.Ост_Сум) КАК Ост_Сум
	|
	|ПОМЕСТИТЬ ТоварыНаСкладах_77_св_vmi_фрм
	|ИЗ
	|	ТоварыНаСкладах_77_св_vmi как Ост77
	|
	|СГРУППИРОВАТЬ ПО
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод,
	|	Ост77.ПартияID,
	|	Ост77.Партия_Ссылка,
	|	Ост77.ПартияКод
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод,
	|	СУММА(Ост77.Ост_Кол) КАК Ост_Кол_77
	|
	|ПОМЕСТИТЬ ТоварыНаСкладах_77
	|ИЗ
	|	ТоварыНаСкладах_77_св_vmi_фрм как Ост77
	|
	|СГРУППИРОВАТЬ ПО
	|	Ост77.Тов_Ссылка,
	|	Ост77.ТовКод,
	|	Ост77.Склад_Ссылка,
	|	Ост77.СкладКод
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Склад КАК МХ,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Ост_Кол_83
	|ПОМЕСТИТЬ ТоварыНаСкладах_83
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДтВрм, ) КАК ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ

	|	ТЗ_77.Тов_Ссылка,
	|	ТЗ_77.ТовКод,
	|	ТЗ_77.Склад_Ссылка,
	|	ТЗ_77.СкладКод,
	|	ЕСТЬNULL(ТЗ_77.Ост_Кол_77,0) КАК Ост_Кол_77,	
	
	|   ТЗ_83.Номенклатура,
	|   ТЗ_83.МХ,
	|   ЕСТЬNULL(ТЗ_83.Ост_Кол_83,0) КАК Ост_Кол_83,
	|
	|	ЕСТЬNULL(ТЗ_77.Ост_Кол_77,0) - ЕСТЬNULL(ТЗ_83.Ост_Кол_83,0) КАК Ост_Дельта
	|
	|ПОМЕСТИТЬ ТоварыНаСкладах_77_83_Расхождения 
	|ИЗ
	|	ТоварыНаСкладах_77 КАК ТЗ_77
	|	ПОЛНОЕ СОЕДИНЕНИЕ ТоварыНаСкладах_83 КАК ТЗ_83
	|	ПО ТЗ_77.Склад_Ссылка = ТЗ_83.МХ И ТЗ_77.Тов_Ссылка = ТЗ_83.Номенклатура
	|
	|ГДЕ
	|	ЕСТЬNULL(ТЗ_77.Ост_Кол_77,0) - ЕСТЬNULL(ТЗ_83.Ост_Кол_83,0) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если Вход_СравнитьПартии тогда 
		
		Запрос_Текст = Запрос_Текст + Символы.ПС +
		
		"ВЫБРАТЬ
		|	ПартииТоваровОстатки.Организация КАК Фирма,
		|	ПартииТоваровОстатки.Склад КАК МХ,
		|	ПартииТоваровОстатки.Номенклатура,
		|	ПартииТоваровОстатки.СтрокаПрихода КАК Партия,
		|	СУММА(ПартииТоваровОстатки.КоличествоОстаток) КАК Ост_Кол_83,
		|	СУММА(ПартииТоваровОстатки.СуммаРублиОстаток) КАК Сум_Кол_83
		|ПОМЕСТИТЬ ПартииТоваров_83
		|ИЗ
		|	РегистрНакопления.ПартииТоваров.Остатки(&ДтВрм, ) КАК ПартииТоваровОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровОстатки.Организация,
		|	ПартииТоваровОстатки.Склад,
		|	ПартииТоваровОстатки.Номенклатура,
		|	ПартииТоваровОстатки.СтрокаПрихода
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПартииТоваровVMIОстатки.Склад КАК МХ,
		|	ПартииТоваровVMIОстатки.Номенклатура,
		|	ПартииТоваровVMIОстатки.СтрокаПрихода КАК Партия,
		//|	ПартииТоваровVMIОстатки.ТорговаяТочка КАК Поставщик,
		|	СУММА(ПартииТоваровVMIОстатки.КоличествоОстаток) КАК Ост_Кол_83,
		|	СУММА(ПартииТоваровVMIОстатки.СуммаРублиОстаток) КАК Сум_Кол_83
		|ПОМЕСТИТЬ ПартииТоваров_83_VMI
		|ИЗ
		|	РегистрНакопления.ПартииТоваровVMI.Остатки(&ДтВрм, ) КАК ПартииТоваровVMIОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровVMIОстатки.Склад,
		|	ПартииТоваровVMIОстатки.Номенклатура,
		|	ПартииТоваровVMIОстатки.СтрокаПрихода
		//|	ПартииТоваровVMIОстатки.ТорговаяТочка
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПартииТоваровУпрОстатки.Склад КАК МХ,
		|	ПартииТоваровУпрОстатки.Номенклатура,
		|	ПартииТоваровУпрОстатки.СтрокаПрихода КАК Партия,
		|	СУММА(ПартииТоваровУпрОстатки.КоличествоОстаток) КАК Ост_Кол_83,
		|	СУММА(ПартииТоваровУпрОстатки.СуммаРублиОстаток) КАК Сум_Кол_83
		|ПОМЕСТИТЬ ПартииТоваров_83_неVMI
		|ИЗ
		|	РегистрНакопления.ПартииТоваровУпр.Остатки(&ДтВрм, ) КАК ПартииТоваровУпрОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровУпрОстатки.Склад,
		|	ПартииТоваровУпрОстатки.Номенклатура,
		|	ПартииТоваровУпрОстатки.СтрокаПрихода
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Т77.*,
		|	Т83.*,
		
		|	Т83.Номенклатура,
		|	Т83.МХ,
		|	Т83.Партия,
		
		|	ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_83,
		|	ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Сум_Кол_83, 
		
		|	ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_Дельта,
		|	ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Ост_Сум_Дельта
		
		|ИЗ 
		|	ТоварыНаСкладах_77_св_vmi_фрм КАК Т77
		|	ПОЛНОЕ СОЕДИНЕНИЕ ПартииТоваров_83_VMI КАК Т83
		|		ПО Т77.Тов_Ссылка = Т83.Номенклатура И 
		|		   Т77.Склад_Ссылка = Т83.МХ И  
		|		   Т77.ПартияID = Т83.Партия.ИдентификаторПартии77
		|
		|ГДЕ
		|	Т77.ПартияID В (выбрать РАЗЛИЧНЫЕ ПартияID из ПартииНаСкладах_77 где VMI = 1) И (
		|	(ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) <> 0)	ИЛИ
		|	(ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) <> 0)        )
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Т77.*,
		|	Т83.*,
		
		|	Т83.Номенклатура,
		|	Т83.МХ,
		|	Т83.Партия,
		
		|	ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_83,
		|	ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Сум_Кол_83, 
		
		|	ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_Дельта,
		|	ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Ост_Сум_Дельта
		
		|ИЗ 
		|	ТоварыНаСкладах_77_св_vmi_фрм КАК Т77
		|	ПОЛНОЕ СОЕДИНЕНИЕ ПартииТоваров_83_неVMI КАК Т83
		|		ПО Т77.Тов_Ссылка = Т83.Номенклатура И 
		|		   Т77.Склад_Ссылка = Т83.МХ И  
		|		   Т77.ПартияID = Т83.Партия.ИдентификаторПартии77
		|
		|ГДЕ
		|	Т77.ПартияID В (выбрать РАЗЛИЧНЫЕ ПартияID из ПартииНаСкладах_77 где VMI = 0) И (
		|	(ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) <> 0)	ИЛИ
		|	(ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) <> 0)        )
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Т77.Тов_Ссылка,
		|	Т77.ТовКод,
		|	Т77.Фирма_Ссылка,
		|	Т77.ФирмаКод,
		|	Т77.Склад_Ссылка,
		|	Т77.СкладКод,
		|	Т77.ПартияID,
		|	Т77.Партия_Ссылка,
		|	Т77.ПартияКод,
		
		|	ЕСТЬNULL(Т77.Ост_Кол,0) КАК Ост_Кол_77,
		|	ЕСТЬNULL(Т77.Ост_Сум,0) КАК Ост_Сум_77,
		
		|	Т83.Номенклатура,
		|	Т83.Фирма,
		|	Т83.МХ,
		|	Т83.Партия,
		
		|	ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_83,
		|	ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Сум_Кол_83, 
		
		|	ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) КАК Ост_Кол_Дельта,
		|	ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) КАК Ост_Сум_Дельта
		
		|ИЗ 
		|	ТоварыНаСкладах_77_св_vmi КАК Т77
		|	ПОЛНОЕ СОЕДИНЕНИЕ ПартииТоваров_83 КАК Т83
		|		ПО Т77.Тов_Ссылка = Т83.Номенклатура И 
		|		   Т77.Фирма_Ссылка = Т83.Фирма И 
		|		   Т77.Склад_Ссылка = Т83.МХ И  
		|		   Т77.ПартияID = Т83.Партия.ИдентификаторПартии77
		|
		|ГДЕ
		|	(ЕСТЬNULL(Т77.Ост_Кол,0) - ЕСТЬNULL(Т83.Ост_Кол_83,0) <> 0)	ИЛИ
		|	(ЕСТЬNULL(Т77.Ост_Сум,0) - ЕСТЬNULL(Т83.Сум_Кол_83,0) <> 0)
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	КонецЕсли;
	
	
	Запрос_Текст = Запрос_Текст + Символы.ПС + 
	"ВЫБРАТЬ *
    |
	|ИЗ 
	|	ТоварыНаСкладах_77_83_Расхождения
	|";
	
	
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("тзДанные77_Остатки", ТабличноеПоле25 );
	Запрос.УстановитьПараметр("ДтВрм", ПравилаИгры.ДтПоУмолчанию );
	
	Результат = Запрос.ВыполнитьПакет();
	Результат_Кол = Результат.Количество();
	
	ПравилаИгры.Вставить("ТабличноеПоле26",Результат[Результат_Кол - 1].Выгрузить());
	Если Вход_СравнитьПартии тогда 
		ПравилаИгры.Вставить("ТабличноеПоле27",Результат[Результат_Кол - 2].Выгрузить());
		ПравилаИгры.Вставить("ТабличноеПоле28",Результат[Результат_Кол - 3].Выгрузить());
		ПравилаИгры.Вставить("ТабличноеПоле29",Результат[Результат_Кол - 4].Выгрузить());
	КонецЕсли;
	
	Возврат ПравилаИгры;
КонецФункции
Функция Опросить8_СверитьТоварыНаСкладахИПартии() экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ Ост
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДтВрм, ) КАК ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОстатки.Номенклатура,
	|	ПартииТоваровОстатки.Склад,
	|	СУММА(ПартииТоваровОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ Парт
	|ИЗ
	|	РегистрНакопления.ПартииТоваров.Остатки(&ДтВрм, ) КАК ПартииТоваровОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровОстатки.Номенклатура,
	|	ПартииТоваровОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ост.Номенклатура КАК ТовОст,
	|	Ост.Склад КАК СклОст,
	|	ЕСТЬNULL(Ост.КоличествоОстаток, 0) КАК КолОст,
	|	Парт.Номенклатура КАК ТовПарт,
	|	Парт.Склад КАК СклПарт,
	|	ЕСТЬNULL(Парт.КоличествоОстаток, 0) КАК КолПарт,
	|	ЕСТЬNULL(Ост.КоличествоОстаток, 0) - ЕСТЬNULL(Парт.КоличествоОстаток, 0) КАК Дельта,
	|	1 КАК Сч
	|ПОМЕСТИТЬ Разн
	|ИЗ
	|	Ост КАК Ост
	|		ПОЛНОЕ СОЕДИНЕНИЕ Парт КАК Парт
	|		ПО Ост.Номенклатура = Парт.Номенклатура
	|			И Ост.Склад = Парт.Склад
	|ГДЕ
	|	НЕ ЕСТЬNULL(Ост.КоличествоОстаток, 0) - ЕСТЬNULL(Парт.КоличествоОстаток, 0) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОбороты.Номенклатура,
	|	ТоварыНаСкладахОбороты.Склад,
	|	СУММА(ТоварыНаСкладахОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ТоварыНаСкладахОбороты.КоличествоРасход) КАК КоличествоРасход
	|ПОМЕСТИТЬ ОстОбороты
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(&ДтВрмНачало, &ДтВрм, Регистратор, ) КАК ТоварыНаСкладахОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОбороты.Номенклатура,
	|	ТоварыНаСкладахОбороты.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОбороты.Номенклатура,
	|	ПартииТоваровОбороты.Склад,
	|	СУММА(ПартииТоваровОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ПартииТоваровОбороты.КоличествоРасход) КАК КоличествоРасход
	|ПОМЕСТИТЬ ПартОбороты
	|ИЗ
	|	РегистрНакопления.ПартииТоваров.Обороты(&ДтВрмНачало, &ДтВрм, Регистратор, ) КАК ПартииТоваровОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровОбороты.Номенклатура,
	|	ПартииТоваровОбороты.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстОбороты.Номенклатура КАК ТовОст,
	|	ОстОбороты.Склад КАК СклОст,
	|	ЕСТЬNULL(ОстОбороты.КоличествоПриход, 0) КАК ПриходОст,
	|	ЕСТЬNULL(ОстОбороты.КоличествоРасход, 0) КАК РасходОст,
	|	ПартОбороты.Номенклатура КАК ТовПарт,
	|	ПартОбороты.Склад КАК СклПарт,
	|	ЕСТЬNULL(ПартОбороты.КоличествоПриход, 0) КАК ПриходПарт,
	|	ЕСТЬNULL(ПартОбороты.КоличествоРасход, 0) КАК РасходПарт,
	|	ЕСТЬNULL(ОстОбороты.КоличествоПриход, 0) - ЕСТЬNULL(ПартОбороты.КоличествоПриход, 0) КАК ДельтаПриход,
	|	ЕСТЬNULL(ОстОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ПартОбороты.КоличествоРасход, 0) КАК ДельтаРасход,
	|	1 КАК Сч
	|ПОМЕСТИТЬ РазнОбороты
	|ИЗ
	|	ОстОбороты КАК ОстОбороты
	|		ПОЛНОЕ СОЕДИНЕНИЕ ПартОбороты КАК ПартОбороты
	|		ПО ОстОбороты.Номенклатура = ПартОбороты.Номенклатура
	|			И ОстОбороты.Склад = ПартОбороты.Склад
	|ГДЕ
	|	(НЕ ЕСТЬNULL(ОстОбороты.КоличествоПриход, 0) - ЕСТЬNULL(ПартОбороты.КоличествоПриход, 0) = 0
	|			ИЛИ НЕ ЕСТЬNULL(ОстОбороты.КоличествоРасход, 0) - ЕСТЬNULL(ПартОбороты.КоличествоРасход, 0) = 0)
	|;
	|
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Разн.ТовОст.Код КАК ТовОстКод,
	|	Разн.ТовОст,
	|	Разн.СклОст,
	|	Разн.КолОст,
	|	Разн.ТовПарт.Код КАК ТовПартКод,
	|	Разн.ТовПарт,
	|	Разн.СклПарт,
	|	Разн.КолПарт,
	|	Разн.Дельта,
	|	Разн.Сч
	//|ПОМЕСТИТЬ РазнПоТовару
	|ИЗ
	|	Разн КАК Разн
	//|ГДЕ
	//|	Разн.ТовОст.Код = &Код
	//|	ИЛИ Разн.ТовПарт = &Код
	|;
	|	
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазнОбороты.ТовОст.Код КАК ТовОстКод,
	|	РазнОбороты.ТовОст,
	|	РазнОбороты.СклОст,
	|	РазнОбороты.ПриходОст,
	|	РазнОбороты.РасходОст,
	|	РазнОбороты.ТовПарт.Код КАК ТовПартКод,
	|	РазнОбороты.ТовПарт,
	|	РазнОбороты.СклПарт,
	|	РазнОбороты.ПриходПарт,
	|	РазнОбороты.РасходПарт,
	|	РазнОбороты.ДельтаПриход,
	|	РазнОбороты.ДельтаРасход,
	|	РазнОбороты.Сч
	//|ПОМЕСТИТЬ РазнОборотыПоТовару
	|ИЗ
	|	РазнОбороты КАК РазнОбороты
	//|ГДЕ
	//|	РазнОбороты.ТовОст.Код = &Код
	//|	ИЛИ РазнОбороты.ТовПарт = &Код
	
	//|;
	//|	
	//|	
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	""Итоги сравнения по остаткам на "" КАК Комент,
	//|	&ДтВрм КАК ДтВрм,
	//|	СУММА(Разн.Сч) КАК КоличествоРасхождений
	//|ИЗ
	//|	Разн КАК Разн
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	""Итоги сравнения по оборотам с "",
	//|	&ДтВрмНачало,
	//|	СУММА(Разн.Сч)
	//|ИЗ
	//|	РазнОбороты КАК Разн
	|
	|";

	Запрос.УстановитьПараметр("ДтВрм", ПравилаИгры.КонПериода);
	Запрос.УстановитьПараметр("ДтВрмНачало", ПравилаИгры.НачПериода);
	//Запрос.УстановитьПараметр("Код", );
	Результат = Запрос.ВыполнитьПакет();	
	Результат_Кол = Результат.Количество();
	
	РазнПоТовару = Результат[Результат_Кол - 2].Выгрузить();
	РазнОборотыПоТовару = Результат[Результат_Кол - 1].Выгрузить();
	
	ПравилаИгры.Вставить("ТабличноеПоле45",РазнПоТовару);
	ПравилаИгры.Вставить("ТабличноеПоле46",РазнОборотыПоТовару);
	
	Возврат ПравилаИгры;
КонецФункции

Процедура Опросить8_Заказы() 
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 2 сравниваем данные 7 и 8 ");	
	
	ТабличноеПоле30 = ПравилаИгры.ТабличноеПоле30;
	ТабличноеПоле30_Количество = ТабличноеПоле30.Количество();
	ТабличноеПоле30_Колонки_Количество = ТабличноеПоле30.Колонки.Количество();
	Если ТабличноеПоле30_Количество = 0 тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос_Текст = 
	"ВЫБРАТЬ";
	
	Для uioiu = 0 по 80 цикл //ТабличноеПоле30_Колонки_Количество - 1 цикл 
		Запрос_Текст = Запрос_Текст + Символы.ПС + "ТЗ1.p" + СокрЛП(uioiu) + ",";
	КонецЦикла;
	Запрос_Текст = Запрос_Текст + Символы.ПС + "
	|ТЗ1.Заказ,
	|ТЗ1.Корректировка,
	|ТЗ1.Док8,
	|ТЗ1.ТТ,
	|ТЗ1.Контрагент,
	|ТЗ1.Номенклатура,
	|ТЗ1.ЕИ,
	|ТЗ1.Док8Номер,
	|ТЗ1.МХ,";
	Запрос_Текст = Запрос_Текст + Символы.ПС + "1 КАК Сч
	|ПОМЕСТИТЬ Заказы_77
	|ИЗ
	|	&тзДанные77_Заказы КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Заказ,
	|	ЗаказПоставщику.Контрагент,
	|	ЗаказПоставщику.ДоговорКонтрагента,
	|	_ДляПереносаДанных.Строка77,
	|	ЗаказПоставщику.ТорговаяТочка,
	|	ЗаказПоставщику.Организация,
	|	ЗаказПоставщику.Комментарий,
	|	ЗаказПоставщику.Склад,
	|	ЗаказПоставщику.ВалютаДокумента,
	|	ЗаказПоставщику.КратностьВзаиморасчетов,
	|	ЗаказПоставщику.КурсВзаиморасчетов,
	|	ЗаказПоставщику.СтатусДокумента,
	|	ЗаказПоставщику.ТипЦен,
	|	ЗаказПоставщику.СуммаВключаетНДС,
	|	ЗаказПоставщику.СуммаДокумента,
	|	ЗаказПоставщику.УчитыватьНДС,
	|	ЗаказПоставщику.Менеджер,
	|	ЗаказПоставщику.Филиал,
	|	
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.ЕдиницаИзмерения,
	|	ЗаказПоставщикуТовары.Количество,
	|	ЗаказПоставщикуТовары.Цена,
	|	ЗаказПоставщикуТовары.Сумма,
	|	ЗаказПоставщикуТовары.Коэффициент,
	|	ЗаказПоставщикуТовары.СтавкаНДС,
	|	ЗаказПоставщикуТовары.СуммаНДС,
	|	ЗаказПоставщикуТовары.СрокГарантированныйЗаказа,
	|	ЗаказПоставщикуТовары.СрокОжидаемыйЗаказа,
	|	ЗаказПоставщикуТовары.СтрокаЗаказа,
	|	
	|	ЗаказПоставщикуТовары.СтрокаЗаявки,
	|	ЗаказПоставщикуТовары.СтрокаЗаявки.Заявка,
	|	ЗаказПоставщикуТовары.СтрокаЗаявки.IDSite КАК IDSite
	|	
	|ПОМЕСТИТЬ Заказы_83
	|	
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ПО ЗаказПоставщикуТовары.Ссылка = ЗаказПоставщику.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ДляПереносаДанных КАК _ДляПереносаДанных
	|		ПО ЗаказПоставщику.ДоговорКонтрагента = _ДляПереносаДанных.Объект
	
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка В(&СпсЗаказов)
	|	И ЗаказПоставщику.Проведен = Истина
	|
	|	
	|ОБЪЕДИНИТЬ ВСЕ	
	|	
	|
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Заказ,
	|	ЗаказПоставщику.Контрагент,
	|	ЗаказПоставщику.ДоговорКонтрагента,
	|	_ДляПереносаДанных.Строка77,
	|	ЗаказПоставщику.ТорговаяТочка,
	|	ЗаказПоставщику.Организация,
	|	ЗаказПоставщику.Комментарий,
	|	ЗаказПоставщику.Склад,
	|	ЗаказПоставщику.ВалютаДокумента,
	|	ЗаказПоставщику.КратностьВзаиморасчетов,
	|	ЗаказПоставщику.КурсВзаиморасчетов,
	|	ЗаказПоставщику.СтатусДокумента,
	|	ЗаказПоставщику.ТипЦен,
	|	ЗаказПоставщику.СуммаВключаетНДС,
	|	ЗаказПоставщику.СуммаДокумента,
	|	ЗаказПоставщику.УчитыватьНДС,
	|	ЗаказПоставщику.Менеджер,
	|	ЗаказПоставщику.Филиал,
	|	
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.ЕдиницаИзмерения,
	|	ЗаказПоставщикуТовары.Количество,
	|	ЗаказПоставщикуТовары.Цена,
	|	ЗаказПоставщикуТовары.Сумма,
	|	ЗаказПоставщикуТовары.Коэффициент,
	|	ЗаказПоставщикуТовары.СтавкаНДС,
	|	ЗаказПоставщикуТовары.СуммаНДС,
	|	ЗаказПоставщикуТовары.СрокГарантированныйЗаказа,
	|	ЗаказПоставщикуТовары.СрокОжидаемыйЗаказа,
	|	ЗаказПоставщикуТовары.СтрокаЗаказа,
	|	
	|	ЗаказПоставщикуТовары.СтрокаЗаявки,
	|	ЗаказПоставщикуТовары.СтрокаЗаявки.Заявка,
	|	ЗаказПоставщикуТовары.СтрокаЗаявки.IDSite КАК IDSite
	|ИЗ
	|	Документ.КорректировкаЗаказаПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаПоставщику КАК ЗаказПоставщику
	|		ПО ЗаказПоставщикуТовары.Ссылка = ЗаказПоставщику.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ДляПереносаДанных КАК _ДляПереносаДанных
	|		ПО ЗаказПоставщику.ДоговорКонтрагента = _ДляПереносаДанных.Объект
	
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка В(&СпсКорректировок)
	|	И ЗаказПоставщику.Проведен = Истина
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗП77.*,
	|	ЗП83.*,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.Контрагент =  ЗП83.Контрагент ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Контра,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p6 =  ВЫРАЗИТЬ(ЗП83.Контрагент.Наименование  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Контра_Наименование,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p7 =  ВЫРАЗИТЬ(ЗП83.Контрагент.Код  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Контра_Код,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.ТТ =  ЗП83.ТорговаяТочка ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_ТТ,
	
	
	//|	,DH.SP2720 as Ш_Договор          --|C   |9     |0                                              -- p10
	//|	,RefD.SP13669 as Ш_Договор_uid                                                                 -- p11
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p11 =  ВЫРАЗИТЬ(ЗП83.Строка77  КАК Строка(36)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Договор,
	//|	,RefD.DESCR as Ш_Договор_Нм                                                                    -- p12
	//|	,RefD.SP10485 as Ш_Договор_Номер                                                               -- p13
	//|	,RefD.SP10486 as Ш_Договор_Дата                                                                -- p14
	//|	,RefD.SP10548 as Ш_Договор_ПродажаЗакупка                                                      -- p15
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p15 > 0 И ЗП83.ДоговорКонтрагента.ВидДоговора = Значение(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ТОГДА 0
	|	 	КОГДА ЗП77.p15 > 0 И ЗП83.ДоговорКонтрагента.ВидДоговора = Значение(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Договор_ВидДоговора,
	//|	,RefD.SP12635 as Ш_Договор_флОферта                                                            -- p16
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p16 = 1 И ЗП83.ДоговорКонтрагента.ДоговорНаОферту = Истина ТОГДА 0
	|	 	КОГДА ЗП77.p16 = 0 И ЗП83.ДоговорКонтрагента.ДоговорНаОферту = Ложь   ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Договор_флОферта,
	
	//|	,ISNULL(СпрФирмы.DESCR, '') As Ш_Договор_СпрФирмы_Стр                                          -- p17
	//|	,ISNULL(dbo.AddToPrefixStr(СпрФирмы.code,'',9), '') As Ш_Договор_СпрФирмы_код                  -- p18
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p18 =  ВЫРАЗИТЬ(ЗП83.Организация.Код  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Организация_Код,
	//|	,ISNULL(СпрФирмы2.DESCR, '') As Ш_СпрФирмы_Стр                                                 -- p19
	//|	,ISNULL(dbo.AddToPrefixStr(СпрФирмы2.code,'',9), '') As Ш_СпрФирмы_код                         -- p20
	//|	,ISNULL(LOWER (idФирмы._Id), '')  As Ш_СпрФирмы_uid                                            -- p21
	//|	,СпрЮрЛицо.DESCR as Ш_СпрЮрЛицо_стр                                                            -- p22
	//|	,СпрЮрЛицо.SP664 as Ш_СпрЮрЛицо_ОфициальноеНаимен                                              -- p23
	
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p36 =  ВЫРАЗИТЬ(ЗП83.Комментарий  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Комент,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.МХ =  ЗП83.Склад ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Склад,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p25 =  ВЫРАЗИТЬ(ЗП83.Склад.Наименование  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Склад_Наименование,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p26 =  ВЫРАЗИТЬ(ЗП83.Склад.Код  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Склад_Код,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p29 =  ВЫРАЗИТЬ(ЗП83.ВалютаДокумента.Наименование  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Валюта_Наименование,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p31 =  ЗП83.КурсВзаиморасчетов ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_КурсВзаиморасчетов,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p34 =  ЗП83.СуммаДокумента ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_СуммаДокумента,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p32 = 1 И ЗП83.УчитыватьНДС = Истина ТОГДА 0
	|	 	КОГДА ЗП77.p32 = 0 И ЗП83.УчитыватьНДС = Ложь   ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_УчитыватьНДС,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p33 = 1 И ЗП83.СуммаВключаетНДС = Истина ТОГДА 0
	|	 	КОГДА ЗП77.p33 = 0 И ЗП83.СуммаВключаетНДС = Ложь   ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_СуммаВклНДС,
	
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.Номенклатура =  ЗП83.Номенклатура ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p51 =  ВЫРАЗИТЬ(ЗП83.Номенклатура.Наименование  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов_Наименование,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p52 =  ВЫРАЗИТЬ(ЗП83.Номенклатура.Код  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов_Код,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p53 =  ВЫРАЗИТЬ(ЗП83.Номенклатура.Артикул  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Тов_Артикул,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p56 =  ВЫРАЗИТЬ(ЗП83.ЕдиницаИзмерения.Наименование  КАК Строка(100)) ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_ЕИ_Наименование,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.ЕИ =  ЗП83.ЕдиницаИзмерения ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_ЕИ,
	
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p59 =  ЗП83.Количество ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Кол,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p60 =  ЗП83.Коэффициент ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Коэф,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p61 =  ЗП83.Цена ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Цена,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p62 =  ЗП83.Сумма ТОГДА 0
	|	ИНАЧЕ 1
	|		КОНЕЦ КАК Сч_Сумма,
	|	ВЫБОР 
	|	 	КОГДА ЗП77.p64 =  ЗП83.СуммаНДС ТОГДА 0
	|	ИНАЧЕ 0 
	|		КОНЕЦ КАК Сч_СуммаНДС,
	
	|	1 КАК Сч
	
	|ПОМЕСТИТЬ Заказы7783
	|ИЗ
	|	Заказы_77 КАК ЗП77
	|		ПОЛНОЕ СОЕДИНЕНИЕ Заказы_83 КАК ЗП83
	|		ПО  ЗП77.Док8 = ЗП83.Заказ
	|		 И  ЗП77.p44 = ЗП83.IDSite
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заказы7783
	|ГДЕ  
	
	|   	Сч_ТТ > 0 ИЛИ Сч_Контра > 0
	//ИЛИ Сч_Контра_Наименование > 0 ИЛИ Сч_Контра_Код > 0
	|   ИЛИ Сч_Договор > 0 ИЛИ	Сч_Договор_ВидДоговора > 0 
	//ИЛИ Сч_Договор_флОферта > 0   ИЛИ Сч_Организация_Код > 0
	|	ИЛИ Сч_Склад > 0 
	//ИЛИ	Сч_Склад_Наименование > 0 ИЛИ Сч_Склад_Код > 0 
	|   ИЛИ Сч_Тов > 0 
	//ИЛИ Сч_Тов_Артикул > 0 ИЛИ Сч_Тов_Код > 0 ИЛИ Сч_Тов_Наименование > 0
	|   ИЛИ Сч_ЕИ > 0  
	//ИЛИ Сч_ЕИ_Наименование > 0 
	|	ИЛИ Сч_Кол > 0 ИЛИ Сч_Коэф > 0 ИЛИ	Сч_Цена > 0 ИЛИ Сч_Сумма > 0
	|   ИЛИ Сч_СуммаНДС > 0
	|   ИЛИ Сч_СуммаДокумента > 0  
	|   ИЛИ Сч_УчитыватьНДС  > 0 
	|   ИЛИ Сч_СуммаВклНДС  > 0
	|   ИЛИ Сч_КурсВзаиморасчетов  > 0
	|   ИЛИ Сч_Валюта_Наименование > 0
	//|	ИЛИ	Сч_Комент > 0
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ неКОСЯКИ
	|ИЗ
	|	Заказы7783
	|ГДЕ  
	
	|   	Сч_ТТ = 0 и Сч_Контра = 0 
	//и Сч_Контра_Наименование = 0 и Сч_Контра_Код = 0
	|   и Сч_Договор = 0 и	Сч_Договор_ВидДоговора = 0 
	//и Сч_Договор_флОферта = 0   и Сч_Организация_Код = 0
	|	 и Сч_Склад = 0   
	//и	Сч_Склад_Наименование = 0 и Сч_Склад_Код = 0
	|   и Сч_Тов = 0 
	//и Сч_Тов_Артикул = 0 и Сч_Тов_Код = 0 и Сч_Тов_Наименование = 0
	|   и Сч_ЕИ = 0 
	//и Сч_ЕИ_Наименование = 0 
	|	и Сч_Кол = 0 и Сч_Коэф = 0 и	Сч_Цена = 0 и Сч_Сумма = 0
	|   и Сч_СуммаНДС = 0
	|   и Сч_СуммаДокумента = 0  
	|   и Сч_УчитыватьНДС  = 0 
	|   и Сч_СуммаВклНДС  = 0
	|   и Сч_КурсВзаиморасчетов  = 0
	|   и Сч_Валюта_Наименование = 0
	//|	и	Сч_Комент = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ИЗ
	|	Заказы7783 КАК Заказы7783
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	КОСЯКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   совпадения.p0
	|,  совпадения.Док8
	|,  совпадения.Заказ1
	|ИЗ
	|	неКОСЯКИ как совпадения
	//|ГДЕ
	//|	НЕ совпадения.p0 В (выбрать РАЗЛИЧНЫЕ p0 из косяки)
	//|	НЕ совпадения.Заказ1 В (выбрать РАЗЛИЧНЫЕ Заказ1 из косяки)
	//|   НЕ совпадения.IDSite В (выбрать косяки.IDSite из косяки)
	//| И НЕ совпадения.Док8 В (выбрать РАЗЛИЧНЫЕ Док8 из косяки)
	//| И НЕ Заказы7783.p44 В (выбрать косяки.p44 из косяки)
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	неКОСЯКИ
	//|ГДЕ
	////|	НЕ Заказы7783.Заказ1 В (выбрать косяки.Заказ1 из косяки)
	//|   НЕ Заказы7783.IDSite В (выбрать косяки.IDSite из косяки)
	////| И НЕ Заказы7783.Док8 В (выбрать косяки.Док8 из косяки)
	//| И НЕ Заказы7783.p44 В (выбрать косяки.p44 из косяки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   p0,
	|	Заказ
	
	|ИЗ
	|	неКОСЯКИ
	|ГДЕ
	|	Заказ ССЫЛКА Документ.ЗаказПоставщику
	//| И	НЕ Заказ1 В (выбрать РАЗЛИЧНЫЕ Заказ1 из косяки)
	//| И НЕ Док8 В (выбрать РАЗЛИЧНЫЕ Док8 из косяки)
	
	|";
	
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("тзДанные77_Заказы",ТабличноеПоле30);
	Запрос.УстановитьПараметр("СпсЗаказов",  ПравилаИгры.ТабличноеПоле31.ВыгрузитьКолонку("Заказ"));
	Запрос.УстановитьПараметр("СпсКорректировок",  ПравилаИгры.ТабличноеПоле31.ВыгрузитьКолонку("Корректировка"));
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Если РезультатОпроса_Количество > 0 тогда
		
		КорниЗаказов = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить(); 
		Совпаденния = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
		Регистраторы = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
		КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 4].Выгрузить();
		
		//Сообщить(СокрЛП(Совпаденния.Количество()));
		//Совпаденния.ВыбратьСтроку();
		//Сообщить(СокрЛП(КОСЯКИ.Количество()));
		//КОСЯКИ.ВыбратьСтроку();
		//всяёбань = РезультатОпроса[РезультатОпроса_Количество - 5].Выгрузить();
		//всяёбань.ВыбратьСтроку();
		
		ПравилаИгры.Вставить("ТабличноеПоле32",Совпаденния); //Совпаденния
		ПравилаИгры.Вставить("ТабличноеПоле33",КОСЯКИ);
		ПравилаИгры.Вставить("ТабличноеПоле34",Регистраторы);
		
		ТабличноеПоле10 = КОСЯКИ.Скопировать();
		ТабличноеПоле10.свернуть("Док8,p0,Заказ1","Сч");
		ПравилаИгры.Вставить("ТабличноеПоле35",ТабличноеПоле10);
		
		//Сообщить("ТабличноеПоле30 = " + СокрлП(ТабличноеПоле30.Количество()));
		//Сообщить("ТабличноеПоле31 = " + СокрлП(ПравилаИгры.ТабличноеПоле31.Количество()));
		//Сообщить("всяёбань = " + СокрлП(всяёбань.Количество()));
		//Сообщить("Совпаденния = " + СокрлП(Совпаденния.Количество()));
		//Сообщить("Регистраторы = " + СокрлП(Регистраторы.Количество()));
		//Сообщить("КОСЯКИ = " + СокрлП(КОСЯКИ.Количество()));
		//Сообщить("ТабличноеПоле10 = " + СокрлП(ТабличноеПоле10.Количество()));
		
		//ТабличноеПоле101 = Совпаденния.Скопировать();
		//ТабличноеПоле101.свернуть("Заказ,p0","Сч");
		ПравилаИгры.Вставить("ТабличноеПоле36",КорниЗаказов);
		
	КонецЕсли;
	
КонецПроцедуры	
Процедура Опросить8_ДвиженияПоКорневымЗаказам()
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 5 сравниваем данные 7 и 8 по движениям корневых заказов ");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.p0,
	|	ТЗ1.p1,
	|	ТЗ1.p2,
	
	//|	ТЗ1.p3 КАК Номенклатура,
	//|	ТЗ1.p4 КАК Номенклатура_uid,
	
	//|	ТЗ1.p5 КАК Фирма_id,
	//|	ТЗ1.p6 КАК Фирма_uid,
	
	//|	ТЗ1.p7 КАК Договор_id,
	
	//|	ТЗ1.p9 КАК ЗаказПоставщику,
	
	|	ТЗ1.Номенклатура КАК Тов,
	|	ТЗ1.Фирма КАК Фрм,
	|	ТЗ1.p8 КАК Договор_uid7,
	|	ТЗ1.Регистратор КАК ЗП,
	
	|	ТЗ1.p10 КАК КолПрих,
	|	ТЗ1.p11 КАК КолРасх,
	|	ТЗ1.p12 КАК СумПрих,
	|	ТЗ1.p13 КАК СумРасх
	
	|ПОМЕСТИТЬ Заказы_77
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОбороты.Номенклатура,
	|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента,
	|	ЗаказыПоставщикамОбороты.Регистратор,
	|	СУММА(ЗаказыПоставщикамОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ЗаказыПоставщикамОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглПриход) КАК СуммаРеглПриход,
	|	СУММА(ЗаказыПоставщикамОбороты.СуммаРеглРасход) КАК СуммаРеглРасход
	|ПОМЕСТИТЬ Заказы_83
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ) КАК ЗаказыПоставщикамОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОбороты.Регистратор В (&РегистраторыСпс)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОбороты.Номенклатура,
	|	ЗаказыПоставщикамОбороты.ДоговорКонтрагента,
	|	ЗаказыПоставщикамОбороты.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы_83.Номенклатура,
	|	Заказы_83.ДоговорКонтрагента.Организация КАК Фирма,
	|	Заказы_83.ДоговорКонтрагента,
	|	_ДляПереносаДанных.Строка77 КАК ДоговорКонтрагента_uid7,
	|	Заказы_83.Регистратор,
	|	Заказы_83.КоличествоПриход,
	|	Заказы_83.КоличествоРасход,
	|	Заказы_83.СуммаРеглПриход,
	|	Заказы_83.СуммаРеглРасход
	|ПОМЕСТИТЬ Заказы_833
	|ИЗ
	|	Заказы_83 КАК Заказы_83
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ДляПереносаДанных КАК _ДляПереносаДанных
	|		ПО Заказы_83.ДоговорКонтрагента = _ДляПереносаДанных.Объект
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы_77.*,
	|	Заказы_833.*,
	|
	
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.ЗП = Заказы_833.Регистратор ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Регистратор,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Тов = Заказы_833.Номенклатура ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Номенклатура,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Договор_uid7 = Заказы_833.ДоговорКонтрагента_uid7 ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_ДоговорКонтрагента_uid7,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Фрм = Заказы_833.Фирма ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Фирма,
	
	
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.КолПрих = Заказы_833.КоличествоПриход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоПриход,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.КолРасх = Заказы_833.КоличествоРасход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоРасход,
	
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.СумПрих = Заказы_833.СуммаРеглПриход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_СуммаРеглПриход,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.СумРасх = Заказы_833.СуммаРеглРасход ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_СуммаРеглРасход,
	
	|	1 КАК Сч
	
	|ПОМЕСТИТЬ Заказы7783
	|ИЗ
	|	Заказы_77 КАК Заказы_77
	|		ПОЛНОЕ СОЕДИНЕНИЕ Заказы_833 КАК Заказы_833
	|		ПО  Заказы_77.ЗП = Заказы_833.Регистратор
	|		 И  Заказы_77.Тов = Заказы_833.Номенклатура
	| 		 И  Заказы_77.Договор_uid7 = Заказы_833.ДоговорКонтрагента_uid7
	| 		 И  Заказы_77.Фрм = Заказы_833.Фирма
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заказы7783 КАК Заказы7783
	|ГДЕ  
	
	|       Сч_Номенклатура  > 0  ИЛИ Сч_Фирма > 0 ИЛИ Сч_ДоговорКонтрагента_uid7  > 0
	|	ИЛИ	Сч_КоличествоПриход > 0 ИЛИ Сч_КоличествоРасход > 0 
	|	ИЛИ	Сч_СуммаРеглПриход > 0 ИЛИ Сч_СуммаРеглРасход > 0 
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ неКОСЯКИ
	|ИЗ
	|	Заказы7783 КАК Заказы7783
	|ГДЕ  
	
	|       Сч_Номенклатура  = 0  и Сч_Фирма = 0 и Сч_ДоговорКонтрагента_uid7  = 0
	|	и	Сч_КоличествоПриход = 0 и Сч_КоличествоРасход = 0 
	|	и	Сч_СуммаРеглПриход = 0 и Сч_СуммаРеглРасход = 0 
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ *
	//|ИЗ
	//|	Заказы7783 КАК Заказы7783
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	КОСЯКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   Заказы7783.ЗП
	|,  Заказы7783.p0
	|,  Заказы7783.Регистратор
	
	|ИЗ
	|	КОСЯКИ как Заказы7783
	//|ГДЕ
	//|	Заказы7783.Регистратор В (выбрать косяки.Регистратор из косяки)
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   *
	|ИЗ
	|	неКОСЯКИ как Заказы7783
	//|ГДЕ
	//|	  НЕ Заказы7783.Регистратор В (выбрать косяки.Регистратор из косяки)
	//|	И НЕ Заказы7783.p0 В (выбрать косяки.p0 из косяки)
	
	|";
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  ПравилаИгры.ТабличноеПоле37);
	Запрос.УстановитьПараметр("РегистраторыСпс",  ПравилаИгры.ТабличноеПоле36.ВыгрузитьКолонку("Заказ"));
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Совпаденния = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить();
	Регистраторы = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
	КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
	
	//Анализ = РезультатОпроса[РезультатОпроса_Количество - 4].Выгрузить();
	//Анализ.Свернуть("Склад,Склад1","КоличествоПриход,КоличествоРасход,КоличествоПриход1,КоличествоРасход1,Сч_Номенклатура,Сч_Фирма,Сч_Заявка,Сч_Склад,Сч_КоличествоПриход,Сч_КоличествоРасход,Сч");
	//                 //Фирма,Фирма1,
	//ТабличноеПоле9 = Регистраторы.Скопировать();
	//ТабличноеПоле8 = КОСЯКИ.Скопировать();
	//ТабличноеПоле15 = Анализ.Скопировать();
	
	ПравилаИгры.Вставить("ТабличноеПоле38",Совпаденния);
	ПравилаИгры.Вставить("ТабличноеПоле39",Регистраторы);
	ПравилаИгры.Вставить("ТабличноеПоле40",КОСЯКИ);
	
КонецПроцедуры
Процедура Опросить8_ОстаткиПоЗаказам(партТЗ77,парДтВрм)
	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - ШАГ 8 сравниваем остатки 7 и 8 по заказам ");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.p0 КАК ЗаказПоставщику_id,
	|	ТЗ1.p1 КАК ЗаказПоставщику_dt,
	|	ТЗ1.p2 КАК ЗаказПоставщику_nm,
	|	ТЗ1.p3 КАК ЗаказПоставщику_uid,
	|	ТЗ1.Заказ,
	
	|	ТЗ1.p4 КАК Номенклатура_id,
	|	ТЗ1.p5 КАК Номенклатура_uid,
	|	ТЗ1.Номенклатура,
	
	|	ТЗ1.p6 КАК Фирма_id,
	|	ТЗ1.p7 КАК Фирма_uid,
	|	ТЗ1.Фирма,
	
	|	ТЗ1.p8 КАК Договор_id,
	|	ТЗ1.p9 КАК Договор_uid7,
	
	|	ТЗ1.p10 КАК Количество,
	|	ТЗ1.p11 КАК Стоимость
	
	|ПОМЕСТИТЬ Заказы_77
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ДоговорКонтрагента,
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.СтрокаЗаявки.Заказ КАК Заказ,
	|	СУММА(ЗаказыПоставщикамОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗаказыПоставщикамОстатки.СуммаРеглОстаток) КАК СуммаРеглОстаток
	|ПОМЕСТИТЬ Заказы_83
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&ДтВрм, ) КАК ЗаказыПоставщикамОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикамОстатки.ДоговорКонтрагента,
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.СтрокаЗаявки.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказ_83.Номенклатура,
	|	Заказ_83.ДоговорКонтрагента.Организация КАК Фирма,
	|	Заказ_83.ДоговорКонтрагента,
	|	_ДляПереносаДанных.Строка77 КАК ДоговорКонтрагента_uid7,
	|	Заказ_83.Заказ,
	|	Заказ_83.КоличествоОстаток,
	|	Заказ_83.СуммаРеглОстаток
	|ПОМЕСТИТЬ Заказы_833	
	|ИЗ
	|	Заказы_83 КАК Заказ_83
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ДляПереносаДанных КАК _ДляПереносаДанных
	|		ПО Заказ_83.ДоговорКонтрагента = _ДляПереносаДанных.Объект
	|
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы_77.*,
	|	Заказы_833.*,
	
	
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Заказ = Заказы_833.Заказ ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Заказ,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Номенклатура = Заказы_833.Номенклатура ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Номенклатура,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Договор_uid7 = Заказы_833.ДоговорКонтрагента_uid7 ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_ДоговорКонтрагента_uid7,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Фирма = Заказы_833.Фирма ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_Фирма,
	
	
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Количество = Заказы_833.КоличествоОстаток ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_КоличествоОстаток,
	|	ВЫБОР 
	|	 	КОГДА Заказы_77.Стоимость = Заказы_833.СуммаРеглОстаток ТОГДА 0
	|	 	ИНАЧЕ 1
	|	КОНЕЦ КАК Сч_СуммаРеглОстаток,
	
	|   1 КАК Сч
	|ПОМЕСТИТЬ Заказы7783
	|ИЗ
	|	Заказы_77 КАК Заказы_77
	|		ПОЛНОЕ СОЕДИНЕНИЕ Заказы_833 КАК Заказы_833
	|		ПО  Заказы_77.Заказ = Заказы_833.Заказ
	|		 И  Заказы_77.Номенклатура = Заказы_833.Номенклатура
	| 		 И  Заказы_77.Договор_uid7 = Заказы_833.ДоговорКонтрагента_uid7
	| 		 И  Заказы_77.Фирма = Заказы_833.Фирма
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	
	|ВЫБРАТЬ
	|    *
	|ПОМЕСТИТЬ КОСЯКИ
	|ИЗ
	|	Заказы7783 КАК Заказы7783
	|ГДЕ  
	
	|       Сч_Заказ  > 0  ИЛИ Сч_Номенклатура  > 0  ИЛИ Сч_Фирма > 0 ИЛИ Сч_ДоговорКонтрагента_uid7  > 0
	|	ИЛИ	Сч_КоличествоОстаток > 0  
	|	ИЛИ	Сч_СуммаРеглОстаток > 0 
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   Заказы7783.ЗаказПоставщику_id
	|,  Заказы7783.Заказ 
	|ИЗ
	|	КОСЯКИ как Заказы7783
	
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|select * from КОСЯКИ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|select * from Заказы7783
	
	|";
	
	
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  партТЗ77);
	Запрос.УстановитьПараметр("ДтВрм",  парДтВрм);
	
	РезультатОпроса = Запрос.ВыполнитьПакет();
	РезультатОпроса_Количество = РезультатОпроса.Количество();
	
	Ост78 = РезультатОпроса[РезультатОпроса_Количество - 1].Выгрузить();
	КОСЯКИ = РезультатОпроса[РезультатОпроса_Количество - 2].Выгрузить();
	Регистраторы = РезультатОпроса[РезультатОпроса_Количество - 3].Выгрузить();
	
	ТабличноеПоле9 = Ост78.Скопировать();
	ТабличноеПоле9.Свернуть("Фирма","Количество,КоличествоОстаток,Стоимость,СуммаРеглОстаток, Сч_Заказ,Сч_Номенклатура,Сч_Фирма,Сч_ДоговорКонтрагента_uid7,Сч_КоличествоОстаток,Сч_СуммаРеглОстаток,Сч");
	
	ПравилаИгры.Вставить("ТабличноеПоле41",ост78);
	ПравилаИгры.Вставить("ТабличноеПоле42",ТабличноеПоле9);
	ПравилаИгры.Вставить("ТабличноеПоле43",Регистраторы);
	ПравилаИгры.Вставить("ТабличноеПоле44",КОСЯКИ);
	
КонецПроцедуры

Функция НайтиЗаявкуПоНомеруДате(парНом, парДат)
	
	ИскомаяЗаявка = Документы.ЗаявкаПокупателя.ПустаяСсылка();	
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка Как Заявка
		|ИЗ
		|	Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
		|ГДЕ
		|	 ЗаявкаПокупателя.Номер = &НомерД
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|";
		
	парДатДтВрм = Дата(Число(Лев(парДат,4)), 
	                   Число(Сред(парДат,6,2)),
					   Число(Сред(парДат,9,2)),
					   Число(Сред(парДат,12,2)),
					   Число(Сред(парДат,15,2)),
					   Число(Прав(парДат,2)));
		
	Запрос.УстановитьПараметр("НомерД", парНом);
	Запрос.УстановитьПараметр("ДатаД", НачалоГода(парДатДтВрм)- 3*60*60); 
	Запрос.УстановитьПараметр("ДатаДК", КонецГода(парДатДтВрм)+ 3*60*60); 
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 тогда
		ИскомаяЗаявка = Результат[0].Заявка;
	КонецЕсли;

	Возврат ИскомаяЗаявка;
КонецФункции
Функция НайтиКорректировкуПоНомеруДате(парНом, парДат)
	
	ИскомаяЗаявка = Документы.ЗаявкаПокупателя.ПустаяСсылка();	
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка Как Заявка
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя КАК ЗаявкаПокупателя
		|ГДЕ
		|	 ЗаявкаПокупателя.Номер = &НомерД
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|";
		
	парДатДтВрм = Дата(Число(Лев(парДат,4)), 
	                   Число(Сред(парДат,6,2)),
					   Число(Сред(парДат,9,2)),
					   Число(Сред(парДат,12,2)),
					   Число(Сред(парДат,15,2)),
					   Число(Прав(парДат,2)));
	
	Запрос.УстановитьПараметр("НомерД", парНом);
	Запрос.УстановитьПараметр("ДатаД", НачалоГода(парДатДтВрм)- 3*60*60); 
	Запрос.УстановитьПараметр("ДатаДК", КонецГода(парДатДтВрм)+ 3*60*60); 
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 тогда
		ИскомаяЗаявка = Результат[0].Заявка;
	КонецЕсли;

	Возврат ИскомаяЗаявка;
КонецФункции
Функция НайтиДок8ПоНомеру(парНомСпс)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка КАК Заявка,
		|	ЗаявкаПокупателя.Номер
		|ПОМЕСТИТЬ Вседоки
		|ИЗ
		|	Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
		|ГДЕ
		|	ЗаявкаПокупателя.Номер В (&НомераДок)
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка,
		|	ЗаявкаПокупателя.Номер
		|ИЗ
		|	Документ.КорректировкаЗаявкиПокупателя КАК ЗаявкаПокупателя
		|ГДЕ
		|	ЗаявкаПокупателя.Номер В (&НомераДок)
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Вседоки.Заявка,
		|	Вседоки.Номер
		|ИЗ
		|	Вседоки КАК Вседоки";
		
	Запрос.УстановитьПараметр("НомераДок", парНомСпс);
	Запрос.УстановитьПараметр("ДатаД", НачалоДня(ПравилаИгры.НачПериода)- 3*60*60);
	Запрос.УстановитьПараметр("ДатаДК", КонецДня(ПравилаИгры.КонПериода)+ 3*60*60);
	
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции
Функция НайтиЗаявку8ПоНомеру(парНомСпс)
	
//	ИскомаяЗаявка = Документы.ЗаявкаПокупателя.ПустаяСсылка();	
		
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаявкаПокупателя.Ссылка КАК Заявка,
		|	ЗаявкаПокупателя.Номер
		|ИЗ
		|	Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
		|ГДЕ
		|	ЗаявкаПокупателя.Номер В (&НомераДок)
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|";
		
	Запрос.УстановитьПараметр("НомераДок", парНомСпс);
	Запрос.УстановитьПараметр("ДатаД", НачалоГода(ПравилаИгры.НачПериода));
	Запрос.УстановитьПараметр("ДатаДК", КонецДня(ПравилаИгры.КонПериода)+ 3*60*60);
	
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции
Функция НайтиДок8ПоНомеруЗП(парНомСпс)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка КАК Заявка,
		|	ЗаявкаПокупателя.Номер
		|ПОМЕСТИТЬ Вседоки
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаявкаПокупателя
		|ГДЕ
		|	ЗаявкаПокупателя.Номер В (&НомераДок)
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаПокупателя.Ссылка,
		|	ЗаявкаПокупателя.Номер
		|ИЗ
		|	Документ.КорректировкаЗаказаПоставщику КАК ЗаявкаПокупателя
		|ГДЕ
		|	ЗаявкаПокупателя.Номер В (&НомераДок)
		|	И ЗаявкаПокупателя.Дата >= &ДатаД
		|	И ЗаявкаПокупателя.Дата <= &ДатаДК
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Вседоки.Заявка,
		|	Вседоки.Номер
		|ИЗ
		|	Вседоки КАК Вседоки";
		
	Запрос.УстановитьПараметр("НомераДок", парНомСпс);
	Запрос.УстановитьПараметр("ДатаД", НачалоДня(ПравилаИгры.НачПериода)- 3*60*60);
	Запрос.УстановитьПараметр("ДатаДК", КонецДня(ПравилаИгры.КонПериода)+ 3*60*60);
	
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции


Функция НайтиТов8ПоНомеру(пар_Артикулы, пар_Изготовители)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Наименование,
	|	Номенклатура.Артикул,
	|	Номенклатура.Изготовитель,
	|	Номенклатура.Изготовитель.Наименование КАК Изготовитель_Наименование
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Артикул В (&Артикул)
	|	И 
	|	Номенклатура.Изготовитель.Наименование В (&Изготовитель)";

	Запрос.УстановитьПараметр("Артикул", пар_Артикулы);
	Запрос.УстановитьПараметр("Изготовитель", пар_Изготовители);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
Функция НайтиСтрокуЗаявки8(пар_ИДСайта, пар_Заявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИдентификаторыСтрокЗаявок.Ссылка КАК СтрокаЗаявки,
	|	ИдентификаторыСтрокЗаявок.Заявка,
	|	ИдентификаторыСтрокЗаявок.IDSite
	|ИЗ
	|	Справочник.ИдентификаторыСтрокЗаявок КАК ИдентификаторыСтрокЗаявок
	|ГДЕ
	|	ИдентификаторыСтрокЗаявок.IDSite В (&IDSite)
	|	И ИдентификаторыСтрокЗаявок.Заявка В (&Заявки)";

	Запрос.УстановитьПараметр("IDSite", пар_ИДСайта);
	Запрос.УстановитьПараметр("Заявки", пар_Заявки);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
Функция НайтиКАпоЛогину(пар_Логины)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетныеЗаписиСайта.Код КАК Логин_Код,
	|	УчетныеЗаписиСайта.Ссылка КАК Логин,
	|	УчетныеЗаписиСайта.Владелец КАК ТТ,
	|	УчетныеЗаписиСайта.Владелец.Владелец КАК КА
	|ИЗ
	|	Справочник.УчетныеЗаписиСайта КАК УчетныеЗаписиСайта
	|ГДЕ
	|	УчетныеЗаписиСайта.Код В(&КодЫ)";

	Запрос.УстановитьПараметр("КодЫ", пар_Логины);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
Функция НайтиПрайсыПоКоду(пар_Коды)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрайсыПоставщиков.Код КАК Прайс_Код,
	|	ПрайсыПоставщиков.Ссылка КАК Прайс,
	|	ПрайсыПоставщиков.Склад,
	|	ПрайсыПоставщиков.Владелец.Владелец КАК Поставщик
	|ИЗ
	|	Справочник.ПрайсыПоставщиков КАК ПрайсыПоставщиков
	|ГДЕ
	|	ПрайсыПоставщиков.Код В (&Коды)";

	Запрос.УстановитьПараметр("Коды", пар_Коды);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

// сервис

Функция Подключение_к_SQL_серверу() экспорт
	
	Успех = Истина;	
	
	Попытка
        СоединениеSQL  = Новый COMОбъект("ADODB.Connection");
        КомандаSQL     = Новый COMОбъект("ADODB.Command");
        ВыборкаSQL     = Новый COMОбъект("ADODB.RecordSet");
		
		Пользователь = "user1c";
		Пароль = "h8BFX4as";
		База = "work_p1c";
		Сервер = "1csql04-g9";//"srv1c-nn";
		
        СоединениеSQL_ConnectionString =
							            "driver={SQL Server};" +
							            "server="+Сервер+";"+
							            "uid="+Пользователь+";"+
							            "pwd="+Пароль+";"+
							            "database="+База+";";
										
		ДобавитьВЛог("СоединениеSQL_ConnectionString :  " + СокрЛП(СоединениеSQL_ConnectionString));
		
        СоединениеSQL.ConnectionString = СоединениеSQL_ConnectionString;
										
        СоединениеSQL.ConnectionTimeout = 30;
        СоединениеSQL.CommandTimeout = 6000;//600;								
		
		СоединениеSQL.Open();
		КомандаSQL.ActiveConnection   = СоединениеSQL;
		
	Исключение
		ДобавитьВЛог("err: соединение77 НЕ выполнено : " + ОписаниеОшибки());
		Успех = Ложь;
	КонецПопытки;
	
	ОпубликоватьЛог();
	
	Возврат Успех;
КонецФункции	
Функция ЗакрытьСеансПодключенияКSQL() экспорт
	Успех = Истина;	
	Попытка 
		СоединениеSQL.Close();
		ДобавитьВЛог("соединение77 закрыто : " + ОписаниеОшибки());
	Исключение
		СоединениеSQL = Неопределено;
		ДобавитьВЛог("err: соединение77 НЕ закрыто : " + ОписаниеОшибки());
	КонецПопытки;
	ОпубликоватьЛог();
	Возврат Успех;
КонецФункции
Функция Подключение_к_SQL_серверу2() экспорт
	
	Успех = Истина;	
	
	Попытка
        СоединениеSQL2  = Новый COMОбъект("ADODB.Connection");
        КомандаSQL2     = Новый COMОбъект("ADODB.Command");
        ВыборкаSQL2     = Новый COMОбъект("ADODB.RecordSet");
		
		Пользователь = "user1c";
		Пароль = "h8BFX4as";
		База = "PK_Trade09";
		Сервер = "srv1c-nn";
		
        СоединениеSQL2.ConnectionString =
							            "driver={SQL Server};" +
							            "server="+Сервер+";"+
							            "uid="+Пользователь+";"+
							            "pwd="+Пароль+";"+
							            "database="+База+";";
        СоединениеSQL2.ConnectionTimeout = 30;
        СоединениеSQL2.CommandTimeout = 6000;//600;								
		
		СоединениеSQL2.Open();
		КомандаSQL2.ActiveConnection   = СоединениеSQL2;
		
	Исключение
		ДобавитьВЛог("err: соединение777 НЕ выполнено : " + ОписаниеОшибки());
		Успех = Ложь;
	КонецПопытки;
	
	ОпубликоватьЛог();
	Возврат Успех;
КонецФункции	
Функция ЗакрытьСеансПодключенияКSQL2() экспорт
	Успех = Истина;	
	Попытка 
		СоединениеSQL2.Close();
		ДобавитьВЛог("соединение77 закрыто : " + ОписаниеОшибки());
	Исключение
		СоединениеSQL2 = Неопределено;
		ДобавитьВЛог("err: соединение777 НЕ закрыто : " + ОписаниеОшибки());
	КонецПопытки;
	ОпубликоватьЛог();
	Возврат Успех;
КонецФункции

Функция ВыбратьСценарий() экспорт
	
	списокСценариев = ПравилаИгры.списокСценариев;
	
	Адрес = списокСценариев.ВыбратьСтроку("Выберите сценарий");
	
	Если НЕ Адрес = Неопределено тогда
		Вход_НазваниеСценария =  Адрес.ИмяПроцедуры;
	КонецЕсли;
	
	Возврат ПравилаИгры;
КонецФункции	
Функция ВернутьПравилаИгры() экспорт
	Возврат ПравилаИгры;
КонецФункции
Функция РазвернутьДатуВстроку(выбД,Разд="") 
	СД = "";
	ГД = Год(выбД);
	МД = Месяц(выбД);
	ДД = День(выбД);
	СД = СокрЛП(Формат(ГД, "ЧЦ=4; ЧН=; ЧВН=; ЧГ="))+Разд+СокрЛП(Формат(МД, "ЧЦ=2; ЧН=; ЧВН="))+Разд+СокрЛП(Формат(ДД, "ЧЦ=2; ЧН=; ЧВН="));
	Возврат СД;
КонецФункции
Функция УказатьРежим() экспорт
	
	//АвтоПеребор = ПравилаИгры.АвтоПеребор;
	//
	//Массив = Новый Массив;
	//Массив.Добавить(Тип("Булево"));
	//
	//ОписаниеТипов  = Новый ОписаниеТипов(Массив);

	//Если ВвестиЗначение(АвтоПеребор, "Введите значение", ОписаниеТипов) Тогда
	//    ПравилаИгры.Вставить("АвтоПеребор",АвтоПеребор);
	//КонецЕсли;
	
	Возврат ПравилаИгры;
КонецФункции
Функция ВыбратьСклад() экспорт
	
	выб_скл_Ид = "";
	выб_скл_Нм = "";
	выб_скл_Код = "";
	
	скл7 = Опросить7_Склады();
	Если скл7.Количество() = 0 тогда 
		Возврат ПравилаИгры;
	КонецЕсли;
	Адрес = Неопределено;
	//Если НЕ ПравилаИгры.АвтоПеребор И НЕ ПравилаИгры.это_фон тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Наложить условие по складу? Либо будет отбор по умолчанию';"
	//	+ " en = 'Do you want to continue?'"), Режим, 0);
	//	 Если Ответ = КодВозвратаДиалога.Да Тогда
	//		 Адрес = скл7.ВыбратьСтроку("укажите Склад");
	//	 КонецЕсли;
	//КонецЕсли;
	Если Адрес = Неопределено тогда
		Если Вход_Тест тогда
			Адрес = скл7.Найти("000000050", "p2"); //Склад в Кирове	
		Иначе
			Адрес = скл7.Найти("000000001", "p2"); //ЦЕНТРАЛЬНЫЙ СКЛАД
		КонецЕсли;
	КонецЕсли;
	Если Адрес = Неопределено Тогда
		Адрес = скл7[0];
	КонецЕсли;
	Если Адрес = Неопределено тогда
		Возврат ПравилаИгры;
	КонецЕсли;
	
	выб_скл_Ид = "'"+ Адрес.p0 + "'";
	выб_скл_Нм = СокрЛП(Адрес.p1);
	выб_скл_Код = СокрЛП(Адрес.p2);
	
	ВыбСклад = Справочники.Склады.ПустаяСсылка();
	Если ЗначениеЗаполнено(выб_скл_Код) тогда
		ВыбСклад = Справочники.Склады.НайтиПоКоду(СокрЛП(выб_скл_Код));
	КонецЕсли;
	
	Если НЕ ВыбСклад = Справочники.Склады.ПустаяСсылка() тогда
		ПравилаИгры.Вставить("ВыбСклад", ВыбСклад);
		ПравилаИгры.Вставить("ВыбСклад_Ид", выб_скл_Ид);
		ПравилаИгры.Вставить("ВыбСклад_Нм", выб_скл_Нм);
		ПравилаИгры.Вставить("ВыбСклад_Код", выб_скл_Код);
		//ДобавитьВЛог("Условие по складу изменено. Выбран Склад " + СокрлП(выб_скл_Нм) + " с кодом " + СокрЛП(выб_скл_Код));		
	Иначе
		//ДобавитьВЛог("Условие по складу осталось прежним. Склад " + СокрлП(выб_скл_Нм) + " по коду " + СокрЛП(выб_скл_Код)+" не найден");		
	КонецЕсли;
	
	Возврат ПравилаИгры;
	
КонецФункции
Функция ВернутьСтрокуИДЗаявок77()
	
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле6;
	
	стридз = "";
	Если ТабличноеПоле6.Количество() > 0 тогда
		Для каждого стрид из  ТабличноеПоле6 цикл
			Если НЕ ЗначениеЗаполнено(стрид.p57) тогда
				Продолжить;
			КонецЕсли;
			стридз = стридз + стрид.p57 + ",";
		КонецЦикла;
		стридз = Лев(стридз,СтрДлина(стридз)-1);
	КонецЕсли;
	
	ПравилаИгры.Вставить("стридз",стридз);
	
	Возврат стридз;
	
КонецФункции
Функция ВернутьСтрокуИДЗаявок777()
	
	ТабличноеПоле6 = ПравилаИгры.ТабличноеПоле36;
	
	стридз = "";
	Если ТабличноеПоле6.Количество() > 0 тогда
		Для каждого стрид из  ТабличноеПоле6 цикл
			Если НЕ ЗначениеЗаполнено(стрид.p0) тогда
				Продолжить;
			КонецЕсли;
			стридз = стридз + стрид.p0 + ",";
		КонецЦикла;
		стридз = Лев(стридз,СтрДлина(стридз)-1);
	КонецЕсли;
	
	ПравилаИгры.Вставить("стридз",стридз);
	
	Возврат стридз;
	
КонецФункции
Процедура ВыбратьДокиДляПроверки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.Док8,
	|	1 КАК Сч
	|ПОМЕСТИТЬ ЗаявкИ
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ЗаявкИ.Док8,
	|   ЗаявкИ.Док8.СтатусДокумента КАК СтатусД,
	|   ЗаявкИ.Док8.ВидОперации КАК ВидД,
	|   Сч
	|ПОМЕСТИТЬ Анал
	|ИЗ
	|	ЗаявкИ КАК ЗаявкИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|  СтатусД,
	|  ВидД,
	|  СУММА(Сч) КАК Сч
	|ИЗ
	|	Анал
	|СГРУППИРОВАТЬ ПО
	|	СтатусД, ВидД 
	|УПОРЯДОЧИТЬ ПО
	|	ВидД УБЫВ, СтатусД УБЫВ
	|";
	
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  ПравилаИгры.ТабличноеПоле3);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Адрес = "";
	
	Отбор = Новый Структура();
	Отбор.Вставить("ВидД",Перечисления.ВидыОперацийЗаявкаПокупателя.ЗаявкаПокупателя);
	Строки = Рез.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
	    Адрес = Строки[0];
	КонецЕсли;
	
	//Если НЕ ПравилаИгры.АвтоПеребор тогда
	//	Адрес = Рез.ВыбратьСтроку("Выбери разрез аналитики");
	//	Если Адрес = Неопределено тогда
	//		//ПоказатьВсеТЗ();
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если Адрес = "" тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВЛог("-----");	
	ДобавитьВЛог(СокрлП(ТекущаяДата()) + " - выбраны заявки: вид "+ СокрЛП(Адрес.ВидД) +" статус "+ СокрЛП(Адрес.СтатусД) +" в количестве "+ СокрЛП(Адрес.Сч) );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ1.Док8,
	|   ТЗ1.p57
	|ПОМЕСТИТЬ ЗаявкИ
	|ИЗ
	|	&тзДанные77_Заявки КАК ТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   *,
	|   Док8.СтатусДокумента КАК СтатусД,
	|   Док8.ВидОперации КАК ВидД
	|ИЗ
	|	ЗаявкИ
	|ГДЕ
	|  Док8.СтатусДокумента = &СтатусД
	|И Док8.ВидОперации = &ВидД
	|";
	
	Запрос.УстановитьПараметр("тзДанные77_Заявки",  ПравилаИгры.ТабличноеПоле3);
	Запрос.УстановитьПараметр("ВидД",  Адрес.ВидД);
	Запрос.УстановитьПараметр("СтатусД",  Адрес.СтатусД);
	
	ТабличноеПоле6 = Запрос.Выполнить().Выгрузить();
	
	ПравилаИгры.Вставить("ТабличноеПоле6",ТабличноеПоле6);
КонецПроцедуры

Процедура Шоумастгоон(пар_стр)
	//Если ПравилаИгры.РазрешитьВыводНаЭкран тогда
		 //Состояние(пар_стр);
	//КонецЕсли;
КонецПроцедуры
Процедура ДобавитьВЛог(пар_стр)    экспорт
	//Если ПравилаИгры.РазрешитьВыводНаЭкран тогда
		//Сообщить(пар_стр);	
	//КонецЕсли;
	ПравилаИгры.Вставить("Аларм_Содержимое", ПравилаИгры.Аларм_Содержимое + Символы.ПС + пар_стр);
КонецПроцедуры
Процедура ОпубликоватьЛог()   экспорт
	Если НЕ ЗначениеЗаполнено(ПравилаИгры.Аларм_Содержимое) тогда
		Возврат;
	КонецЕсли;
	Если ПравилаИгры.Аларм и Найти(ПравилаИгры.Аларм_Содержимое,"err") > 0 тогда
		РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(ПравилаИгры.Аларм_Источник,ПравилаИгры.Аларм_Содержимое,ПравилаИгры.Аларм_Заголовок);
	КонецЕсли;
	ЗаписьВЛогфайл(ПравилаИгры.Аларм_Содержимое);
	ПравилаИгры.Вставить("Аларм_Содержимое","");
КонецПроцедуры
Процедура ЗаписьВЛогфайл(строкаВЛог) 

	Если НЕ ПравилаИгры.РазрешитьЗаписьВЛогФайл тогда
		Возврат;
	КонецЕсли;
	
    ТекстовыйДокумент = Новый ТекстовыйДокумент;
    кодировка = "UTF8";
	
	ПравилаИгры_ИмяЛогФайлаПолное = СтрЗаменить(ПравилаИгры.ИмяЛогФайлаПолное,"метка", ПравилаИгры.Метка);
	
    МассивФайлов = НайтиФайлы(ПравилаИгры_ИмяЛогФайлаПолное);        
    Если МассивФайлов.Количество() > 0 тогда        
        ТекстовыйДокумент.Прочитать(ПравилаИгры_ИмяЛогФайлаПолное,кодировка);            
    КонецЕсли;

    строкаВЛог = Символы.ПС + 
	             "------------------------------------------------------------------" + 
				 Символы.ПС + 
				 "[" + ТекущаяДата() + "] " + 
				 Символы.ПС + 
				 строкаВЛог; 
    
    ТекстовыйДокумент.ДобавитьСтроку(строкаВЛог);
    ТекстовыйДокумент.Записать(ПравилаИгры_ИмяЛогФайлаПолное,кодировка);

КонецПроцедуры
Функция УбратьТОчкиИПробелы(пстр)
	
	пстр = СтрЗаменить(пстр,".","");
	пстр = СтрЗаменить(пстр," ","");
	
	пстр = СтрЗаменить(пстр,";","_");
	пстр = СтрЗаменить(пстр,"""","");
	
	пстр = СтрЗаменить(пстр,"(","");
	пстр = СтрЗаменить(пстр,")","");
	
	Возврат пстр;
КонецФункции
Процедура ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя)
    ТекстовыйДокумент = Новый ТекстовыйДокумент;
    кодировка = "UTF8";
	
    МассивФайлов = НайтиФайлы(РезФайл_Имя);        
    Если МассивФайлов.Количество() > 0 тогда        
        ТекстовыйДокумент.Прочитать(РезФайл_Имя,кодировка);            
    КонецЕсли;

    ТекстовыйДокумент.ДобавитьСтроку(ТекстИт_Кусманчик);
    ТекстовыйДокумент.Записать(РезФайл_Имя,кодировка);
	
	// оформим в виде файла для многопоточного чтения
	
	ИмяВременногоФайлика = ПолучитьИмяВременногоФайла("txt");
	
    ТекстовыйДокумент2 = Новый ТекстовыйДокумент;
	ТекстовыйДокумент2.ДобавитьСтроку(ТекстИт_Кусманчик);
	ТекстовыйДокумент2.Записать(ИмяВременногоФайлика);
	
	СчетчикТомов = СчетчикТомов + 1;
	ПолноеИмяФайла = ПравилаИгры.КаталогЛогФайлов + "НачОст" + СокрЛП( Формат( СчетчикТомов , "ЧЦ=3; ЧДЦ=; ЧВН=; ЧГ=0")) + ".txt";
	УдалитьФайлы(ПолноеИмяФайла);
	ПереместитьФайл(ИмяВременногоФайлика, ПолноеИмяФайла);
	
	
КонецПроцедуры

Процедура СохранитьТекстВФайл(пар_стр, пар_имяф)
	
	Если НЕ ПравилаИгры.РазрешитьЗаписьВЛогФайл тогда
		Возврат;
	КонецЕсли;
	
	т = Новый ТекстовыйДокумент;	
	т.УстановитьТекст(пар_стр);
	КаталогФайловВыгрузки = ПравилаИгры.КаталогЛогФайлов;//"C:\Users\Pushkin-DS\Documents\job\01 working-out\ПартКом_201608";
	ПолноеИмяФайла = КаталогФайловВыгрузки + "\" + пар_имяф+".txt";
	УдалитьФайлы(ПолноеИмяФайла);
	т.Записать(ПолноеИмяФайла, "windows-1251");
	
КОнецПроцедуры
Функция ВернутьСтрокуЗаголовковТЗ(парТЗ)
	
	стрзаг = "";
	
	cxr = 0;
	Для Каждого Колонка Из парТЗ.Колонки Цикл
		cxr = cxr + 1;
		стрзаг = стрзаг + Символы.ПС +
						  СокрлП(cxr) + ". " +
				          СокрлП(Колонка.Имя) + "[" +
						  СокрлП(Колонка.ТипЗначения) + "]";
    КонецЦикла;	
	
	Возврат стрзаг;
КонецФункции
Процедура ВыгрузитьТаблуВТекст(парТЗ, ВыгружатьСтрокуОстатка = Ложь, ВывестиКолСтрок = 0)
	
	счсчсч = 0;
	ТекстИт_Кусманчик = "";
	РезФайл_Имя = "";
	ОтборТЗОст = Новый Структура();
	
	всего_строк = парТЗ.Количество() - 1;
	всего_колонок = парТЗ.Колонки.Количество() - 1;
	
	Для uio = 0 по всего_строк  цикл
		
		Если Цел(счсчсч/1000) = счсчсч/1000 тогда
			ДобавитьВЛог("счсчсч = " + СокрЛП(счсчсч));
			ДобавитьВЛог(ТекстИт_Кусманчик);
			ОпубликоватьЛог();
			//ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
			ТекстИт_Кусманчик = "";
		КонецЕсли;
		
		счсчсч = счсчсч + 1;
		стринф = СокрлП(uio+1) + ". ";
		Если ВывестиКолСтрок > 0 тогда
			Если счсчсч > ВывестиКолСтрок тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Для lkjhb = 0 по всего_колонок цикл
			стринф = стринф + СокрлП(парТЗ[uio][lkjhb]) + ";";
		КонецЦикла;
		
		ТекстИт_Кусманчик = ТекстИт_Кусманчик + Символы.ПС +  стринф;
		
		Если ВыгружатьСтрокуОстатка тогда
			
		//ТабличноеПоле25.Колонки.Добавить("Тов",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("ТовКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("Фирма",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("ФирмаКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("Склад",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("СкладКод",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
		//ТабличноеПоле25.Колонки.Добавить("p11",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияID");
		//ТабличноеПоле25.Колонки.Добавить("p10",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияКод");
		//
		////ТабличноеПоле25.Колонки.Добавить("p17",Новый ОписаниеТипов("Число"),"VMI");
		//ТабличноеПоле25.Колонки.Добавить("p19",Новый ОписаниеТипов("Число"),"VMI");
		//
		//ТабличноеПоле25.Колонки.Добавить("КСписаниюСтр",Новый ОписаниеТипов("Число"));
		//ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтр",Новый ОписаниеТипов("Число"));
		//
		////ТабличноеПоле25.Колонки.Добавить("p18",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияПоставщикУИД");
		//ТабличноеПоле25.Колонки.Добавить("p20",Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)),"ПартияПоставщикУИД");
		//
		//ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтрРуб",Новый ОписаниеТипов("Число"));
		//ТабличноеПоле25.Колонки.Добавить("СуммаСписанияСтрБезНДС",Новый ОписаниеТипов("Число"));
		//
		//ПравилаИгры.Вставить("ТабличноеПоле25_КоличествоТекстовыхКолонок",ТабличноеПоле25.Колонки.Количество());
		//
		//ТабличноеПоле25.Колонки.Добавить("Тов_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		//ТабличноеПоле25.Колонки.Добавить("Фирма_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		//ТабличноеПоле25.Колонки.Добавить("Склад_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		//ТабличноеПоле25.Колонки.Добавить("Партия_Ссылка",Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыСтрокПриходов"));
		//ТабличноеПоле25.Колонки.Добавить("Поставщик_Ссылка",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
			уид_товара = СокрлП(парТЗ[uio][1]);
			//уид_склада = СокрлП(парТЗ[uio][3]);
			уид_товара2 = парТЗ[uio][5];
			//уид_склада2 = СокрлП(парТЗ[uio][6]);
			
			
			Строки = Новый Массив;
			
			Если ЗначениеЗаполнено(уид_товара) тогда //И ЗначениеЗаполнено(уид_склада) тогда
				
				ТекстИт_Кусманчик = ТекстИт_Кусманчик + уид_товара;
				
				ОтборТЗОст.Вставить("ТовКод",уид_товара);
				//ОтборТЗОст.Вставить("СкладКод",уид_склада);
				Строки = ПравилаИгры.ТабличноеПоле25.НайтиСтроки(ОтборТЗОст);
				
			Иначе
				Если ЗначениеЗаполнено(уид_товара2) тогда
					
					уид_товара2 = СокрЛП(уид_товара2.УникальныйИдентификатор());
					
					ТекстИт_Кусманчик = ТекстИт_Кусманчик + уид_товара2;
					
					ОтборТЗОст.Вставить("ТовКод",уид_товара2);
					Строки = ПравилаИгры.ТабличноеПоле25.НайтиСтроки(ОтборТЗОст);
				КонецЕсли;
			КонецЕсли;	
			
				Если Строки.Количество() > 0 Тогда
					Для Каждого ЭлементМассива из Строки Цикл
						
					лстринф =   ЭлементМассива.Тов + ";"+ 
								ЭлементМассива.ТовКод + ";"+ 
								ЭлементМассива.Фирма + ";"+ 
								ЭлементМассива.ФирмаКод + ";"+ 
								ЭлементМассива.Склад + ";"+ 
								ЭлементМассива.СкладКод +  ";"+ 
								ЭлементМассива.p11 + ";"+ 
								ЭлементМассива.p10 +  ";"+ 
								ЭлементМассива.p19 +  ";"+ 
								ЭлементМассива.КСписаниюСтр + ";"+ 
								ЭлементМассива.СуммаСписанияСтр + ";"+ 
								ЭлементМассива.p20 +  ";"   + 
								ЭлементМассива.СуммаСписанияСтрРуб +  ";"+ 
								ЭлементМассива.СуммаСписанияСтрБезНДС +  ";" ;
								
								ДобавитьВЛог(лстринф);
								
					КонецЦикла;
					
				Иначе
					
					ТекстИт_Кусманчик = ТекстИт_Кусманчик + "!!!!!!!!!!!!!!!!!!!!!!! не нашел ост в 1с7 по товару !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
					
				КонецЕсли;
			
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстИт_Кусманчик) тогда
		//ЗаписатьКусманчикВФал(ТекстИт_Кусманчик,РезФайл_Имя);
		ДобавитьВЛог(ТекстИт_Кусманчик);
		ОпубликоватьЛог();
	КонецЕсли;
		
КонецПРоцедуры


#Если Сервер тогда
Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	УстановитьПараметрыПоУмолчанию(Истина);
	ДобавитьВЛог("старт регламентного задания " +  СокрЛП(ТекущаяДата()));
	ОпубликоватьЛог();
		
	//Если НЕ ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() тогда
	//	ДобавитьВЛог("err: это не рабочая БД ");
	//	ОпубликоватьЛог();
	//	Возврат;
	//КонецЕсли;
	
	СписокВозможныхСценариев = СформироватьСписокВозможныхСценариев();
	НайденнаяСтрока  = СписокВозможныхСценариев.Найти(Вход_НазваниеСценария,"ИмяПроцедуры");
	Если НайденнаяСтрока = Неопределено Тогда
		ДобавитьВЛог("err: отсутствует сценарий " + СокрЛП(Вход_НазваниеСценария));
		ОпубликоватьЛог();
		Возврат;
	КонецЕсли;
	ИмяПроцедуры = НайденнаяСтрока.ИмяПроцедуры;
	Если НЕ ЗначениеЗаполнено(ИмяПроцедуры) тогда
		ДобавитьВЛог("err: отсутствует сценарий " + СокрЛП(Вход_НазваниеСценария));
		ОпубликоватьЛог();
		Возврат;
	КонецЕсли;
	
	Если НЕ Подключение_к_SQL_серверу() тогда
		ДобавитьВЛог("err: отсутствует соединение с сервером 1с7 на " + СокрЛП(ТекущаяДата()));
		ОпубликоватьЛог();
		Возврат;
	КонецЕсли;
	
	//УстановитьПараметрыПоУмолчанию(Истина);
	Выполнить(Вход_НазваниеСценария);
	
	ЗакрытьСеансПодключенияКSQL();
КонецПроцедуры
#КонецЕсли