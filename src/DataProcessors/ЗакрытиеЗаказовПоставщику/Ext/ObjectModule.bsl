Процедура ВыполнитьРегламентноеЗадание() Экспорт
	//Заявки	
	РезультатЗапроса  = ЗапросЗаявокКЗакрытию();
	Если не РезультатЗапроса.Пустой() тогда 
		
		Выборка = РезультатЗапроса.выбрать();
		УстановитьСтатусВыборки(Выборка,Справочники.СтатусыДокументов.ЗаявкаПокупателяЗакрыт);
	КонецЕсли;
	
	РезультатЗапроса  = ЗапросНеВерноЗакрытыхЗаявок();
	Если не РезультатЗапроса.Пустой() тогда 
		
		Выборка = РезультатЗапроса.выбрать();
		УстановитьСтатусВыборки(Выборка,Справочники.СтатусыДокументов.ЗаявкаПокупателяПодтвержден);
	КонецЕсли;

	
	//Заказы	
	ВыборкаНезакрытых = ВыбратьНеЗакрытыеЗаказы();
	если НЕ ВыборкаНезакрытых = Неопределено тогда 
		УстановитьСтатусВыборки(ВыборкаНезакрытых,Справочники.СтатусыДокументов.ЗаказПоставщикуЗакрыт);	
	КонецЕсли;
	
	ВыборкаНеправильныхЗакрытий = ВыбратьНеВерноЗакрытыеЗаказы();
	если НЕ ВыборкаНеправильныхЗакрытий = Неопределено тогда 
		УстановитьСтатусВыборки(ВыборкаНеправильныхЗакрытий,Справочники.СтатусыДокументов.ОтгруженПоставщиком);	
	КонецЕсли;

	
КонецПроцедуры

ПРоцедура УстановитьСтатусВыборки(ВыборкаНезакрытых,Статус)
	Пока ВыборкаНезакрытых.Следующий() цикл
		Попытка 
		Документ = ВыборкаНезакрытых.ДокументСсылка.ПолучитьОбъект();
		документ.СтатусДокумента =  Статус;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(документ,Истина);	
		Если ТипЗнч(ВыборкаНезакрытых.ДокументСсылка) = тип("ДокументСсылка.ЗаказПоставщику") тогда 		
		ОбменДаннымиКлиентСервер.ЗарегистрироватьИзмененияВПланеОбмена(ОбменССайтомСервер.УзелПланаОбмена("ОбменПартКом83_ОкноПоставщика",Ложь),Документ)
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;	
	
	
КонецПроцедуры

#Область Заказы


Функция ВыбратьНеЗакрытыеЗаказы()
	ЗапросНезакрытых = Новый Запрос ;
	 текст =  "ВЫБРАТЬ РАЗЛИЧНЫЕ %1
	          |	ЗаказыПоставщикам.Регистратор КАК ДокументСсылка,
	          |	МАКСИМУМ(ЗаказыПоставщикамОстатки.СтрокаЗаявки) КАК СтрокаЗаявки
	          |ИЗ
	          |	РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыПоставщикам
	          |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	          |		ПО ЗаказыПоставщикам.СтрокаЗаявки = ЗаказыПоставщикамОстатки.СтрокаЗаявки
	          |			И (ЗаказыПоставщикамОстатки.КоличествоОстаток > 0)
	          |ГДЕ
	          |	ЗаказыПоставщикам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	          |	И (ВЫРАЗИТЬ(ЗаказыПоставщикам.Регистратор КАК Документ.ЗаказПоставщику).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ОбработанПоставщиком)
	          |			ИЛИ ВЫРАЗИТЬ(ЗаказыПоставщикам.Регистратор КАК Документ.ЗаказПоставщику).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ОтгруженПоставщиком)
	          |			ИЛИ ВЫРАЗИТЬ(ЗаказыПоставщикам.Регистратор КАК Документ.ЗаказПоставщику).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПолученОтветПоставщика)
	          |			ИЛИ ВЫРАЗИТЬ(ЗаказыПоставщикам.Регистратор КАК Документ.ЗаказПоставщику).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ПринятОтПоставщика))
	          |
	          |СГРУППИРОВАТЬ ПО
	          |	ЗаказыПоставщикам.Регистратор
	          |
	          |ИМЕЮЩИЕ
	          |	МАКСИМУМ(ЗаказыПоставщикамОстатки.СтрокаЗаявки) ЕСТЬ NULL";
	
	ЗапросНезакрытых.Текст =   СтрШаблон(Текст,
	?(ЗначениеЗаполнено(РазмерПакета)," ПЕРВЫЕ "+ Формат(РазмерПакета,"ЧГ=0"),"")
	);
	
	Результат = ЗапросНезакрытых.выполнить();
	если Результат.Пустой() тогда 
		возврат Неопределено;
	иначе 
		возврат  Результат.Выбрать();
	КонецЕсли;	
	
КонецФункции	

Функция ВыбратьНеВерноЗакрытыеЗаказы()
	
	ЗапросНезакрытых = Новый Запрос ;
	 текст =  "ВЫБРАТЬ РАЗЛИЧНЫЕ %1
	          |	ЗаказыПоставщикам.Регистратор КАК ДокументСсылка,
	          |	МАКСИМУМ(ЗаказыПоставщикамОстатки.СтрокаЗаявки) КАК СтрокаЗаявки
	          |ИЗ
	          |	РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыПоставщикам
	          |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	          |		ПО ЗаказыПоставщикам.СтрокаЗаявки = ЗаказыПоставщикамОстатки.СтрокаЗаявки
	          |			И (ЗаказыПоставщикамОстатки.КоличествоОстаток > 0)
	          |ГДЕ
	          |	ЗаказыПоставщикам.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	          |	И ВЫРАЗИТЬ(ЗаказыПоставщикам.Регистратор КАК Документ.ЗаказПоставщику).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаказПоставщикуЗакрыт)
	          |
	          |СГРУППИРОВАТЬ ПО
	          |	ЗаказыПоставщикам.Регистратор
	          |
	          |ИМЕЮЩИЕ
	          |	НЕ МАКСИМУМ(ЗаказыПоставщикамОстатки.СтрокаЗаявки) ЕСТЬ NULL";
	
	ЗапросНезакрытых.Текст =   СтрШаблон(Текст,
	?(ЗначениеЗаполнено(РазмерПакета)," ПЕРВЫЕ "+ Формат(РазмерПакета,"ЧГ=0"),"")
	);
	
	Результат = ЗапросНезакрытых.выполнить();
	если Результат.Пустой() тогда 
		возврат Неопределено;
	иначе 
		возврат  Результат.Выбрать();
	КонецЕсли;	

КонецФункции	
	


#Конецобласти

#Область ЗАявки


Функция ЗапросЗаявокКЗакрытию()
	Запрос = новый Запрос;
	Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ %1
	        |	ЗаявкиПокупателей.Регистратор КАК ДокументСсылка,
	        |	МАКСИМУМ(ЗаявкиПокупателейОстатки.СтрокаЗаявки) КАК СтрокаЗаявки
	        |ИЗ
	        |	РегистрНакопления.ЗаявкиПокупателей КАК ЗаявкиПокупателей
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиПокупателей.Остатки КАК ЗаявкиПокупателейОстатки
	        |		ПО ЗаявкиПокупателей.СтрокаЗаявки = ЗаявкиПокупателейОстатки.СтрокаЗаявки
	        |ГДЕ
	        |	ЗаявкиПокупателей.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	        |	И ВЫРАЗИТЬ(ЗаявкиПокупателей.Регистратор КАК Документ.ЗаявкаПокупателя).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяПодтвержден)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗаявкиПокупателей.Регистратор
	        |
	        |ИМЕЮЩИЕ
	        |	МАКСИМУМ(ЗаявкиПокупателейОстатки.СтрокаЗаявки) ЕСТЬ NULL";
	Запрос.Текст = СтрШаблон(Текст,
	?(ЗначениеЗаполнено(РазмерПакета)," ПЕРВЫЕ "+ Формат(РазмерПакета,"ЧГ=0") +" " ,"")
	);
	Возврат Запрос.Выполнить();
	
	
КонецФункции	

Функция ЗапросНеВерноЗакрытыхЗаявок()
	Запрос = новый Запрос;
	Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ  %1
	        |	ЗаявкиПокупателей.Регистратор КАК ДокументСсылка,
	        |	МАКСИМУМ(ЗаявкиПокупателейОстатки.СтрокаЗаявки) КАК СтрокаЗаявки
	        |ИЗ
	        |	РегистрНакопления.ЗаявкиПокупателей КАК ЗаявкиПокупателей
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиПокупателей.Остатки КАК ЗаявкиПокупателейОстатки
	        |		ПО ЗаявкиПокупателей.СтрокаЗаявки = ЗаявкиПокупателейОстатки.СтрокаЗаявки
	        |ГДЕ
	        |	ЗаявкиПокупателей.Регистратор ССЫЛКА Документ.ЗаявкаПокупателя
	        |	И ВЫРАЗИТЬ(ЗаявкиПокупателей.Регистратор КАК Документ.ЗаявкаПокупателя).СтатусДокумента = ЗНАЧЕНИЕ(Справочник.СтатусыДокументов.ЗаявкаПокупателяЗакрыт)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗаявкиПокупателей.Регистратор
	        |
	        |ИМЕЮЩИЕ
	        |	НЕ МАКСИМУМ(ЗаявкиПокупателейОстатки.СтрокаЗаявки) ЕСТЬ NULL";
	Запрос.Текст = СтрШаблон(Текст,
	?(ЗначениеЗаполнено(РазмерПакета)," ПЕРВЫЕ "+ Формат(РазмерПакета,"ЧГ=0") +" " ,"")
	);
	Возврат Запрос.Выполнить();
	
	
	
КонецФункции	
#Конецобласти