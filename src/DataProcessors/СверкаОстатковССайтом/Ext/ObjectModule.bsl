Перем ТЧизм;
Перем ДтВрмРасчета;

#Область ОбщиеФункции
Процедура ВыполнитьРегламентноеЗадание() Экспорт
СверкаОстатковССайтом();	
	
КонецПроцедуры	

Процедура СверкаОстатковССайтом() Экспорт
	
	// + 20181011 Пушкин XX-1058
	
	ТЧизм = Новый ТаблицаЗначений;
	ТЧизм.Колонки.Добавить("Остаток",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12, 0)));
	ТЧизм.Колонки.Добавить("Остаток1С",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12, 0)));
	ТЧизм.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЧизм.Колонки.Добавить("Прайс",Новый ОписаниеТипов("СправочникСсылка.ПрайсыПоставщиков"));
	ТЧизм.Колонки.Добавить("ДтВрмРасчета",Новый ОписаниеТипов("Дата"));
	ДтВрмН = ТекущаяДата();
	ДтВрмРасчета = ТекущаяДата();
	// - 20181011 Пушкин XX-1058
	
	ПроверитьСостояниеИсточникаДанных();
	СверитьОстаткиПоТипуПоставки(Перечисления.ТипПоставки.Сток);
	// + Пушкин 20190313 XX-2125 добавил условие, чтобы по одному и тому же прайсу не делать повторный расчет, тем более после удаленных расхождений из регистра обмена
	Если НЕ ЗначениеЗаполнено(Прайс) тогда
	// - Пушкин 20190313 XX-2125
		СверитьОстаткиПоТипуПоставки(Перечисления.ТипПоставки.VMI);
	КонецЕсли;

	// + 20181011 Пушкин XX-1058
	ДтВрмК = ТекущаяДата();
	ТекстПосылки = "";	
	
	Если ТЧизм.Количество() > 0 тогда
		
		ТекстЗапроса =  "ВЫБРАТЬ
		                |	ТЧизм.Остаток,
		                |	ТЧизм.Остаток1С,
		                |	ТЧизм.Номенклатура,
		                |	ТЧизм.Прайс,
						|	ТЧизм.ДтВрмРасчета
		                |ПОМЕСТИТЬ ВсеИзменения
		                |ИЗ
		                |	&ТЧизм КАК ТЧизм
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВсеИзменения.Прайс.Склад КАК ПрайсСклад,
						|	ВсеИзменения.Прайс КАК Прайс,
						|	ВсеИзменения.Номенклатура.Изготовитель КАК НоменклатураИзготовитель,
						|	ВсеИзменения.Номенклатура.Наименование КАК НоменклатураНаименование,
						|	ВсеИзменения.Номенклатура.Артикул КАК НоменклатураАртикул,
						|	КОЛИЧЕСТВО(1) КАК Сч,
						|   СУММА(ВсеИзменения.Остаток) КАК Остаток,
						|   СУММА(ВсеИзменения.Остаток1С) КАК Остаток1С,
						|   МАКСИМУМ(ВсеИзменения.ДтВрмРасчета) КАК ДтВрмРасчета
						|
						|ИЗ
						|	ВсеИзменения КАК ВсеИзменения
						|
						|СГРУППИРОВАТЬ ПО
						|	ВсеИзменения.Прайс.Склад,
						|	ВсеИзменения.Прайс,
						|	ВсеИзменения.Номенклатура.Изготовитель,
						|	ВсеИзменения.Номенклатура.Наименование,
						|	ВсеИзменения.Номенклатура.Артикул
						|
						|УПОРЯДОЧИТЬ ПО
						|	ВсеИзменения.Прайс.Склад.Наименование,
						|	ВсеИзменения.Номенклатура.Изготовитель.Наименование,
						|	ВсеИзменения.Номенклатура.Наименование
						|
						|ИТОГИ
						|	СУММА(Сч)
						|
						|ПО
						|	ПрайсСклад,
						|	Прайс,
						|	НоменклатураИзготовитель";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ТЧизм",ТЧизм);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Ит = 0;
			СчСкл = 0;
			СчПр = 0;
			СчИз = 0;
			СчТов = 0;
			
			ВыборкаСклады = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПрайсСклад");
			Пока ВыборкаСклады.Следующий() Цикл 
				лСклад = ВыборкаСклады.ПрайсСклад;
				СчСкл = СчСкл + 1;
				СчПр = 0;
				СчИз = 0;
				СчТов = 0;
				Ит = ВыборкаСклады.Сч;
				
				ТекстПосылки = ТекстПосылки + Символы.ПС + СокрЛП(СчСкл) + ". " + СокрЛП(лСклад) + " = [" + СокрЛП(ВыборкаСклады.Сч) + "]";
				
				ВыборкаПрайсы = ВыборкаСклады.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Прайс");
				Пока ВыборкаПрайсы.Следующий() Цикл 
					лПрайс = ВыборкаПрайсы.Прайс;
					СчПр = СчПр + 1;
					СчИз = 0;
					СчТов = 0;
					
					ТекстПосылки = ТекстПосылки + Символы.ПС + Символы.Таб + СокрЛП(СчСкл) + "." + СокрЛП(СчПр) + ". [" + СокрЛП(лПрайс.Код) + "] " + СокрЛП(лПрайс.Наименование) + " = [" + СокрЛП(ВыборкаПрайсы.Сч) + "]";
					
					ВыборкаБренды = ВыборкаПрайсы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураИзготовитель");
					Пока ВыборкаБренды.Следующий() Цикл
						лБренд = ВыборкаБренды.НоменклатураИзготовитель; 
						СчИз = СчИз + 1;
						СчТов = 0;
						
						ТекстПосылки = ТекстПосылки + Символы.ПС + Символы.Таб + Символы.Таб + СокрЛП(СчСкл) + "." + СокрЛП(СчПр) + "." + СокрЛП(СчИз) + ". " + ВРЕГ(лБренд) + " = [" + СокрЛП(ВыборкаБренды.Сч) + "]";
						
						Выборка = ВыборкаБренды.Выбрать();
						Пока Выборка.Следующий() Цикл
							лТовНм = Выборка.НоменклатураНаименование;
							лТовАрт = Выборка.НоменклатураАртикул;
							лОст = Выборка.Остаток;
							лОст1с = Выборка.Остаток1С;
							лКогда = Формат(Выборка.ДтВрмРасчета,"ДЛФ=T");
							СчТов = СчТов + 1;
							
							ТекстПосылки = ТекстПосылки + Символы.ПС + Символы.Таб + Символы.Таб + Символы.Таб + СокрЛП(СчСкл) + "." + СокрЛП(СчПр) + "." + СокрЛП(СчИз) + ". " + СокрЛП(СчТов) + " : [" + СокрЛП(лТовАрт) + "] " + СокрЛП(лТовНм) + ", где на [" + СокрЛП(лКогда) + "] ОстWeb = [" + СокрЛП(лОст)+ "], Ост1с = [" + СокрЛП(лОст1с) + "]";
							
						КонецЦикла;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			ТекстПосылки = "Всего по всем складам найдено расхождений = [" + СокрЛП(Ит) + "]" + Символы.ПС + 
			               "Время выполнения расчета: с [" + СокрлП(ДтВрмН)+  "] по [" + СокрЛП(ДтВрмК) + "]" + Символы.ПС +  
			                ТекстПосылки;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекстПосылки) тогда
		ТекстПосылки = "Расхождений не найдено";
	КонецЕсли;
	
	СписокАдресатов = Новый СписокЗначений;
	СписокАдресатов.Добавить("Durandin-DA@part-kom.ru", "Дурандин Дмитрий");
	СписокАдресатов.Добавить("Pushkin-DS@Part-kom.ru", "Пушкин Денис");
	СписокАдресатов.Добавить("Golubev-SV@Part-kom.ru", "Голубев Сергей");
	
	РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом,ТекстПосылки,"Сверка остатков с сайтом",СписокАдресатов);
	
	// - 20181011 Пушкин XX-1058
	
КонецПроцедуры

Процедура ПроверитьСостояниеИсточникаДанных()
	Если ВнешниеИсточникиДанных.СайтMySQL_parts_common_nm.ПолучитьСостояние() = СостояниеВнешнегоИсточникаДанных.Отключен тогда	
		Параметры = ВнешниеИсточникиДанных.СайтMySQL_parts_common_nm.ПолучитьОбщиеПараметрыСоединения(); 
		Параметры.СУБД = "MySQL";
		Параметры.СтрокаСоединения =СтрокаСоединения(); 
		ВнешниеИсточникиДанных.СайтMySQL_parts_common_nm.УстановитьОбщиеПараметрыСоединения(Параметры); 
	КонецЕсли;
	
	
КонецПроцедуры	

Функция СтрокаСоединения()
	СтрокаПодключенияADO = "Driver={MySQL ODBC 5.3 Unicode Driver};Server = %АдресСервера%;Database = %ИмяБазы%;UID = %ИмяПользователя%;PWD = %ПарольПользователя%";	
	СтрокаПодключенияADO = СтрЗаменить(СтрокаПодключенияADO, "%АдресСервера%", "mysql-ro.part-kom.ru");
	СтрокаПодключенияADO = СтрЗаменить(СтрокаПодключенияADO, "%ИмяБазы%", "parts_common_nm");
	СтрокаПодключенияADO = СтрЗаменить(СтрокаПодключенияADO, "%ИмяПользователя%", "1c83");
	СтрокаПодключенияADO = СтрЗаменить(СтрокаПодключенияADO, "%ПарольПользователя%","Dz2Lwqm4");
	Возврат   СтрокаПодключенияADO
	
КонецФункции

Функция ВыбратьОстаткиБрендовСайтаПоПрайсу(ТаблицаПрайсов)	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vsm_sklad.source_maker КАК ИзготовительНаименование,
	|	СУММА(vsm_sklad.f_quantity_int) КАК Остаток,
	|	vsm_sklad.f_provider_id КАК КодПрайсаЧисло
	|ИЗ
	|	ВнешнийИсточникДанных.СайтMySQL_parts_common_nm.Таблица.vsm_sklad КАК vsm_sklad
	|ГДЕ
	|	vsm_sklad.f_provider_id В(&КодПрайса)
	|
	|СГРУППИРОВАТЬ ПО
	|	vsm_sklad.source_maker,
	|	vsm_sklad.f_provider_id";
	
	Запрос.УстановитьПараметр("КодПрайса", ТаблицаПрайсов.выгрузитьКолонку("КодПрайсаЧисло"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВыбратьОстаткиНоменклатурыСайтаПоПрайсу(ТаблицаПрайсов)//,ИзготовительНаименование)	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ    
	|	vsm_sklad.f_maker_id,
	|	vsm_sklad.f_number,
	|	vsm_sklad.source_maker КАК ИзготовительНаименование,
	|	СУММА(vsm_sklad.f_quantity_int) КАК Остаток,
	|	vsm_sklad.f_store_id КАК ГУИД,
	|	vsm_sklad.f_provider_id КАК КодПрайсаЧисло
	|ИЗ
	|	ВнешнийИсточникДанных.СайтMySQL_parts_common_nm.Таблица.vsm_sklad КАК vsm_sklad
	|ГДЕ
	|	vsm_sklad.f_provider_id В(&КодПрайса)
	//|	И vsm_sklad.source_maker = &ИзготовительНаименование
	|
	|СГРУППИРОВАТЬ ПО
	|	vsm_sklad.f_maker_id,
	|	vsm_sklad.f_number,
	|	vsm_sklad.source_maker,
	|	vsm_sklad.f_store_id,
	|	vsm_sklad.f_provider_id";
	
	Запрос.УстановитьПараметр("КодПрайса",  ТаблицаПрайсов.выгрузитьКолонку("КодПрайсаЧисло"));
	//Запрос.УстановитьПараметр("ИзготовительНаименование", ИзготовительНаименование);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// + 20181011 Пушкин XX-1058
	ДтВрмРасчета = ТекущаяДата();
	// - 20181011 Пушкин XX-1058
	
	Возврат РезультатЗапроса.Выгрузить();
	
	
КонецФункции

Процедура ОчиститьЗаписьРегистраОстатки(Номенклатура,Прайс)
	
КонецПроцедуры	

Процедура  СверитьОстаткиПоТипуПоставки(ТипПоставки)
	
	ТаблицаПрайсов = ПолучитьТаблицуПрайсов(ТипПоставки);
	
	//Если много прайсов, то выполняем по 1 , т.к скуль может упасть
	
	// + Пушкин 20190313 XX-2125 в принудительном порядке делаю расчет по каждому из прайсов, т.к. по 16му всегда будет большая выборка
	
	//Если ТаблицаПрайсов.КОличество()> 50 тогда  
		Для каждого СтрокаПрайса  из ТаблицаПрайсов цикл 
			СверитьОстаткиПоПрайсам(ПолучитьТаблицуПрайсов_ПоПараметру(СтрокаПрайса.Прайс),ТипПоставки);
		КонецЦикла;
	//иначе 
	//	СверитьОстаткиПоПрайсам(ТаблицаПрайсов,ТипПоставки);
	//КонецЕсли;	

	// - Пушкин 20190313 XX-2125
	
КонецПроцедуры

Процедура СверитьОстаткиПоПрайсам(ТаблицаПрайсов,ТипПоставки)
	
	//ОстаткиБрендовСайта = ВыбратьОстаткиБрендовСайтаПоПрайсу(ТаблицаПрайсов) ;
	//
	//Если не ОстаткиБрендовСайта.Количество()  тогда 
	//	возврат  
	//КонецЕсли;	
	//
	//
	//ВыборкаИзготовителейСрасхождением  = ВыбратьИзготовителейСрасхождением(ТипПоставки,ОстаткиБрендовСайта,ТаблицаПрайсов);
	//
	//Пока ВыборкаИзготовителейСрасхождением.Следующий() Цикл	
	
	ДтВрмРасчета = ТекущаяДата();
	
		ОстаткиНоменклатурыПоБренду  = ВыбратьОстаткиНоменклатурыСайтаПоПрайсу(ТаблицаПрайсов);//,ВыборкаИзготовителейСрасхождением.ИзготовительНаименование);
		
		ЗаполнитьНоменклатуру(ОстаткиНоменклатурыПоБренду);
		
		ВыборкаНоменклатуры  =ВыбратьНоменклатуруСРасхождениями(ТипПоставки,ОстаткиНоменклатурыПоБренду,ТаблицаПрайсов);
		Пока ВыборкаНоменклатуры.Следующий() Цикл 
			ОчиститьЗаписи(ВыборкаНоменклатуры.Номенклатура,ВыборкаНоменклатуры.Прайс);	
			
			// + 20181011 Пушкин XX-1058
			нстр = ТЧизм.Добавить();
			нстр.Остаток  = ВыборкаНоменклатуры.Остаток;
			нстр.Остаток1С = ВыборкаНоменклатуры.Остаток1С;
			нстр.Номенклатура = ВыборкаНоменклатуры.Номенклатура;
			нстр.Прайс = ВыборкаНоменклатуры.Прайс;
			нстр.ДтВрмРасчета = ДтВрмРасчета;
			// - 20181011 Пушкин XX-1058
			
		КонецЦикла;
		
	//КонецЦикла;	
	
	
КонецПроцедуры	

Функция ВыбратьИзготовителейСрасхождением(ТипПоставки,ОстаткиСайта,ТаблицаПрайсов)
	Если  ТипПоставки = Перечисления.ТипПоставки.Сток тогда  
		ТекстЗапроса = ТекстЗапросаРасхожденийПоБренду_Сток() 
	иначеесли ТипПоставки = Перечисления.ТипПоставки.VMI тогда 	
	   ТекстЗапроса = ТекстЗапросаРасхожденийПоБренду_ОтветХранение();
   КонецЕсли;
   
   
   ЗапросРасхожденийБренда = новый Запрос(ТекстЗапроса);
  ЗапросРасхожденийБренда.УстановитьПараметр("ТаблицаПрайсов", ТаблицаПрайсов);
	 ЗапросРасхожденийБренда.УстановитьПараметр("ОстаткиСайта", ОстаткиСайта);
	 
	 Возврат ЗапросРасхожденийБренда.Выполнить().Выбрать();
  
   
КонецФункции	

Функция ВыбратьНоменклатуруСРасхождениями(ТипПоставки,ОстаткиНоменклатуры,ТаблицаПрайсов)
	
	// + Пушкин 20190313 XX-2125  сделаю  full вместо left join и вместо расчета по регистрам обращусь к ранее рассчитанному рез-ту в плане обмена с сайтом
	РубильникВкл = РегистрыСведений.НастройкиПодсистем.ЗначениеПараметра("Обмен 1С-Сайт", "ВключитьНовыйАлгоритмСравненияТоварныхОстатков", Ложь);
	
	Если РубильникВкл Тогда
		ТекстЗапроса = НовыйТекстЗапроса();
	Иначе
		Если  ТипПоставки = Перечисления.ТипПоставки.Сток тогда
			ТекстЗапроса = ТекстЗапросаРасхожденийПоНоменклатуре_Сток(); 
		иначеесли ТипПоставки = Перечисления.ТипПоставки.VMI тогда	
			ТекстЗапроса = ТекстЗапросаРасхожденийПоНоменклатуре_ОтветХранение();
		КонецЕсли;
	КонецЕсли;
	
	// - Пушкин 20190313 XX-2125
	
	Запрос = новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПрайсов", ТаблицаПрайсов);
	Запрос.УстановитьПараметр("ОстаткиСайта", ОстаткиНоменклатуры);
	// + 20181011 Пушкин XX-1058
	Запрос.УстановитьПараметр("ДтВрмРасчета", ДтВрмРасчета);
	// - 20181011 Пушкин XX-1058
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать();	
КонецФункции

Функция ПолучитьТаблицуПрайсов(ТипПоставки)
	Если ЗначениеЗаполнено(Прайс) тогда 
		Возврат ПолучитьТаблицуПрайсов_ПоПараметру(Прайс)	
	ИначеЕсли  ТипПоставки = Перечисления.ТипПоставки.Сток тогда 
		Возврат ПолучитьТаблицуПрайсов_Сток() 
	иначеесли ТипПоставки = Перечисления.ТипПоставки.VMI тогда 	
		Возврат ПолучитьТаблицуПрайсов_ОтветХранение()
	КонецЕсли;
КонецФункции	

Процедура ОчиститьЗаписи(Номенклатура,ПрайсПоставщика)
	Набор = Регистрысведений.ОстаткиНоменклатурыДляПланаОбменаССайтом.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Установить(Номенклатура);
	Набор.Отбор.ПрайсПоставщика.Установить(ПрайсПоставщика);	
	набор.записать();
КонецПроцедуры	

Процедура ЗаполнитьНоменклатуру(ОстаткиНоменклатурыПоБренду)
	
	ОстаткиНоменклатурыПоБренду.колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	Для Каждого Строка Из ОстаткиНоменклатурыПоБренду цикл
		
		Если ЗначениеЗаполнено(Строка.ГУИД) Тогда
		
			Попытка
			Строка.Номенклатура =  Справочники.Номенклатура.ПолучитьСсылку(новый УникальныйИдентификатор(Стрзаменить(Строка.ГУИД,"""","")));
			исключение
			КонецПопытки;
			
		// + Пушкин 20190314 XX-2125	
		Иначе
			
			Если ВключитьОпознаниеНоменклатурыПоАртикулуИзготовителю Тогда
			
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	Номенклатура.Ссылка
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	Номенклатура.Артикул = &Артикул
				|	И Номенклатура.Изготовитель В (
				|									ВЫБРАТЬ
				|										Изготовители.Ссылка
				|									ИЗ
				|										Справочник.Изготовители КАК Изготовители
				|									ГДЕ
				|										Изготовители.КодСайта = &КодСайта
				|										)";

				Запрос.УстановитьПараметр("Артикул", Строка.f_number);
				Запрос.УстановитьПараметр("КодСайта", Строка.f_maker_id);
				Результат = Запрос.Выполнить().Выгрузить();			
				Если Результат.Количество() > 0 Тогда
					Строка.Номенклатура = Результат[0].Ссылка;
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		// - Пушкин 20190314 XX-2125
		
	КонецЦикла;	
		
КонецПроцедуры	
	
#КонецОбласти


#Область Сток

//Функция ПолучитьСтрокиРасхождений_Сток()
//	//ПрайсСток = ПрайсСтока();
//	//КодПрайса = Число(ПрайсСток.Код);
//	
//	ОстаткиБрендовСайта = ВыбратьОстаткиБрендовСайтаПоПрайсу(КодПрайса) ;
//	
//	Если не ОстаткиБрендовСайта.количество()  тогда 
//		возврат Неопределено 
//	КонецЕсли;	
//	
//	Запрос = новый Запрос(ТекстЗапросаРасхожденийПоБренду());
//	Запрос.УстановитьПараметр("Прайс", ПрайсСток);
//	Запрос.УстановитьПараметр("ОстаткиСайта", ОстаткиБрендовСайта);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаНоменклатураИзготовитель = РезультатЗапроса.Выбрать();
//	//Запрос в цикле сделан специально, т.к майскульвешаетсяприполномзапросе, а не из-за лени
//	Пока ВыборкаНоменклатураИзготовитель.Следующий() Цикл	
//		ОстаткиНоменклатурыПоБренду  = ВыбратьОстаткиНоменклатурыСайтаПоПрайсу(КодПрайса,ВыборкаНоменклатураИзготовитель.ИзготовительНаименование);
//		ЗаполнитьНоменклатуру(ОстаткиНоменклатурыПоБренду);
//		Запрос = новый Запрос(ТекстЗапросаРасхожденийПоНоменклатуре());
//		Запрос.УстановитьПараметр("Прайс", ПрайсСток);
//		Запрос.УстановитьПараметр("ОстаткиСайта", ОстаткиНоменклатурыПоБренду);
//		РезультатЗапроса = Запрос.Выполнить();
//		
//		ВыборкаНоменклатуры  = РезультатЗапроса.Выбрать();
//		Пока ВыборкаНоменклатуры.Следующий() Цикл 
//			ОчиститьЗаписи(ВыборкаНоменклатуры.Номенклатура,ПрайсСток);
//			//Сообщить(СокрЛП(ВыборкаНоменклатуры.Номенклатура.Артикул) + " остаток 1с:" + СокрП(ВыборкаНоменклатуры.Остаток1С) +" Остаток сайт: "+СокрЛП(ВыборкаНоменклатуры.Остаток) );
//	
//		КонецЦикла;	
//	КонецЦикла;	
//КонецФункции

Функция ТекстЗапросаРасхожденийПоБренду_Сток()
	
	Возврат	"ВЫБРАТЬ
	       	|	ОстаткиСайта.ИзготовительНаименование,
	       	|	ОстаткиСайта.Остаток,
	       	|	ОстаткиСайта.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТДанныеСайта
	       	|ИЗ
	       	|	&ОстаткиСайта КАК ОстаткиСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВтТаблицаПрайсов.Прайс,
	       	|	ВтТаблицаПрайсов.Код,
	       	|	ВтТаблицаПрайсов.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТТаблицаПрайсов
	       	|ИЗ
	       	|	&ТаблицаПрайсов КАК ВтТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВТТаблицаПрайсов.Прайс,
	       	|	ВТДанныеСайта.ИзготовительНаименование,
	       	|	ВТДанныеСайта.Остаток,
	       	|	ВЫРАЗИТЬ(ВТТаблицаПрайсов.Прайс КАК Справочник.ПрайсыПоставщиков).Склад КАК Склад
	       	|ПОМЕСТИТЬ ВТДанныеСайтаСПрайсом
	       	|ИЗ
	       	|	ВТДанныеСайта КАК ВТДанныеСайта
	       	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПрайсов КАК ВТТаблицаПрайсов
	       	|		ПО ВТДанныеСайта.КодПрайсаЧисло = ВТТаблицаПрайсов.КодПрайсаЧисло
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	       	|	ВложенныйЗапрос.ИзготовительНаименование,
	       	|	ВложенныйЗапрос.Остаток,
	       	|	СУММА(ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв) КАК Остаток1С
	       	|ИЗ
	       	|	(ВЫБРАТЬ
	       	|		ВТДанныеСайтаСпрайсом.Остаток КАК Остаток,
	       	|		ВТДанныеСайтаСпрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|		СУММА(ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0)) КАК Резерв,
	       	|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	       	|		ВТДанныеСайтаСпрайсом.Прайс КАК Прайс
	       	|	ИЗ
	       	|		ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСпрайсом
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	       	|					,
	       	|					(Номенклатура.Изготовитель.Наименование, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|							ВТДанныеСайтаСПрайсом.Склад КАК Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК ТоварыНаСкладахОстатки
	       	|			ПО ВТДанныеСайтаСпрайсом.ИзготовительНаименование = ТоварыНаСкладахОстатки.Номенклатура.Изготовитель.Наименование
	       	|				И ВТДанныеСайтаСпрайсом.Склад = ТоварыНаСкладахОстатки.Склад
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
	       	|					,
	       	|					(Номенклатура.Изготовитель.Наименование, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|							ВТДанныеСайтаСПрайсом.Склад КАК Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК РезервыТоваровОстатки
	       	|			ПО ВТДанныеСайтаСпрайсом.ИзготовительНаименование = РезервыТоваровОстатки.Номенклатура.Изготовитель
	       	|				И ВТДанныеСайтаСпрайсом.Склад = РезервыТоваровОстатки.Склад
	       	|	
	       	|	СГРУППИРОВАТЬ ПО
	       	|		ВТДанныеСайтаСпрайсом.Остаток,
	       	|		ВТДанныеСайтаСпрайсом.ИзготовительНаименование,
	       	|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
	       	|		ВТДанныеСайтаСпрайсом.Прайс) КАК ВложенныйЗапрос
	       	|ГДЕ
	       	|	НЕ ВложенныйЗапрос.Остаток = ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв
	       	|
	       	|СГРУППИРОВАТЬ ПО
	       	|	ВложенныйЗапрос.ИзготовительНаименование,
	       	|	ВложенныйЗапрос.Остаток
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайтаСПрайсом"; 	
	
КонецФункции	

Функция ТекстЗапросаРасхожденийПоНоменклатуре_Сток()
	Возврат	"ВЫБРАТЬ
	       	|	ОстаткиСайта.Номенклатура,
	       	|	ОстаткиСайта.Остаток,
	       	|	ОстаткиСайта.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТДанныеСайта
	       	|ИЗ
	       	|	&ОстаткиСайта КАК ОстаткиСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВтТаблицаПрайсов.Прайс,
	       	|	ВтТаблицаПрайсов.Код,
	       	|	ВтТаблицаПрайсов.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТТаблицаПрайсов
	       	|ИЗ
	       	|	&ТаблицаПрайсов КАК ВтТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВТТаблицаПрайсов.Прайс,
	       	|	ВТДанныеСайта.Номенклатура,
	       	|	ВТДанныеСайта.Остаток,
	       	|	ВЫРАЗИТЬ(ВТТаблицаПрайсов.Прайс КАК Справочник.ПрайсыПоставщиков).Склад КАК Склад
	       	|ПОМЕСТИТЬ ВТДанныеСайтаСПрайсом
	       	|ИЗ
	       	|	ВТДанныеСайта КАК ВТДанныеСайта
	       	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПрайсов КАК ВТТаблицаПрайсов
	       	|		ПО ВТДанныеСайта.КодПрайсаЧисло = ВТТаблицаПрайсов.КодПрайсаЧисло
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	       	|	ВложенныйЗапрос.Остаток,
	       	|	ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв КАК Остаток1С,
	       	|	ВложенныйЗапрос.Резерв,
	       	|	ВложенныйЗапрос.Номенклатура,
	       	|	ВложенныйЗапрос.Прайс
	       	|ИЗ
	       	|	(ВЫБРАТЬ
	       	|		ВТДанныеСайтаСПрайсом.Остаток КАК Остаток,
	       	|		СУММА(ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0)) КАК Резерв,
	       	|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	       	|		ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|		ВТДанныеСайтаСПрайсом.Прайс КАК Прайс
	       	|	ИЗ
	       	|		ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
			// + 20181011 Пушкин XX-1058
			//|					,
			|					&ДтВрмРасчета,
			// - 20181011 Пушкин XX-1058
	       	|					(Номенклатура, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|							ВТДанныеСайтаСПрайсом.Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК ТоварыНаСкладахОстатки
	       	|			ПО ВТДанныеСайтаСПрайсом.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	       	|				И ВТДанныеСайтаСПрайсом.Склад = ТоварыНаСкладахОстатки.Склад
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
			// + 20181011 Пушкин XX-1058
			//|					,
			|					&ДтВрмРасчета,
			// - 20181011 Пушкин XX-1058
	       	|					(Номенклатура, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|							ВТДанныеСайтаСПрайсом.Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК РезервыТоваровОстатки
	       	|			ПО ВТДанныеСайтаСПрайсом.Номенклатура = РезервыТоваровОстатки.Номенклатура
	       	|				И ВТДанныеСайтаСПрайсом.Склад = РезервыТоваровОстатки.Склад
	       	|				И (РезервыТоваровОстатки.КоличествоОстаток > 0)
	       	|	
	       	|	СГРУППИРОВАТЬ ПО
	       	|		ВТДанныеСайтаСПрайсом.Остаток,
	       	|		ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
	       	|		ВТДанныеСайтаСПрайсом.Номенклатура,
	       	|		ВТДанныеСайтаСПрайсом.Прайс) КАК ВложенныйЗапрос
	       	|ГДЕ
	       	|	НЕ ВложенныйЗапрос.Остаток = ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайтаСПрайсом"; 		
	
КонецФункции	

Функция НовыйТекстЗапроса()
	
	Возврат	"ВЫБРАТЬ
			|	ВтТаблицаПрайсов.Прайс,
			|	ВтТаблицаПрайсов.Код,
			|	ВтТаблицаПрайсов.КодПрайсаЧисло
			|ПОМЕСТИТЬ ВТТаблицаПрайсов
			|ИЗ
			|	&ТаблицаПрайсов КАК ВтТаблицаПрайсов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.Номенклатура,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.ПрайсПоставщика,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.ReceivedNo,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.СвободныйОстатокКоличество,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.Цена
			|ПОМЕСТИТЬ ДанныеОбменаПоИнтересующимНасПрайсам
			|ИЗ
			|	РегистрСведений.ОстаткиНоменклатурыДляПланаОбменаССайтом КАК ОстаткиНоменклатурыДляПланаОбменаССайтом
			|ГДЕ
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.ПрайсПоставщика В
			|			(ВЫБРАТЬ
			|				ВТТаблицаПрайсов.Прайс
			|			ИЗ
			|				ВТТаблицаПрайсов)
			|	И ОстаткиНоменклатурыДляПланаОбменаССайтом.Подтвержден = ИСТИНА
			|	И ОстаткиНоменклатурыДляПланаОбменаССайтом.ДтВрм_Подтверждения < &ДтВрмРасчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.Номенклатура,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.ПрайсПоставщика,
			|	МАКСИМУМ(ОстаткиНоменклатурыДляПланаОбменаССайтом.ReceivedNo) КАК ReceivedNo
			|ПОМЕСТИТЬ СрезПоследнихПоНомеруПосылки
			|ИЗ
			|	ДанныеОбменаПоИнтересующимНасПрайсам КАК ОстаткиНоменклатурыДляПланаОбменаССайтом
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.Номенклатура,
			|	ОстаткиНоменклатурыДляПланаОбменаССайтом.ПрайсПоставщика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СрезПоследнихПоНомеруПосылки.Номенклатура КАК Номенклатура,
			|	СрезПоследнихПоНомеруПосылки.ПрайсПоставщика КАК ПрайсПоставщика,
			|	СрезПоследнихПоНомеруПосылки.ПрайсПоставщика.Код КАК ПрайсПоставщика_Код,
			|	СрезПоследнихПоНомеруПосылки.ReceivedNo,
			|	ЕСТЬNULL(ОстаткиНоменклатурыДляПланаОбменаССайтом.СвободныйОстатокКоличество, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиНоменклатурыДляПланаОбменаССайтом.Цена, 0) КАК Цена
			|ПОМЕСТИТЬ ОстаткиСгруппированные
			|ИЗ
			|	СрезПоследнихПоНомеруПосылки КАК СрезПоследнихПоНомеруПосылки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеОбменаПоИнтересующимНасПрайсам КАК ОстаткиНоменклатурыДляПланаОбменаССайтом
			|		ПО СрезПоследнихПоНомеруПосылки.ReceivedNo = ОстаткиНоменклатурыДляПланаОбменаССайтом.ReceivedNo
			|			И СрезПоследнихПоНомеруПосылки.Номенклатура = ОстаткиНоменклатурыДляПланаОбменаССайтом.Номенклатура
			|			И СрезПоследнихПоНомеруПосылки.ПрайсПоставщика = ОстаткиНоменклатурыДляПланаОбменаССайтом.ПрайсПоставщика
			//|ГДЕ
			//|	ЕСТЬNULL(ОстаткиНоменклатурыДляПланаОбменаССайтом.СвободныйОстатокКоличество, 0) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ДанныеОбменаПоИнтересующимНасПрайсам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ СрезПоследнихПоНомеруПосылки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиСайта.Номенклатура,
			|	ОстаткиСайта.Остаток,
			|	ОстаткиСайта.КодПрайсаЧисло
			|ПОМЕСТИТЬ ВТДанныеСайта
			|ИЗ
			|	&ОстаткиСайта КАК ОстаткиСайта
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТДанныеСайта.Номенклатура КАК Номенклатура,
			|	ВТДанныеСайта.Остаток КАК СвободныйОстатокКоличество,
			|	ВТДанныеСайта.КодПрайсаЧисло,
			|	ВТТаблицаПрайсов.Прайс КАК ПрайсПоставщика,
			|	ВТТаблицаПрайсов.Код
			|ПОМЕСТИТЬ ДанныеСайта
			|ИЗ
			|	ВТДанныеСайта КАК ВТДанныеСайта
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПрайсов КАК ВТТаблицаПрайсов
			|		ПО ВТДанныеСайта.КодПрайсаЧисло = ВТТаблицаПрайсов.КодПрайсаЧисло
			//|ГДЕ
			//|	ВТДанныеСайта.Остаток > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДанныеСайта
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТТаблицаПрайсов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ВсеОстатки.ПрайсПоставщика, Сайт.ПрайсПоставщика) КАК Прайс,
			|	ЕСТЬNULL(ВсеОстатки.Номенклатура, Сайт.Номенклатура) КАК Номенклатура,
			|	ЕСТЬNULL(Сайт.СвободныйОстатокКоличество, 0) КАК Остаток,
			|	ЕСТЬNULL(ВсеОстатки.КоличествоОстаток, 0) КАК Остаток1С,
			|	1 КАК Сч
			|ИЗ
			|	ОстаткиСгруппированные КАК ВсеОстатки
			|		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеСайта КАК Сайт
			|		ПО ВсеОстатки.ПрайсПоставщика = Сайт.ПрайсПоставщика
			|			И ВсеОстатки.Номенклатура = Сайт.Номенклатура
			|ГДЕ
			|	НЕ ЕСТЬNULL(ВсеОстатки.КоличествоОстаток, 0) = ЕСТЬNULL(Сайт.СвободныйОстатокКоличество, 0)";

	
КонецФункции

#КонецОбласти

#Область Ответ_хранение
Функция ТекстЗапросаРасхожденийПоБренду_ОтветХранение()
	Возврат	"ВЫБРАТЬ
	       	|	ОстаткиСайта.ИзготовительНаименование,
	       	|	ОстаткиСайта.Остаток,
	       	|	ОстаткиСайта.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТДанныеСайта
	       	|ИЗ
	       	|	&ОстаткиСайта КАК ОстаткиСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВтТаблицаПрайсов.Прайс,
	       	|	ВтТаблицаПрайсов.Код,
	       	|	ВтТаблицаПрайсов.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТТаблицаПрайсов
	       	|ИЗ
	       	|	&ТаблицаПрайсов КАК ВтТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВТТаблицаПрайсов.Прайс,
	       	|	ВТДанныеСайта.ИзготовительНаименование,
	       	|	ВТДанныеСайта.Остаток,
	       	|	ВЫРАЗИТЬ(ВТТаблицаПрайсов.Прайс КАК Справочник.ПрайсыПоставщиков).Склад КАК Склад
	       	|ПОМЕСТИТЬ ВТДанныеСайтаСПрайсом
	       	|ИЗ
	       	|	ВТДанныеСайта КАК ВТДанныеСайта
	       	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПрайсов КАК ВТТаблицаПрайсов
	       	|		ПО ВТДанныеСайта.КодПрайсаЧисло = ВТТаблицаПрайсов.КодПрайсаЧисло
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	       	|	ВложенныйЗапрос.ИзготовительНаименование,
	       	|	ВложенныйЗапрос.Остаток,
	       	|	СУММА(ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв) КАК Остаток1С
	       	|ИЗ
	       	|	(ВЫБРАТЬ
	       	|		ВТДанныеСайтаСпрайсом.Остаток КАК Остаток,
	       	|		ВТДанныеСайтаСпрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|		СУММА(ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0)) КАК Резерв,
	       	|		ЕСТЬNULL(ПартииТоваровОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	       	|		ВТДанныеСайтаСпрайсом.Прайс КАК Прайс
	       	|	ИЗ
	       	|		ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСпрайсом
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваров.Остатки(
	       	|					,
	       	|					(Номенклатура.Изготовитель.Наименование, Склад) В
	       	|							(ВЫБРАТЬ
	       	|								ВТДанныеСайтаСПрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|								ВТДанныеСайтаСПрайсом.Склад КАК Склад
	       	|							ИЗ
	       	|								ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)
	       	|						И СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартии.ПринятыйНаОтветХранение)) КАК ПартииТоваровОстатки
	       	|			ПО ВТДанныеСайтаСпрайсом.ИзготовительНаименование = ПартииТоваровОстатки.Номенклатура.Изготовитель.Наименование
	       	|				И ВТДанныеСайтаСпрайсом.Склад = ПартииТоваровОстатки.Склад
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
	       	|					,
	       	|					(Номенклатура.Изготовитель.Наименование, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.ИзготовительНаименование КАК ИзготовительНаименование,
	       	|							ВТДанныеСайтаСПрайсом.Склад КАК Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК РезервыТоваровОстатки
	       	|			ПО ВТДанныеСайтаСпрайсом.ИзготовительНаименование = РезервыТоваровОстатки.Номенклатура.Изготовитель
	       	|				И ВТДанныеСайтаСпрайсом.Склад = РезервыТоваровОстатки.Склад
	       	|	
	       	|	СГРУППИРОВАТЬ ПО
	       	|		ВТДанныеСайтаСпрайсом.Остаток,
	       	|		ВТДанныеСайтаСпрайсом.ИзготовительНаименование,
	       	|		ЕСТЬNULL(ПартииТоваровОстатки.КоличествоОстаток, 0),
	       	|		ВТДанныеСайтаСпрайсом.Прайс) КАК ВложенныйЗапрос
	       	|ГДЕ
	       	|	НЕ ВложенныйЗапрос.Остаток = ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв
	       	|
	       	|СГРУППИРОВАТЬ ПО
	       	|	ВложенныйЗапрос.ИзготовительНаименование,
	       	|	ВложенныйЗапрос.Остаток
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайтаСПрайсом"; 	

	
КонецФункции

Функция ТекстЗапросаРасхожденийПоНоменклатуре_ОтветХранение()
	Возврат	"ВЫБРАТЬ
	       	|	ОстаткиСайта.Номенклатура,
	       	|	ОстаткиСайта.Остаток,
	       	|	ОстаткиСайта.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТДанныеСайта
	       	|ИЗ
	       	|	&ОстаткиСайта КАК ОстаткиСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВтТаблицаПрайсов.Прайс,
	       	|	ВтТаблицаПрайсов.Код,
	       	|	ВтТаблицаПрайсов.КодПрайсаЧисло
	       	|ПОМЕСТИТЬ ВТТаблицаПрайсов
	       	|ИЗ
	       	|	&ТаблицаПрайсов КАК ВтТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ
	       	|	ВТТаблицаПрайсов.Прайс,
	       	|	ВТДанныеСайта.Номенклатура,
	       	|	ВТДанныеСайта.Остаток,
	       	|	ВЫРАЗИТЬ(ВТТаблицаПрайсов.Прайс КАК Справочник.ПрайсыПоставщиков).Склад КАК Склад
	       	|ПОМЕСТИТЬ ВТДанныеСайтаСПрайсом
	       	|ИЗ
	       	|	ВТДанныеСайта КАК ВТДанныеСайта
	       	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПрайсов КАК ВТТаблицаПрайсов
	       	|		ПО ВТДанныеСайта.КодПрайсаЧисло = ВТТаблицаПрайсов.КодПрайсаЧисло
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайта
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТТаблицаПрайсов
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	       	|	ВложенныйЗапрос.Остаток,
	       	|	ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв КАК Остаток1С,
	       	|	ВложенныйЗапрос.Резерв,
	       	|	ВложенныйЗапрос.Номенклатура,
	       	|	ВложенныйЗапрос.Прайс
	       	|ИЗ
	       	|	(ВЫБРАТЬ
	       	|		ВТДанныеСайтаСПрайсом.Остаток КАК Остаток,
	       	|		СУММА(ЕСТЬNULL(РезервыТоваровОстатки.КоличествоОстаток, 0)) КАК Резерв,
	       	|		ЕСТЬNULL(ПартииТоваровОстатки.КоличествоОстаток, 0) КАК ОстатокНаСкладе,
	       	|		ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|		ВТДанныеСайтаСПрайсом.Прайс КАК Прайс
	       	|	ИЗ
	       	|		ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваров.Остатки(
			// + 20181011 Пушкин XX-1058
			//|					,
			|					&ДтВрмРасчета,
			// - 20181011 Пушкин XX-1058
	       	|					(Номенклатура, Склад) В
	       	|							(ВЫБРАТЬ
	       	|								ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|								ВТДанныеСайтаСПрайсом.Склад
	       	|							ИЗ
	       	|								ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)
	       	|						И СтатусПартии = ЗНАЧЕНИЕ(Перечисление.СтатусыПартии.ПринятыйНаОтветХранение)) КАК ПартииТоваровОстатки
	       	|			ПО ВТДанныеСайтаСПрайсом.Номенклатура = ПартииТоваровОстатки.Номенклатура
	       	|				И ВТДанныеСайтаСПрайсом.Склад = ПартииТоваровОстатки.Склад
	       	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервыТоваров.Остатки(
			// + 20181011 Пушкин XX-1058
			//|					,
			|					&ДтВрмРасчета,
			// - 20181011 Пушкин XX-1058
	       	|					(Номенклатура, Склад) В
	       	|						(ВЫБРАТЬ
	       	|							ВТДанныеСайтаСПрайсом.Номенклатура КАК Номенклатура,
	       	|							ВТДанныеСайтаСПрайсом.Склад
	       	|						ИЗ
	       	|							ВТДанныеСайтаСПрайсом КАК ВТДанныеСайтаСПрайсом)) КАК РезервыТоваровОстатки
	       	|			ПО ВТДанныеСайтаСПрайсом.Номенклатура = РезервыТоваровОстатки.Номенклатура
	       	|				И ВТДанныеСайтаСПрайсом.Склад = РезервыТоваровОстатки.Склад
	       	|	
	       	|	СГРУППИРОВАТЬ ПО
	       	|		ВТДанныеСайтаСПрайсом.Остаток,
	       	|		ЕСТЬNULL(ПартииТоваровОстатки.КоличествоОстаток, 0),
	       	|		ВТДанныеСайтаСПрайсом.Номенклатура,
	       	|		ВТДанныеСайтаСПрайсом.Прайс) КАК ВложенныйЗапрос
	       	|ГДЕ
	       	|	НЕ ВложенныйЗапрос.Остаток = ВложенныйЗапрос.ОстатокНаСкладе - ВложенныйЗапрос.Резерв
	       	|;
	       	|
	       	|////////////////////////////////////////////////////////////////////////////////
	       	|УНИЧТОЖИТЬ ВТДанныеСайтаСПрайсом"; 		

КонецФункции	
#КонецОбласти

#Область СпискиПрайсов

Функция ПолучитьТаблицуПрайсов_ОтветХранение()	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрайсыПоставщиков.Ссылка КАК Прайс,
		|	ПрайсыПоставщиков.Код,
		|	0 КАК КодПрайсаЧисло
		|ИЗ
		|	Справочник.ПрайсыПоставщиков КАК ПрайсыПоставщиков
		|ГДЕ
		|	ПрайсыПоставщиков.Склад.СкладVMI = ИСТИНА
		|	И ПрайсыПоставщиков.Склад.ВыгружатьНаСайт = ИСТИНА
		|	И НЕ ПрайсыПоставщиков.Склад = ЗНАЧЕНИЕ(Справочник.Склады.Пустаяссылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда 
		Возврат Неопределено;
	ИНаче 
		ТабПрайса = РезультатЗапроса.Выгрузить();
		Возврат ЗаполнитьПреобразоватьКодВЧисло(ТабПрайса);
	КонецЕсли;	
	
Конецфункции 	

Функция ПолучитьТаблицуПрайсов_Сток()	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрайсыПоставщиков.Ссылка КАК Прайс,
		|	ПрайсыПоставщиков.Код,
		|	0 КАК КодПрайсаЧисло
		|ИЗ
		|	Справочник.ПрайсыПоставщиков КАК ПрайсыПоставщиков
		|ГДЕ
		|	ПрайсыПоставщиков.Склад.СкладVMI = ЛОЖЬ
		|	И ПрайсыПоставщиков.Склад.ВыгружатьНаСайт = ИСТИНА
		|	И НЕ ПрайсыПоставщиков.Склад = ЗНАЧЕНИЕ(Справочник.Склады.Пустаяссылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда 
		Возврат Неопределено;
	ИНаче 
		ТабПрайса = РезультатЗапроса.Выгрузить();
		Возврат ЗаполнитьПреобразоватьКодВЧисло(ТабПрайса);
	КонецЕсли;	
	
Конецфункции 

Функция ПолучитьТаблицуПрайсов_ПоПараметру(ПараметрПрайс)
ТаблицаПрайса = новый ТаблицаЗначений;
ТаблицаПрайса.Колонки.Добавить("Прайс",новый ОписаниеТипов("справочникСсылка.ПрайсыПоставщиков"));
ТаблицаПрайса.Колонки.Добавить("Код",Новый ОписаниеТипов("Строка"));
ТаблицаПрайса.Колонки.Добавить("КодПрайсаЧисло",новый описаниеТипов("Число"));

Строка = ТаблицаПрайса.Добавить();
Строка.Прайс = ПараметрПрайс;
Строка.Код = ПараметрПрайс.Код;
Строка.КодПрайсаЧисло = Число(ПараметрПрайс.Код);

Возврат ТаблицаПрайса;
КонецФункции	

Функция ЗаполнитьПреобразоватьКодВЧисло(ТаблицаПрайсов,РазбиватьТаблицу = ложь, Шаг = 100)
//Если ТаблицаПрайсов.количество() >Шаг  тогда 
//РазбиватьТаблицу = истина ;
//СтруткураТаблиц = новый Структура();
//КонецЕсли; 
//сч = 0;	

Для каждого СтрокаПрайсов из ТаблицаПрайсов цикл
	
//Если РазбиватьТаблицу тогда 
//	Если сч=0 тогда 
//		
//	иначеесли сч>=Шаг 
//		сч = 0;
//		
//КонецЕсли;	

СтрокаПрайсов.КодПрайсаЧисло = Число(СтрокаПрайсов.Код)
//сч = сч+1;
КонецЦикла;	

Возврат ТаблицаПрайсов
КонецФункции	
	
#КонецОбласти


