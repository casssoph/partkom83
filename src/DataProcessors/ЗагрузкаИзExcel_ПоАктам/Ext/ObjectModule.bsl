Функция СведенияОВнешнейОбработке() Экспорт
	РегистрационныеДанные = Новый Структура;
	РегистрационныеДанные.Вставить("Наименование", "Загрузка дополнительных свойств");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	РегистрационныеДанные.Вставить("Версия", "1.00");
	РегистрационныеДанные.Вставить("ВерсияБСП", "1.2.1.4");

	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
	
	РегистрационныеДанные.Вставить("Информация", "Обработка для загрузки дополнительных свойств");
	
	Назначение = Новый Массив;
	Назначение.Добавить("Справочник.СтруктураПредприятия");
	//Назначение.Добавить("Документ.ПоступлениеТоваровУслуг");
	РегистрационныеДанные.Вставить("Назначение", Назначение);	
	
	ТЗКоманд = Новый ТаблицаЗначений;
	ТЗКоманд.Колонки.Добавить("Идентификатор");
	ТЗКоманд.Колонки.Добавить("Представление");
	ТЗКоманд.Колонки.Добавить("Модификатор");
	ТЗКоманд.Колонки.Добавить("ПоказыватьОповещение");
	ТЗКоманд.Колонки.Добавить("Использование");
	
	СтрокаКоманды = тзКоманд.Добавить();
	СтрокаКоманды.Идентификатор = Новый УникальныйИдентификатор;
	СтрокаКоманды.Представление = "Загрузить дополнительные свойства ("+РегистрационныеДанные.Версия+")";
	СтрокаКоманды.ПоказыватьОповещение = Ложь;
	СтрокаКоманды.Использование = "ОткрытиеФормы";
	
	РегистрационныеДанные.Вставить("Команды", ТЗКоманд);
	
	Возврат РегистрационныеДанные;
	
КонецФункции	

//////////////////////////////////////////////////////


// Здесь можно посмотреть как устроена Таблица Команда
Функция ПолучитьТаблицуКоманд()
	
	// Таблица Команд – это таблица значений – вот её и создаём
	//
	Команды = Новый ТаблицаЗначений;
	
	// Начинаем делать колонки для таблицы команд
	
	// КОЛОНКА Представление
	// Представление – представление команды в пользовательском интерфейсе;
	//
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	// КОЛОНКА Идентификатор
	// Идентификатор – идентификатор команды; любая строка, уникальная в пределах данной обработки (отчета). 
	// Для обработок с печатными формами на основе макета табличного документа должен содержать список макетов, на основе которых нужно получить печатную форму (см. описание параметра ИменаМакетов процедуры УправлениеПечатьюКлиент.ВыполнитьКомандуПечати в разделе Печать).
	//
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	// КОЛОНКА Использование 
	// Использование – вариант запуска команды – их всего Три – они задаются строками:
	// ● "ОткрытиеФормы" – открыть форму обработки;
	// ● "ВызовКлиентскогоМетода" – вызвать клиентскую экспортную процедуру из модуля формы обработки;
	// ● "ВызовСерверногоМетода" – вызвать серверную экспортную процедуру из модуля объекта обработки.
	//
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	// КОЛОНКА Показывать Оповещение
	// ПоказыватьОповещение – Истина, если требуется показать оповещение при начале и при завершении работы обработки. Например, при запуске обработки без открытия формы.
	//
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	// КОЛОНКА Модификатор
	// Модификатор – дополнительный модификатор команды. Используется для дополнительных обработок печатных форм на основе табличных макетов, для таких команд должен содержать строку ПечатьMXL (см. пример в демонстрационной конфигурации Библиотеки Стандартных Подсистем).
	//
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	// Созданную пустую таблицу возвращают назад
	Возврат Команды;
	
КонецФункции

