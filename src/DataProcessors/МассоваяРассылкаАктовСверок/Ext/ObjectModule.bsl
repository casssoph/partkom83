
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если Не РассылатьПокупателям И Не РассылатьПоставщикам Тогда 
		Отказ = Истина;
		Сообщить("Выберите хотя бы один вид контрагентов для рассылки: поставщиков или покупателей");
	КонецЕсли;
	Если СтараяОрганизацияТребуется Тогда 
		ПроверяемыеРеквизиты.Добавить("СтараяОрганизация");
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьРассылку() Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.ОсновнойДоговорКонтрагента.Организация В(&Организация)
	               |	И Контрагенты.Покупатель
	               |	И &РассылатьПокупателям
	               |	И (Контрагенты.ОсновнойДоговорКонтрагента.ДоговорПриостановлен
	               |			ИЛИ НЕ &ТолькоПриостановленные)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.ОсновнойДоговорКонтрагентаЗакупка.Организация В(&Организация)
	               |	И Контрагенты.Поставщик
	               |	И &РассылатьПоставщикам
	               |	И (Контрагенты.ОсновнойДоговорКонтрагентаЗакупка.ДоговорПриостановлен
	               |			ИЛИ НЕ &ТолькоПриостановленные)";
	
	Запрос.УстановитьПараметр("Организация", Организации.ВыгрузитьКолонку(0));
	Запрос.УстановитьПараметр("РассылатьПокупателям", РассылатьПокупателям);
	Запрос.УстановитьПараметр("РассылатьПоставщикам", РассылатьПоставщикам);
	Запрос.УстановитьПараметр("ТолькоПриостановленные", ТолькоПриостановленные);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Если СтараяОрганизацияТребуется Тогда 
		ОтсеятьПоСтаройОрганизации(Таблица);
	КонецЕсли;
	
	Если Не ВыгружатьЕслиНетДолгов Тогда 
		ОтсеятьБезДолгов(Таблица);
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Таблица Цикл 
		СтруктураОтчета = СформироватьОтчет(СтрокаТЧ.Ссылка);
		ОтослатьПоПочте(СтруктураОтчета);
	КонецЦикла;
КонецПроцедуры

Процедура ОтсеятьПоСтаройОрганизации(Таблица)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблица.Ссылка
	               |ПОМЕСТИТЬ Таблица
	               |ИЗ
	               |	&Таблица КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДоговорыКонтрагентов.Владелец
	               |ПОМЕСТИТЬ вт
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Организация = &Организация
	               |	И ДоговорыКонтрагентов.Владелец В
	               |			(ВЫБРАТЬ
	               |				вт.Ссылка
	               |			ИЗ
	               |				вт)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таблица.Ссылка
	               |ИЗ
	               |	Таблица КАК Таблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	               |		ПО Таблица.Ссылка = вт.Владелец";
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("Организация", СтараяОрганизация);
	
	Таблица = Запрос.Выполнить().Выгрузить();
КонецПроцедуры

Процедура ОтсеятьБезДолгов(Таблица)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблица.Ссылка
	               |ПОМЕСТИТЬ Таблица
	               |ИЗ
	               |	&Таблица КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВзаиморасчетыОстатки.ДоговорКонтрагента.Владелец
	               |ПОМЕСТИТЬ Взаиморасчеты
	               |ИЗ
	               |	РегистрНакопления.Взаиморасчеты.Остатки(
	               |			,
	               |			ДоговорКонтрагента.Владелец В
	               |				(ВЫБРАТЬ
	               |					Таблица.Ссылка
	               |				ИЗ
	               |					Таблица)) КАК ВзаиморасчетыОстатки
	               |ГДЕ
	               |	ВзаиморасчетыОстатки.СуммаУпрОстаток <> 0
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДепозитыКонтрагентовОстатки.ДоговорКонтрагента.Владелец
	               |ИЗ
	               |	РегистрНакопления.ДепозитыКонтрагентов.Остатки(
	               |			,
	               |			ДоговорКонтрагента.Владелец В
	               |				(ВЫБРАТЬ
	               |					Таблица.Ссылка
	               |				ИЗ
	               |					Таблица)) КАК ДепозитыКонтрагентовОстатки
	               |ГДЕ
	               |	ДепозитыКонтрагентовОстатки.СуммаУпрОстаток <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таблица.Ссылка
	               |ИЗ
	               |	Таблица КАК Таблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Взаиморасчеты КАК Взаиморасчеты
	               |		ПО Таблица.Ссылка = Взаиморасчеты.ДоговорКонтрагентаВладелец";
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Таблица = Запрос.Выполнить().Выгрузить();
	               
КонецПроцедуры

Функция  СформироватьОтчет(Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.Ссылка
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	Договора = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	
	СтруктураОтчета = Новый Структура("Ошибка,ТекстОшибки", Ложь, "");
	СтруктураОтчета.Вставить("Организация", Контрагент.ОсновнойДоговорКонтрагента.Организация);
	СтруктураОтчета.Вставить("Контрагент", Контрагент);
	СтруктураОтчета.Вставить("Договор", Договора);
	СтруктураОтчета.Вставить("НачалоПериода", НачалоПериода);
	СтруктураОтчета.Вставить("ОкончаниеПериода", КонецПериода);
	СтруктураОтчета.Вставить("ТабличныйДокумент", Новый ТабличныйДокумент);
	
	Отчет = Отчеты.АктСверкиВзаиморасчетов.Создать();
	Отчет.ЗаполнитьАктСверки(СтруктураОтчета);
	
	Возврат СтруктураОтчета;
КонецФункции

Процедура ОтослатьПоПочте(СтруктураОтчета)
	Если Не СтруктураОтчета.Ошибка Тогда 		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КонтактнаяИнформация.Представление КАК Адрес
		               |ИЗ
		               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |ГДЕ
		               |	КонтактнаяИнформация.Объект = &Объект
		               |	И КонтактнаяИнформация.Вид = &ВидЭмейл
		               |	И КонтактнаяИнформация.Представление <> """"";
		Запрос.УстановитьПараметр("Объект", СтруктураОтчета.Контрагент);
		Запрос.УстановитьПараметр("ВидЭмейл", Справочники.ВидыКонтактнойИнформации.EmailДляОбменаДокументамиСКонтрагентами);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда 
			Сообщить("У контрагента" + СтруктураОтчета.Контрагент + " нет адреса для обмена документами");
			Возврат;
		КонецЕсли;
		
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
				
		Параметры = Новый Структура;
		Параметры.Вставить("Отчет", СтруктураОтчета.ТабличныйДокумент);
		Параметры.Вставить("ШаблонПисьма", Справочники.ШаблоныТекстовПисем.ПустаяСсылка());
		Параметры.Вставить("ВидТекстаПисьма", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
		Параметры.Вставить("АдресЭлектроннойПочтыКонтрагента", Выборка.Адрес);
		Параметры.Вставить("ОбъектПечати", СтруктураОтчета.Контрагент);
		Параметры.Вставить("ВложенияHTML", Ложь);
		Параметры.Вставить("ВложенияTXT", Ложь);
		Параметры.Вставить("ВложенияXLS", Истина);
		Параметры.Вставить("ВложенияMXL", Ложь);
		Параметры.Вставить("ИмяФайлаВложения", "Акт сверки взаиморасчетов");
		Параметры.Вставить("ТемаСообщения", "Акт сверки взаиморасчетов");
		Параметры.Вставить("ЗаполнятьТекстПисьма", Истина);
        Попытка
			УправлениеЭлектроннойПочтой.ОтправитьОтчет(Параметры);
		Исключение
			Сообщить("Контрагенту" + СтруктураОтчета.Контрагент + " не удалось отправить акт сверки. Текст ошибки: " + ОписаниеОшибки());
		КонецПопытки;		
	Иначе
		Сообщить("Контрагенту" + СтруктураОтчета.Контрагент + " не удалось отправить акт сверки. Текст ошибки: " + СтруктураОтчета.ТекстОшибки);
	КонецЕсли;
КонецПроцедуры
