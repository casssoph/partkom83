
Перем мСкладОсновной;
Перем мСохранятьОшибки;
Перем мАвтомат;

//Регламент
Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	  ВыполнитьСозданиеМФПАвтомат();
	  
КонецПроцедуры

Процедура ВыполнитьСозданиеМФПАвтомат() Экспорт
	
	мСохранятьОшибки = Истина;
	мАвтомат		 = Истина;
	
	СтруктураГраницы = РегистрыСведений.ГраницаМФП.ПолучитьГраницу();
	
	Если Не ЗначениеЗаполнено(СтруктураГраницы.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПериода = СтруктураГраницы.Дата;
	ОкончаниеПериода = НачалоДня(ТекущаяДата());
	
	ВыполнитьСозданиеМФП();
	
КонецПроцедуры

//СОЗДАНИЕ

Процедура ВыполнитьСозданиеМФП(СоздаватьРТУ = Истина, ЗаполнитьРегистрВозвратыМФП = Истина, СоздаватьДокументыВозврата = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(НачалоПериода)
		ИЛИ Не ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		Возврат;		
	КонецЕсли;
	
	ДатаНач = НачалоПериода;
	Пока ДатаНач <= ОкончаниеПериода Цикл
		ТекстОшибки = СоздатьДокументыНаДату(ДатаНач,  СоздаватьРТУ, ЗаполнитьРегистрВозвратыМФП, СоздаватьДокументыВозврата);
		
		Если ТекстОшибки <> "" И мАвтомат Тогда
			Сообщить("Обнаружены ошибки создания МФП, обработка остановлена");
			Прервать;
		КонецЕсли;
		
		ДатаНач = ДатаНач + 86400;
	КонецЦикла;
	
	Сообщить("Обработка завершена");
	
КонецПроцедуры

Функция СоздатьДокументыНаДату(ДатаСоздания, СоздаватьРТУ = Истина, ЗаполнитьРегистрВозвратыМФП = Истина, СоздаватьДокументыВозврата = Истина)
	
	ТекстОшибки = "";
	
	Если СоздаватьРТУ Тогда
		СоздатьДокументыРТУНаДату(ДатаСоздания, ТекстОшибки);		
	КонецЕсли;
	
	Если ЗаполнитьРегистрВозвратыМФП Тогда
		ЗаполнитьРегистрВозвратыМФП(ДатаСоздания, ТекстОшибки);		
	КонецЕсли;
	
	Если СоздаватьДокументыВозврата Тогда
		СоздатьДокументыВозвратыНаДатуПоДаннымРегистра(ДатаСоздания, ТекстОшибки);		
	КонецЕсли;
	
	Если СоздаватьРТУ И ЗаполнитьРегистрВозвратыМФП И СоздаватьДокументыВозврата И ТекстОшибки = "" Тогда
		РегистрыСведений.ГраницаМФП.СдвинутьГраницу(ДатаСоздания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда //И мСохранятьОшибки Тогда
		
		ОписаниеОшибки = "Ошибка формирования МФП за "+Формат(ДатаСоздания, "ДФ=dd.MM.yyyy");
		
		КритическиеСобытияСервер.ЗарегистрироватьКритическоеСобытие(
		, 
		Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаФормированияМФП,
		ОписаниеОшибки,
		,
		Истина,
		ТекстОшибки);
		
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

//УДАЛЕНИЕ

Процедура ПометитьНаУдалениеДокументыЗаПериод() Экспорт
	
	Если Не ЗначениеЗаполнено(НачалоПериода)
		ИЛИ Не ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		Возврат;		
	КонецЕсли;
	
	ДатаНач = НачалоПериода;
	Пока ДатаНач <= ОкончаниеПериода Цикл
		ПометитьНаУдалениеДокументы(ДатаНач);
		
		ДатаНач = ДатаНач + 86400;
	КонецЦикла;
	
	Сообщить("Обработка завершена");
	
КонецПроцедуры

Процедура ПометитьНаУдалениеДокументы(ДатаДокумента, УдалятьРТУ = Истина, УдалятьВозвраты = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) = &Дата
		|	И РеализацияТоваровУслуг.ВидОперации = &ВидОперацииРТУ
		|	И НЕ РеализацияТоваровУслуг.ПометкаУдаления
		|	И &УдалятьРТУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ) = &Дата
		|	И ВозвратТоваровОтПокупателя.ВидОперации = &ВидОперацииВозврат
		|	И НЕ ВозвратТоваровОтПокупателя.ПометкаУдаления
		|	И &УдалятьВозвраты";
	
	Запрос.УстановитьПараметр("ВидОперацииРТУ", 		Перечисления.ВидыОперацийРеализацияТоваров.МФП);
	Запрос.УстановитьПараметр("ВидОперацииВозврат", 	Перечисления.ВидыОперацийВозвратаОтПокупателя.МФП);
	Запрос.УстановитьПараметр("УдалятьРТУ", 			УдалятьРТУ);
	Запрос.УстановитьПараметр("УдалятьВозвраты", 		УдалятьВозвраты);
	Запрос.УстановитьПараметр("Дата", 					ДатаДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
	Сообщить("Обработано документов: "+Выборка.Количество());
	
КонецПроцедуры


//СОЗДАНИЕ ПРОДАЖИ

Функция СоздатьДокументыРТУНаДату(ДатаСоздания, ТекстОшибки = "")
	
	лТекстОшибки = "";
	
	//Если НЕ ПроведениеДокументовКлиентСервер.ИспользуютсяМФП(ДатаСоздания) Тогда
	//	Возврат Истина;
	//КонецЕсли;
	
	ПравилаСозданияМФП = Справочники.ПолитикиМФП.ПравилаСозданияМФП(ДатаСоздания);
	
	ДобавитьПроцентыНаценки(ПравилаСозданияМФП);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравилаСозданияМФП", ПравилаСозданияМФП);
	Запрос.УстановитьПараметр("ВидОплатыНал", Перечисления.ВидыДенежныхСредств.Наличные);
	Запрос.УстановитьПараметр("ВариантУчетаНДСПоВидуОплаты", Перечисления.ВариантыУчетаНДС.ПоВидуОплаты);
	Запрос.УстановитьПараметр("ОрганизацияПокупательСписаниеПартий", ОрганизацияПокупательСписаниеПартий);
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(ОрганизацияПокупательСписаниеПартий));
	Запрос.УстановитьПараметр("НачПериода", ДатаСоздания);
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаСоздания));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПравилаСозданияМФП.Политика,
	|	ПравилаСозданияМФП.ОрганизацияПродавецСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПокупательСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПродавец,
	|	ПравилаСозданияМФП.ОрганизацияПокупатель,
	|	ПравилаСозданияМФП.ДоговорКонтрагента,
	|	ПравилаСозданияМФП.ПроцентНаценки,
	|	ПравилаСозданияМФП.Порядок
	|ПОМЕСТИТЬ ТаблицаПолитик
	|ИЗ
	|	&ПравилаСозданияМФП КАК ПравилаСозданияМФП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровОбороты.Номенклатура,
	|	ПартииТоваровОбороты.Качество,
	|	ПартииТоваровОбороты.СтрокаПрихода,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).ДоговорКонтрагента.ВидОплаты = &ВидОплатыНал
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьНДС,
	|	ПартииТоваровОбороты.Организация КАК ОрганизацияПродавец,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Организация
	|		КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровПоставщику).Организация
	|	КОНЕЦ КАК ОрганизацияПокупатель,
	|	СУММА(-ПартииТоваровОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(-ПартииТоваровОбороты.СуммаРублиОборот) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаПродаж
	|ИЗ
	|	РегистрНакопления.ПартииТоваров.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПартииТоваровОбороты
	|ГДЕ
	|	(ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ИЛИ ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				И НЕ ВЫБОР
	|						КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|							ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Организация = ПартииТоваровОбороты.Организация
	|						КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|							ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровПоставщику).Организация = ПартииТоваровОбороты.Организация
	|					КОНЕЦ
	|				И ПартииТоваровОбороты.КоличествоОборот < 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровОбороты.Номенклатура,
	|	ПартииТоваровОбороты.Качество,
	|	ПартииТоваровОбороты.СтрокаПрихода,
	|	ПартииТоваровОбороты.Организация,
	|	ВЫБОР
	|		КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Организация
	|		КОГДА ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровПоставщику).Организация
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).ДоговорКонтрагента.ВидОплаты = &ВидОплатыНал
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПродаж.Номенклатура,
	|	0 КАК Цена
	|ПОМЕСТИТЬ НоменклатураБезЦен
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|ГДЕ
	|	ТаблицаПродаж.Сумма <= 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Закупки.Период) КАК Период,
	|	Закупки.Номенклатура
	|ПОМЕСТИТЬ ПоследниеПоступления
	|ИЗ
	|	РегистрНакопления.Закупки КАК Закупки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураБезЦен КАК НоменклатураБезЦен
	|		ПО (НоменклатураБезЦен.Номенклатура = Закупки.Номенклатура)
	|ГДЕ
	|	Закупки.Период < &КонПериода
	|	И НЕ Закупки.СуммаРегл = 0
	|	И НЕ Закупки.Количество = 0
	|	И Закупки.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	Закупки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Закупки.Номенклатура,
	|	ВЫБОР
	|		КОГДА Закупки.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(Закупки.СуммаРегл / Закупки.Количество КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ЦеныПоследнихПоступлений
	|ИЗ
	|	РегистрНакопления.Закупки КАК Закупки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеПоступления КАК ПоследниеПоступления
	|		ПО (ПоследниеПоступления.Период = Закупки.Период)
	|			И (ПоследниеПоступления.Номенклатура = Закупки.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПродаж.Номенклатура,
	|	ТаблицаПродаж.Качество,
	|	ТаблицаПродаж.УчитыватьНДС,
	|	ТаблицаПродаж.СтрокаПрихода,
	|	ТаблицаПродаж.ОрганизацияПродавец,
	|	ТаблицаПродаж.ОрганизацияПокупатель,
	|	ТаблицаПолитик.ОрганизацияПродавец КАК ОрганизацияПродавецПолитика,
	|	ТаблицаПолитик.ОрганизацияПокупатель КАК ОрганизацияПокупательПолитика,
	|	ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаПолитик.ДоговорКонтрагента,
	|	ТаблицаПродаж.Количество,
	|	ТаблицаПродаж.Сумма,
	|	ТаблицаПолитик.Политика,
	|	ТаблицаПолитик.ПроцентНаценки,
	|	ТаблицаПолитик.Порядок
	|ПОМЕСТИТЬ ТаблицаПродажСПолитиками
	|ИЗ
	|	ТаблицаПродаж КАК ТаблицаПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПолитик КАК ТаблицаПолитик
	|		ПО (ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий = ТаблицаПродаж.ОрганизацияПродавец)
	|			И (ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий = ТаблицаПродаж.ОрганизацияПокупатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПродажСПолитиками.ОрганизацияПродавец,
	|	ТаблицаПродажСПолитиками.ОрганизацияПокупатель
	|ИЗ
	|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	|ГДЕ
	|   НЕ ТаблицаПродажСПолитиками.ОрганизацияПродавец = ТаблицаПродажСПолитиками.ОрганизацияПокупатель
	|	И ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПродажСПолитиками.Номенклатура,
	|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	ТаблицаПродажСПолитиками.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПродажСПолитиками.Качество,
	|	ТаблицаПродажСПолитиками.СтрокаПрихода,
	|	ТаблицаПродажСПолитиками.ОрганизацияПродавецПолитика КАК ОрганизацияПродавец,
	|	ТаблицаПродажСПолитиками.ОрганизацияПокупательПолитика КАК ОрганизацияПокупатель,
	|	ТаблицаПродажСПолитиками.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПродажСПолитиками.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаПродажСПолитиками.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ТаблицаПродажСПолитиками.ОрганизацияПокупательПолитика.ВариантУчетаНДС = &ВариантУчетаНДСПоВидуОплаты
	|			ТОГДА ТаблицаПродажСПолитиками.УчитыватьНДС
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьНДС,
	|	ТаблицаПродажСПолитиками.Количество,
	|	ТаблицаПродажСПолитиками.Количество КАК КоличествоПлан,
	|	ТаблицаПродажСПолитиками.Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаПродажСПолитиками.Сумма <= 0
	|			ТОГДА ЕСТЬNULL(ЦеныПоследнихПоступлений.Цена, 0)
	|		ИНАЧЕ ТаблицаПродажСПолитиками.Сумма / ТаблицаПродажСПолитиками.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаПродажСПолитиками.Политика,
	|	ТаблицаПродажСПолитиками.ПроцентНаценки,
	|	ТаблицаПродажСПолитиками.Порядок
	|ИЗ
	|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПоследнихПоступлений КАК ЦеныПоследнихПоступлений
	|		ПО ТаблицаПродажСПолитиками.Номенклатура = ЦеныПоследнихПоступлений.Номенклатура
	|ГДЕ
	|	НЕ ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	|   И (ТаблицаПродажСПолитиками.ОрганизацияПокупательСписаниеПартий = &ОрганизацияПокупательСписаниеПартий
	|     ИЛИ &ВсеОрганизации)
	|ИТОГИ ПО
	|	ОрганизацияПродавец,
	|	ОрганизацияПокупатель,
	|	УчитыватьНДС";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ОрганизацииБезПолитик = Результаты[Результаты.Количество() - 2].Выгрузить();
	
	Если ОрганизацииБезПолитик.Количество() > 0 Тогда
		ДополнитьТекстОшибки(лТекстОшибки, "Для данных организаций не заданы политики МФП. МФП по ним созданы не будут!");
		Для каждого Стр ИЗ ОрганизацииБезПолитик Цикл
			ДополнитьТекстОшибки(лТекстОшибки, "Продавец: "+Стр.ОрганизацияПродавец+". Покупатель: "+Стр.ОрганизацияПокупатель);
		КонецЦикла;
		Сообщить(лТекстОшибки);
	КонецЕсли;
	
	ТЗ = Результаты[Результаты.Количество() - 1].Выгрузить();
	
	ВыборкаОрганизацияПродавец = Результаты[Результаты.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	Пока ВыборкаОрганизацияПродавец.Следующий() Цикл
		
		ВыборкаОрганизацияПокупатель = ВыборкаОрганизацияПродавец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОрганизацияПокупатель.Следующий() Цикл
			
			ВыборкаУчитыватьНДС = ВыборкаОрганизацияПокупатель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаУчитыватьНДС.Следующий() Цикл
				
				#Если Клиент Тогда
					ОбработкаПрерыванияПользователя();
				#КонецЕсли
				
				ВыборкаТовары = ВыборкаУчитыватьНДС.Выбрать();
				
				ДокументОбъект = НайтиСоздатьДокументМФП(ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ДатаСоздания, ВыборкаУчитыватьНДС.УчитыватьНДС);
				ЗаполнитьШапкуДокументаМФП(ДокументОбъект, ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ПравилаСозданияМФП, ДатаСоздания, ВыборкаУчитыватьНДС.УчитыватьНДС);
				
				ДокументОбъект.Товары.Очистить();
				
				Пока ВыборкаТовары.Следующий() Цикл
					
					НоваяСтрока = ДокументОбъект.Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
					
					ПроцентыНаценки = ПроцентыНаценкиПоСтроке(ПравилаСозданияМФП, ВыборкаТовары);
					Для каждого ПроцентНаценки Из ПроцентыНаценки Цикл
						НоваяСтрока.Цена = НоваяСтрока.Цена + НоваяСтрока.Цена*ПроцентНаценки/100;
					КонецЦикла;
					
					НоваяСтрока.Сумма 		  = НоваяСтрока.Цена*НоваяСтрока.Количество;
					НоваяСтрока.ЦенаСоСкидкой = НоваяСтрока.Цена;
					
					Если НЕ ДокументОбъект.УчитыватьНДС Тогда
						НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
						НоваяСтрока.СуммаНДС  = 0;
					КонецЕсли;
					
				КонецЦикла;
				
				Если ДокументОбъект.Товары.Количество() > 0 Тогда
					
					НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
					
					Попытка
						ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
						Сообщить("Проведен "+ДокументОбъект);
						ЗафиксироватьТранзакцию();
					Исключение
						ОтменитьТранзакцию();
						
						ОписаниеОшибки = ОписаниеОшибки();
						Сообщить("Не удалось провести документ по причине: "+ОписаниеОшибки);
						
						ДокументОбъект.Записать();
						Сообщить("Записан "+ДокументОбъект);
						
						ДополнитьТекстОшибки(лТекстОшибки, "Ошибка проведения "+ДокументОбъект + ": "+ОписаниеОшибки);
					КонецПопытки;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТекстОшибки = ТекстОшибки + лТекстОшибки;
	
	Успешно = НЕ ЗначениеЗаполнено(лТекстОшибки);
	
	Возврат Успешно;
	
КонецФункции

Функция  НайтиСоздатьДокументМФП(ОрганизацияПродавец, ОрганизацияПокупатель, ДатаДокумента, УчитыватьНДС)
	
	КонтрагентПокупатель = Справочники.ПолитикиМФП.КонтрагентОрганизации(ОрганизацияПокупатель, ДатаДокумента);
	
	Если Не ЗначениеЗаполнено(КонтрагентПокупатель) Тогда
		ВызватьИсключение "Не удалось определить собственого контрагента для организации "+ОрганизацияПокупатель+"! Проверьте политику МФП на "+ДатаДокумента;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	НачалоПериода(РеализацияТоваровУслуг.Дата, День) = &Дата
		|	И РеализацияТоваровУслуг.ВидОперации = &ВидОперации
		|	И РеализацияТоваровУслуг.Организация = &Организация
		|	И РеализацияТоваровУслуг.Контрагент = &Контрагент
		|	И РеализацияТоваровУслуг.УчитыватьНДС = &УчитыватьНДС";
	
	
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийРеализацияТоваров.МФП);
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("Контрагент", КонтрагентПокупатель);
	Запрос.УстановитьПараметр("Организация", ОрганизацияПродавец);
	Запрос.УстановитьПараметр("УчитыватьНДС", УчитыватьНДС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если  Выборка.Следующий() Тогда
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	Конецесли;
	
	Возврат ДокументОбъект;
	
	
КонецФункции

Процедура  ЗаполнитьШапкуДокументаМФП(ДокументОбъект, ОрганизацияПродавец, ОрганизацияПокупатель, ПравилаСозданияМФП, ДатаДокумента, УчитыватьНДС)
	
	КонтрагентПокупатель = Справочники.ПолитикиМФП.КонтрагентОрганизации(ОрганизацияПокупатель, ДатаДокумента);
	
	Если Не ЗначениеЗаполнено(КонтрагентПокупатель) Тогда
		ВызватьИсключение "Не удалось определить собственого контрагента для организации "+ОрганизацияПокупатель+"! Проверьте политику МФП на "+ДатаДокумента;
	КонецЕсли;
	
	ДокументОбъект.Дата 				= ДатаДокумента;
	ДокументОбъект.ВидОперации 			= Перечисления.ВидыОперацийРеализацияТоваров.МФП;
	ДокументОбъект.Организация 			= ОрганизацияПродавец;
	ДокументОбъект.Контрагент 			= КонтрагентПокупатель;
	ДокументОбъект.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	ДокументОбъект.УчитыватьНДС 		= УчитыватьНДС;
	ДокументОбъект.СуммаВключаетНДС 	= УчитыватьНДС;
	ДокументОбъект.СтатусДокумента		= Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен;
	ДокументОбъект.ВалютаДокумента 		= ПараметрыСеанса.ВалютаРубль;
	ДокументОбъект.КурсВзаиморасчетов 	= 1;
	ДокументОбъект.КратностьВзаиморасчетов 	= 1;
	ДокументОбъект.Склад 				= мСкладОсновной;
	ДокументОбъект.ПометкаУдаления 		= Ложь;
	ДокументОбъект.ЭтоМФП 				= Истина;
	
	Если НЕ ДокументОбъект.УчитыватьНДС Тогда
		ДокументОбъект.Комментарий = "Без ндс";
	КонецЕсли;
	
	ДокументОбъект.ДоговорКонтрагента 	= ДоговорДляМФППоПравиламМФП(ОрганизацияПродавец, ОрганизацияПокупатель, ПравилаСозданияМФП);
	
	//ДоговорДляМФП(ДокументОбъект.Организация, ДокументОбъект.Контрагент, ДокументОбъект.Дата);
	
КонецПроцедуры


Функция ПроцентыНаценкиПоСтроке(ПравилаСозданияМФП, ДанныеСтроки)
	
	СтруктураОтбора = Новый Структура("ОрганизацияПродавецСписаниеПартий, ОрганизацияПокупательСписаниеПартий, ОрганизацияПродавец, ОрганизацияПокупатель");
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДанныеСтроки);
	
	НайденныеСтроки = ПравилаСозданияМФП.НайтиСтроки(СтруктураОтбора);
	
	Если НайденныеСтроки.Количество() = 1 Тогда
		
		Возврат НайденныеСтроки[0].ПроцентыНаценки;
		
	Иначе
		ТекстОшибки = "Ошибка получения процентов наценки по параметрам:";
		Для каждого КлючЗначение Из СтруктураОтбора Цикл
			ТекстОшибки = ТекстОшибки +Символы.ПС = "Ключ: "+КлючЗначение.Ключ+", значение: "+КлючЗначение.Значение;
		КонецЦикла;
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьПроцентыНаценки(ПравилаСозданияМФП)
	
	ПравилаСозданияМФП.Колонки.Добавить("ПроцентыНаценки", Новый ОписаниеТипов("Массив"));

	Для каждого СтрокаЭтапа Из ПравилаСозданияМФП Цикл
		 СтрокаЭтапа.ПроцентыНаценки = ПроцентыНаценкиДляЭтапаЦепочки(ПравилаСозданияМФП, СтрокаЭтапа);
	КонецЦикла;

КонецПроцедуры

Функция ПроцентыНаценкиДляЭтапаЦепочки(ПравилаСозданияМФП, СтрокаЭтапа)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравилаСозданияМФП", ПравилаСозданияМФП);
	Запрос.УстановитьПараметр("ОрганизацияПродавецСписаниеПартий", СтрокаЭтапа.ОрганизацияПродавецСписаниеПартий);
	Запрос.УстановитьПараметр("ОрганизацияПокупательСписаниеПартий", СтрокаЭтапа.ОрганизацияПокупательСписаниеПартий);
	Запрос.УстановитьПараметр("Порядок", СтрокаЭтапа.Порядок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПравилаСозданияМФП.Политика,
	|	ПравилаСозданияМФП.ОрганизацияПродавецСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПокупательСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПродавец,
	|	ПравилаСозданияМФП.ОрганизацияПокупатель,
	|	ПравилаСозданияМФП.ПроцентНаценки,
	|	ПравилаСозданияМФП.Порядок
	|ПОМЕСТИТЬ ПравилаСозданияМФП
	|ИЗ
	|	&ПравилаСозданияМФП КАК ПравилаСозданияМФП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаСозданияМФП.Политика,
	|	ПравилаСозданияМФП.ОрганизацияПродавецСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПокупательСписаниеПартий,
	|	ПравилаСозданияМФП.ОрганизацияПродавец,
	|	ПравилаСозданияМФП.ОрганизацияПокупатель,
	|	ПравилаСозданияМФП.ПроцентНаценки,
	|	ПравилаСозданияМФП.Порядок
	|ИЗ
	|	ПравилаСозданияМФП КАК ПравилаСозданияМФП
	|ГДЕ
	|	ПравилаСозданияМФП.ОрганизацияПродавецСписаниеПартий = &ОрганизацияПродавецСписаниеПартий
	|	И ПравилаСозданияМФП.ОрганизацияПокупательСписаниеПартий = &ОрганизацияПокупательСписаниеПартий
	|	И ПравилаСозданияМФП.Порядок >= &Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПравилаСозданияМФП.Порядок УБЫВ"; 
	
	ТЗ =  Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ.ВыгрузитьКолонку("ПроцентНаценки");	
	
КонецФункции

//СОЗДАНИЕ ВОЗВРАТЫ

//На основании этого регистра созданются документы возврата товаров от покупателя МФП
Функция ЗаполнитьРегистрВозвратыМФП(ДатаСоздания, ТекстОшибки = "") Экспорт
	
	лТекстОшибки = "";
	
	//Если НЕ ПроведениеДокументовКлиентСервер.ИспользуютсяМФП(ДатаСоздания) Тогда
	//	Возврат Истина;
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВнутренниеКонтрагенты", Справочники.ПолитикиМФП.СобственыеКонтрагенты(ДатаСоздания));
	Запрос.УстановитьПараметр("ВидОперацииМФП", Перечисления.ВидыОперацийВозвратаОтПокупателя.МФП);
	Запрос.УстановитьПараметр("НачПериода", ДатаСоздания);
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаСоздания));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПартииТоваровОбороты.Номенклатура,
	               |	ПартииТоваровОбороты.Склад,
	               |	ПартииТоваровОбороты.Качество,
	               |	ПартииТоваровОбороты.СтрокаПрихода,
	               |	ПартииТоваровОбороты.Организация КАК ОрганизацияПокупатель,
	               |	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование КАК Реализация,
	               |	СУММА(ПартииТоваровОбороты.КоличествоОборот) КАК Количество,
	               |	СУММА(ПартииТоваровОбороты.СуммаРублиОборот) КАК Сумма,
	               |	СУММА(ПартииТоваровОбороты.СуммаРублиОборот) / СУММА(ПартииТоваровОбороты.КоличествоОборот) КАК Цена
	               |ПОМЕСТИТЬ ТаблицаВозвратовСОснованием
	               |ИЗ
	               |	РегистрНакопления.ПартииТоваров.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПартииТоваровОбороты
	               |ГДЕ
	               |	ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |	И НЕ ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).Контрагент В (&ВнутренниеКонтрагенты)
	               |	И НЕ ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ВидОперации = &ВидОперацииМФП
	               |	И ПартииТоваровОбороты.КоличествоОборот > 0
	               |	И НЕ ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПартииТоваровОбороты.Номенклатура,
	               |	ПартииТоваровОбороты.Качество,
	               |	ПартииТоваровОбороты.Склад,
	               |	ПартииТоваровОбороты.СтрокаПрихода,
	               |	ПартииТоваровОбороты.Организация,
	               |	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаВозвратовСОснованием.Номенклатура,
	               |	ТаблицаВозвратовСОснованием.Склад,
	               |	ТаблицаВозвратовСОснованием.Качество,
	               |	ТаблицаВозвратовСОснованием.СтрокаПрихода,
	               |	ТаблицаВозвратовСОснованием.ОрганизацияПокупатель,
	               |	СУММА(ТаблицаВозвратовСОснованием.Количество) КАК Количество,
	               |	СУММА(ТаблицаВозвратовСОснованием.Сумма) КАК Сумма,
	               |	СУММА(ТаблицаВозвратовСОснованием.Сумма) / СУММА(ТаблицаВозвратовСОснованием.Количество) КАК Цена
	               |ПОМЕСТИТЬ ТаблицаВозвратов
	               |ИЗ
	               |	ТаблицаВозвратовСОснованием КАК ТаблицаВозвратовСОснованием
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаВозвратовСОснованием.Номенклатура,
	               |	ТаблицаВозвратовСОснованием.Качество,
	               |	ТаблицаВозвратовСОснованием.Склад,
	               |	ТаблицаВозвратовСОснованием.СтрокаПрихода,
	               |	ТаблицаВозвратовСОснованием.ОрганизацияПокупатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаВозвратов.Номенклатура,
	               |	0 КАК Цена
	               |ПОМЕСТИТЬ НоменклатураБезЦен
	               |ИЗ
	               |	ТаблицаВозвратов КАК ТаблицаВозвратов
	               |ГДЕ
	               |	ТаблицаВозвратов.Сумма <= 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(Закупки.Период) КАК Период,
	               |	Закупки.Номенклатура
	               |ПОМЕСТИТЬ ПоследниеПоступления
	               |ИЗ
	               |	РегистрНакопления.Закупки КАК Закупки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураБезЦен КАК НоменклатураБезЦен
	               |		ПО (НоменклатураБезЦен.Номенклатура = Закупки.Номенклатура)
	               |ГДЕ
	               |	Закупки.Период < &КонПериода
	               |	И НЕ Закупки.СуммаРегл = 0
	               |	И НЕ Закупки.Количество = 0
	               |	И Закупки.Активность
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Закупки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Закупки.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА Закупки.Количество = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫРАЗИТЬ(Закупки.СуммаРегл / Закупки.Количество КАК ЧИСЛО(15, 2))
	               |	КОНЕЦ КАК Цена
	               |ПОМЕСТИТЬ ЦеныПоследнихПоступлений
	               |ИЗ
	               |	РегистрНакопления.Закупки КАК Закупки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеПоступления КАК ПоследниеПоступления
	               |		ПО (ПоследниеПоступления.Период = Закупки.Период)
	               |			И (ПоследниеПоступления.Номенклатура = Закупки.Номенклатура)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаВозвратовСОснованием.СтрокаПрихода,
	               |	ТаблицаВозвратовСОснованием.Реализация
	               |ПОМЕСТИТЬ СтрокиПриходаВозвратов
	               |ИЗ
	               |	ТаблицаВозвратовСОснованием КАК ТаблицаВозвратовСОснованием
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПартииТоваровОбороты.Номенклатура,
	               |	ПартииТоваровОбороты.Качество,
	               |	ПартииТоваровОбороты.СтрокаПрихода,
	               |	ПартииТоваровОбороты.Организация КАК ОрганизацияПродавецСписаниеПартий,
	               |	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Организация КАК ОрганизацияПокупательСписаниеПартий,
	               |	СУММА(-ПартииТоваровОбороты.КоличествоОборот) КАК Количество
	               |ПОМЕСТИТЬ ТаблицаПродаж
	               |ИЗ
	               |	РегистрНакопления.ПартииТоваров.Обороты(
	               |			,
	               |			ДОБАВИТЬКДАТЕ(&КонПериода, ДЕНЬ, -1),
	               |			Регистратор,
	               |			(Номенклатура, Качество, СтрокаПрихода) В
	               |				(ВЫБРАТЬ
	               |					ТаблицаВозвратов.Номенклатура,
	               |					ТаблицаВозвратов.Качество,
	               |					ТаблицаВозвратов.СтрокаПрихода
	               |				ИЗ
	               |					ТаблицаВозвратов)) КАК ПартииТоваровОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтрокиПриходаВозвратов КАК СтрокиПриходаВозвратов
	               |		ПО ПартииТоваровОбороты.СтрокаПрихода = СтрокиПриходаВозвратов.СтрокаПрихода
	               |			И ПартииТоваровОбороты.Регистратор = СтрокиПриходаВозвратов.Реализация
	               |ГДЕ
	               |	ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |	И ПартииТоваровОбороты.КоличествоОборот < 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПартииТоваровОбороты.Номенклатура,
	               |	ПартииТоваровОбороты.Качество,
	               |	ПартииТоваровОбороты.СтрокаПрихода,
	               |	ПартииТоваровОбороты.Организация,
	               |	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВозвратыМФП.Номенклатура,
	               |	ВозвратыМФП.Качество,
	               |	ВозвратыМФП.СтрокаПрихода,
	               |	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавецСписаниеПартий,
	               |	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупательСписаниеПартий,
	               |	СУММА(ВозвратыМФП.Количество) КАК Количество
	               |ПОМЕСТИТЬ ВозвратыМФП
	               |ИЗ
	               |	РегистрСведений.ВозвратыМФП КАК ВозвратыМФП
	               |ГДЕ
	               |	ВозвратыМФП.Период < &НачПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВозвратыМФП.Номенклатура,
	               |	ВозвратыМФП.Качество,
	               |	ВозвратыМФП.СтрокаПрихода,
	               |	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий,
	               |	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПродаж.Номенклатура,
	               |	ТаблицаПродаж.Качество,
	               |	ТаблицаПродаж.СтрокаПрихода,
	               |	ТаблицаПродаж.ОрганизацияПродавецСписаниеПартий,
	               |	ТаблицаПродаж.ОрганизацияПокупательСписаниеПартий,
	               |	ТаблицаПродаж.Количество - ЕСТЬNULL(ВозвратыМФП.Количество, 0) КАК Количество
	               |ИЗ
	               |	ТаблицаПродаж КАК ТаблицаПродаж
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВозвратыМФП КАК ВозвратыМФП
	               |		ПО ТаблицаПродаж.Номенклатура = ВозвратыМФП.Номенклатура
	               |			И ТаблицаПродаж.Качество = ВозвратыМФП.Качество
	               |			И ТаблицаПродаж.СтрокаПрихода = ВозвратыМФП.СтрокаПрихода
	               |			И ТаблицаПродаж.ОрганизацияПродавецСписаниеПартий = ВозвратыМФП.ОрганизацияПродавецСписаниеПартий
	               |			И ТаблицаПродаж.ОрганизацияПокупательСписаниеПартий = ВозвратыМФП.ОрганизацияПокупательСписаниеПартий
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ТаблицаПродаж.ОрганизацияПродавецСписаниеПартий = ТаблицаПродаж.ОрганизацияПокупательСписаниеПартий
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ,
	               |	ТаблицаПродаж.Количество - ЕСТЬNULL(ВозвратыМФП.Количество, 0),
	               |	ТаблицаПродаж.СтрокаПрихода.Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаВозвратов.Номенклатура,
	               |	ТаблицаВозвратов.Склад,
	               |	ТаблицаВозвратов.Качество,
	               |	ТаблицаВозвратов.СтрокаПрихода,
	               |	ТаблицаВозвратов.ОрганизацияПокупатель,
	               |	ТаблицаВозвратов.Количество,
	               |	ВЫБОР
	               |		КОГДА ТаблицаВозвратов.Цена <= 0
	               |			ТОГДА ЕСТЬNULL(ЦеныПоследнихПоступлений.Цена, 0)
	               |		ИНАЧЕ ТаблицаВозвратов.Цена
	               |	КОНЕЦ КАК Цена
	               |ИЗ
	               |	ТаблицаВозвратов КАК ТаблицаВозвратов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПоследнихПоступлений КАК ЦеныПоследнихПоступлений
	               |		ПО ТаблицаВозвратов.Номенклатура = ЦеныПоследнихПоступлений.Номенклатура";
	
	 Результаты = Запрос.ВыполнитьПакет();
	 
	 ТаблицаОстатков = Результаты[Результаты.Количество() - 2].Выгрузить();
	 ТаблицаВозвратов = Результаты[Результаты.Количество() - 1].Выгрузить();
	 
	 
	 ТаблицаДвижений = Неопределено;
	 ОбщегоНазначения.СоздатьСтруктуруРегистраСведений("ВозвратыМФП", ТаблицаДвижений);
	 
	 // Нужно определить организации, по которым еще есть остаток к возврату
	 Для каждого СтрокаВозвратов Из ТаблицаВозвратов Цикл
		 
		 СтруктураОтбора = Новый структура("Номенклатура, Качество, СтрокаПрихода, ОрганизацияПокупательСписаниеПартий");
		 ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаВозвратов);
		 СтруктураОтбора.ОрганизацияПокупательСписаниеПартий = СтрокаВозвратов.ОрганизацияПокупатель;
		 
		 СтрокиОстатков =  ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
		 
		 Списать = СтрокаВозвратов.Количество;
		 
		 Для каждого СтрокаОстатков Из СтрокиОстатков Цикл
			 
			 Списано = Мин(Списать, СтрокаОстатков.Количество);
			 
			 Если Списано <= 0 Тогда
				 Продолжить;
			 КонецЕсли;
			 
			 НоваяСтрока = ТаблицаДвижений.Добавить();
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатков, , "Количество");
			 НоваяСтрока.Количество 	= Списано;
			 НоваяСтрока.Цена 			= СтрокаВозвратов.Цена;
			 НоваяСтрока.Склад 			= СтрокаВозвратов.Склад;
			 НоваяСтрока.Период			= ДатаСоздания;
			 
			 СтрокаОстатков.Количество = СтрокаОстатков.Количество - Списано;			 
			 
			 Списать = Списать -  Списано;
			 
		 КонецЦикла;
		 
		 Если Списать > 0 Тогда
			//Не можем вернуть. Ну и ладно.			 
		 КонецЕсли;
		 
	 КонецЦикла;
	 
	//Заполним политики в таблице движений
	//Если для связки организация-покупатель - организация-продавец нет политики, то заругаемся, и такую запись в регистр не добавим. 
	//По ней не будет сформировано документов.
	ПравилаСозданияВозвратовМФП = Справочники.ПолитикиМФП.ПравилаСозданияВозвратовМФП(ДатаСоздания);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравилаСозданияВозвратовМФП", ПравилаСозданияВозвратовМФП);
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПравилаСозданияВозвратовМФП.Политика,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавецСписаниеПартий,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупательСписаниеПартий,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавец,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупатель,
	|	ПравилаСозданияВозвратовМФП.ДоговорКонтрагента,
	|	ПравилаСозданияВозвратовМФП.ПроцентНаценки,
	|	ПравилаСозданияВозвратовМФП.Порядок
	|ПОМЕСТИТЬ ТаблицаПолитик
	|ИЗ
	|	&ПравилаСозданияВозвратовМФП КАК ПравилаСозданияВозвратовМФП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвижений.Период,
	|	ТаблицаДвижений.ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаДвижений.ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаДвижений.СтрокаПрихода,
	|	ТаблицаДвижений.Номенклатура,
	|	ТаблицаДвижений.Качество,
	|	ТаблицаДвижений.Склад,
	|	ТаблицаДвижений.Количество,
	|	ТаблицаДвижений.Цена
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	&ТаблицаДвижений КАК ТаблицаДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(ТаблицаПолитик.Политика) КАК Политика,
	|	ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий
	|ПОМЕСТИТЬ ОрганизацииПолитик
	|ИЗ
	|	ТаблицаПолитик КАК ТаблицаПолитик
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратыМФП.Период,
	|	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий,
	|	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий,
	|	ВозвратыМФП.СтрокаПрихода,
	|	ВозвратыМФП.Номенклатура,
	|	ВозвратыМФП.Качество,
	|	ВозвратыМФП.Склад,
	|	ВозвратыМФП.Количество,
	|	ВозвратыМФП.Цена
	|ИЗ
	|	ТаблицаДвижений КАК ВозвратыМФП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрганизацииПолитик КАК ОрганизацииПолитик
	|		ПО (ОрганизацииПолитик.ОрганизацияПродавецСписаниеПартий = ВозвратыМФП.ОрганизацияПродавецСписаниеПартий)
	|			И (ОрганизацииПолитик.ОрганизацияПокупательСписаниеПартий = ВозвратыМФП.ОрганизацияПокупательСписаниеПартий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавец,
	|	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупатель
	|ИЗ
	|	ТаблицаДвижений КАК ВозвратыМФП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОрганизацииПолитик КАК ОрганизацииПолитик
	|		ПО (ОрганизацииПолитик.ОрганизацияПродавецСписаниеПартий = ВозвратыМФП.ОрганизацияПродавецСписаниеПартий)
	|			И (ОрганизацииПолитик.ОрганизацияПокупательСписаниеПартий = ВозвратыМФП.ОрганизацияПокупательСписаниеПартий)
	|ГДЕ
	|	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий <> ВозвратыМФП.ОрганизацияПокупательСписаниеПартий
	|	И ОрганизацииПолитик.Политика ЕСТЬ NULL";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ТаблицаОшибок = Результаты[Результаты.Количество() - 1].Выгрузить();
	ТаблицаДляЗаписи = Результаты[Результаты.Количество() - 2].Выгрузить();
	
	НЗ = РегистрыСведений.ВозвратыМФП.СоздатьНаборЗаписей();
	НЗ.Отбор.Период.Установить(ДатаСоздания);
	НЗ.Загрузить(ТаблицаДляЗаписи);
	НЗ.Записать();
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		ДополнитьТекстОшибки(лТекстОшибки, "Ошибка заполнения данных возвратов. Для данных организаций не заданы политики МФП, возвраты МФП по ним созданы не будут!");
		Для каждого Стр ИЗ ТаблицаОшибок Цикл
			ДополнитьТекстОшибки(лТекстОшибки, "Продавец: "+Стр.ОрганизацияПродавец+". Покупатель: "+Стр.ОрганизацияПокупатель);
		КонецЦикла;
		Сообщить(лТекстОшибки);
	КонецЕсли;
	
	ТекстОшибки = ТекстОшибки + лТекстОшибки;
	
	Успешно = НЕ ЗначениеЗаполнено(лТекстОшибки);
	
	Возврат Успешно;

КонецФункции

Процедура ДополнитьТекстОшибки(лТекстОшибки, Дополнение)
	
	лТекстОшибки = лТекстОшибки + Символы.ПС + Дополнение;	
	
КонецПроцедуры

 Функция СоздатьДокументыВозвратыНаДатуПоДаннымРегистра(ДатаСоздания, ТекстОшибки = "") Экспорт
	 
	лТекстОшибки = "";
	 
	ПравилаСозданияВозвратовМФП = Справочники.ПолитикиМФП.ПравилаСозданияВозвратовМФП(ДатаСоздания);
	
	ДобавитьПроцентыНаценки(ПравилаСозданияВозвратовМФП);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравилаСозданияВозвратовМФП", ПравилаСозданияВозвратовМФП);
	Запрос.УстановитьПараметр("ВнутренниеКонтрагенты", Справочники.ПолитикиМФП.СобственыеКонтрагенты(ДатаСоздания));
	Запрос.УстановитьПараметр("ОрганизацияПокупательСписаниеПартий", ОрганизацияПокупательСписаниеПартий);
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(ОрганизацияПокупательСписаниеПартий));
	Запрос.УстановитьПараметр("НачПериода", ДатаСоздания);
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаСоздания));
	 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПравилаСозданияВозвратовМФП.Политика,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавецСписаниеПартий,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупательСписаниеПартий,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавец,
	|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупатель,
	|	ПравилаСозданияВозвратовМФП.ДоговорКонтрагента,
	|	ПравилаСозданияВозвратовМФП.ПроцентНаценки,
	|	ПравилаСозданияВозвратовМФП.Порядок
	|ПОМЕСТИТЬ ТаблицаПолитик
	|ИЗ
	|	&ПравилаСозданияВозвратовМФП КАК ПравилаСозданияВозвратовМФП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратыМФП.Склад,
	|	ВозвратыМФП.Номенклатура,
	|	ВозвратыМФП.Качество,
	|	ВозвратыМФП.СтрокаПрихода,
	|	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий,
	|	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий,
	|	ВозвратыМФП.Количество,
	|	ВозвратыМФП.Цена
	|ПОМЕСТИТЬ ВозвратыМФП
	|ИЗ
	|	РегистрСведений.ВозвратыМФП КАК ВозвратыМФП
	|ГДЕ
	|	ВозвратыМФП.Период = &НачПериода
	|	И НЕ ВозвратыМФП.ОрганизацияПродавецСписаниеПартий = ВозвратыМФП.ОрганизацияПокупательСписаниеПартий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратыМФП.Склад,
	|	ВозвратыМФП.Номенклатура,
	|	ВозвратыМФП.Качество,
	|	ВозвратыМФП.СтрокаПрихода,
	|	ВозвратыМФП.ОрганизацияПродавецСписаниеПартий КАК Возвраты_ОрганизацияПродавецСписаниеПартий,
	|	ВозвратыМФП.ОрганизацияПокупательСписаниеПартий КАК Возвраты_ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаПолитик.ОрганизацияПродавец КАК ОрганизацияПродавецПолитика,
	|	ТаблицаПолитик.ОрганизацияПокупатель КАК ОрганизацияПокупательПолитика,
	|	ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаПолитик.ДоговорКонтрагента,
	|	ВозвратыМФП.Количество,
	|	ВозвратыМФП.Цена,
	|	ТаблицаПолитик.Политика,
	|	ТаблицаПолитик.ПроцентНаценки,
	|	ТаблицаПолитик.Порядок
	|ПОМЕСТИТЬ ТаблицаПродажСПолитиками
	|ИЗ
	|	ВозвратыМФП КАК ВозвратыМФП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПолитик КАК ТаблицаПолитик
	|		ПО (ТаблицаПолитик.ОрганизацияПродавецСписаниеПартий = ВозвратыМФП.ОрганизацияПродавецСписаниеПартий)
	|			И (ТаблицаПолитик.ОрганизацияПокупательСписаниеПартий = ВозвратыМФП.ОрганизацияПокупательСписаниеПартий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПродажСПолитиками.Возвраты_ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавец,
	|	ТаблицаПродажСПолитиками.Возвраты_ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупатель
	|ИЗ
	|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	|ГДЕ
	|	ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПродажСПолитиками.Склад КАК Склад,
	|	ТаблицаПродажСПолитиками.Номенклатура,
	|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	ТаблицаПродажСПолитиками.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПродажСПолитиками.Качество,
	|	ТаблицаПродажСПолитиками.СтрокаПрихода,
	|	ТаблицаПродажСПолитиками.ОрганизацияПродавецПолитика КАК ОрганизацияПродавец,
	|	ТаблицаПродажСПолитиками.ОрганизацияПокупательПолитика КАК ОрганизацияПокупатель,
	|	ТаблицаПродажСПолитиками.ОрганизацияПродавецСписаниеПартий КАК ОрганизацияПродавецСписаниеПартий,
	|	ТаблицаПродажСПолитиками.ОрганизацияПокупательСписаниеПартий КАК ОрганизацияПокупательСписаниеПартий,
	|	ТаблицаПродажСПолитиками.ДоговорКонтрагента,
	|	ТаблицаПродажСПолитиками.Количество,
	|	ТаблицаПродажСПолитиками.Количество КАК КоличествоПлан,
	|	ТаблицаПродажСПолитиками.Цена,
	|	ТаблицаПродажСПолитиками.Политика,
	|	ТаблицаПродажСПолитиками.ПроцентНаценки,
	|	ТаблицаПродажСПолитиками.Порядок
	|ИЗ
	|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	|ГДЕ
	|	НЕ ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	|	И (ОрганизацияПокупательСписаниеПартий  = &ОрганизацияПокупательСписаниеПартий
	|    ИЛИ &ВсеОрганизации)
	|ИТОГИ ПО
	|	ОрганизацияПродавец,
	|	ОрганизацияПокупатель,
	|	Склад"; 
	 
	Результаты = Запрос.ВыполнитьПакет();
	
	ОрганизацииБезПолитик = Результаты[Результаты.Количество() - 2].Выгрузить();
	
	Если ОрганизацииБезПолитик.Количество() > 0 Тогда
		лТекстОшибки = "Для данных организаций не заданы политики МФП. Документы возврата от покупателя по ним созданы не будут!";
		Для каждого Стр ИЗ ОрганизацииБезПолитик Цикл
			лТекстОшибки = лТекстОшибки + Символы.ПС + "Продавец: "+Стр.ОрганизацияПродавец+". Покупатель: "+Стр.ОрганизацияПокупатель;
		КонецЦикла;
		Сообщить(лТекстОшибки);
	КонецЕсли;
	
	ТЗ = Результаты[Результаты.Количество() - 1].Выгрузить();
	
	ВыборкаОрганизацияПродавец = Результаты[Результаты.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	Пока ВыборкаОрганизацияПродавец.Следующий() Цикл
		
		ВыборкаОрганизацияПокупатель = ВыборкаОрганизацияПродавец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОрганизацияПокупатель.Следующий() Цикл
			
			ВыборкаСклад = ВыборкаОрганизацияПокупатель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаСклад.Следующий() Цикл
				
				ВыборкаТовары = ВыборкаСклад.Выбрать();
				
				ДокументОбъект = НайтиСоздатьДокументВозвратМФП(ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ВыборкаСклад.Склад, ДатаСоздания);
				ЗаполнитьШапкуДокументаВозвратМФП(ДокументОбъект, ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ПравилаСозданияВозвратовМФП, ДатаСоздания, ВыборкаСклад.Склад);
				
				ДокументОбъект.Товары.Очистить();
				
				Пока ВыборкаТовары.Следующий() Цикл
					
					НоваяСтрока = ДокументОбъект.Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
					
					ПроцентыНаценки = ПроцентыНаценкиПоСтроке(ПравилаСозданияВозвратовМФП, ВыборкаТовары);
					Для каждого ПроцентНаценки Из ПроцентыНаценки Цикл
						НоваяСтрока.Цена = НоваяСтрока.Цена + НоваяСтрока.Цена*ПроцентНаценки/100;
					КонецЦикла;
					НоваяСтрока.Сумма 		 = НоваяСтрока.Цена*НоваяСтрока.Количество;
					
					//Себестоимость
					НоваяСтрока.СебестоимостьЦена = ВыборкаТовары.Цена;
					КоличествоПроцентов = ПроцентыНаценки.Количество();
					сч = 1;
					Для каждого ПроцентНаценки Из ПроцентыНаценки Цикл
						Если сч < КоличествоПроцентов Тогда
							НоваяСтрока.СебестоимостьЦена = НоваяСтрока.СебестоимостьЦена + НоваяСтрока.СебестоимостьЦена*ПроцентНаценки/100;
						КонецЕсли;
						сч =сч+1;
					КонецЦикла;

					НоваяСтрока.Себестоимость 		 = НоваяСтрока.СебестоимостьЦена*НоваяСтрока.Количество;
					
				КонецЦикла;
				
				Если ДокументОбъект.Товары.Количество() > 0 Тогда
					
					НачатьТранзакцию();
					
					Попытка
						ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
						Сообщить("Проведен "+ДокументОбъект);
						ЗафиксироватьТранзакцию();
					Исключение
						ОтменитьТранзакцию();
						
						ОписаниеОшибки = ОписаниеОшибки();
						Сообщить("Не удалось провести документ по причине: "+ОписаниеОшибки);
						
						ДокументОбъект.Записать();
						Сообщить("Записан "+ДокументОбъект);
						
						ДополнитьТекстОшибки(лТекстОшибки, "Ошибка проведения: " + ДокументОбъект + ": "+ОписаниеОшибки);

					КонецПопытки;
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
 
	ТекстОшибки = ТекстОшибки + лТекстОшибки;
	
	Успешно = НЕ ЗначениеЗаполнено(лТекстОшибки);
	
	Возврат Успешно;
	 
 КонецФункции
 
Процедура СоздатьДокументыВозвратыНаДату(ДатаСоздания)
	
	//Если НЕ ПроведениеДокументовКлиентСервер.ИспользуютсяМФП(ДатаСоздания) Тогда
	//	Возврат;
	//КонецЕсли;
	
	ЗаполнитьРегистрВозвратыМФП(ДатаСоздания);
	
	СоздатьДокументыВозвратыНаДатуПоДаннымРегистра(ДатаСоздания);
	
	
	 //ПравилаСозданияВозвратовМФП = Справочники.ПолитикиМФП.ПравилаСозданияВозвратовМФП(ДатаСоздания);
	//
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ПравилаСозданияВозвратовМФП", ПравилаСозданияВозвратовМФП);
	//Запрос.УстановитьПараметр("ВнутренниеКонтрагенты", Справочники.ПолитикиМФП.СобственыеКонтрагенты(ДатаСоздания));
	//Запрос.УстановитьПараметр("НачПериода", ДатаСоздания);
	//Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаСоздания));
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ПравилаСозданияВозвратовМФП.Политика,
	//|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавецСписаниеПартий,
	//|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупательСписаниеПартий,
	//|	ПравилаСозданияВозвратовМФП.ОрганизацияПродавец,
	//|	ПравилаСозданияВозвратовМФП.ОрганизацияПокупатель,
	//|	ПравилаСозданияВозвратовМФП.ДоговорКонтрагента,
	//|	ПравилаСозданияВозвратовМФП.ПроцентНаценки,
	//|	ПравилаСозданияВозвратовМФП.Порядок
	//|ПОМЕСТИТЬ ТаблицаПолитик
	//|ИЗ
	//|	&ПравилаСозданияВозвратовМФП КАК ПравилаСозданияВозвратовМФП
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПартииТоваровОбороты.Номенклатура,
	//|	ПартииТоваровОбороты.Склад,
	//|	ПартииТоваровОбороты.Качество,
	//|	ПартииТоваровОбороты.СтрокаПрихода,
	//|	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).Организация КАК ОрганизацияПокупатель,
	//|	СУММА(ПартииТоваровОбороты.КоличествоОборот) КАК Количество,
	//|	СУММА(ПартииТоваровОбороты.СуммаРублиОборот) КАК Сумма,
	//|	СУММА(ПартииТоваровОбороты.СуммаРублиОборот)/СУММА(ПартииТоваровОбороты.КоличествоОборот) КАК Цена
	//|ПОМЕСТИТЬ ТаблицаВозвратов
	//|ИЗ
	//|	РегистрНакопления.ПартииТоваров.Обороты(&НачПериода, &КонПериода, Регистратор, ) КАК ПартииТоваровОбороты
	//|ГДЕ
	//|	ПартииТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	//|	И НЕ ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).Контрагент В (&ВнутренниеКонтрагенты)
	//|	И ПартииТоваровОбороты.КоличествоОборот > 0
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПартииТоваровОбороты.Номенклатура,
	//|	ПартииТоваровОбороты.Склад,
	//|	ПартииТоваровОбороты.Качество,
	//|	ПартииТоваровОбороты.СтрокаПрихода,
	//|	ПартииТоваровОбороты.Организация,
	//|	ВЫРАЗИТЬ(ПартииТоваровОбороты.Регистратор КАК Документ.ВозвратТоваровОтПокупателя).Организация
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТаблицаПродаж.Номенклатура,
	//|	ТаблицаПродаж.Склад,
	//|	ТаблицаПродаж.Качество,
	//|	ТаблицаПродаж.СтрокаПрихода,
	//|	ТаблицаПродаж.ОрганизацияПокупатель,
	//|	ТаблицаПолитик.ОрганизацияПродавец КАК ОрганизацияПродавецПолитика,
	//|	ТаблицаПолитик.ОрганизацияПокупатель КАК ОрганизацияПокупательПолитика,
	//|	ТаблицаПолитик.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	//|	ТаблицаПолитик.ДоговорКонтрагента,
	//|	ТаблицаПродаж.Количество,
	//|	ТаблицаПродаж.Сумма,
	//|	ТаблицаПолитик.Политика,
	//|	ТаблицаПолитик.ПроцентНаценки,
	//|	ТаблицаПолитик.Порядок
	//|ПОМЕСТИТЬ ТаблицаПродажСПолитиками
	//|ИЗ
	//|	ТаблицаПродаж КАК ТаблицаПродаж
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПолитик КАК ТаблицаПолитик
	//|		ПО (ТаблицаПолитик.ОрганизацияПолучатель = ТаблицаПродаж.ОрганизацияПокупатель)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ТаблицаПродажСПолитиками.ОрганизацияПокупатель
	//|ИЗ
	//|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	//|ГДЕ
	//|	ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТаблицаПродажСПолитиками.Номенклатура,
	//|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	//|	ТаблицаПродажСПолитиками.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	//|	ТаблицаПродажСПолитиками.Склад КАК Склад,
	//|	ТаблицаПродажСПолитиками.Качество,
	//|	ТаблицаПродажСПолитиками.СтрокаПрихода,
	//|	ТаблицаПродажСПолитиками.ОрганизацияПродавецПолитика КАК ОрганизацияПродавец,
	//|	ТаблицаПродажСПолитиками.ОрганизацияПокупательПолитика КАК ОрганизацияПокупатель,
	//|	ТаблицаПродажСПолитиками.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	//|	ТаблицаПродажСПолитиками.ДоговорКонтрагента,
	//|	ТаблицаПродажСПолитиками.Количество,
	//|	ТаблицаПродажСПолитиками.Количество КАК КоличествоПлан,
	//|	ТаблицаПродажСПолитиками.Сумма,
	//|	ТаблицаПродажСПолитиками.Сумма / ТаблицаПродажСПолитиками.Количество КАК Цена,
	//|	ТаблицаПродажСПолитиками.Сумма КАК Себестоимость,
	//|	ТаблицаПродажСПолитиками.Сумма / ТаблицаПродажСПолитиками.Количество КАК СебестоимостьЦена,
	//|	ТаблицаПродажСПолитиками.Политика,
	//|	ТаблицаПродажСПолитиками.ПроцентНаценки,
	//|	ТаблицаПродажСПолитиками.Порядок
	//|ИЗ
	//|	ТаблицаПродажСПолитиками КАК ТаблицаПродажСПолитиками
	//|ГДЕ
	//|	НЕ ТаблицаПродажСПолитиками.Политика ЕСТЬ NULL
	//|ИТОГИ ПО
	//|	ОрганизацияПродавец,
	//|	ОрганизацияПокупатель,
	//|	Склад";
	//
	//Результаты = Запрос.ВыполнитьПакет();
	//
	//ОрганизацииБезПолитик = Результаты[Результаты.Количество() - 2].Выгрузить();
	//
	//Если ОрганизацииБезПолитик.Количество() > 0 Тогда
	//	Сообщить("Для данных организаций не заданы политики МФП. МФП-возвраты по ним созданы не будут!", СтатусСообщения.ОченьВажное);
	//	Для каждого Стр ИЗ ОрганизацииБезПолитик Цикл
	//		Сообщить("Покупатель: "+Стр.ОрганизацияПокупатель, СтатусСообщения.Важное);
	//	КонецЦикла;
	//КонецЕсли;
	//
	//ТЗ = Результаты[Результаты.Количество() - 1].Выгрузить();
	//
	//ВыборкаОрганизацияПродавец = Результаты[Результаты.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	//
	//Пока ВыборкаОрганизацияПродавец.Следующий() Цикл
	//	
	//	ВыборкаОрганизацияПокупатель = ВыборкаОрганизацияПродавец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//	
	//	Пока ВыборкаОрганизацияПокупатель.Следующий() Цикл
	//		
	//		ВыборкаСклад = ВыборкаОрганизацияПокупатель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//		
	//		Пока ВыборкаСклад.Следующий() Цикл
	//			
	//			ВыборкаТовары = ВыборкаСклад.Выбрать();
	//			
	//			ДокументОбъект = НайтиСоздатьДокументВозвратМФП(ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ВыборкаСклад.Склад, ДатаСоздания);
	//			ЗаполнитьШапкуДокументаВозвратМФП(ДокументОбъект, ВыборкаОрганизацияПокупатель.ОрганизацияПродавец, ВыборкаОрганизацияПокупатель.ОрганизацияПокупатель, ПравилаСозданияМФП, ДатаСоздания, ВыборкаСклад.Склад);
	//			
	//			ДокументОбъект.Товары.Очистить();
	//			
	//			Пока ВыборкаТовары.Следующий() Цикл
	//				
	//				НоваяСтрока = ДокументОбъект.Товары.Добавить();
	//				
	//				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
	//				
	//			КонецЦикла;
	//			
	//			Если ДокументОбъект.Товары.Количество() > 0 Тогда
	//				
	//				Попытка
	//					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	//					Сообщить("Проведен "+ДокументОбъект);
	//				Исключение
	//					ТекстОшибки = ОписаниеОшибки();
	//					Сообщить("Не удалось провести документ по причине: "+ТекстОшибки);
	//					
	//					ДокументОбъект.Записать();
	//					Сообщить("Записан "+ДокументОбъект);
	//				КонецПопытки;
	//				
	//			КонецЕсли;
	//		КонецЦикла;
	//	КонецЦикла;
	//	
	//КонецЦикла;
	
КонецПроцедуры

Функция НайтиСоздатьДокументВозвратМФП(ОрганизацияПродавец, ОрганизацияПокупатель, Склад, ДатаДокумента)
	
	КонтрагентПокупатель = Справочники.ПолитикиМФП.КонтрагентОрганизации(ОрганизацияПокупатель, ДатаДокумента);
	
	Если Не ЗначениеЗаполнено(КонтрагентПокупатель) Тогда
		ВызватьИсключение "Не удалось определить собственого контрагента для организации "+ОрганизацияПокупатель+"! Проверьте политику МФП на "+ДатаДокумента;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ) = &Дата
		|	И ВозвратТоваровОтПокупателя.ВидОперации = &ВидОперации
		|	И ВозвратТоваровОтПокупателя.Склад = &Склад
		|	И ВозвратТоваровОтПокупателя.Организация = &Организация
		|	И ВозвратТоваровОтПокупателя.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийВозвратаОтПокупателя.МФП);
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("Контрагент", КонтрагентПокупатель);
	Запрос.УстановитьПараметр("Организация", ОрганизацияПродавец);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если  Выборка.Следующий() Тогда
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();
	Конецесли;
	
	Возврат ДокументОбъект;
	
	
КонецФункции

Процедура ЗаполнитьШапкуДокументаВозвратМФП(ДокументОбъект, ОрганизацияПродавец, ОрганизацияПокупатель, ПравилаСозданияМФП, ДатаДокумента, Склад = Неопределено)
	
	КонтрагентПокупатель = Справочники.ПолитикиМФП.КонтрагентОрганизации(ОрганизацияПокупатель, ДатаДокумента);
	
	Если Не ЗначениеЗаполнено(КонтрагентПокупатель) Тогда
		ВызватьИсключение "Не удалось определить собственого контрагента для организации "+ОрганизацияПокупатель+"! Проверьте политику МФП на "+ДатаДокумента;
	КонецЕсли;
	
	ДокументОбъект.Дата 				= КонецДня(ДатаДокумента)-1;
	ДокументОбъект.ВидОперации 			= Перечисления.ВидыОперацийВозвратаОтПокупателя.МФП;
	ДокументОбъект.Организация 			= ОрганизацияПродавец;
	ДокументОбъект.Контрагент 			= КонтрагентПокупатель;
	ДокументОбъект.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	ДокументОбъект.УчитыватьНДС 		= Истина;
	ДокументОбъект.СуммаВключаетНДС 	= Истина;
	ДокументОбъект.СтатусДокумента		= Справочники.СтатусыДокументов.ВозвратТоваровОтПокупателяПринят;
	ДокументОбъект.ВалютаДокумента 		= ПараметрыСеанса.ВалютаРубль;
	ДокументОбъект.КурсВзаиморасчетов 	= 1;
	ДокументОбъект.КратностьВзаиморасчетов 	= 1;
	ДокументОбъект.Склад 				= ?(ЗначениеЗаполнено(Склад), Склад, мСкладОсновной);
	ДокументОбъект.ПометкаУдаления 		= Ложь;
	
	ДокументОбъект.ДоговорКонтрагента 	= ДоговорДляМФППоПравиламМФП(ОрганизацияПродавец, ОрганизацияПокупатель, ПравилаСозданияМФП);
	
	//ДоговорДляМФП(ДокументОбъект.Организация, ДокументОбъект.Контрагент, ДокументОбъект.Дата);
	
КонецПроцедуры

//ПРОЧЕЕ

Функция ДоговорДляМФППоПравиламМФП(ОрганизацияПродавец, ОрганизацияПокупатель, ПравилаСозданияМФП)
	
	ДоговорМФП = Неопределено;	
	
	НайденныеСтроки = ПравилаСозданияМФП.НайтиСтроки(Новый Структура("ОрганизацияПродавец, ОрганизацияПокупатель", ОрганизацияПродавец, ОрганизацияПокупатель));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ДоговорМФП = НайденныеСтроки[0].ДоговорКонтрагента;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДоговорМФП) Тогда
		Сообщить("Не найден договор продажи для организации "+ОрганизацияПродавец+", покупателя "+ОрганизацияПокупатель+"! Проверьте заполнение политики МФП покупателя.", СтатусСообщения.Важное);
	КонецЕсли;
	
	Возврат ДоговорМФП;
	
КонецФункции

Функция ДоговорДляМФП(вхОрганизация, вхКонтрагент, вхДата)
	
	ДоговорДляМФП = Неопределено;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|	И НЕ ДоговорыКонтрагентов.ДоговорПриостановлен
		|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
		|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		|	И НЕ ДоговорыКонтрагентов.СлужебныйДоговор";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("Владелец", вхКонтрагент);
	Запрос.УстановитьПараметр("Организация", вхОрганизация);

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда

		ДоговорДляМФП = Выборка.Ссылка;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДоговорДляМФП) Тогда
		Сообщить("Не найден договор продажи для организации "+вхОрганизация+", покупателя "+вхКонтрагент+"!", СтатусСообщения.Важное);
	КонецЕсли;
	
	Возврат ДоговорДляМФП;
	
КонецФункции


//Не ИСПОЛЬЗУЕТСЯ

Функция ПравилаСозданияМФП_Старые(ДатаСоздания) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолитикиМФП.Владелец,
	|	МАКСИМУМ(ПолитикиМФП.ПериодДействия) КАК ПериодДействия
	|ПОМЕСТИТЬ МаксПериоды
	|ИЗ
	|	Справочник.ПолитикиМФП КАК ПолитикиМФП
	|ГДЕ
	|	ПолитикиМФП.ПериодДействия <= &ПериодДействия
	|	И НЕ ПолитикиМФП.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолитикиМФП.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолитикиМФП.Ссылка
	|ПОМЕСТИТЬ ТаблицаПолитик
	|ИЗ
	|	Справочник.ПолитикиМФП КАК ПолитикиМФП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериоды КАК МаксПериоды
	|		ПО (МаксПериоды.ПериодДействия = ПолитикиМФП.ПериодДействия)
	|			И (МаксПериоды.Владелец = ПолитикиМФП.Владелец)
	|ГДЕ
	|	НЕ ПолитикиМФП.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобственныеОрганизацииРазрешенаПокупка.Ссылка КАК Политика,
	|	СобственныеОрганизацииРазрешенаПокупка.Организация КАК ОрганизацияПродавецСписаниеПартий,
	|	СобственныеОрганизацииРазрешенаПокупка.Ссылка.Владелец КАК ОрганизацияПокупательСписаниеПартий,
	|	СобственныеОрганизацииРазрешенаПокупка.Организация КАК ОрганизацияПродавец,
	|	СобственныеОрганизацииРазрешенаПокупка.Ссылка.Владелец КАК ОрганизацияПокупатель,
	|	СобственныеОрганизацииРазрешенаПокупка.ПроцентНаценки
	|ИЗ
	|	Справочник.ПолитикиМФП.СобственныеОрганизацииРазрешенаПокупка КАК СобственныеОрганизацииРазрешенаПокупка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПолитик КАК ТаблицаПолитик
	|		ПО (ТаблицаПолитик.Ссылка = СобственныеОрганизацииРазрешенаПокупка.Ссылка)
	|ГДЕ
	|	СобственныеОрганизацииРазрешенаПокупка.Ссылка.РазрешенаПокупкаУСобственныхОрганизаций";
	
	Запрос.УстановитьПараметр("ПериодДействия", НачалоДня(ДатаСоздания));	
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ТЗ_ = ТЗ.Скопировать();
	
	ТЗНовое = ТЗ.СкопироватьКолонки();
	
	Для каждого СтрокаТЗ Из ТЗ Цикл
		
		 ПокупательПартии = СтрокаТЗ.ОрганизацияПокупательСписаниеПартий;
		
		 ТЗ1 = ТЗ.Скопировать(Новый Структура("ОрганизацияПокупательСписаниеПартий", СтрокаТЗ.ОрганизацияПродавецСписаниеПартий));
		 
		 Для каждого СтрокаТЗ1 Из ТЗ1 Цикл
			 
			 ПродавецПартии = СтрокаТЗ1.ОрганизацияПродавецСписаниеПартий;
		 
		 	 НовСтр 									= ТЗНовое.Добавить();
			 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
			 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
			 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ.ОрганизацияПродавец;
			 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ.ОрганизацияПокупатель;
			 НовСтр.ПроцентНаценки 						= СтрокаТЗ.ПроцентНаценки;
			 НовСтр.Политика 							= СтрокаТЗ.Политика;
			 
			 НовСтр 									= ТЗНовое.Добавить();
			 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
			 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
			 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ1.ОрганизацияПродавец;
			 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ1.ОрганизацияПокупатель;
			 НовСтр.ПроцентНаценки 						= СтрокаТЗ1.ПроцентНаценки;
			 НовСтр.Политика 							= СтрокаТЗ1.Политика;
			 
			 
			 ТЗ2 = ТЗ.Скопировать(Новый Структура("ОрганизацияПокупательСписаниеПартий", СтрокаТЗ1.ОрганизацияПродавецСписаниеПартий));
			 
			 Для каждого СтрокаТЗ2 Из ТЗ2 Цикл
				 
			 	ПродавецПартии = СтрокаТЗ2.ОрганизацияПродавецСписаниеПартий;
				 
				 НовСтр 									= ТЗНовое.Добавить();
				 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
				 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
				 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ.ОрганизацияПродавец;
				 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ.ОрганизацияПокупатель;
				 НовСтр.ПроцентНаценки 						= СтрокаТЗ.ПроцентНаценки;
				 НовСтр.Политика 							= СтрокаТЗ.Политика;
				 
				 НовСтр 									= ТЗНовое.Добавить();
				 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
				 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
				 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ1.ОрганизацияПродавец;
				 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ1.ОрганизацияПокупатель;
				 НовСтр.ПроцентНаценки 						= СтрокаТЗ1.ПроцентНаценки;
				 НовСтр.Политика 							= СтрокаТЗ1.Политика;
				 
				 НовСтр 									= ТЗНовое.Добавить();
				 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
				 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
				 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ2.ОрганизацияПродавец;
				 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ2.ОрганизацияПокупатель;
				 НовСтр.ПроцентНаценки 						= СтрокаТЗ2.ПроцентНаценки;
				 НовСтр.Политика 							= СтрокаТЗ2.Политика;
				 
				 
				 ТЗ3 = ТЗ.Скопировать(Новый Структура("ОрганизацияПокупательСписаниеПартий", СтрокаТЗ2.ОрганизацияПродавецСписаниеПартий));
				 
				 Для каждого СтрокаТЗ3 Из ТЗ3 Цикл
					 
					 ПродавецПартии = СтрокаТЗ3.ОрганизацияПродавецСписаниеПартий;
					 
					 НовСтр 									= ТЗНовое.Добавить();
					 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
					 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
					 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ.ОрганизацияПродавец;
					 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ.ОрганизацияПокупатель;
					 НовСтр.ПроцентНаценки 						= СтрокаТЗ.ПроцентНаценки;
					 НовСтр.Политика 							= СтрокаТЗ.Политика;
					 
					 НовСтр 									= ТЗНовое.Добавить();
					 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
					 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
					 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ1.ОрганизацияПродавец;
					 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ1.ОрганизацияПокупатель;
					 НовСтр.ПроцентНаценки 						= СтрокаТЗ1.ПроцентНаценки;
					 НовСтр.Политика 							= СтрокаТЗ1.Политика;
					 
					 НовСтр 									= ТЗНовое.Добавить();
					 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
					 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
					 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ2.ОрганизацияПродавец;
					 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ2.ОрганизацияПокупатель;
					 НовСтр.ПроцентНаценки 						= СтрокаТЗ2.ПроцентНаценки;
					 НовСтр.Политика 							= СтрокаТЗ2.Политика;
					 
					 НовСтр 									= ТЗНовое.Добавить();
					 НовСтр.ОрганизацияПродавецСписаниеПартий 	= ПродавецПартии;
					 НовСтр.ОрганизацияПокупательСписаниеПартий = ПокупательПартии;
					 НовСтр.ОрганизацияПродавец 				= СтрокаТЗ3.ОрганизацияПродавец;
					 НовСтр.ОрганизацияПокупатель 				= СтрокаТЗ3.ОрганизацияПокупатель;
					 НовСтр.ПроцентНаценки 						= СтрокаТЗ3.ПроцентНаценки;
					 НовСтр.Политика 							= СтрокаТЗ3.Политика;
					 
					 
				 КонецЦикла;
				 
				 
			 КонецЦикла;
			 
		 КонецЦикла;
		
	КонецЦикла;
	ТЗ.ВыбратьСтроку();	
	ТЗНовое.ВыбратьСтроку();	
	
КонецФункции

мСохранятьОшибки = Ложь;
мАвтомат		 = Ложь;
мСкладОсновной = Константы.СкладОсновной.Получить();