Функция ПроверитьЗаписьНаИзменения(вхЗапись) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.РегламентноеЗадание
	|ИЗ
	|	РегистрСведений.ДанныеОВремениВключенияОтключенияРегламентныхЗаданий КАК ДанныеОВремениВключенияОтключенияРегламентныхЗаданий
	|ГДЕ
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Период = &Период
	|	И ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.РегламентноеЗадание = &РегламентноеЗадание
	|	И ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.ДатаОтключения = &ДатаОтключения
	|	И ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.ДатаВключения = &ДатаВключения
	|	И ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Отключено <> &Отключено
	|	И ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Включено <> &Включено"
	);
	
	Запрос.УстановитьПараметр("Период", вхЗапись.Период);
	Запрос.УстановитьПараметр("РегламентноеЗадание", вхЗапись.РегламентноеЗадание);
	Запрос.УстановитьПараметр("ДатаОтключения", вхЗапись.ДатаОтключения);
	Запрос.УстановитьПараметр("ДатаВключения", вхЗапись.ДатаВключения);
	Запрос.УстановитьПараметр("Отключено", вхЗапись.Отключено);
	Запрос.УстановитьПараметр("Включено", вхЗапись.Включено);
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Пустой();
	
КонецФункции

Процедура УдалитьЗаписьРегистра(вхОтбор) Экспорт
	НаборЗаписей = РегистрыСведений.ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(вхОтбор.Период);
	НаборЗаписей.Отбор.РегламентноеЗадание.Установить(вхОтбор.РегламентноеЗадание);
	НаборЗаписей.Отбор.ДатаОтключения.Установить(вхОтбор.ДатаОтключения);
	НаборЗаписей.Отбор.ДатаВключения.Установить(вхОтбор.ДатаВключения);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ОбновитьТаблицыНаФорме() Экспорт
	АктивныеЗаписи.Очистить();
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Период,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.РегламентноеЗадание,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.ДатаОтключения КАК ДатаОтключения,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.ДатаВключения КАК ДатаВключения,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.АвторЗаписи,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Отключено,
	|	ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Включено
	|ИЗ
	|	РегистрСведений.ДанныеОВремениВключенияОтключенияРегламентныхЗаданий КАК ДанныеОВремениВключенияОтключенияРегламентныхЗаданий
	|ГДЕ
	|	(НЕ ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Отключено
	|			ИЛИ НЕ ДанныеОВремениВключенияОтключенияРегламентныхЗаданий.Включено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОтключения,
	|	ДатаВключения"
	);
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), АктивныеЗаписи);
	
	ПолныйСписок.Очистить();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктивныеЗаписи.РегламентноеЗадание,
	|	АктивныеЗаписи.ДатаОтключения КАК Отключить,
	|	АктивныеЗаписи.ДатаВключения КАК Включить
	|ПОМЕСТИТЬ АктивныеЗаписи
	|ИЗ
	|	&АктивныеЗаписи КАК АктивныеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АктивныеЗаписи.РегламентноеЗадание ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДобавитьЗапись,
	|	РегламентныеЗадания.Ссылка КАК РегламентноеЗадание,
	|	РегламентныеЗадания.ИдентификаторРегламентногоЗадания КАК Идентификатор,
	|	ЕСТЬNULL(АктивныеЗаписи.Отключить, ДАТАВРЕМЯ(1, 1, 1)) КАК Отключить,
	|	ЕСТЬNULL(АктивныеЗаписи.Включить, ДАТАВРЕМЯ(1, 1, 1)) КАК Включить
	|ИЗ
	|	Справочник.РегламентныеЗадания КАК РегламентныеЗадания
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктивныеЗаписи КАК АктивныеЗаписи
	|		ПО РегламентныеЗадания.Ссылка = АктивныеЗаписи.РегламентноеЗадание
	|ГДЕ
	|	НЕ РегламентныеЗадания.ЭтоГруппа
	|	И НЕ РегламентныеЗадания.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегламентныеЗадания.Наименование";
	Запрос.УстановитьПараметр("АктивныеЗаписи", АктивныеЗаписи);
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ПолныйСписок);
	
	Для Каждого СтрокаЗаписи Из ПолныйСписок Цикл
		РЗ = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрокаЗаписи.Идентификатор);
		СтрокаЗаписи.Используется = РЗ.Использование;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьВсеЗаписи() Экспорт
	Для Каждого СтрокаЗаписи Из АктивныеЗаписи Цикл
		Если ПроверитьЗаписьНаИзменения(СтрокаЗаписи) Тогда
			УдалитьЗаписьРегистра(СтрокаЗаписи);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьТаблицыНаФорме();
		
КонецПроцедуры