
&НаСервереБезКонтекста
Процедура ОтметитьВсеНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)	
	ОбойтиДеревоНаСервере(1);	
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокПремийНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ПОМЕСТИТЬ ВТДоговоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ДоговорНаОферту
	|	И (&БезОтбораПоКонтрагентам
	|			ИЛИ ДоговорыКонтрагентов.Владелец В (&СписокКонтрагентов))
	|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ ДоговорыКонтрагентов.Организация = &Организация)
	|	И НЕ ДоговорыКонтрагентов.СлужебныйДоговор
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|	И НЕ ДоговорыКонтрагентов.ДоговорПриостановлен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслугТовары.СтрокаПрихода КАК СтрокаПрихода,
	|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК Приход
	|ПОМЕСТИТЬ ВТПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО (ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента В
	|			(ВЫБРАТЬ
	|				ВТДоговоры.Ссылка
	|			ИЗ
	|				ВТДоговоры)
	|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Организация КАК Организация,
	|	ВозвратТоваровПоставщику.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВозвратТоваровПоставщику.Контрагент КАК Контрагент,
	|	ВозвратТоваровПоставщикуТовары.СтрокаПрихода КАК СтрокаПрихода,
	|	ВозвратТоваровПоставщикуТовары.Сумма КАК Сумма,
	|	ВозвратТоваровПоставщикуТовары.СуммаНДС КАК СуммаНДС,
	|	ВозвратТоваровПоставщику.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВозвратТоваровПоставщику.ДокументОснование КАК ДокументОснование,
	|	ЛОЖЬ КАК Возврат
	|ПОМЕСТИТЬ ВТВозвраты
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО (ВозвратТоваровПоставщикуТовары.Ссылка = ВозвратТоваровПоставщику.Ссылка)
	|ГДЕ
	|	ВозвратТоваровПоставщику.Проведен
	|	И ВозвратТоваровПоставщику.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПоступления.ДоговорКонтрагента,
	|	СУММА(ПартииТоваров.СуммаБезНДС) КАК СуммаБезНДС,
	|	ВТПоступления.Организация,
	|	ВТПоступления.Контрагент
	|ПОМЕСТИТЬ ВТОтгрузки
	|ИЗ
	|	ВТПоступления КАК ВТПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваров КАК ПартииТоваров
	|		ПО ВТПоступления.СтрокаПрихода = ПартииТоваров.СтрокаПрихода
	|			И (ПартииТоваров.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг)
	|ГДЕ
	|	ВЫРАЗИТЬ(ПартииТоваров.Регистратор КАК Документ.РеализацияТоваровУслуг).Контрагент В ИЕРАРХИИ (&ФилиалыСПБ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПоступления.ДоговорКонтрагента,
	|	ВТПоступления.Организация,
	|	ВТПоступления.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента,
	|	СУММА(КорректировкаДолгаСуммыДолга.Сумма) КАК Сумма,
	|	КорректировкаДолга.Организация,
	|	КорректировкаДолга.КонтрагентДебитор
	|ПОМЕСТИТЬ ВТКорректировки
	|ИЗ
	|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолгаСуммыДолга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаДолга КАК КорректировкаДолга
	|		ПО КорректировкаДолгаСуммыДолга.Ссылка = КорректировкаДолга.Ссылка
	|ГДЕ
	|	КорректировкаДолга.ДоговорКонтрагента В
	|			(ВЫБРАТЬ
	|				ВТДоговоры.Ссылка
	|			ИЗ
	|				ВТДоговоры)
	|	И КорректировкаДолга.ВидКорректировки = &ВидКорректировки
	|	И КорректировкаДолга.ПериодАнализаНачало = НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ)
	|	И КорректировкаДолга.ПериодАнализаОкончание = НАЧАЛОПЕРИОДА(&КонецПериода, ДЕНЬ)
	|	И КорректировкаДолга.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента,
	|	КорректировкаДолга.Организация,
	|	КорректировкаДолга.КонтрагентДебитор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДоговорКонтрагента,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТДоговорыКВыгрузке
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПоступления.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		ВЫБОР
	|			КОГДА ВТПоступления.СуммаВключаетНДС
	|				ТОГДА ВТПоступления.Сумма - ВТПоступления.СуммаНДС
	|			ИНАЧЕ ВТПоступления.Сумма
	|		КОНЕЦ КАК Сумма
	|	ИЗ
	|		ВТПоступления КАК ВТПоступления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТВозвраты.ДоговорКонтрагента,
	|		-ВЫБОР
	|			КОГДА ВТВозвраты.СуммаВключаетНДС
	|				ТОГДА ВТВозвраты.Сумма - ВТВозвраты.СуммаНДС
	|			ИНАЧЕ ВТВозвраты.Сумма
	|		КОНЕЦ
	|	ИЗ
	|		ВТВозвраты КАК ВТВозвраты) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.Сумма > &СуммаОборота
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЗ.Организация КАК Организация,
	|	ВЗ.Договор КАК Договор,
	|	ВЗ.Контрагент КАК Контрагент,
	|	СУММА(ЕСТЬNULL(ВЗ.СуммаЗакупки, 0)) КАК СуммаЗакупки,
	|	СУММА(ЕСТЬNULL(ВЗ.СуммаВозврата, 0)) КАК СуммаВозврата,
	|	СУММА(ЕСТЬNULL(ВЗ.СуммаОтражено, 0)) КАК СуммаОтражено,
	|	ЛОЖЬ КАК Пометка,
	|	СУММА(ЕСТЬNULL(ВЗ.СуммаОтгрузки, 0)) КАК СуммаОтгрузки,
	|	"""" КАК КорректировкаСсылка,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ВЗ.СуммаЗакупки, 0)) - СУММА(ЕСТЬNULL(ВЗ.СуммаВозврата, 0)) <= 0
	|			ТОГДА 0
	|		ИНАЧЕ (СУММА(ЕСТЬNULL(ВЗ.СуммаЗакупки, 0)) - СУММА(ЕСТЬNULL(ВЗ.СуммаВозврата, 0))) * &ПроцентПремии / 100 - ВЫБОР
	|				КОГДА &УчитыватьОтраженные
	|					ТОГДА СУММА(ЕСТЬNULL(ВЗ.СуммаОтражено, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаПремии
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПоступления.Организация КАК Организация,
	|		ВТПоступления.ДоговорКонтрагента КАК Договор,
	|		ВТПоступления.Контрагент КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ВТПоступления.СуммаВключаетНДС
	|				ТОГДА ВТПоступления.Сумма - ВТПоступления.СуммаНДС
	|			ИНАЧЕ ВТПоступления.Сумма
	|		КОНЕЦ КАК СуммаЗакупки,
	|		NULL КАК СуммаВозврата,
	|		NULL КАК СуммаОтражено,
	|		NULL КАК СуммаОтгрузки
	|	ИЗ
	|		ВТПоступления КАК ВТПоступления
	|	ГДЕ
	|		ВТПоступления.ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТДоговорыКВыгрузке.ДоговорКонтрагента
	|				ИЗ
	|					ВТДоговорыКВыгрузке КАК ВТДоговорыКВыгрузке)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТВозвраты.Организация,
	|		ВТВозвраты.ДоговорКонтрагента,
	|		ВТВозвраты.Контрагент,
	|		NULL,
	|		ВЫБОР
	|			КОГДА ВТВозвраты.СуммаВключаетНДС
	|				ТОГДА ВТВозвраты.Сумма - ВТВозвраты.СуммаНДС
	|			ИНАЧЕ ВТВозвраты.Сумма
	|		КОНЕЦ,
	|		NULL,
	|		NULL
	|	ИЗ
	|		ВТВозвраты КАК ВТВозвраты
	|	ГДЕ
	|		ВТВозвраты.ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТДоговорыКВыгрузке.ДоговорКонтрагента
	|				ИЗ
	|					ВТДоговорыКВыгрузке КАК ВТДоговорыКВыгрузке)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТКорректировки.Организация,
	|		ВТКорректировки.ДоговорКонтрагента,
	|		ВТКорректировки.КонтрагентДебитор,
	|		NULL,
	|		NULL,
	|		ВТКорректировки.Сумма,
	|		NULL
	|	ИЗ
	|		ВТКорректировки КАК ВТКорректировки
	|	ГДЕ
	|		ВТКорректировки.ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТДоговорыКВыгрузке.ДоговорКонтрагента
	|				ИЗ
	|					ВТДоговорыКВыгрузке КАК ВТДоговорыКВыгрузке)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтгрузки.Организация,
	|		ВТОтгрузки.ДоговорКонтрагента,
	|		ВТОтгрузки.Контрагент,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВТОтгрузки.СуммаБезНДС
	|	ИЗ
	|		ВТОтгрузки КАК ВТОтгрузки
	|	ГДЕ
	|		ВТОтгрузки.ДоговорКонтрагента В
	|				(ВЫБРАТЬ
	|					ВТДоговорыКВыгрузке.ДоговорКонтрагента
	|				ИЗ
	|					ВТДоговорыКВыгрузке КАК ВТДоговорыКВыгрузке)) КАК ВЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЗ.Договор,
	|	ВЗ.Организация,
	|	ВЗ.Контрагент
	|ИТОГИ ПО
	|	Организация
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СуммаОборота", СуммаОборота);
	Запрос.УстановитьПараметр("БезОтбораПоКонтрагентам", Не Поставщики.Количество());
	Запрос.УстановитьПараметр("СписокКонтрагентов", Поставщики);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидКорректировки", ПредопределенноеЗначение("Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2"));
	Запрос.УстановитьПараметр("ПроцентПремии", ПроцентПремии);
	Запрос.УстановитьПараметр("ФилиалыСПБ", Справочники.Контрагенты.НайтиПоКоду("Н0000144")); // Филиалы СПБ
	Запрос.УстановитьПараметр("УчитыватьОтраженные", ПропускатьСозданные);
	
	Дерево = РеквизитФормыВЗначение("Данные"); 
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Дерево, "Данные");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокПремий(Команда)
	СформироватьСписокПремийНаСервере();
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанные;
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	ОбойтиДеревоНаСервере(0);
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	
	Для Каждого СтрПолученногоДерева Из Данные.ПолучитьЭлементы() Цикл
		
		Если Не СтрПолученногоДерева.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиДерева = СтрПолученногоДерева.ПолучитьЭлементы(); 		
		
		Если СтрокиДерева.Количество() > 0 Тогда			
			
			Для Каждого СтрокаДерева Из СтрокиДерева Цикл
	
				Если Не СтрокаДерева.Пометка Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаДерева.СуммаПремии) Тогда
					Продолжить;
				КонецЕсли;
				
				ПараметрыДокумента = 
				Новый Структура("Организация, 
								|КонтрагентДебитор,
								|ВалютаДокумента,
								|Комментарий, 
								|ВидОперации, 
								|ДоговорКонтрагента, 
								|ВидКорректировки, 
								|ПериодАнализаНачало, 
								|ПериодАнализаОкончание",
								СтрокаДерева.Организация,
								СтрокаДерева.Контрагент,
								Справочники.Валюты.НайтиПоКоду("643"),
								"Это акт выставления 2% премии поставщику",
								ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности"),
								СтрокаДерева.Договор,
								ПредопределенноеЗначение("Справочник.ВидыКорректировок.БонусыОтПоставщиковКросс2"),
								Период.ДатаНачала,
								Период.ДатаОкончания);
								
				НовыйДокумент = Документы.КорректировкаДолга.СоздатьДокумент();
				НовыйДокумент.Дата = ТекущаяДатаСеанса();
				
				ЗаполнитьЗначенияСвойств(НовыйДокумент, ПараметрыДокумента);
				
				НоваяСтрока = НовыйДокумент.СуммыДолга.Добавить();
				НоваяСтрока.ДоговорКонтрагента = ПараметрыДокумента.ДоговорКонтрагента;
				НоваяСтрока.Сумма = СтрокаДерева.СуммаПремии;
				НоваяСтрока.СуммаРегл = СтрокаДерева.СуммаПремии;
				НоваяСтрока.СуммаНУ = СтрокаДерева.СуммаПремии;
				НоваяСтрока.КурсВзаиморасчетов = 1;
				НоваяСтрока.КратностьВзаиморасчетов = 1;
				НоваяСтрока.ВидЗадолженности = ПредопределенноеЗначение("Перечисление.ВидыЗадолженности.Дебиторская");
				НоваяСтрока.СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяНеНайдена;
				НоваяСтрока.Контрагент = ПараметрыДокумента.КонтрагентДебитор;
				
				Попытка				
					НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					СтрокаДерева.КорректировкаСсылка = НовыйДокумент.Ссылка;
				Исключение
					Попытка						
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
						СтрокаДерева.КорректировкаСсылка = НовыйДокумент.Ссылка;		
					Исключение
						СтрокаДерева.КорректировкаСсылка = "Не удалось записать документ «Корректировка долга» по причине: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					КонецПопытки;			
				КонецПопытки;
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)

    ИДТекущейСтроки = Элементы["Данные"].ТекущаяСтрока;

    Если ИДТекущейСтроки <> Неопределено Тогда

        ЭлементКоллекции = ЭтаФорма["Данные"].НайтиПоИдентификатору(ИДТекущейСтроки);

        Если ЭлементКоллекции.Пометка = 2 Тогда
            ЭлементКоллекции.Пометка = 0;
        КонецЕсли;

        УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.Пометка);

        Родитель = ЭлементКоллекции.ПолучитьРодителя();
        Пока Родитель <> Неопределено Цикл
            Родитель.Пометка = ?(УстановленноДляВсех(ЭлементКоллекции), ЭлементКоллекции.Пометка, 2);
            ЭлементКоллекции = Родитель;
            Родитель = ЭлементКоллекции.ПолучитьРодителя();
        КонецЦикла;

    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)

    ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
        ТекЭлемент.Пометка = ЗначениеПометки;
        УстановкаФлажков(ТекЭлемент, ТекЭлемент.Пометка);
    КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции)

    СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
        Если ТекЭлемент.Пометка <> ЭлементКоллекции.Пометка Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;
    Возврат Истина;

КонецФункции

&НаСервере
Процедура ОбойтиДеревоНаСервере(Пометка)
	
	Дерево = РеквизитФормыВЗначение("Данные");
	
	ОбходДереваДетально(Дерево, Пометка);
	
	ЗначениеВРеквизитФормы(Дерево, "Данные");
		
КонецПроцедуры

&НаСервере
Процедура ОбходДереваДетально(ПереданноеДер, Пометка)
	
	Для Каждого СтрПолученногоДерева Из ПереданноеДер.Строки Цикл
		
		СтрПолученногоДерева.Пометка = Пометка;
		
		Если СтрПолученногоДерева.Строки.Количество() > 0 Тогда
			
			ОбходДереваДетально(СтрПолученногоДерева, Пометка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры