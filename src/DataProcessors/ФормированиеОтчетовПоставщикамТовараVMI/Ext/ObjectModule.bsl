Функция СоздатьПустойДокументПоступления(вхКонтрагент, вхДоговор, вхПериод, вхСклад, вхДатаДок) Экспорт
	НовДок = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	НовДок.Дата = НачалоДня(вхДатаДок);
	НовДок.ВидОперацииПоступления = Перечисления.ВидыПоступленияТоваров.ЗачетТовараVMI;
	НовДок.Контрагент = вхКонтрагент;
	НовДок.ДоговорКонтрагента = вхДоговор;
	НовДок.Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхДоговор, "Организация");
	тВалюта = ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхДоговор, "ВалютаВзаиморасчетов");
	Если ЗначениеЗаполнено(тВалюта) Тогда
		НовДок.ВалютаДокумента = тВалюта;
	Иначе
		НовДок.ВалютаДокумента = Константы.ВалютаРубль.Получить();
	КонецЕсли;
	НовДок.ТипЦен = ОбщегоНазначения.ПолучитьЗначениеРеквизита(вхДоговор, "ТипЦен");
	НовДок.УчитыватьНДС = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НовДок.Организация, "УчитыватьНДС");
	НовДок.СуммаВключаетНДС = Истина;
	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(НовДок.ВалютаДокумента, НачалоДня(вхДатаДок));
	НовДок.КурсВзаиморасчетов = СтруктураКурса.Курс;
	НовДок.КратностьВзаиморасчетов = СтруктураКурса.Кратность;
	НовДок.СтатусДокумента = Справочники.СтатусыДокументов.ПоступлениеТоваровЗачетVMI;
	СтруктураРеквизитов = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(вхКонтрагент, "ОсновнойБанковскийСчет,ОсновнаяТорговаяТочка");
	НовДок.БанковскийСчетКонтрагента = СтруктураРеквизитов.ОсновнойБанковскийСчет;
	НовДок.ТорговаяТочка = СтруктураРеквизитов.ОсновнаяТорговаяТочка;
	НовДок.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовДок.Склад = вхСклад;
	НовДок.ПериодОтчетаМХ3 = вхПериод;
	
	Возврат НовДок;
	
КонецФункции

Функция НайтиСоздатьДокументПоступления(вхДатаДокумента, вхКонПериода, вхКонтрагент, вхДоговорКонтрагента, вхПериод, вхСклад, СоздаватьНовый = Ложь) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.Проведен
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата >= &ДатаН
	|	И ПоступлениеТоваровУслуг.Дата <= &ДатаО
	|	И НЕ ПоступлениеТоваровУслуг.ПометкаУдаления
	|	И ПоступлениеТоваровУслуг.ВидОперацииПоступления = ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.ЗачетТовараVMI)
	|	И ПОДСТРОКА(ПоступлениеТоваровУслуг.Номер, 1, 1) = ""У""
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.Склад = &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеТоваровУслуг.Дата"
	);
	Запрос.УстановитьПараметр("ДатаН", НачалоДня(вхДатаДокумента));
	Запрос.УстановитьПараметр("ДатаО", НачалоДня(вхКонПериода));
	Запрос.УстановитьПараметр("Контрагент", вхКонтрагент);
	Запрос.УстановитьПараметр("Склад",	вхСклад);
	
	Р = Запрос.Выполнить();
	
	Если Р.Пустой() Тогда
		Если СоздаватьНовый Тогда
			Возврат СоздатьПустойДокументПоступления(вхКонтрагент, вхДоговорКонтрагента, вхПериод, вхСклад, вхДатаДокумента);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
				
	Иначе
		Выборка = Р.Выбрать();
				
		Пока Выборка.Следующий() Цикл
			тДокумент = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.Проведен Тогда			
				Попытка
					тДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Исключение
					Возврат НайтиСоздатьДокументПоступления(вхДатаДокумента, вхКонПериода, вхКонтрагент, вхДоговорКонтрагента, вхПериод, вхСклад, СоздаватьНовый);
					
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		
		Выборка.Сбросить();
		Выборка.Следующий();
		Возврат Выборка.Ссылка.ПолучитьОбъект();
				
	КонецЕсли;
	
КонецФункции

Функция ЗаполнитьОстаткамиПоРегиструПартий(тПрайсПоставщика, ДатаНачала, ДатаОкончания, тДоговор, тСклад) Экспорт
	//|	Р.СтрокаПрихода.Дата КАК ДатаПрихода,
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&ПрайсПоставщика КАК ПрайсПоставщика,
	|	Р.Период КАК ДатаПродажи,
	|	Р.Регистратор КАК КредДокумент,
	|	ВЫБОР
	|		КОГДА Р.СтрокаПрихода.Приход.ДатаВходящегоДокументаСФ = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Р.СтрокаПрихода.Дата
	|		ИНАЧЕ Р.СтрокаПрихода.Приход.ДатаВходящегоДокументаСФ
	|	КОНЕЦ КАК ДатаПрихода,
	|	Р.ДоговорКонтрагента КАК Договор,
	|	Р.Склад КАК Склад,
	|	Р.СтрокаПрихода КАК СтрокаПрихода,
	|	Р.Номенклатура.Артикул КАК Артикул,
	|	Р.Номенклатура.Изготовитель КАК Изготовитель,
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	Р.СуммаРублиПриход - Р.СуммаРублиРасход КАК СуммаРубли,
	|	(Р.СуммаРублиПриход - Р.СуммаРублиРасход) / (Р.КоличествоПриход - Р.КоличествоРасход) КАК Цена,
	|	Р.СтрокаПрихода.НомерГТД КАК НомерГТД,
	|	Р.СтрокаПрихода.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Р.КоличествоПриход - Р.КоличествоРасход КАК Количество,
	|	Р.СуммаРублиПриход - Р.СуммаРублиРасход КАК Сумма,
	|	Р.СуммаДолларыПриход - Р.СуммаДолларыРасход КАК СуммаДоллары,
	|	Р.СуммаЕвроПриход - Р.СуммаЕвроРасход КАК СуммаЕвро,
	|	0 КАК ПопалВОтчет
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.ОстаткиИОбороты(
	|			&ДатаН,
	|			&ДатаО,
	|			Регистратор,
	|			,
	|			ДоговорКонтрагента = &ДоговорКонтрагента
	|				И Склад = &Склад) КАК Р
	|ГДЕ
	|	Р.КоличествоПриход - Р.КоличествоРасход > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПрихода,
	|	ДатаПродажи,
	|	Номенклатура"
	);	

	Запрос.УстановитьПараметр("ПрайсПоставщика", тПрайсПоставщика);
	Запрос.УстановитьПараметр("ДатаН", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаО", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("ДоговорКонтрагента", тДоговор);
	Запрос.УстановитьПараметр("Склад", тСклад);
	
	ТабТоваров = Запрос.Выполнить().Выгрузить();
	
	Возврат ТабТоваров;                                 
	
КонецФункции

Функция ПолучитьЦенуНаДатуПродажи(ДатаПродажи, ПрайсПоставщика, Артикул, Изготовитель) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних(
	|			&Дата,
	|			Валюта = &Валюта
	|				И ПрайсПоставщика = &Прайс
	|				И Номенклатура.Артикул = &Артикул
	|				И Номенклатура.Изготовитель = &Изготовитель) КАК ЦеныНоменклатурыКонтрагентовСрезПоследних"
	);
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаРубль.Получить());
	Запрос.УстановитьПараметр("Дата", ДатаПродажи);
	Запрос.УстановитьПараметр("Прайс", ПрайсПоставщика);
	Запрос.УстановитьПараметр("Артикул", Артикул);
	Запрос.УстановитьПараметр("Изготовитель", Изготовитель);
	
	Р = Запрос.Выполнить();
	Если Р.Пустой() Тогда
		Возврат 0;
		
	КонецЕсли;
	
	Выборка = Р.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Цена;
	
КонецФункции

Процедура СформироватьДокументы() Экспорт
	Для Каждого Прайс Из ПрайсыПоставщиковРасписание Цикл
		ДокументыСозданы = Ложь;
		
		Лог = Лог + Символы.ПС + "*** формирование отчетов контрагенту " + Прайс.Контрагент.Наименование + Символы.ПС +
		"    по организации " + Прайс.Организация.Наименование + " и складу " + Прайс.Склад.Наименование;
		
		Товары.Очистить();
		
		ТабТоваров = ЗаполнитьОстаткамиПоРегиструПартий(Прайс.ПрайсПоставщика, Прайс.ДатаНач, Прайс.ДатаКон, Прайс.ДоговорКонтрагента, Прайс.Склад);
		
		Если ТабТоваров.Количество() = 0 Тогда 
			Лог = Лог + Символы.ПС + "       документы не сформированы: нет остатков в регистре ПартииVMI";
			ДокументыСозданы = Истина;
		КонецЕсли;
		
		Для Каждого Товар Из ТабТоваров Цикл
			Товар.Цена = ПолучитьЦенуНаДатуПродажи(Товар.ДатаПродажи, Товар.ПрайсПоставщика, Товар.Артикул, Товар.Изготовитель);
			Товар.СуммаРубли = Товар.Количество * Товар.Цена;
			Товар.Сумма = Товар.СуммаРубли;
			//Товар.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Товар.Сумма, Истина, Истина, Товар.СтавкаНДС);
			
		КонецЦикла;
		
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабТоваров, Товары);
		
		Если ТабТоваров.Количество() > 0 Тогда
			
			МассивДатПрихода = Новый Массив;
			МассивДатПрихода.Добавить(Прайс.ДатаДокумента);
			
			Если Прайс.Разделять Тогда
				Для Каждого Товар Из ТабТоваров Цикл
					Если Товар.ДатаПрихода > Прайс.ДатаДокумента Тогда
						Если МассивДатПрихода.Найти(НачалоДня(Товар.ДатаПрихода)) = Неопределено Тогда
							МассивДатПрихода.Добавить(НачалоДня(Товар.ДатаПрихода));
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Для А = 0 По МассивДатПрихода.Количество()-1 Цикл
				тДатаПрихода = МассивДатПрихода[А];
				тПериод =  Формат(тДатаПрихода, "ДФ=dd.MM.yy") + "-" + Формат(Прайс.ДатаКон, "ДФ=dd.MM.yy");
				тДокумент = НайтиСоздатьДокументПоступления(НачалоДня(тДатаПрихода), НачалоДня(Прайс.ДатаКон), 
				Прайс.Контрагент, Прайс.ДоговорКонтрагента, тПериод, Прайс.Склад, Истина);
							
				тДокумент.Товары.Очистить();
				тДокумент.ПартииТоваровVMI.Очистить();
				
				Для Каждого Товар Из ТабТоваров Цикл
					ДобавитьСтроку = Ложь;
					Если Прайс.Разделять Тогда
						Попытка
							Если Товар.ДатаПрихода <= КонецДня(тДатаПрихода)//И Товар.ДатаПродажи >= тДатаПрихода 
								И Товар.ДатаПродажи <= Прайс.ДатаКон
								И Товар.ПопалВОтчет = 0 Тогда
								ДобавитьСтроку = Истина;
						
							КонецЕсли;
						исключение
							Товар.ПопалВОтчет = 1;
							Продолжить;
						
						КонецПопытки;
					Иначе
						Если //Товар.ДатаПродажи >= тДатаПрихода И 
							Товар.ПопалВОтчет = 0 Тогда
							ДобавитьСтроку = Истина;
						Иначе
							Товар.ПопалВОтчет = 1;
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					Если ДобавитьСтроку тогда
					    нс = тДокумент.ПартииТоваровVMI.Добавить();
						нс.ДатаПродажи = Товар.ДатаПродажи;
						нс.КредДокумент = Товар.КредДокумент;
						нс.Количество = Товар.Количество;
						нс.Номенклатура = Товар.Номенклатура;
						нс.СтрокаПрихода = Товар.СтрокаПрихода;
						нс.СуммаДоллары = Товар.СуммаДоллары;
						нс.СуммаЕвро = Товар.СуммаЕвро;
						нс.СуммаРубли = Товар.СуммаРубли;
						нс.Цена = Товар.Цена;
					
						нс = тДокумент.Товары.Добавить();
						нс.ЕдиницаИзмерения = Товар.ЕдиницаИзмерения;
						нс.Количество = Товар.Количество;
						нс.Коэффициент = Товар.Коэффициент;
						нс.Номенклатура = Товар.Номенклатура;
						нс.НомерГТД = Товар.НомерГТД;
						нс.СтранаПроисхождения = Товар.СтранаПроисхождения;
						нс.СтрокаПрихода = Товар.СтрокаПрихода;
						нс.Сумма = Товар.Сумма;
						нс.Цена = Товар.Цена;
						нс.СтавкаНДС = Товар.СтавкаНДС;
						//нс.СуммаНДС = Товар.СуммаНДС;
						нс.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(нс.Сумма, Истина, Истина, Товар.Номенклатура.СтавкаНДС);
					
						Товар.ПопалВОтчет = 1;
					КонецЕсли;
						
				КонецЦикла;
				
				тДокумент.Товары.Свернуть("СтрокаПрихода,Номенклатура,ЕдиницаИзмерения,Коэффициент,Цена,СтавкаНДС,НомерГТД,СтранаПроисхождения", "Количество,Сумма,СуммаНДС");
				тДокумент.ПометкаУдаления = Ложь;
				Если тДокумент.Товары.Количество() > 0 Тогда
					НачатьТранзакцию();
					Попытка
					
						Попытка
							тДокумент.Записать(РежимЗаписиДокумента.Проведение);
							Лог = Лог + Символы.ПС + "       создан и проведен документ: " + Строка(тДокумент);
							
						Исключение
							тДокумент.Записать(РежимЗаписиДокумента.Запись);
							Лог = Лог + Символы.ПС + "       создан и записан документ: " + Строка(тДокумент);
					
						КонецПопытки;
					
					//нз = РегистрыСведений.ИсторияОтправкиПисемПоставщикам.СоздатьНаборЗаписей();
					//нз.Отбор.Объект.Установить(тДокумент.Ссылка);
					//					
					//нз.Прочитать();
					//Для Каждого зап из нз Цикл
					//	зап.Отправлен = Истина;
					//КонецЦикла;
					//
					//нз.Записать(Истина);
					//
					//нз = РегистрыСведений.ИсторияОбмена1с8FTP.СоздатьНаборЗаписей();
					//нз.Отбор.Объект.Установить(тДокумент.Ссылка);
					//					
					//нз.Прочитать();
					//Изменен = Ложь;
					//Для Каждого зап из нз Цикл
					//	зап.Выгружен = Истина;
					//	Изменен = Истина;
					//КонецЦикла;
					//
					//Если Изменен Тогда
					//	нз.Записать(Истина);
					//КонецЕсли;
					
					//Если ЭтоРегламент Тогда
					//	нз = РегистрыСведений.РасписанияОтчетовПоставщикамVMI.СоздатьНаборЗаписей();
					//	нз.Отбор.ПрайсПоставщика.Установить(Прайс.ПрайсПоставщика);
					//    нз.Отбор.Организация.Установить(Прайс.Организация);
					//	нз.Отбор.Склад.Установить(Прайс.Склад);
					//	
					//	нз.Прочитать();
					//	Для Каждого зап из нз Цикл
					//		Если зап.Периодичность = Прайс.Периодичность Тогда 
					//			зап.ДатаОкончанияПериодаПоследнегоОтчета = КонецДня(Прайс.ДатаКон);
					//		КонецЕсли;
					//		
					//	КонецЦикла;
					//	нз.Записать(Истина);
					//КонецЕсли;
					
						ДокументыСозданы = Истина;
					
						ЗафиксироватьТранзакцию();
					
					Исключение
						Лог = Лог + Символы.ПС + "       не удалось создать документ: " + ОписаниеОшибки();
						ОтменитьТранзакцию();
										
					КонецПопытки;
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			ДокументыСозданы = Истина;
			
		КонецЕсли;
		
		//Если ЭтоРегламент Тогда
		Если ДокументыСозданы Тогда
			нз = РегистрыСведений.РасписанияОтчетовПоставщикамVMI.СоздатьНаборЗаписей();
			нз.Отбор.ПрайсПоставщика.Установить(Прайс.ПрайсПоставщика);
			нз.Отбор.Организация.Установить(Прайс.Организация);
			нз.Отбор.Склад.Установить(Прайс.Склад);
						
			нз.Прочитать();
			Для Каждого зап из нз Цикл
				Если зап.Периодичность = Прайс.Периодичность Тогда 
					зап.ДатаОкончанияПериодаПоследнегоОтчета = КонецДня(Прайс.ДатаКон);
				КонецЕсли;
			КонецЦикла;
			нз.Записать(Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Товары.Очистить();
	
КонецПроцедуры

Процедура ЗаполнитьСписокПрайсовМесяц(вхДата) Экспорт
	ПрайсыПоставщиковРасписание.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)"
	);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Лог = Лог + ?(ПустаяСтрока(Лог), "", Символы.ПС) 
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности '" + Строка(Выборка.Периодичность) + "'";
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.Частота > 2";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Лог = Лог + ?(ПустаяСтрока(Лог), "", Символы.ПС)
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности Неделя с частотой больше, чем раз в две недели";
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ДатаОтчета", вхДата);
	
	//установим параметры для получения расписания месячных отчетов
	ДатаКонцаМесяца = НачалоМесяца(вхДата) - 1;
	ДатаНачалаМесяца = НачалоМесяца(ДатаКонцаМесяца);
	Запрос.УстановитьПараметр("ДатаНачалаМесяца", ДатаНачалаМесяца);
	Запрос.УстановитьПараметр("ДатаКонцаМесяца", ДатаКонцаМесяца);
	Запрос.УстановитьПараметр("ЧислоМесяца", День(вхДата));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец.Наименование КАК КонтрагентНаименование,
	|	Р.ПрайсПоставщика.Владелец КАК Контрагент,
	|	Д.Ссылка КАК ДоговорКонтрагента,
	|	Р.Организация КАК Организация,
	|	Р.ПрайсПоставщика КАК ПрайсПоставщика,
	|	Р.Склад КАК Склад,
	|	&ДатаНачалаМесяца КАК ДатаНач,
	|	&ДатаКонцаМесяца КАК ДатаКон,
	|	Р.ДелитьОтчетVMI КАК Разделять,
	|	ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1) КАК ДатаДокумента,
	|	Р.Периодичность КАК Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	И Р.Частота = 1
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонцаМесяца
	|	И Р.ЧислоМесяца = &ЧислоМесяца
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.СлужебныйДоговор
	|	И НЕ Д.ПометкаУдаления";
		
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Лог = Лог + "не нашлось прайсов для формирования отчета на " + Формат(вхДата, "ДЛФ=DD");
	Иначе
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ПрайсыПоставщиковРасписание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокПрайсовКонецМесяцаОтдельно(вхДата) Экспорт
	ПрайсыПоставщиковРасписание.Очистить();
	
	Запрос = Новый Запрос;
	
	//основной отбор по дню недели 
	//Запрос.УстановитьПараметр("ЭтотДеньНедели", ДеньНедели(вхДата)); //через функцию в запросе
	Запрос.УстановитьПараметр("ДатаОтчета", вхДата);
	
	//предполагается, что отчет делается за прошлую неделю, для недельных расписаний
	ДатаКонКаждаяНеделя = НачалоНедели(вхДата) - 1;
	ДатаНачКаждаяНеделя = НачалоНедели(ДатаКонКаждаяНеделя);
	
	//предполагается, что отчет делается за прошлых две недели, для расписаний по четным, нечетным неделям
	ДатаКонНеделяЧетНечет = НачалоНедели(вхДата) - 1;
	ДатаНачНеделяЧетНечет = НачалоНедели(ДатаКонНеделяЧетНечет - 1209600);//2*7*24*60*60 сек
	
	Запрос.УстановитьПараметр("ДатаНачКаждаяНеделя", ДатаНачКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаКонКаждаяНеделя", ДатаКонКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаНачНеделяЧетНечет", ДатаНачНеделяЧетНечет);
	Запрос.УстановитьПараметр("ДатаКонНеделяЧетНечет", ДатаКонНеделяЧетНечет);
	
	//определим четная это неделя или нет
	//для каждой недели ЧетНечет = 1
	ЧетнаяНеделя = ?(НеделяГода(вхДата)/2 - Цел(НеделяГода(вхДата)/2) = 0, Истина, Ложь);
	
	Если ЧетнаяНеделя Тогда
		Запрос.УстановитьПараметр("ЧетНечет", 2); //четная
	Иначе
		Запрос.УстановитьПараметр("ЧетНечет", 3); //нечетная
	КонецЕсли;
	
	//установим параметры для получения расписания отчета до конца месяца
	ДатаКонМесяца = КонецМесяца(ДатаНачКаждаяНеделя);
	Если ДатаКонМесяца > вхДата Тогда
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаКонМесяца", ДатаКонМесяца);
	Запрос.УстановитьПараметр("Задержка", День(вхДата));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец.Наименование КАК КонтрагентНаименование,
	|	Р.ПрайсПоставщика.Владелец КАК Контрагент,
	|	Д.Ссылка КАК ДоговорКонтрагента,
	|	Р.Организация КАК Организация,
	|	Р.ПрайсПоставщика КАК ПрайсПоставщика,
	|	Р.Склад КАК Склад,
	|	&ДатаНачКаждаяНеделя КАК ДатаНач,
	|	&ДатаКонМесяца КАК ДатаКон,
	|	Р.ДелитьОтчетVMI КАК Разделять,
	|	ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1) КАК ДатаДокумента,
	|	Р.Периодичность КАК Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.КонецМесяцаОтдельно
	|	И Р.Задержка = &Задержка
	|	И Р.Частота = 1
	|	И Р.ЧетНечет = 1
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя
	|	И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.СлужебныйДоговор
	|	И НЕ Д.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец.Наименование,
	|	Р.ПрайсПоставщика.Владелец,
	|	Д.Ссылка,
	|	Р.Организация,
	|	Р.ПрайсПоставщика,
	|	Р.Склад,
	|	&ДатаНачКаждаяНеделя,
	|	&ДатаКонМесяца,
	|	Р.ДелитьОтчетVMI,
	|	ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1),
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.КонецМесяцаОтдельно
	|	И Р.Задержка = &Задержка
	|	И Р.Частота = 2
	|	И Р.ЧетНечет = &ЧетНечет
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет
	|	И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.СлужебныйДоговор
	|	И НЕ Д.ПометкаУдаления";
		
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Лог = Лог + "***формирование отчетов до конца месяца" + Символы.ПС;
		Лог = Лог + "не нашлось прайсов для формирования отчета на " + Формат(вхДата, "ДЛФ=DD");
	Иначе
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ПрайсыПоставщиковРасписание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокПрайсовНеделя(вхДата) Экспорт
	ПрайсыПоставщиковРасписание.Очистить();
	
	Запрос = Новый Запрос;
	
	//основной отбор по дню недели 
	Запрос.УстановитьПараметр("ДатаОтчета", вхДата);
	
	//предполагается, что отчет делается за прошлую неделю, для недельных расписаний
	ДатаКонКаждаяНеделя = НачалоНедели(вхДата) - 1;
	ДатаНачКаждаяНеделя = НачалоНедели(ДатаКонКаждаяНеделя);
	
	//предполагается, что отчет делается за прошлых две недели, для расписаний по четным, нечетным неделям
	ДатаКонНеделяЧетНечет = НачалоНедели(вхДата) - 1;
	ДатаНачНеделяЧетНечет = НачалоНедели(ДатаКонНеделяЧетНечет - 604800);//7*24*60*60 сек
	
	Запрос.УстановитьПараметр("ДатаНачКаждаяНеделя", ДатаНачКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаКонКаждаяНеделя", ДатаКонКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаНачНеделяЧетНечет", ДатаНачНеделяЧетНечет);
	Запрос.УстановитьПараметр("ДатаКонНеделяЧетНечет", ДатаКонНеделяЧетНечет);
	
	//определим четная это неделя или нет
	//для каждой недели ЧетНечет = 1
	ЧетнаяНеделя = ?(НеделяГода(вхДата)/2 - Цел(НеделяГода(вхДата)/2) = 0, Истина, Ложь);
	
	Если ЧетнаяНеделя Тогда
		Запрос.УстановитьПараметр("ЧетНечет", 2); //четная
	Иначе
		Запрос.УстановитьПараметр("ЧетНечет", 3); //нечетная
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолныйСписок.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ПолныйСписок.Контрагент,
	|	ПолныйСписок.ДоговорКонтрагента,
	|	ПолныйСписок.Организация,
	|	ПолныйСписок.ПрайсПоставщика КАК ПрайсПоставщика,
	|	ПолныйСписок.Склад КАК Склад,
	|	ПолныйСписок.ДатаНач,
	|	ПолныйСписок.ДатаКон,
	|	ПолныйСписок.Разделять,
	|	ПолныйСписок.ДатаДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Р.ПрайсПоставщика.Владелец.Наименование КАК КонтрагентНаименование,
	|		Р.ПрайсПоставщика.Владелец КАК Контрагент,
	|		Д.Ссылка КАК ДоговорКонтрагента,
	|		Р.Организация КАК Организация,
	|		Р.ПрайсПоставщика КАК ПрайсПоставщика,
	|		Р.Склад КАК Склад,
	|		&ДатаНачКаждаяНеделя КАК ДатаНач,
	|		&ДатаКонКаждаяНеделя КАК ДатаКон,
	|		Р.ДелитьОтчетVMI КАК Разделять,
	|		ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1) КАК ДатаДокумента,
	|		Р.Периодичность КАК Периодичность
	|	ИЗ
	|		РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|			ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|				И Р.Организация = Д.Организация
	|	ГДЕ
	|		Р.Используется
	|		И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|		И Р.Частота = 1
	|		И Р.ЧетНечет = 1
	|		И Р.НачальнаяДата <= &ДатаОтчета
	|		И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя
	|		И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|		И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|		И НЕ Д.СлужебныйДоговор
	|		И НЕ Д.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Р.ПрайсПоставщика.Владелец.Наименование,
	|		Р.ПрайсПоставщика.Владелец,
	|		Д.Ссылка,
	|		Р.Организация,
	|		Р.ПрайсПоставщика,
	|		Р.Склад,
	|		&ДатаНачНеделяЧетНечет,
	|		&ДатаКонНеделяЧетНечет,
	|		Р.ДелитьОтчетVMI,
	|		ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1),
	|		Р.Периодичность
	|	ИЗ
	|		РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|			ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|				И Р.Организация = Д.Организация
	|	ГДЕ
	|		Р.Используется
	|		И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|		И Р.Частота = 2
	|		И Р.ЧетНечет = &ЧетНечет
	|		И Р.НачальнаяДата <= &ДатаОтчета
	|		И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет
	|		И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|		И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|		И НЕ Д.СлужебныйДоговор
	|		И НЕ Д.ПометкаУдаления) КАК ПолныйСписок";
		
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Лог = Лог + "не нашлось прайсов для формирования отчета на " + Формат(вхДата, "ДЛФ=DD");
	Иначе
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ПрайсыПоставщиковРасписание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокПрайсов(вхПоставщик, вхДата) Экспорт
	ПрайсыПоставщиковРасписание.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|	{УсловиеКонтрагент}"
	);
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Если ЗначениеЗаполнено(Склад) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик И Р.Склад = &Склад ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
			Запрос.УстановитьПараметр("Склад", Склад);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		КонецЕсли;
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Лог = Лог + ?(ПустаяСтрока(Лог), "", Символы.ПС) 
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности '" + Строка(Выборка.Периодичность) + "'";
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.Частота > 2
	|	{УсловиеКонтрагент}";
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Если ЗначениеЗаполнено(Склад) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик И Р.Склад = &Склад ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
			Запрос.УстановитьПараметр("Склад", Склад);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		КонецЕсли;
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Лог = Лог + ?(ПустаяСтрока(Лог), "", Символы.ПС)
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности Неделя с частотой больше, чем раз в две недели";
		
	КонецЦикла;
	
	//основной отбор по дню недели 
	//Запрос.УстановитьПараметр("ЭтотДеньНедели", ДеньНедели(вхДата)); //через функцию в запросе
	Запрос.УстановитьПараметр("ДатаОтчета", вхДата);
	
	//предполагается, что отчет делается за прошлую неделю, для недельных расписаний
	ДатаКонКаждаяНеделя = НачалоНедели(вхДата) - 1;
	ДатаНачКаждаяНеделя = НачалоНедели(ДатаКонКаждаяНеделя);
	
	//предполагается, что отчет делается за прошлых две недели, для расписаний по четным, нечетным неделям
	ДатаКонНеделяЧетНечет = НачалоНедели(вхДата) - 1;
	ДатаНачНеделяЧетНечет = НачалоНедели(ДатаКонНеделяЧетНечет - 604800);//7*24*60*60 сек
	
	Запрос.УстановитьПараметр("ДатаНачКаждаяНеделя", ДатаНачКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаКонКаждаяНеделя", ДатаКонКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаНачНеделяЧетНечет", ДатаНачНеделяЧетНечет);
	Запрос.УстановитьПараметр("ДатаКонНеделяЧетНечет", ДатаКонНеделяЧетНечет);
	
	//определим четная это неделя или нет
	//для каждой недели ЧетНечет = 1
	ЧетнаяНеделя = ?(НеделяГода(вхДата)/2 - Цел(НеделяГода(вхДата)/2) = 0, Истина, Ложь);
	
	Если ЧетнаяНеделя Тогда
		Запрос.УстановитьПараметр("ЧетНечет", 2); //четная
	Иначе
		Запрос.УстановитьПараметр("ЧетНечет", 3); //нечетная
	КонецЕсли;
	
	//установим параметры для получения расписания месячных отчетов
	ДатаКонцаМесяца = НачалоМесяца(вхДата) - 1;
	ДатаНачалаМесяца = НачалоМесяца(ДатаКонцаМесяца);
	Запрос.УстановитьПараметр("ДатаНачалаМесяца", ДатаНачалаМесяца);
	Запрос.УстановитьПараметр("ДатаКонцаМесяца", ДатаКонцаМесяца);
	Запрос.УстановитьПараметр("ЧислоМесяца", День(вхДата));
	
	//|		{УсловиеКонтрагент}
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолныйСписок.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ПолныйСписок.Контрагент,
	|	ПолныйСписок.ДоговорКонтрагента,
	|	ПолныйСписок.Организация,
	|	ПолныйСписок.ПрайсПоставщика КАК ПрайсПоставщика,
	|	ПолныйСписок.Склад КАК Склад,
	|	ПолныйСписок.ДатаНач,
	|	ПолныйСписок.ДатаКон,
	|	ПолныйСписок.Разделять,
	|	ПолныйСписок.ДатаДокумента,
	|	ПолныйСписок.Периодичность
	|ИЗ
	|	(ВЫБРАТЬ
	|		Р.ПрайсПоставщика.Владелец.Наименование КАК КонтрагентНаименование,
	|		Р.ПрайсПоставщика.Владелец КАК Контрагент,
	|		Д.Ссылка КАК ДоговорКонтрагента,
	|		Р.Организация КАК Организация,
	|		Р.ПрайсПоставщика КАК ПрайсПоставщика,
	|		Р.Склад КАК Склад,
	|		&ДатаНачКаждаяНеделя КАК ДатаНач,
	|		&ДатаКонКаждаяНеделя КАК ДатаКон,
	|		Р.ДелитьОтчетVMI КАК Разделять,
	|		ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1) КАК ДатаДокумента,
	|		Р.Периодичность КАК Периодичность
	|	ИЗ
	|		РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|			ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|				И Р.Организация = Д.Организация
	|	ГДЕ
	|		Р.Используется
	|		И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|		И Р.Частота = 1
	|		И Р.ЧетНечет = 1
	|		И Р.НачальнаяДата <= &ДатаОтчета
	|		И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя
	|		И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|		И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|		И НЕ Д.СлужебныйДоговор
	|		И НЕ Д.ПометкаУдаления
	|		{УсловиеКонтрагент}
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Р.ПрайсПоставщика.Владелец.Наименование,
	|		Р.ПрайсПоставщика.Владелец,
	|		Д.Ссылка,
	|		Р.Организация,
	|		Р.ПрайсПоставщика,
	|		Р.Склад,
	|		&ДатаНачНеделяЧетНечет,
	|		&ДатаКонКаждаяНеделя,
	|		Р.ДелитьОтчетVMI,
	|		ДОБАВИТЬКДАТЕ(Р.ДатаОкончанияПериодаПоследнегоОтчета, СЕКУНДА, 1),
	|		Р.Периодичность
	|	ИЗ
	|		РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|			ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|				И Р.Организация = Д.Организация
	|	ГДЕ
	|		Р.Используется
	|		И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|		И Р.Частота = 2
	|		И Р.ЧетНечет = &ЧетНечет
	|		И Р.НачальнаяДата <= &ДатаОтчета
	|		И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет
	|		И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|		И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|		И НЕ Д.СлужебныйДоговор
	|		И НЕ Д.ПометкаУдаления
	|		{УсловиеКонтрагент}) КАК ПолныйСписок
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентНаименование,
	|	ПрайсПоставщика,
	|	Склад";
		
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Если ЗначениеЗаполнено(Склад) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик И Р.Склад = &Склад ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
			Запрос.УстановитьПараметр("Склад", Склад);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
			Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		КонецЕсли;
		
		#Если Клиент Тогда
			//чтобы делалось по всем прайсам поставщикам, несмотря на настройки
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ЧислоМесяца = ДЕНЬ(&ДатаОтчета)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ЧетНечет = &ЧетНечет","");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя","");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет","");
			//--
		#КонецЕсли
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
		
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Лог = Лог + "не нашлось прайсов для формирования отчета на " + Формат(вхДата, "ДЛФ=DD");
	Иначе
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), ПрайсыПоставщиковРасписание);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтменитьПроведениеДокументов()
	Для Каждого Прайс Из ПрайсыПоставщиковРасписание Цикл
		ДокументОбъект = НайтиСоздатьДокументПоступления(НачалоДня(Прайс.ДатаДокумента), НачалоДня(Прайс.ДатаКон),
		Прайс.Контрагент, Прайс.ДоговорКонтрагента, "",Прайс.Склад);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьЛогВПочту()
	СписокАдресатов = Новый СписокЗначений;
	СписокАдресатов.Добавить("golubev-sv@part-kom.ru", "Голубев Сергей");
	СписокАдресатов.Добавить("shatskova-aa@@part-kom.ru", "Шацкова Анна");
	СписокАдресатов.Добавить("sergeev-sv@part-kom.ru", "Сергеев Сергей");
	СписокАдресатов.Добавить("durandin-da@part-kom.ru", "Дурандин Дмитрий");
	
	Лог = Лог + Символы.ПС + "обработка завершена " + Формат(ТекущаяДата(), "ДЛФ=DDT");
	
	РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(
	Справочники.СобытияДляОтправкиЭлектронныхПисем.ФормированиеОтчетовVMI, Лог, "лог формирования отчетов МХ-3", СписокАдресатов);
	
КонецПроцедуры

Процедура ЗаполнитьСписокПрайсовИнтерактивно() Экспорт
	//ЗаполнитьСписокПрайсов(Контрагент, ДатаКон);
		
	//ОтменитьПроведениеДокументов();
	
	ЗаполнитьСписокПрайсовНеделя(ДатаКон);
	
КонецПроцедуры

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	Лог = "обработка начата " + Формат(ТекущаяДата(), "ДЛФ=DDT");
	Если ЭтоРегламент Тогда
		ДатаКон = НачалоДня(ТекущаяДата());
				
		//ЗаполнитьСписокПрайсовМесяц(ДатаКон);
		//СформироватьДокументы();
		
		//ЗаполнитьСписокПрайсовКонецМесяцаОтдельно(ДатаКон);
		//СформироватьДокументы();
		
		ЗаполнитьСписокПрайсовНеделя(ДатаКон);
		СформироватьДокументы();
		
		ОтправитьЛогВПочту();
				
	Иначе
		Если НЕ РольДоступна("ПолныеПрава") Тогда
			Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
				Сообщить("не выбран контрагент");
				Возврат;
			КонецЕсли;
					
		КонецЕсли;
		
		ЗаполнитьСписокПрайсов(Контрагент, ДатаКон);
		
		ОтменитьПроведениеДокументов();
		
		СформироватьДокументы();
			
	КонецЕсли
		
	
КонецПроцедуры