
Процедура ВыполнитьПечать() Экспорт
	
	Если ЕстьОшибкиНачальныхПараметров() Тогда
		Возврат;
	КонецЕсли;
	
	ФормыДляПечати = ПечатныеФормы.НайтиСтроки(Новый Структура("Выбрать", Истина));
	
	РезультатаЗапроса = РезультатЗапросаДокументов();
	
	Выборка = РезультатаЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Сообщить("Не найдено документов по выбранному контрагенту за указанный период!", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		НапечататьДокумент(Выборка.Ссылка, ФормыДляПечати);
	КонецЦикла;
	
КонецПроцедуры

Процедура НапечататьДокумент(Документ, ФормыДляПечати)
	
	ОбъектДокумента = Документ.ПолучитьОбъект();
	
	Для каждого СтрокаПечФормы Из ФормыДляПечати Цикл
		
		Если  СтрокаПечФормы.ПечатнаяФормаИмя = "УниверсальныйПередаточныйДокумент" Тогда
			СчетФактура = УчетНДС.НайтиПодчиненныйДокумент(Документ, "СчетФактураВыданный", Истина);
			Если Не ЗначениеЗаполнено(СчетФактура) Тогда
				Сообщить("Для документа " + Документ + " не введен документ Счет-фактура выданный, печать УПД невозможна.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ОбъектДокумента.Печать(СтрокаПечФормы.ПечатнаяФормаИмя, КоличествоЭкземпляров, НаПринтер);
	КонецЦикла;
	
КонецПроцедуры

Функция РезультатЗапросаДокументов()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.Контрагент = &Контрагент
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РеализацияТоваровУслуг.СтатусДокумента = &СтатусДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("СтатусДокумента", Справочники.СтатусыДокументов.РеализацияТоваровУслугОтгружен);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ЗаполнитьСписокПечатныхФорм() Экспорт
	
	ПечатныеФормы.Очистить();
	
	ДобавитьВСписокПечФорму("УниверсальныйПередаточныйДокумент", 	"Универсальный передаточный документ (УПД)");
	//ДобавитьВСписокПечФорму("ТОРГ12", 								"ТОРГ-12 (Товарная накладная)");
	//ДобавитьВСписокПечФорму("СчетФактура", 							"Счет-фактура");
	ДобавитьВСписокПечФорму("СчетНаОплату", 						"Счет на оплату");
	ДобавитьВСписокПечФорму("ТоварныйЧек", 							"Товарный чек");
	
КонецПроцедуры

Процедура ДобавитьВСписокПечФорму(ПечатнаяФормаИмя, ПечатнаяФормаПредставление)
	
	НоваяСтрока = ПечатныеФормы.Добавить();
	НоваяСтрока.ПечатнаяФормаИмя 			= ПечатнаяФормаИмя;
	НоваяСтрока.ПечатнаяФормаПредставление 	= ПечатнаяФормаПредставление;
	
КонецПроцедуры

Функция ЕстьОшибкиНачальныхПараметров()
	
	ЕстьОшибки = Ложь;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Сообщить("Не выбран контрагент!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		Сообщить("Не выбрано начало перииода!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		Сообщить("Не выбрано окончание периода!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	Если  ОкончаниеПериода < НачалоПериода Тогда
		Сообщить("Окончание периода раньше начала периода!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции