Функция ПолучитьСписокКА() экспорт
	Отказ = Истина;
	
	тчКА.Очистить();
	
	Если НЕ ЗначениеЗаполнено(МаксРазмерСписка) Тогда
		МаксРазмерСписка = 100;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект,
	|	КонтактнаяИнформация.Представление
	|ПОМЕСТИТЬ АдресаДоставки
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагента)
	|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|	И КонтактнаяИнформация.Объект ССЫЛКА Справочник.Контрагенты
	|	И КонтактнаяИнформация.Представление <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка,
	|	Контрагенты.Наименование КАК Наименование,
	|	Контрагенты.Неактивный,
	|	Контрагенты.ПометкаУдаления,
	|	Контрагенты.ОсновнойДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Контрагенты.ДоступнаУслугаЭкспрессДоставки КАК ЭД,
	|	Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки КАК МаршрутДоставки,
	|	Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки2 КАК МаршрутДоставки2,
	|	Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки3 КАК МаршрутДоставки3,
	|	Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки4 КАК МаршрутДоставки4,
	|	Контрагенты.Регион.Филиал КАК Филиал,
	|	Контрагенты.Регион КАК Регион,
	|	АдресаДоставки.Представление КАК АдресДоставки,
	|	Контрагенты.Широта,
	|	Контрагенты.Долгота
	|ПОМЕСТИТЬ КА
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ АдресаДоставки КАК АдресаДоставки
	|		ПО Контрагенты.Ссылка = АдресаДоставки.Объект
	|ГДЕ
	|	Контрагенты.Ссылка В
	|			(ВЫБРАТЬ
	|				АдресаДоставки.Объект
	|			ИЗ
	|				АдресаДоставки)
	|	И Контрагенты.Неактивный = ЛОЖЬ
	|	И Контрагенты.ПометкаУдаления = ЛОЖЬ
	|	И Контрагенты.Регион <> ЗНАЧЕНИЕ(Справочник.Регионы.ПустаяСсылка)
	|	И Контрагенты.ОсновнойДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|	И (Контрагенты.ДоступнаУслугаЭкспрессДоставки = ИСТИНА
	|			ИЛИ Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки <> ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка)
	|			ИЛИ Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки2 <> ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка)
	|			ИЛИ Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки3 <> ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка)
	|			ИЛИ Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки4 <> ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка)
	|			ИЛИ Контрагенты.ОсновнаяТорговаяТочка.МаршрутДоставки5 <> ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка))
	|	И (Контрагенты.Широта = """"
	|			ИЛИ Контрагенты.Долгота = """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МенеджерыТорговыхТочекСрезПоследних.Контрагент,
	|	МенеджерыТорговыхТочекСрезПоследних.ВидМенеджера,
	|	МенеджерыТорговыхТочекСрезПоследних.Менеджер
	|ПОМЕСТИТЬ Менеджеры
	|ИЗ
	|	РегистрСведений.МенеджерыТорговыхТочек.СрезПоследних КАК МенеджерыТорговыхТочекСрезПоследних
	|ГДЕ
	|	МенеджерыТорговыхТочекСрезПоследних.ВидМенеджера = ЗНАЧЕНИЕ(Перечисление.ВидыМенеджеров.Продажи)
	|	И МенеджерыТорговыхТочекСрезПоследних.Контрагент В
	|			(ВЫБРАТЬ
	|				КА.Ссылка
	|			ИЗ
	|				КА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ " + СокрЛП(Формат(МаксРазмерСписка,"ЧЦ=15; ЧДЦ=0; ЧГ=0")) + "
	|	КА.Ссылка,
	|	Менеджеры.Менеджер КАК Менеджер,
	|	КА.Филиал,
	|	КА.Регион,
	|	КА.АдресДоставки,
	|	КА.Неактивный,
	|	КА.ПометкаУдаления,
	|	КА.ВидДоговора,
	|	КА.ЭД,
	|	КА.МаршрутДоставки,
	|	КА.МаршрутДоставки2,
	|	КА.МаршрутДоставки3,
	|	КА.МаршрутДоставки4,
	|	КА.Широта,
	|	КА.Долгота,
	|	КА.Наименование

	|ИЗ
	|	КА КАК КА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Менеджеры КАК Менеджеры
	|		ПО КА.Ссылка = Менеджеры.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	КА.Филиал,
	|	КА.Регион,
	|	КА.Наименование";

	тчКА = Запрос.Выполнить().Выгрузить();
	Отказ = Ложь;
	
	Возврат Отказ;
КонецФункции
Функция ВыполнитьОповещение() Экспорт
	
	Отказ = Истина;
	
	ТекстПосылки = "Всего выявлено [" + СокрЛП(тчКА.Количество()) + "] КА, которым нужно заполнить Широту/Долготу";
	сч = 0;
	Для каждого стр из тчКА цикл
		
		сч = сч + 1;
		
		тСтр = СокрЛП(сч) + ";" +
			   СокрЛП(стр.Ссылка.УникальныйИдентификатор()) + ";" +
			   СокрЛП(стр.Наименование) + ";" +
			   СокрЛП(стр.Филиал) + ";" +
			   СокрЛП(стр.Менеджер) + ";" +
			   СокрЛП(стр.АдресДоставки) + ";";
		
		ТекстПосылки = ТекстПосылки + Символы.ПС + тСтр;
		
	КонецЦикла;
	
	СписокАдресатов = ПолучитьСписокАдресовРассылки();
	
	РассылкаСообщенийОбОшибках.ОтправитьЭлектронноеСообщениеБезСохранения(ВидСобытияДляОповещения,ТекстПосылки,?(тчКА.Количество() > 0,"err:","inf:") + " Контроль заполненности геоданных",СписокАдресатов);
	
	Отказ = Ложь;
	
	Возврат Отказ;
КонецФункции

Процедура ПолучитьВидСобытияОповещения() Экспорт
	
	Если ЗначениеЗаполнено(ВидСобытияДляОповещения) Тогда
		Возврат;
	КонецЕсли;
		
	Попытка
		ВидСобытияДляОповещения = Справочники.СобытияДляОтправкиЭлектронныхПисем.КонтрольЗаполненностиГеоДанныхАдресаДоставкиКА;
	Исключение
		ВидСобытияДляОповещения = Справочники.СобытияДляОтправкиЭлектронныхПисем.ОшибкаОбменаССайтом;
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьСписокАдресовРассылки() Экспорт
	
	ПолучитьВидСобытияОповещения();
	
	СписокАдресатов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОтправкиСообщенийОбОшибках.Пользователь,
	|	НастройкиОтправкиСообщенийОбОшибках.АдресЭлПочты
	|ИЗ
	|	РегистрСведений.НастройкиОтправкиСообщенийОбОшибках КАК НастройкиОтправкиСообщенийОбОшибках
	|ГДЕ
	|	НастройкиОтправкиСообщенийОбОшибках.Событие = &Событие
	|	И НастройкиОтправкиСообщенийОбОшибках.Настройка = Истина";

	Запрос.УстановитьПараметр("Событие", ВидСобытияДляОповещения);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АдресЭлПочты");

	Если Результат.Количество() > 0 Тогда
		СписокАдресатов.ЗагрузитьЗначения(Результат);
	Иначе
		СписокАдресатов.Добавить("Pushkin-DS@Part-kom.ru", "Пушкин Денис");
	КонецЕсли;
	
	Возврат СписокАдресатов;
КонецФункции	

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	ПолучитьСписокКА();
	ВыполнитьОповещение();
	
КонецПроцедуры
