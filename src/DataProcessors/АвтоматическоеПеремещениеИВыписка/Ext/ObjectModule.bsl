Процедура ВыполнитьРегламентноеЗадание() Экспорт 
	СоздатьПеремещения();
	СоздатьРеализации();
КонецПроцедуры

Процедура СоздатьПеремещения()
	
	Перем Документ, Запрос, КолонкиСвертки, НоваяСтрока, Отбор, Результат, СверТаблица, СтрокаТовары, СтрокаТЧ, Строки, Таблица;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РезервыТоваровОстатки.Номенклатура,
	               |	РезервыТоваровОстатки.Склад КАК СкладОтправитель,
	               |	РезервыТоваровОстатки.СтрокаЗаявки.МаршрутДоставки.Склад КАК СкладПолучатель,
	               |	РезервыТоваровОстатки.КоличествоОстаток КАК Количество,
	               |	РезервыТоваровОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |	РезервыТоваровОстатки.Качество,
	               |	РезервыТоваровОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	               |	РезервыТоваровОстатки.СтрокаЗаявки
	               |ИЗ
	               |	РегистрНакопления.РезервыТоваров.Остатки(
	               |			,
	               |			Склад.ОбменСTopLog
	               |				И СтрокаЗаявки.МаршрутДоставки.Склад.АвтоматическоеПеремещение
	               |				И СтрокаЗаявки.МаршрутДоставки.Склад.ОбменСTopLog
	               |				И СтрокаЗаявки.Заявка.ИсточникЗаявки = &ИсточникЗаявки
	               |				И (СтрокаЗаявки.ПрайсПоставщика.Склад ЕСТЬ NULL
	               |					ИЛИ СтрокаЗаявки.ПрайсПоставщика.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	               |				И Склад <> СтрокаЗаявки.МаршрутДоставки.Склад) КАК РезервыТоваровОстатки";
	Запрос.УстановитьПараметр("ИсточникЗаявки", Перечисления.ИсточникиЗаявок.СайтРозница);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый); 
		Результат = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	Таблица = Результат.Выгрузить();
	
	КолонкиСвертки = "СкладОтправитель,СкладПолучатель";
	СверТаблица = Таблица.Скопировать(, КолонкиСвертки);
	СверТаблица.Свернуть(КолонкиСвертки);
	
	Для Каждого СтрокаТЧ Из СверТаблица Цикл 
		Документ = Документы.ПеремещениеТоваров.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(Документ, СтрокаТЧ, КолонкиСвертки);
		Отбор = Новый Структура(КолонкиСвертки);
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЧ);
		Строки = Таблица.НайтиСтроки(Отбор); 
		Для Каждого СтрокаТовары Из Строки Цикл 
			НоваяСтрока = Документ.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовары);
		КонецЦикла;
		Попытка
			ПодобратьПартии(Документ);
			
			Документ.Дата = ТекущаяДата();
			Документ.ДополнительныеСвойства.Вставить("ОперативноеПроведение", Истина);
			
			Документ.ВидОперации = Перечисления.ВидыОперацийПеремещенияТоваров.СвободноеПеремещение;
			Документ.СкладПолучатель = Документ.СкладПолучатель.СкладТоварВПути;
			Документ.ФилиалОтправитель = Документ.СкладОтправитель.Филиал;
			Документ.ФилиалПолучатель = Документ.СкладПолучатель.Филиал;
			Документ.СтатусДокумента = Справочники.СтатусыДокументов.ПеремещениеТоваровПоступил;
			Документ.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

Процедура ПодобратьПартии(Документ)
	
	Товары = Документ.Товары.Выгрузить(, "Номенклатура,Качество");
	Товары.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	Товары.ЗаполнитьЗначения(Документ.СкладОтправитель, "Склад");
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Товары.Номенклатура,
	                |	Товары.Склад,
	                |	Товары.Качество
	                |ПОМЕСТИТЬ Товары
	                |ИЗ
	                |	 &Товары КАК Товары
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ПартииТоваровОстатки.Номенклатура,
	                |	ПартииТоваровОстатки.Качество,
	                |	ПартииТоваровОстатки.Организация,
	                |	ПартииТоваровОстатки.КоличествоОстаток КАК Количество,
	                |	ПартииТоваровОстатки.СтрокаПрихода.ТорговаяТочка.Владелец КАК Поставщик
	                |ИЗ
	                |	РегистрНакопления.ПартииТоваров.Остатки(
	                |			,
	                |			(Номенклатура, Склад, Качество) В
	                |				(ВЫБРАТЬ
	                |					Товары.Номенклатура,
	                |					Товары.Склад,
	                |					Товары.Качество
	                |				ИЗ
	                |					Товары)) КАК ПартииТоваровОстатки";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	Товары = Документ.Товары.Выгрузить();
	Документ.Товары.Очистить();
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Результат = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	ОстаткиПартий = Результат.Выгрузить();
	
	КолонкиРаспределения = "Номенклатура,Качество";
	Если Документ.СкладОтправитель.СкладVMI Тогда 
		КолонкиРаспределения = КолонкиРаспределения + ",Поставщик";
	КонецЕсли;
	
	Для Каждого СтрокаТовары Из Товары Цикл 
		Отбор = Новый Структура(КолонкиРаспределения);
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТовары);
		
		Если Документ.СкладОтправитель.СкладVMI Тогда
			Отбор.Поставщик = СтрокаТовары.СтрокаЗаявки.Поставщик;
		КонецЕсли;
		
		Строки = ОстаткиПартий.НайтиСтроки(Отбор);
		Индекс = 0;
		КоличествоРаспределить = СтрокаТовары.Количество;
		
		Пока КоличествоРаспределить > 0 И Индекс < Строки.Количество() Цикл 
			СтрокаОст = Строки.Получить(Индекс);
			СписываемоеКоличество = Мин(КоличествоРаспределить, СтрокаОст.Количество);
			Если СписываемоеКоличество > 0 Тогда 
				НоваяСтрока = Документ.Товары.Добавить();                       
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовары);
				НоваяСтрока.Количество = СписываемоеКоличество;
				НоваяСтрока.КоличествоПлан = НоваяСтрока.Количество;
				НоваяСтрока.Организация = СтрокаОст.Организация;
				
				КоличествоРаспределить = КоличествоРаспределить - СписываемоеКоличество;
				СтрокаОст.Количество = СтрокаОст.Количество - СписываемоеКоличество;
			КонецЕсли;
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;
	ВремТаблица = Документ.Товары.Выгрузить(, "Организация,Количество");
	ВремТаблица.Свернуть("Организация", "Количество");
	ВремТаблица.Сортировать("Количество Убыв");
	Документ.Организация = ВремТаблица.Получить(0).Организация;
	
	Строки = Документ.Товары.НайтиСтроки(Новый Структура("Организация", Документ.Организация));
	Для Каждого СтрокаТовары Из Строки Цикл 
		СтрокаТовары.Организация = Неопределено;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьРеализации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РезервыТоваровОстатки.СтрокаЗаявки,
	               |	РезервыТоваровОстатки.КоличествоОстаток КАК Количество,
	               |	РезервыТоваровОстатки.СтрокаЗаявки.Заявка.НомерРозничнойЗаявки КАК НомерРозничнойЗаявки,
	               |	РезервыТоваровОстатки.Номенклатура,
	               |	РезервыТоваровОстатки.Качество,
	               |	РезервыТоваровОстатки.Склад
	               |ПОМЕСТИТЬ вт
	               |ИЗ
	               |	РегистрНакопления.РезервыТоваров.Остатки(
	               |			,
	               |			Склад.ФизическийСклад.АвтоматическоеПеремещение
	               |				И СтрокаЗаявки.МаршрутДоставки.Склад.ФизическийСклад = Склад.ФизическийСклад
	               |				И СтрокаЗаявки.Заявка.ИсточникЗаявки = &ИсточникЗаявки
	               |				И НЕ Склад.Заблокирован) КАК РезервыТоваровОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаявкиПокупателейОстатки.СтрокаЗаявки,
	               |	ЗаявкиПокупателейОстатки.КоличествоОстаток КАК Количество
	               |ПОМЕСТИТЬ вт2
	               |ИЗ
	               |	РегистрНакопления.ЗаявкиПокупателей.Остатки(
	               |			,
	               |			СтрокаЗаявки.Заявка.НомерРозничнойЗаявки В
	               |				(ВЫБРАТЬ
	               |					вт.НомерРозничнойЗаявки
	               |				ИЗ
	               |					вт)) КАК ЗаявкиПокупателейОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вт2.СтрокаЗаявки.Заявка.НомерРозничнойЗаявки КАК НомерРозничнойЗаявки
	               |ПОМЕСТИТЬ втНеВыпЗаявки
	               |ИЗ
	               |	вт2 КАК вт2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	               |		ПО вт2.СтрокаЗаявки = вт.СтрокаЗаявки
	               |ГДЕ
	               |	ЕСТЬNULL(вт.Количество, 0) < вт2.Количество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вт.НомерРозничнойЗаявки
	               |ПОМЕСТИТЬ втНомера
	               |ИЗ
	               |	вт КАК вт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втНеВыпЗаявки КАК втНеВыпЗаявки
	               |		ПО вт.НомерРозничнойЗаявки = втНеВыпЗаявки.НомерРозничнойЗаявки
	               |ГДЕ
	               |	втНеВыпЗаявки.НомерРозничнойЗаявки ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КорректировкаЗаявкиПокупателя.Ссылка,
	               |	МАКСИМУМ(КорректировкаЗаявкиПокупателя.Дата) КАК Дата
	               |ПОМЕСТИТЬ втКорр
	               |ИЗ
	               |	Документ.КорректировкаЗаявкиПокупателя КАК КорректировкаЗаявкиПокупателя
	               |ГДЕ
	               |	КорректировкаЗаявкиПокупателя.НомерРозничнойЗаявки В
	               |			(ВЫБРАТЬ
	               |				втНомера.НомерРозничнойЗаявки
	               |			ИЗ
	               |				втНомера)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КорректировкаЗаявкиПокупателя.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КорректировкаЗаявкиПокупателя.Ссылка КАК Корректировка,
	               |	КорректировкаЗаявкиПокупателя.НомерРозничнойЗаявки,
	               |	КорректировкаЗаявкиПокупателя.ДокументОснование КАК Заявка
	               |ПОМЕСТИТЬ втКорр2
	               |ИЗ
	               |	втКорр КАК втКорр
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаявкиПокупателя КАК КорректировкаЗаявкиПокупателя
	               |		ПО втКорр.Ссылка = КорректировкаЗаявкиПокупателя.Ссылка
	               |			И втКорр.Дата = КорректировкаЗаявкиПокупателя.Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втКорр2.НомерРозничнойЗаявки,
	               |	втКорр2.Корректировка КАК ПослДокумент
	               |ПОМЕСТИТЬ втПослДок
	               |ИЗ
	               |	втКорр2 КАК втКорр2
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаявкаПокупателя.НомерРозничнойЗаявки,
	               |	ЗаявкаПокупателя.Ссылка
	               |ИЗ
	               |	Документ.ЗаявкаПокупателя КАК ЗаявкаПокупателя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втКорр2 КАК втКорр2
	               |		ПО (втКорр2.Заявка = ЗаявкаПокупателя.Ссылка)
	               |			И (втКорр2.НомерРозничнойЗаявки = ЗаявкаПокупателя.НомерРозничнойЗаявки)
	               |ГДЕ
	               |	ЗаявкаПокупателя.НомерРозничнойЗаявки В
	               |			(ВЫБРАТЬ
	               |				втНомера.НомерРозничнойЗаявки
	               |			ИЗ
	               |				втНомера)
	               |	И втКорр2.Заявка ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаявкаПокупателяТовары.Ссылка.Склад КАК Склад,
	               |	ЗаявкаПокупателяТовары.СтрокаЗаявки КАК СтрокаЗаявки,
	               |	1 КАК Коэффициент,
	               |	ЗаявкаПокупателяТовары.Цена,
	               |	ЗаявкаПокупателяТовары.ЦенаСоСкидкой,
	               |	ЗаявкаПокупателяТовары.Сумма * вт.Количество / (ЗаявкаПокупателяТовары.Количество - ЗаявкаПокупателяТовары.Отмена) КАК Поле1,
	               |	ЗаявкаПокупателяТовары.СтавкаНДС,
	               |	ЗаявкаПокупателяТовары.СуммаНДС * вт.Количество / ЗаявкаПокупателяТовары.Количество - ЗаявкаПокупателяТовары.Отмена КАК Поле2,
	               |	ЗаявкаПокупателяТовары.КомментарийИзСайта,
	               |	ЗаявкаПокупателяТовары.IDSite,
	               |	ЗаявкаПокупателяТовары.ПроцентСкидкиНаценки,
	               |	ЗаявкаПокупателяТовары.ЦенаЗакупки,
	               |	ЗаявкаПокупателяТовары.Количество - ЗаявкаПокупателяТовары.Отмена КАК КоличествоИзначальное,
	               |	НЕ ЗаявкаПокупателяТовары.Ссылка.УчитыватьНДС
	               |		ИЛИ ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	               |	ЗаявкаПокупателяТовары.Ссылка.НомерРозничнойЗаявки КАК НомерРозничнойЗаявки,
	               |	вт.Количество,
	               |	вт.Количество КАК КоличествоПлан,
	               |	вт.Номенклатура КАК Номенклатура,
	               |	вт.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |	вт.Качество КАК Качество,
	               |	вт.Склад КАК СкладРезерва
	               |ИЗ
	               |	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	               |		ПО ЗаявкаПокупателяТовары.СтрокаЗаявки = вт.СтрокаЗаявки
	               |ГДЕ
	               |	ЗаявкаПокупателяТовары.Количество - ЗаявкаПокупателяТовары.Отмена > 0
	               |	И ЗаявкаПокупателяТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				втПослДок.ПослДокумент
	               |			ИЗ
	               |				втПослДок)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КорректировкаЗаявкиПокупателяТовары.Ссылка.Склад,
	               |	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
	               |	1,
	               |	КорректировкаЗаявкиПокупателяТовары.Цена,
	               |	КорректировкаЗаявкиПокупателяТовары.ЦенаСоСкидкой,
	               |	КорректировкаЗаявкиПокупателяТовары.Сумма * вт.Количество / (КорректировкаЗаявкиПокупателяТовары.Количество - КорректировкаЗаявкиПокупателяТовары.Отмена),
	               |	КорректировкаЗаявкиПокупателяТовары.СтавкаНДС,
	               |	КорректировкаЗаявкиПокупателяТовары.СуммаНДС * вт.Количество / КорректировкаЗаявкиПокупателяТовары.Количество - КорректировкаЗаявкиПокупателяТовары.Отмена,
	               |	КорректировкаЗаявкиПокупателяТовары.КомментарийИзСайта,
	               |	КорректировкаЗаявкиПокупателяТовары.IDSite,
	               |	КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки,
	               |	КорректировкаЗаявкиПокупателяТовары.ЦенаЗакупки,
	               |	КорректировкаЗаявкиПокупателяТовары.Количество - КорректировкаЗаявкиПокупателяТовары.Отмена,
	               |	НЕ КорректировкаЗаявкиПокупателяТовары.Ссылка.УчитыватьНДС
	               |		ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС,
	               |	КорректировкаЗаявкиПокупателяТовары.Ссылка.НомерРозничнойЗаявки,
	               |	вт.Количество,
	               |	вт.Количество,
	               |	вт.Номенклатура,
	               |	вт.Номенклатура.ЕдиницаХраненияОстатков,
	               |	вт.Качество,
	               |	вт.Склад
	               |ИЗ
	               |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	               |		ПО КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки = вт.СтрокаЗаявки
	               |ГДЕ
	               |	КорректировкаЗаявкиПокупателяТовары.Количество - КорректировкаЗаявкиПокупателяТовары.Отмена > 0
	               |	И КорректировкаЗаявкиПокупателяТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				втПослДок.ПослДокумент
	               |			ИЗ
	               |				втПослДок)";
				   
	Запрос.УстановитьПараметр("ИсточникЗаявки", Перечисления.ИсточникиЗаявок.СайтРозница);
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Результат = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	Таблица = Результат.Выгрузить();
	СверТаблица = Таблица.Скопировать(, "НомерРозничнойЗаявки,СкладРезерва");
	
	СверТаблица.Свернуть("НомерРозничнойЗаявки,СкладРезерва");
	
	Для Каждого СтрокаСв Из СверТаблица Цикл 
		ДокРТУ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		Строки = Таблица.НайтиСтроки(Новый Структура("НомерРозничнойЗаявки,СкладРезерва", СтрокаСв.НомерРозничнойЗаявки, СтрокаСв.СкладРезерва));
		Товары = Таблица.Скопировать(Строки);
		ДокРТУ.ДополнительныеСвойства.Вставить("ТоварыКЗаполнению", Товары);
		ДокРТУ.ДополнительныеСвойства.Вставить("СкладРезерва", СтрокаСв.СкладРезерва);
		
		ДокРТУ.Заполнить(СтрокаСв.НомерРозничнойЗаявки);
		ДокРТУ.СтатусДокумента = Справочники.СтатусыДокументов.РеализацияТоваровУслугСборка;
		Попытка
			ДокРТУ.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;	
КонецПроцедуры


//|
//	               |////////////////////////////////////////////////////////////////////////////////
//	               |ВЫБРАТЬ
//	               |	ЗаявкаПокупателяТовары.СтрокаЗаявки,
//	               |	ЗаявкаПокупателяТовары.Цена КАК Цена,
//	               |	ЗаявкаПокупателяТовары.ЦенаСоСкидкой КАК ЦенаСоСкидкой,
//	               |	ЗаявкаПокупателяТовары.КомментарийИзСайта,
//	               |	НЕ ЗаявкаПокупателяТовары.Ссылка.УчитыватьНДС
//	               |		ИЛИ ЗаявкаПокупателяТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
//	               |	ЗаявкаПокупателяТовары.СтавкаНДС,
//	               |	ЗаявкаПокупателяТовары.ПроцентСкидкиНаценки
//	               |ПОМЕСТИТЬ втЦены
//	               |ИЗ
//	               |	Документ.ЗаявкаПокупателя.Товары КАК ЗаявкаПокупателяТовары
//	               |ГДЕ
//	               |	(ЗаявкаПокупателяТовары.Ссылка, ЗаявкаПокупателяТовары.СтрокаЗаявки) В
//	               |			(ВЫБРАТЬ
//	               |				втРезервы.ПоследняяКорректировка,
//	               |				втРезервы.СтрокаЗаявки
//	               |			ИЗ
//	               |				втРезервы)
//	               |
//	               |ОБЪЕДИНИТЬ ВСЕ
//	               |
//	               |ВЫБРАТЬ
//	               |	КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки,
//	               |	КорректировкаЗаявкиПокупателяТовары.Цена,
//	               |	КорректировкаЗаявкиПокупателяТовары.ЦенаСоСкидкой,
//	               |	КорректировкаЗаявкиПокупателяТовары.КомментарийИзСайта,
//	               |	НЕ КорректировкаЗаявкиПокупателяТовары.Ссылка.УчитыватьНДС
//	               |		ИЛИ КорректировкаЗаявкиПокупателяТовары.Ссылка.СуммаВключаетНДС,
//	               |	КорректировкаЗаявкиПокупателяТовары.СтавкаНДС,
//	               |	КорректировкаЗаявкиПокупателяТовары.ПроцентСкидкиНаценки
//	               |ИЗ
//	               |	Документ.КорректировкаЗаявкиПокупателя.Товары КАК КорректировкаЗаявкиПокупателяТовары
//	               |ГДЕ
//	               |	(КорректировкаЗаявкиПокупателяТовары.Ссылка, КорректировкаЗаявкиПокупателяТовары.СтрокаЗаявки) В
//	               |			(ВЫБРАТЬ
//	               |				втРезервы.ПоследняяКорректировка,
//	               |				втРезервы.СтрокаЗаявки
//	               |			ИЗ
//	               |				втРезервы)
//	               |;
//	               |
//	               |////////////////////////////////////////////////////////////////////////////////
//	               |ВЫБРАТЬ
//	               |	втРезервы.Номенклатура,
//	               |	втРезервы.Склад,
//	               |	втРезервы.Качество,
//	               |	втРезервы.СтрокаЗаявки,
//	               |	втРезервы.Количество,
//	               |	ВЫБОР
//	               |		КОГДА &ИспользоватьЦенуСоСкидкой
//	               |				И втЦены.ЦенаСоСкидкой <> 0
//	               |			ТОГДА втЦены.Цена
//	               |		ИНАЧЕ втЦены.Цена - втЦены.Цена * втЦены.ПроцентСкидкиНаценки / 100
//	               |	КОНЕЦ КАК Цена,
//	               |	втЦены.ЦенаСоСкидкой,
//	               |	втЦены.КомментарийИзСайта,
//	               |	втЦены.СуммаВключаетНДС,
//	               |	втЦены.СтавкаНДС,
//	               |	втЦены.ПроцентСкидкиНаценки,
//	               |	втРезервы.ЦенаЗакупки,
//	               |	втРезервы.IDSite,
//	               |	втРезервы.Заявка
//	               |ИЗ
//	               |	втРезервы КАК втРезервы
//	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦены КАК втЦены
//	               |		ПО втРезервы.СтрокаЗаявки = втЦены.СтрокаЗаявки
//	               |;
//	               |
//	               |////////////////////////////////////////////////////////////////////////////////
//	               |ВЫБРАТЬ
//	               |	УслугиОстатки.Заявка,
//	               |	УслугиОстатки.Номенклатура,
//	               |	УслугиОстатки.КоличествоОстаток КАК Количество,
//	               |	УслугиОстатки.СуммаОстаток КАК Сумма,
//	               |	УслугиОстатки.СуммаОстаток / УслугиОстатки.КоличествоОстаток КАК Цена,
//	               |	УслугиОстатки.Номенклатура.СтавкаНДС КАК СтавкаНДС
//	               |ИЗ
//	               |	РегистрНакопления.Услуги.Остатки(, ) КАК УслугиОстатки