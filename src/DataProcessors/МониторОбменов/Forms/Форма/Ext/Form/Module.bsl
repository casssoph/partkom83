Перем МассивОбменов; 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НастройкиМонитора = Справочники.НастройкиРеквизитовДляОбменов.НастройкиМонитораОбменов.Хранилище.Получить();
	Если НастройкиМонитора = Неопределено Тогда 
		НастройкиМонитора = Объект.Обмены.Выгрузить(, "Имя,ИдентификаторРегламентногоЗадания,Узел");
	КонецЕсли;
	
	Для Каждого Имя Из МассивОбменов Цикл 
		НоваяСтрока = Объект.Обмены.Добавить();
		НоваяСтрока.Имя = Имя;
		СтрокаНастройки = НастройкиМонитора.Найти(Имя, "Имя");
		Если СтрокаНастройки <> Неопределено Тогда 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНастройки);
			НастройкиМонитора.Удалить(СтрокаНастройки);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаНастройки Из НастройкиМонитора Цикл 
		НоваяСтрока = Объект.Обмены.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНастройки);
	КонецЦикла; 
	
	ОбменСТопЛог = Истина;
	ОбменОкноПоставщика = Истина;
	ОбменССайтом = Истина;
	ЭкспрессДоставка = Истина;
	
	ОбновлениеСтатусовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если АвтоОбновление Тогда 
		ПодключитьОбработчикОжидания("ОбновлениеСтатусов", 10, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура ОбновлениеСтатусов()
	ОбновлениеСтатусовНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеСтатусовНаСервере()
	Для Каждого СтрокаТЧ Из Объект.Обмены Цикл 
		Результат = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрокаТЧ.ИдентификаторРегламентногоЗадания);
		Если Результат <> Неопределено Тогда 
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Результат, "Использование,Наименование");
			СтрокаТЧ.Расписание = Строка(Результат.Расписание);
			
			Если Результат.ПоследнееЗадание <> Неопределено Тогда 
				лСостояние = Результат.ПоследнееЗадание.Состояние;
								
				Если (лСостояние = СостояниеФоновогоЗадания.Активно) тогда
					лТекстСостояние = "Активно с " + Формат(Результат.ПоследнееЗадание.Начало, "ДЛФ=DT");
					СтрокаТЧ.СтатусКартинки = 2;
				ИначеЕсли (лСостояние = СостояниеФоновогоЗадания.Завершено) тогда
					лТекстСостояние = "Завершено в " + Формат(Результат.ПоследнееЗадание.Конец, "ДЛФ=DT");
					СтрокаТЧ.СтатусКартинки = 1;
				ИначеЕсли (лСостояние = СостояниеФоновогоЗадания.ЗавершеноАварийно) тогда
					лТекстСостояние = "Аварийно в " + Формат(Результат.ПоследнееЗадание.Конец, "ДЛФ=DT");
					СтрокаТЧ.СтатусКартинки = 0;
				ИначеЕсли (лСостояние = СостояниеФоновогоЗадания.Отменено) тогда
					лТекстСостояние = "Отменено в " + Формат(Результат.ПоследнееЗадание.Конец, "ДЛФ=DT");
					СтрокаТЧ.СтатусКартинки = 0;
				КонецЕсли;
				СтрокаТЧ.Статус = лТекстСостояние;
			Иначе
				СтрокаТЧ.Статус = "Не выполнялось";
				СтрокаТЧ.СтатусКартинки = 0;
			КонецЕсли;
		Иначе
			Данные = Новый Структура;
			СтрокаТЧ.Статус = "Не найдено регламентное задание";
			СтрокаТЧ.СтатусКартинки = 0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбменыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//ОбменыВыборНаСервере();
	Если Поле.Имя = "ОбменыУзел" Тогда 
		Возврат;
	Иначе
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Открыть форму подбора регламентного задания");
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Настройки регламентного задания");
		Ответ = Вопрос("Открыть форму подбора регламентного задания, настройки регламентного задания или историю?", СписокКнопок);
		Если Ответ = КодВозвратаДиалога.Да Тогда 
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбменыВыборЗавершение1", ЭтотОбъект);
			ОткрытьФорму("Обработка.МониторОбменов.Форма.ФормаПодбораРеглЗаданияУпр",, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения);		
			ОбновлениеСтатусов();
		Иначе	
			ОткрытьЗначение(НайтиРеглЗадание(Элементы.Обмены.ТекущиеДанные.ИдентификаторРегламентногоЗадания));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиРеглЗадание(ИдентификаторРегламентногоЗадания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегламентныеЗадания.Ссылка
	               |ИЗ
	               |	Справочник.РегламентныеЗадания КАК РегламентныеЗадания
	               |ГДЕ
	               |	РегламентныеЗадания.ИдентификаторРегламентногоЗадания = &ИдентификаторРегламентногоЗадания";
	Запрос.УстановитьПараметр("ИдентификаторРегламентногоЗадания", ИдентификаторРегламентногоЗадания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка;	
	Иначе 
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбменыВыборЗавершение1(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	Если ТипЗнч(РезультатЗакрытия) = Тип("Строка") Тогда 
		Элементы.Обмены.ТекущиеДанные.ИдентификаторРегламентногоЗадания = Новый УникальныйИдентификатор(РезультатЗакрытия);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	трНастройкиМонитора = Объект.Обмены.Выгрузить(,"Имя,ИдентификаторРегламентногоЗадания,Узел");
	НастройкиМонитора = Справочники.НастройкиРеквизитовДляОбменов.НастройкиМонитораОбменов.Хранилище.Получить();
	ТребуетсяЗапись = Ложь;
	Если ТипЗнч(НастройкиМонитора) = Тип("ТаблицаЗначений") Тогда 
		Добавить = Неопределено;
		Удалить = Неопределено;
		Попытка 
			ТребуетсяЗапись = Не РаботаСПоследовательностямиКлиентСервер.ТаблицыИдентичны(НастройкиМонитора, трНастройкиМонитора, Добавить, Удалить);  
		Исключение
			ТребуетсяЗапись = Истина;
		КонецПопытки;
	Иначе
		ТребуетсяЗапись = Истина;	
	КонецЕсли;
	
	Если ТребуетсяЗапись Тогда 
		Об = Справочники.НастройкиРеквизитовДляОбменов.НастройкиМонитораОбменов.ПолучитьОбъект();
		Об.Хранилище = Новый ХранилищеЗначения(трНастройкиМонитора);
		Об.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ПриЗакрытииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновлениеСтатусов();
КонецПроцедуры

&НаКлиенте
Процедура ФлагПриИзменении(Элемент)
	
	ОшибкиПриОбменах.Отбор.Элементы.Очистить();
	ЭлементОтбора = ОшибкиПриОбменах.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Обмен");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	
	СписокОтборов = Новый СписокЗначений;
	Если ОбменССайтом Тогда 
		СписокОтборов.Добавить("ОбменССайтом");
	КонецЕсли;
	Если ОбменСТопЛог Тогда 
		СписокОтборов.Добавить("ОбменСТопЛог");
	КонецЕсли;
	Если ОбменОкноПоставщика Тогда 
		СписокОтборов.Добавить("ОбменОкноПоставщика");
	КонецЕсли;
	Если ЭкспрессДоставка Тогда 
		СписокОтборов.Добавить("ЭкспрессДоставка");
	КонецЕсли;
	
	ЭлементОтбора.ПравоеЗначение = СписокОтборов;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	ЭлементОтбора.Использование = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюОбменаТопЛог(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияОбменаСТопЛог.ФормаСписка",, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюОбменаССайтом(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияОбменаССайтом.ФормаСписка",, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюОбменаССайтом_Заявки_Загрузка(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияОбменаССайтом_ЗаявкиПокупателей.ФормаСписка",, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюОбменаССайтом_Заявки_Выгрузка(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияЗаявокДляПланаОбменаССайтом.ФормаСписка",, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюОбмена1с8FTP(Команда)
	ОткрытьФорму("РегистрСведений.ИсторияОбмена1с8FTP.ФормаСписка",, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиРегламентногоЗадания(Команда)
	Если Элементы.Обмены.ТекущиеДанные <> Неопределено Тогда 
		ОткрытьЗначение(НайтиРеглЗадание(Элементы.Обмены.ТекущиеДанные.ИдентификаторРегламентногоЗадания));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборРегламентногоЗадания(Команда)
	Если Элементы.Обмены.ТекущиеДанные <> Неопределено Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбменыВыборЗавершение1", ЭтотОбъект);
		ОткрытьФорму("Обработка.МониторОбменов.Форма.ФормаПодбораРеглЗаданияУпр",, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения);		
		ОбновлениеСтатусов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрированныеОбъекты(Команда)
	
	Если Элементы.Обмены.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Элементы.Обмены.ТекущиеДанные.Узел) Тогда 
		Предупреждение("Для обмена: " + Элементы.Обмены.ТекущиеДанные.Имя + " не установлен узел", 2);
	КонецЕсли;
	
	Форма = ПолучитьФорму("Обработка.РегистрацияИзмененийДляОбмена.Форма");
	Форма.УзелОбмена = Элементы.Обмены.ТекущиеДанные.Узел;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменыУзелНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	Имя = "";
	Если ВвестиСтроку(Имя, "Введите имя обмена") Тогда 
		НоваяСтрока = Объект.Обмены.Добавить();
		НоваяСтрока.Имя = Имя;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбменыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиПриОбменахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда 
		П = Новый Структура("ДатаЗагрузкиСообщения,НомерСообщения,Обмен,СообщениеОбОшибке");
		ЗаполнитьЗначенияСвойств(П, Элемент.ТекущиеДанные); 
		Ф = ПолучитьФорму("Обработка.МониторОбменов.Форма.ФормаСообщения", П, ЭтаФорма, УникальныйИдентификатор);
		Ф.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаписьВИстории(Команда)
	Если Элементы.ОшибкиПриОбменах.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.ОшибкиПриОбменах.ТекущиеДанные.НомерСообщения) Тогда 
		Предупреждение("По данному обмену пока не поддерживается поиск в истории", 2);	
		Возврат;
	КонецЕсли;
	Если Элементы.ОшибкиПриОбменах.ТекущиеДанные.Обмен = "ОбменССайтом" Тогда 
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Имя", "НомерПринятого");
		СтруктураОтбора.Вставить("Значение", Элементы.ОшибкиПриОбменах.ТекущиеДанные.НомерСообщения);
		Форма = ПолучитьФорму("РегистрСведений.ИсторияОбменаССайтом_ЗаявкиПокупателей.ФормаСписка",,ЭтаФорма);
		Форма.СтруктураОтбора = СтруктураОтбора;
		Форма.Открыть();
	ИначеЕсли Элементы.ОшибкиПриОбменах.ТекущиеДанные.Обмен = "ОбменСТопЛог" Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Имя", "НомерСообщения");
		СтруктураОтбора.Вставить("Значение", Элементы.ОшибкиПриОбменах.ТекущиеДанные.НомерСообщения);
		Форма = ПолучитьФорму("РегистрСведений.ИсторияОбменаСТопЛог.ФормаСписка",,ЭтаФорма);
		Форма.СтруктураОтбора = СтруктураОтбора;
		Форма.Открыть();
	Иначе
		Предупреждение("По данному обмену пока не поддерживается поиск в истории", 2);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АвтоОбновлениеПриИзменении(Элемент)
	Если АвтоОбновление Тогда 
		ПодключитьОбработчикОжидания("ОбновлениеСтатусов", 10, Ложь);
	Иначе
		ОтключитьОбработчикОжидания("ОбновлениеСтатусов");
	КонецЕсли;
КонецПроцедуры


МассивОбменов = Новый Массив;
МассивОбменов.Добавить("ОбменПартКом83_Сайт");
МассивОбменов.Добавить("ОбменПартКом83_Сайт_Заявки");
//МассивОбменов.Добавить("ОбменПартКом83_Сайт_данные_покупателей");
//МассивОбменов.Добавить("ОбменПартКом83_Сайт_остатки_на_складах");
МассивОбменов.Добавить("ОбменПартКом83_ОкноПоставщика");
МассивОбменов.Добавить("ОбменПартКом83_ОкноПоставщикаПрайсыVMI");
МассивОбменов.Добавить("ОбменПартКом83_TopLog");
МассивОбменов.Добавить("Обмен_FTP");
