
Процедура Выгрузить(Параметры) экспорт
	
	ПолноеИмяФайла = Параметры.ИмяФайлаВыгрузки + "1c8BF.DBF";
	Параметры.Вставить("ПолноеИмяФайла",ПолноеИмяФайла);
	УдалитьФайлы(ПолноеИмяФайла);
	УдалитьФайлы(СтрЗаменить(ПолноеИмяФайла,".DBF",".TXT"));
	
	ДБФ = Новый XBase;
	ДБФ.Кодировка = КодировкаXBase.OEM;
	
	ДБФ.Поля.Добавить("VID",	"S", 30, 0);   	// вид документа 
	ДБФ.Поля.Добавить("IDDOC",	"S", 36, 0);  	// изначально уникальный код SQL -> заменил на uid 1с8
	ДБФ.Поля.Добавить("DOCacept",	"N", 1, 0); // признак проведения
	ДБФ.Поля.Добавить("DOCdelete",	"N", 1, 0); // признак пометки удаления
	
	ДБФ.Поля.Добавить("NUMDOC", "S", 15, 0);    // номер документа 
	ДБФ.Поля.Добавить("DATEDOC", "D", 8, 0);    // дата документа
	ДБФ.Поля.Добавить("DATE1C",	"N", 2, 0);     // час
	ДБФ.Поля.Добавить("DATE1M",	"N", 2, 0);     // минута
	ДБФ.Поля.Добавить("DATE1S",	"N", 2, 0);     // секунда
	
	ДБФ.Поля.Добавить("NUMDOCIN", "S", 15, 0);  // номер документа 
	ДБФ.Поля.Добавить("DATEDOCIN", "D", 8, 0);  // дата документа
	
	ДБФ.Поля.Добавить("FIRM", "S", 50, 0); 		//фирма
	ДБФ.Поля.Добавить("FIRMINN", "S", 50, 0); 	//фирма_ИНН
	
	ДБФ.Поля.Добавить("NAMEK", "S", 50, 0); 	//контрагент  
	ДБФ.Поля.Добавить("CODEK", "S", 15, 0); 	// код контрагент
	ДБФ.Поля.Добавить("FULLNAME", "S", 200, 0); //контрагент_полное наименование
	ДБФ.Поля.Добавить("INN", "S", 50, 0); 		//контрагент_ИНН
	ДБФ.Поля.Добавить("KPP", "S", 50, 0); 		//контрагент_КПП 
	ДБФ.Поля.Добавить("YURFIZ", "n", 1, 0); 	//юр/физ  
	ДБФ.Поля.Добавить("UIDK", "S", 36, 0); 		//УИД контрагента//паи160303 

	ДБФ.Поля.Добавить("Oferta", "n", 1, 0); 	//оферта   
	ДБФ.Поля.Добавить("VMI", "n", 1, 0); 		//VMI   
	ДБФ.Поля.Добавить("AnyDay", "n", 1, 0); 	//оплата в любой день, а не только во вт.чт  
	
	ДБФ.Поля.Добавить("NumSch","S",20, 0); 	  	//	Номер счета 
	ДБФ.Поля.Добавить("BankName","S",100,0); 	//	Банк
	ДБФ.Поля.Добавить("BIK","S",9, 0); 			//	БИК
	ДБФ.Поля.Добавить("Korr","S",20, 0); 		//	Корр.счет  
	
	ДБФ.Поля.Добавить("DATEPAY", "D", 8, 0);    // дата оплаты
	ДБФ.Поля.Добавить("SUMMDOC", "N", 15, 2);	// сумма документа
	ДБФ.Поля.Добавить("Stavka", "s", 10, 0);    // валюта оплаты
	ДБФ.Поля.Добавить("SUMMNDS", "N", 15, 2);   // сумма ндс 
	ДБФ.Поля.Добавить("Valuta", "s", 8, 0);    	// валюта оплаты
	
	ДБФ.Поля.Добавить("DATEN", "S", 10, 0);   	// дата начала выгрузки  
	ДБФ.Поля.Добавить("DATEK", "S", 10, 0);   	// дата окончания 
	ДБФ.Поля.Добавить("KOMMENT", "S", 100, 0);  // вид операции  
	
	//возвраты поставщиков
	ДБФ.Поля.Добавить("NUMPOST", "S", 15, 0);   // номер документа 
	ДБФ.Поля.Добавить("DATEPOST", "D", 8, 0);   // дата документа
	ДБФ.Поля.Добавить("KONTRNAME", "S", 200, 0);// контрагент_полное наименование
	ДБФ.Поля.Добавить("KONTRINN", "S", 50, 0); 	// контрагент_ИНН
	
	//корректировка долга
	ДБФ.Поля.Добавить("VIDOP",	"S", 30, 0);    // вид операции 
	
	ДБФ.Поля.Добавить("SUMKOR", "N", 15, 2); 	// сумма корректировки документа
	ДБФ.Поля.Добавить("KOR", "N", 1,0);      	// корректировки документа  
	
	ДБФ.СоздатьФайл(ПолноеИмяФайла);
	ДБФ.АвтоСохранение = Истина;

	ВыгрузкаРазныхДокументов(ДБФ,Параметры);	
	
	ДБФ.ЗакрытьФайл();
	
КонецПроцедуры
Процедура ВыгрузкаРазныхДокументов(ДБФ,Параметры)
	
	ДатаОплаты = Параметры.ДатаОплаты;
	СекундВСутках = 86400;
	стрмес = "";
	счсч = 0;
	
	Если Параметры.Флажок1 тогда
		//---------------------------------------------------------------------------------
		//Остатки  
		
		//ДатаОтчета = НачалоМесяца(ДатаОплаты-30*СекундВСутках);
		//ДатаОплаты1 = ДатаОплаты-1;  
		//
		//  ВыбНачПериода = ДобавитьМесяц(НачалоМесяца(ДатаОплаты),-1);
		//  ВыбКонПериода = ДатаОплаты;
		//
		//ДатаОтчетаНач = НачалоМесяца(ДатаОплаты-30*СекундВСутках);
		//ДатаОтчетаКон = ДатаОплаты-1;
		
		ДатаОтчета = НачалоМесяца(Параметры.ВыбНачПериода);
	    ДатаОплаты1 = Параметры.ВыбКонПериода;  
		
	   	ВыбНачПериода = ДатаОтчета;
	   	ВыбКонПериода = ДатаОплаты1;
		
		ДатаОтчетаНач = ДатаОтчета;
	    ДатаОтчетаКон = ДатаОплаты1;
		
		
		Дни = ДатаОтчетаКон - ДатаОтчетаНач;
		Дни = Окр(Дни / СекундВСутках,0,1);
		
		Параметры.Вставить("ДатаОтчетаНач",ДатаОтчетаНач);
		Параметры.Вставить("ДатаОтчетаКон",ДатаОтчетаКон);
		
		ВыгрузитьТех(ДБФ,"Начало", Параметры);
		
		ДатаОтчетаНач1 = ДатаОтчетаНач;
		ДатаОтчетаКон1 = ДатаОтчетаНач1+5*СекундВСутках;
		
		Параметры.Вставить("ДатаОтчетаНач1",ДатаОтчетаНач1);
		Параметры.Вставить("ДатаОтчетаКон1",ДатаОтчетаКон1);
		
		Пока Дни>0 Цикл
			
			сч = 0;
			заг = "ДатаОтчетаНач1 = " + СокрлП(ДатаОтчетаНач1) + " / ДатаОтчетаКон1 = " + СокрлП(ДатаОтчетаКон1)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
					
			ЗапросОстатки = СобратьОстаткиПоВзаиморасчетам(Параметры);
			
			Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
				стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
			КонецЕсли;
			
			Если ЗапросОстатки.Количество() > 0 тогда
				Для каждого КАГ из ЗапросОстатки цикл
					
					Если Врег(Лев(КАГ.ЗапросОстатки_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
						Продолжить;
					КонецЕсли;
					
					сч = сч + 1;
					счсч = счсч + 1;
					
					ВыгрузитьОстатки(ДБФ,КАГ,Параметры);
					стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + КАГ.ЗапросОстатки_Контрагент_Наименование + "] флОферта [" + КАГ.ТекДок_Договор_флОферта+"] флVMI ["+ КАГ.ТекДок_Договор_флVMI+ "] НачОст[" + КАГ.ЗапросОстатки_СуммаРубНачОст + "] КонОст["+ КАГ.ЗапросОстатки_СуммаРубКонОст + "]";
					
					Если счсч/1000 = Цел(счсч/1000) тогда
					 	ДБФ.Записать();		
						СообщитьЛог(стрмес,Параметры);
						стрмес = "";
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			Если Дни=1 тогда
				Прервать;
			КонецЕсли;
			
			ДатаОтчетаНач1 = ДатаОтчетаНач1+10*СекундВСутках;
			ДатаОтчетаКон1 = ДатаОтчетаКон1+10*СекундВСутках; 
			
			Дни = ДатаОтчетаКон1 - ДатаОтчетаНач1;
			Дни = Окр(Дни / СекундВСутках,0,1);
			
			Если ДатаОтчетаНач1>ДатаОтчетаКон тогда 
				ДатаОтчетаНач1=ДатаОтчетаКон;
				Дни = 1;
			КонецЕсли;
			Если ДатаОтчетаКон1>ДатаОтчетаКон тогда 
				ДатаОтчетаКон1=ДатаОтчетаКон;
				Дни = 1;
			КонецЕсли;		
			
			Параметры.Вставить("ДатаОтчетаНач1",ДатаОтчетаНач1);
			Параметры.Вставить("ДатаОтчетаКон1",ДатаОтчетаКон1);
			
		КонецЦикла;
		
		ВыгрузитьТех(ДБФ,"Окончание", Параметры); 
		ДБФ.Записать(); 
		СообщитьЛог(стрмес,Параметры);
		стрмес = "";
	КонецЕсли;
	
	Если Параметры.Флажок1 тогда
		//---------------------------------------------------------------------------------
		//ВыгрузитьДокиПоступлениеЗаПериод(ДБФ, Параметры);
	
		ЗапросПТУ = СобратьПТУзаПериод(Параметры);
		
		Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
			стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
		КонецЕсли;
		
		Если ЗапросПТУ.Количество() > 0 тогда
			сч = 0;
			
			заг = "ПТУ за период ВыбНачПериода = " + СокрлП(Параметры.ВыбНачПериода) + " / ДатаОплаты = " + СокрлП(Параметры.ДатаОплаты)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
			
			Для каждого ПТУ из ЗапросПТУ цикл
				
				Если Врег(Лев(ПТУ.ТекДок_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
					Продолжить;
				КонецЕсли;
				
				сч = сч + 1;
				счсч = счсч + 1;
				
				ВыгрузитьДокПоступление(ДБФ,ПТУ,Параметры);
				стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + ПТУ.ТекДок_Контрагент_Наименование + "] ПТУ[" + ПТУ.ТекДок + "] Сумма["+ ПТУ.ТекДок_Итог_Сумма + "]";
				
				Если счсч/1000 = Цел(счсч/1000) тогда
					ДБФ.Записать();		
					СообщитьЛог(стрмес,Параметры);
					стрмес = "";
				КонецЕсли;
				
			КонецЦикла;
			
			ДБФ.Записать(); 
			СообщитьЛог(стрмес,Параметры);
			стрмес = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Флажок3 тогда
		//---------------------------------------------------------------------------------
		// ВыгрузитьДокиСтрокаБанковскойВыпискиРасходЗаПериод(ДБФ) 
		
		ЗапросВыпискаРасход = СобратьБанкРасходзаПериод(Параметры);
		
		Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
			стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
		КонецЕсли;
		
		Если ЗапросВыпискаРасход.Количество() > 0 тогда
			сч = 0;
			
			заг = "Выписка расход за период ВыбНачПериода = " + СокрлП(Параметры.ВыбНачПериода) + " / ДатаОплаты = " + СокрлП(Параметры.ДатаОплаты)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
			
			Для каждого Выписка из ЗапросВыпискаРасход цикл
				
				Если Врег(Лев(Выписка.ТекДок_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
					Продолжить;
				КонецЕсли;
				
				сч = сч + 1;
				счсч = счсч + 1;
				
				ВыгрузитьДокСтрокаБанковскойВыпискиРасход(ДБФ,Выписка,Параметры);
				стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + Выписка.ТекДок_Контрагент_Наименование + "] ПТУ[" + Выписка.ТекДок + "] Сумма["+ Выписка.ТекДок_Сумма + "]";
				
				Если счсч/1000 = Цел(счсч/1000) тогда
					ДБФ.Записать();		
					СообщитьЛог(стрмес,Параметры);
					стрмес = "";
				КонецЕсли;
				
			КонецЦикла;
			
			ДБФ.Записать(); 
			СообщитьЛог(стрмес,Параметры);
			стрмес = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Флажок4 тогда
		//---------------------------------------------------------------------------------
		// ВыгрузитьДокиСтрокаБанковскойВыпискиПриходЗаПериод(ДБФ) 
		
		ЗапросВыпискаРасход = СобратьБанкРасходзаПериод(Параметры, Ложь);
		
		Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
			стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
		КонецЕсли;
		
		Если ЗапросВыпискаРасход.Количество() > 0 тогда
			сч = 0;
			
			заг = "Выписка приход за период ВыбНачПериода = " + СокрлП(Параметры.ВыбНачПериода) + " / ДатаОплаты = " + СокрлП(Параметры.ДатаОплаты)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
			
			Для каждого Выписка из ЗапросВыпискаРасход цикл
				
				Если Врег(Лев(Выписка.ТекДок_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
					Продолжить;
				КонецЕсли;
				
				сч = сч + 1;
				счсч = счсч + 1;
				
				ВыгрузитьДокСтрокаБанковскойВыпискиПриход(ДБФ,Выписка,Параметры);
				стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + Выписка.ТекДок_Контрагент_Наименование + "] ПТУ[" + Выписка.ТекДок + "] Сумма["+ Выписка.ТекДок_Сумма + "]";
				
				Если счсч/1000 = Цел(счсч/1000) тогда
					ДБФ.Записать();		
					СообщитьЛог(стрмес,Параметры);
					стрмес = "";
				КонецЕсли;
				
			КонецЦикла;
			
			ДБФ.Записать(); 
			СообщитьЛог(стрмес,Параметры);
			стрмес = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Флажок5 тогда
		//---------------------------------------------------------------------------------
		//ВыгрузитьДокиВозвратыПоставщикамЗаПериод(ДБФ); ДБФ.Записать();	
	
		ЗапросВыпискаРасход = СобратьВозыратыЗаПериод(Параметры);
		
		Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
			стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
		КонецЕсли;
		
		Если ЗапросВыпискаРасход.Количество() > 0 тогда
			сч = 0;
			
			заг = "ВозвратТоваровПоставщику за период ВыбНачПериода = " + СокрлП(Параметры.ВыбНачПериода) + " / ДатаОплаты = " + СокрлП(Параметры.ДатаОплаты)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
			
			Для каждого Выписка из ЗапросВыпискаРасход цикл
				
				Если Врег(Лев(Выписка.ТекДок_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
					Продолжить;
				КонецЕсли;
				
				сч = сч + 1;
				счсч = счсч + 1;
				
				ВыгрузитьДокВозвратПоставщику(ДБФ,Выписка,Параметры);
				стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + Выписка.ТекДок_Контрагент_Наименование + "] ПТУ[" + Выписка.ТекДок + "] Сумма["+ Выписка.ТекДок_Итог_Сумма + "]";
				
				Если счсч/1000 = Цел(счсч/1000) тогда
					ДБФ.Записать();		
					СообщитьЛог(стрмес,Параметры);
					стрмес = "";
				КонецЕсли;
				
			КонецЦикла;
			
			ДБФ.Записать(); 
			СообщитьЛог(стрмес,Параметры);
			стрмес = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Флажок6 тогда
		//---------------------------------------------------------------------------------
		//ВыгрузитьДокиКорректировкиДолгаЗаПериод(ДБФ); ДБФ.Записать();	
		
		ЗапросВыпискаРасход = СобратьКорректировкиЗаПериод(Параметры);
		
		Если Найти(стрмес,"ВЫБРАТЬ") = 0 тогда
			стрмес =  стрмес + Символы.ПС + Параметры.Запрос;
		КонецЕсли;
		
		Если ЗапросВыпискаРасход.Количество() > 0 тогда
			сч = 0;
			
			заг = "Корректировка долга за период ВыбНачПериода = " + СокрлП(Параметры.ВыбНачПериода) + " / ДатаОплаты = " + СокрлП(Параметры.ДатаОплаты)+ " / СтрокОбработано = " + СокрлП(счсч);
			стрмес =  стрмес + Символы.ПС + заг;
			Сообщить(заг);
			
			Для каждого Выписка из ЗапросВыпискаРасход цикл
				
				Если Врег(Лев(Выписка.ТекДок_Контрагент_Наименование,3)) = "ЯЯЯ" тогда
					Продолжить;
				КонецЕсли;
				
				сч = сч + 1;
				счсч = счсч + 1;
				
				ВыгрузитьДокКорректировкаДолга(ДБФ,Выписка,Параметры);
				стрмес = стрмес + Символы.ПС + СокрЛП(счсч) + "." + СокрЛП(сч) + ". КА [" + Выписка.ТекДок_Контрагент_Наименование + "] ПТУ[" + Выписка.ТекДок + "] Сумма["+ Выписка.ТекДок_Сумма + "]";
				
				Если счсч/1000 = Цел(счсч/1000) тогда
					ДБФ.Записать();		
					СообщитьЛог(стрмес,Параметры);
					стрмес = "";
				КонецЕсли;
				
			КонецЦикла;
			
			ДБФ.Записать(); 
			СообщитьЛог(стрмес,Параметры);
			стрмес = "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СобратьОстаткиПоВзаиморасчетам(Параметры)
	
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента,
	|	ВзаиморасчетыОстаткиИОбороты.СуммаРеглНачальныйОстаток,
	|	ВзаиморасчетыОстаткиИОбороты.СуммаРеглКонечныйОстаток
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	РегистрНакопления.Взаиморасчеты.ОстаткиИОбороты(&ДтН, &ДтК, , , ) КАК ВзаиморасчетыОстаткиИОбороты
	|ГДЕ
	
	|	(ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта = ДатаВремя(1,1,1)
	|	   ИЛИ ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта >= &ДтН )
	
	|	И (ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))
	
	
	|	И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА
	|	И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Организация В ИЕРАРХИИ (&Оргия)
	|	И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Владелец В ИЕРАРХИИ (&Контра)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Договоры.ДоговорКонтрагента.Владелец,
	|	Договоры.ДоговорКонтрагента.Организация,
	|	СУММА(Договоры.СуммаРеглНачальныйОстаток) КАК СуммаРеглНачальныйОстаток,
	|	СУММА(Договоры.СуммаРеглКонечныйОстаток) КАК СуммаРеглКонечныйОстаток,
	
	|	ВЫБОР
	|		КОГДА Договоры.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флОферта,
	|	ВЫБОР
	|		КОГДА Договоры.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флVMI
	
	|ПОМЕСТИТЬ Свертка
	|ИЗ
	|	Договоры КАК Договоры
	|
	|СГРУППИРОВАТЬ ПО
	|	Договоры.ДоговорКонтрагента.Владелец,
	|	Договоры.ДоговорКонтрагента.Организация,
	
	|	ВЫБОР
	|		КОГДА Договоры.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Договоры.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Свертка.ДоговорКонтрагентаВладелец КАК ЗапросОстатки_Контрагент,
	|	Свертка.ДоговорКонтрагентаВладелец.Наименование КАК ЗапросОстатки_Контрагент_Наименование,
	|	Свертка.ДоговорКонтрагентаВладелец.Код КАК ЗапросОстатки_Контрагент_Код,
	|	Свертка.ДоговорКонтрагентаВладелец.ИНН КАК ЗапросОстатки_Контрагент_ИНН,
	|	Свертка.ДоговорКонтрагентаВладелец.НаименованиеПолное КАК ЗапросОстатки_Контрагент_ЮрФизЛицо,
	|	Свертка.ДоговорКонтрагентаОрганизация КАК ВыбФирма,
	|	Свертка.ДоговорКонтрагентаОрганизация.ИНН КАК ВыбФирма_ЮрЛицо_ИНН,
	|	Свертка.ДоговорКонтрагентаОрганизация.ЮрФизЛицо КАК ВыбФирма_ЮрЛицо,
	|	Свертка.СуммаРеглНачальныйОстаток КАК ЗапросОстатки_СуммаРубНачОст,
	|	Свертка.СуммаРеглКонечныйОстаток КАК ЗапросОстатки_СуммаРубКонОст,
	
	|	Свертка.ТекДок_Договор_флОферта КАК ТекДок_Договор_флОферта,
	|	Свертка.ТекДок_Договор_флVMI КАК ТекДок_Договор_флVMI
	
	
	|ИЗ
	|	Свертка КАК Свертка";
	
	Если Параметры.флVMI Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И (ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))","И (ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))");
	КонецЕсли;
	Если НЕ Параметры.флОферта Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА","");
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Организация В ИЕРАРХИИ (&Оргия)","");
	КонецЕсли;	
	Если Параметры.СписокКонтрагентов.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Владелец В ИЕРАРХИИ (&Контра)","");
	Иначе
		Если СтрНайти(Параметры.ВыборДействия,"НеВыгружать") > 0 Тогда
			Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Владелец В ИЕРАРХИИ (&Контра)","И НЕ ВзаиморасчетыОстаткиИОбороты.ДоговорКонтрагента.Владелец В ИЕРАРХИИ (&Контра)");
		КонецЕсли;
	КонецЕсли;	
	
	Параметры.Вставить("Запрос",Запрос_Текст);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("ДтК", Параметры.ДатаОтчетаКон1);
	Запрос.УстановитьПараметр("ДтН", Параметры.ДатаОтчетаНач1);
	Если Параметры.СписокКонтрагентов.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Контра",Параметры.СписокКонтрагентов);
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Оргия",Параметры.ВыбФирма);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	
Функция СобратьПТУзаПериод(Параметры)
	
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка
	|ПОМЕСТИТЬ ПТУ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ВыбНачПериода И &ДатаОплаты
	|	И (ПоступлениеТоваровУслуг.СтатусДокумента = &СтатусДокументаПринят ИЛИ ПоступлениеТоваровУслуг.СтатусДокумента = &СтатусДокументаРазмещен)
	|	И ПоступлениеТоваровУслуг.ЭтоМФП = ЛОЖЬ
	
|	И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта = ДатаВремя(1,1,1)
|	   ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта >= &ВыбНачПериода )
	
	|	И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	|	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	МАКСИМУМ(ПоступлениеТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС
	|ПОМЕСТИТЬ Свертка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ПТУ.Ссылка
	|			ИЗ
	|				ПТУ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПТУ.Ссылка КАК ТекДок,
	|	ПТУ.Ссылка.Проведен КАК ТекДок_Проведен,
	|	ПТУ.Ссылка.ПометкаУдаления КАК ТекДок_ПометкаУдаления,
	|	ПТУ.Ссылка.Номер КАК ТекДок_НомерДок,
	|	ПТУ.Ссылка.Дата КАК ТекДок_ДатаДок,
	|	ПТУ.Ссылка.НомерВходящегоДокумента КАК ТекДок_НомерДокВходящий,
	|	ПТУ.Ссылка.ДатаВходящегоДокумента КАК ТекДок_ДатаДокВходящий,
	|	ПТУ.Ссылка.ДоговорКонтрагента.ОплатаВЛюбойДень КАК ТекДок_Договор_флОплата_ЛюбойДень,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация КАК ТекДок_Фирма,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация.ИНН КАК ТекДок_Фирма_ЮрЛицо_ИНН,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец КАК ТекДок_Контрагент,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Наименование КАК ТекДок_Контрагент_Наименование,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Код КАК ТекДок_Контрагент_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.НаименованиеПолное КАК ТекДок_Контрагент_ЮрФизЛицо,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ИНН КАК ТекДок_Контрагент_ИНН,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флОферта,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флVMI,
	|	ПТУ.Ссылка.ДатаОплаты КАК ТекДок_ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.УчитыватьНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ТекДок_Контрагент_Работает_безНДС,
	|	ПТУ.Ссылка.ВалютаДокумента.Код КАК ТекДок_Валюта_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.НомерСчета КАК ТекДок_Контрагент_ОсновнойСчет_НомерСчета,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.КоррСчет КАК ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк КАК ТекДок_Контрагент_ОсновнойСчет_Банк,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.Код КАК ТекДок_Контрагент_ОсновнойСчет_Банк_Код,
	|	ЕСТЬNULL(Свертка.Сумма, 0) КАК ТекДок_Итог_Сумма,
	|	ЕСТЬNULL(Свертка.СуммаНДС, 0) КАК ТекДок_Итог_СуммаНДС,
	|	ЕСТЬNULL(Свертка.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)) КАК ТекДок_СтавкаНДС
	|ИЗ
	|	ПТУ КАК ПТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Свертка КАК Свертка
	|		ПО ПТУ.Ссылка = Свертка.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ПТУ.Ссылка.Дата";
	
	Если Параметры.флVMI Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))","И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))");
	КонецЕсли;
	Если НЕ Параметры.флОферта Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА","");
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)","");
	КонецЕсли;	
	Если Параметры.СписокКонтрагентов.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","");
	Иначе
		Если СтрНайти(Параметры.ВыборДействия,"НеВыгружать") > 0 Тогда
			Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","И НЕ ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)");
		КонецЕсли;
	КонецЕсли;	
	
	Параметры.Вставить("Запрос",Запрос_Текст);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("СтатусДокументаПринят", Справочники.СтатусыДокументов.ПоступлениеТоваровПринят);
	Запрос.УстановитьПараметр("СтатусДокументаРазмещен", Справочники.СтатусыДокументов.ПоступлениеТоваровРазмещен);
	Запрос.УстановитьПараметр("ВыбНачПериода", Параметры.ВыбНачПериода);
	Запрос.УстановитьПараметр("ДатаОплаты", Параметры.ДатаОплаты);
	Если Параметры.СписокКонтрагентов.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Контра",Параметры.СписокКонтрагентов);
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Оргия",Параметры.ВыбФирма);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
Функция СобратьБанкРасходзаПериод(Параметры, Расход = Истина)
	
	//  запросить расшифровку платежа ?! из тч
	
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящее.Ссылка,
	|	ПлатежноеПоручениеИсходящее.ДоговорКонтрагента
	|ПОМЕСТИТЬ ПТУ
	|ИЗ
	|	Документ." + ?(Расход,"ПлатежноеПоручениеИсходящее","ПлатежноеПоручениеВходящее") +  " КАК ПлатежноеПоручениеИсходящее
	|ГДЕ
	|	ПлатежноеПоручениеИсходящее.Дата МЕЖДУ &ВыбНачПериода И &ДатаОплаты
	
|	И (ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта = ДатаВремя(1,1,1)
|	   ИЛИ ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта >= &ВыбНачПериода )
	
	|	И (ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))
	|	И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА
	|	И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)
	|	И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПТУ.Ссылка КАК ТекДок,
	|	ПТУ.Ссылка.Проведен КАК ТекДок_Проведен,
	|	ПТУ.Ссылка.ПометкаУдаления КАК ТекДок_ПометкаУдаления,
	|	ПТУ.Ссылка.Номер КАК ТекДок_НомерДок,
	|	ПТУ.Ссылка.Дата КАК ТекДок_ДатаДок,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация КАК ТекДок_Фирма,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация.ИНН КАК ТекДок_Фирма_ЮрЛицо_ИНН,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец КАК ТекДок_Контрагент,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Наименование КАК ТекДок_Контрагент_Наименование,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Код КАК ТекДок_Контрагент_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.НаименованиеПолное КАК ТекДок_Контрагент_ЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флОферта,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флVMI,
	|	ПТУ.Ссылка.ДоговорКонтрагента.ОплатаВЛюбойДень КАК ТекДок_Договор_флОплата_ЛюбойДень,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.НомерСчета КАК ТекДок_Контрагент_ОсновнойСчет_НомерСчета,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.КоррСчет КАК ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк КАК ТекДок_Контрагент_ОсновнойСчет_Банк,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.Код КАК ТекДок_Контрагент_ОсновнойСчет_Банк_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ИНН КАК ТекДок_Контрагент_ИНН,
	|	ПТУ.Ссылка.ВалютаДокумента.Код КАК ТекДок_Валюта_Код,
	|	ПТУ.Ссылка.СуммаДокумента КАК ТекДок_Сумма,
	|	ПТУ.Ссылка.СчетОрганизации.НомерСчета КАК ТекДок_БанковскийСчет_НомерСчета
	|ИЗ
	|	ПТУ КАК ПТУ
	|УПОРЯДОЧИТЬ ПО 
	|	ПТУ.Ссылка.Дата";
	
	
	Если Параметры.флVMI Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И (ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))","И (ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))");
	КонецЕсли;
	Если НЕ Параметры.флОферта Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА","");
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)","");
	КонецЕсли;	
	Если Параметры.СписокКонтрагентов.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","");
	Иначе
		Если СтрНайти(Параметры.ВыборДействия,"НеВыгружать") > 0 Тогда
			Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","И НЕ ПлатежноеПоручениеИсходящее.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)");
		КонецЕсли;
	КонецЕсли;	
	
	Параметры.Вставить("Запрос",Запрос_Текст);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("ВыбНачПериода", Параметры.ВыбНачПериода);
	Запрос.УстановитьПараметр("ДатаОплаты", Параметры.ДатаОплаты);
	Если Параметры.СписокКонтрагентов.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Контра",Параметры.СписокКонтрагентов);
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Оргия",Параметры.ВыбФирма);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
Функция СобратьКорректировкиЗаПериод(Параметры)
	
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящее.Ссылка
	|ПОМЕСТИТЬ ПТУ
	|ИЗ
	|	Документ.КорректировкаДолга КАК ПлатежноеПоручениеИсходящее
	|ГДЕ
	|	ПлатежноеПоручениеИсходящее.Дата МЕЖДУ &ВыбНачПериода И &ДатаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаДолгаСуммыДолга.Ссылка,
	|	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента,
	|	СУММА(КорректировкаДолгаСуммыДолга.Сумма) КАК Сумма
	|ПОМЕСТИТЬ тч
	|ИЗ
	|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолгаСуммыДолга
	|ГДЕ
	|	КорректировкаДолгаСуммыДолга.Ссылка В
	|			(ВЫБРАТЬ
	|				ПТУ.Ссылка
	|			ИЗ
	|				ПТУ)
	|	И НЕ КорректировкаДолгаСуммыДолга.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	
|	И (КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта = ДатаВремя(1,1,1)
|	   ИЛИ КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта >= &ВыбНачПериода )
	
	|	И (КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))
	|	И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА
	|	И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)
	|	И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)
	
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаДолгаСуммыДолга.Ссылка,
	|	КорректировкаДолгаСуммыДолга.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПТУ.Ссылка КАК ТекДок,
	|	ПТУ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	
	|	ПТУ.Ссылка.Проведен КАК ТекДок_Проведен,
	|	ПТУ.Ссылка.ПометкаУдаления КАК ТекДок_ПометкаУдаления,
	|	ПТУ.Ссылка.Номер КАК ТекДок_НомерДок,
	|	ПТУ.Ссылка.Дата КАК ТекДок_ДатаДок,
	|	ПТУ.ДоговорКонтрагента.Организация КАК ТекДок_Фирма,
	|	ПТУ.ДоговорКонтрагента.Организация.ИНН КАК ТекДок_Фирма_ЮрЛицо_ИНН,
	|	ПТУ.ДоговорКонтрагента.Владелец КАК ТекДок_Контрагент,
	|	ПТУ.ДоговорКонтрагента.Владелец.Наименование КАК ТекДок_Контрагент_Наименование,
	|	ПТУ.ДоговорКонтрагента.Владелец.Код КАК ТекДок_Контрагент_Код,
	|	ПТУ.ДоговорКонтрагента.Владелец.НаименованиеПолное КАК ТекДок_Контрагент_ЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА ПТУ.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флОферта,
	|	ВЫБОР
	|		КОГДА ПТУ.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флVMI,
	|	ПТУ.ДоговорКонтрагента.ОплатаВЛюбойДень КАК ТекДок_Договор_флОплата_ЛюбойДень,
	|	ПТУ.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.НомерСчета КАК ТекДок_Контрагент_ОсновнойСчет_НомерСчета,
	|	ПТУ.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.КоррСчет КАК ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет,
	|	ПТУ.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк КАК ТекДок_Контрагент_ОсновнойСчет_Банк,
	|	ПТУ.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.Код КАК ТекДок_Контрагент_ОсновнойСчет_Банк_Код,
	|	ПТУ.ДоговорКонтрагента.Владелец.ИНН КАК ТекДок_Контрагент_ИНН,
	|	ПТУ.Ссылка.ВалютаДокумента.Код КАК ТекДок_Валюта_Код,
	|	ПТУ.Сумма КАК ТекДок_Сумма,
	|	ПТУ.ДоговорКонтрагента.Организация.ОсновнойБанковскийСчет.НомерСчета КАК ТекДок_БанковскийСчет_НомерСчета,
	|   ПТУ.Ссылка.Комментарий КАК ТекДок_Комментарий
	|ПОМЕСТИТЬ	крд 
	|ИЗ
	|	тч КАК ПТУ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	КорректировкаДолгаСуммыДолга.Ссылка,
|	КорректировкаДолгаСуммыДолга.ВидЗадолженности,
|	ВЫБОР
|		КОГДА КорректировкаДолгаСуммыДолга.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Дебиторская)
|			ТОГДА КорректировкаДолгаСуммыДолга.Сумма
|		ИНАЧЕ 0
|	КОНЕЦ КАК СуммаДебиторская,
|	ВЫБОР
|		КОГДА КорректировкаДолгаСуммыДолга.ВидЗадолженности = ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.Кредиторская)
|			ТОГДА КорректировкаДолгаСуммыДолга.Сумма
|		ИНАЧЕ 0
|	КОНЕЦ КАК СуммаКредиторская,
|	КорректировкаДолгаСуммыДолга.Сумма
|ПОМЕСТИТЬ крд_стр
|ИЗ
|	Документ.КорректировкаДолга.СуммыДолга КАК КорректировкаДолгаСуммыДолга
|ГДЕ
|	КорректировкаДолгаСуммыДолга.Ссылка В
|			(ВЫБРАТЬ
|				крд.ТекДок
|			ИЗ
|				крд)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	крд.ТекДок,
|	крд.ДоговорКонтрагента,
|	крд.ТекДок_Проведен,
|	крд.ТекДок_ПометкаУдаления,
|	крд.ТекДок_НомерДок,
|	крд.ТекДок_ДатаДок,
|	крд.ТекДок_Фирма,
|	крд.ТекДок_Фирма_ЮрЛицо_ИНН,
|	крд.ТекДок_Контрагент,
|	крд.ТекДок_Контрагент_Наименование,
|	крд.ТекДок_Контрагент_Код,
|	крд.ТекДок_Контрагент_ЮрФизЛицо,
|	крд.ТекДок_Договор_флОферта,
|	крд.ТекДок_Договор_флVMI,
|	крд.ТекДок_Договор_флОплата_ЛюбойДень,
|	крд.ТекДок_Контрагент_ОсновнойСчет_НомерСчета,
|	крд.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет,
|	крд.ТекДок_Контрагент_ОсновнойСчет_Банк,
|	крд.ТекДок_Контрагент_ОсновнойСчет_Банк_Код,
|	крд.ТекДок_Контрагент_ИНН,
|	крд.ТекДок_Валюта_Код,
|	крд.ТекДок_БанковскийСчет_НомерСчета,
|	крд.ТекДок_Комментарий,
|	
|	ВЫБОР
|		КОГДА естьNULL(крд_стр.СуммаКредиторская,0)	> 0 ТОГДА крд.ТекДок_Сумма
|		КОГДА естьNULL(крд_стр.СуммаДебиторская,0)	> 0 ТОГДА -1*крд.ТекДок_Сумма
|		Иначе 0
|	КОНЕЦ КАК ТекДок_Сумма
|	
|ИЗ
|	крд КАК крд
|	ЛЕВОЕ СОЕДИНЕНИЕ  крд_стр КАК крд_стр
|	ПО крд.ТекДок = крд_стр.Ссылка
|УПОРЯДОЧИТЬ ПО 	
|	крд.ТекДок_ДатаДок";
	
	Если Параметры.флVMI Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И (КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))","И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)");
	КонецЕсли;
	Если НЕ Параметры.флОферта Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА","");
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)","");
	КонецЕсли;	
	Если Параметры.СписокКонтрагентов.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","");
	Иначе
		Если СтрНайти(Параметры.ВыборДействия,"НеВыгружать") > 0 Тогда
			Запрос_Текст = СтрЗаменить(Запрос_Текст,"И КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","И НЕ КорректировкаДолгаСуммыДолга.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)");
		КонецЕсли;
	КонецЕсли;	
	
	Параметры.Вставить("Запрос",Запрос_Текст);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("ВыбНачПериода", Параметры.ВыбНачПериода);
	Запрос.УстановитьПараметр("ДатаОплаты", Параметры.ДатаОплаты);
	Если Параметры.СписокКонтрагентов.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Контра",Параметры.СписокКонтрагентов);
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Оргия",Параметры.ВыбФирма);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
Функция СобратьВозыратыЗаПериод(Параметры)
	
	Запрос_Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка
	|ПОМЕСТИТЬ ПТУ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ВыбНачПериода И &ДатаОплаты
	
|	И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта = ДатаВремя(1,1,1)
|	   ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация.ОрганизацияЗакрыта >= &ВыбНачПериода )
	
	|	И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)
	|	И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	|	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	МАКСИМУМ(ПоступлениеТоваровУслугТовары.СтавкаНДС) КАК СтавкаНДС
	|ПОМЕСТИТЬ Свертка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ПТУ.Ссылка
	|			ИЗ
	|				ПТУ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПТУ.Ссылка КАК ТекДок,
	|	ПТУ.Ссылка.Проведен КАК ТекДок_Проведен,
	|	ПТУ.Ссылка.ПометкаУдаления КАК ТекДок_ПометкаУдаления,
	|	ПТУ.Ссылка.Номер КАК ТекДок_НомерДок,
	|	ПТУ.Ссылка.Дата КАК ТекДок_ДатаДок,
	|	ПТУ.Ссылка.ДоговорКонтрагента.ОплатаВЛюбойДень КАК ТекДок_Договор_флОплата_ЛюбойДень,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация КАК ТекДок_Фирма,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Организация.ИНН КАК ТекДок_Фирма_ЮрЛицо_ИНН,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец КАК ТекДок_Контрагент,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Наименование КАК ТекДок_Контрагент_Наименование,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.Код КАК ТекДок_Контрагент_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.НаименованиеПолное КАК ТекДок_Контрагент_ЮрФизЛицо,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ИНН КАК ТекДок_Контрагент_ИНН,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ДоговорНаОферту
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флОферта,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекДок_Договор_флVMI,
	|	ВЫБОР
	|		КОГДА ПТУ.Ссылка.УчитыватьНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ТекДок_Контрагент_Работает_безНДС,
	|	ПТУ.Ссылка.ВалютаДокумента.Код КАК ТекДок_Валюта_Код,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.НомерСчета КАК ТекДок_Контрагент_ОсновнойСчет_НомерСчета,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.КоррСчет КАК ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк КАК ТекДок_Контрагент_ОсновнойСчет_Банк,
	|	ПТУ.Ссылка.ДоговорКонтрагента.Владелец.ОсновнойБанковскийСчет.Банк.Код КАК ТекДок_Контрагент_ОсновнойСчет_Банк_Код,
	|	ЕСТЬNULL(Свертка.Сумма, 0) КАК ТекДок_Итог_Сумма,
	|	ЕСТЬNULL(Свертка.СуммаНДС, 0) КАК ТекДок_Итог_СуммаНДС,
	|	ЕСТЬNULL(Свертка.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)) КАК ТекДок_СтавкаНДС,
	|	ПТУ.Ссылка.ДокументОснование КАК ТекДок_ДокОснование,
	|	ПТУ.Ссылка.ДокументОснование.Номер КАК ТекДок_ДокОснование_НомерДок, 
	|	ПТУ.Ссылка.ДокументОснование.Дата КАК ТекДок_ДокОснование_ДатаДок
	|ИЗ
	|	ПТУ КАК ПТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Свертка КАК Свертка
	|		ПО ПТУ.Ссылка = Свертка.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПТУ.Ссылка.Дата";
	
	Если Параметры.флVMI Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком) ИЛИ ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))","И (ПоступлениеТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение))");
	КонецЕсли;
	Если НЕ Параметры.флОферта Тогда
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.ДоговорНаОферту = ИСТИНА","");
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Организация В ИЕРАРХИИ(&Оргия)","");
	КонецЕсли;	
	Если Параметры.СписокКонтрагентов.Количество() = 0 Тогда 
		Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","");
	Иначе
		Если СтрНайти(Параметры.ВыборДействия,"НеВыгружать") > 0 Тогда
			Запрос_Текст = СтрЗаменить(Запрос_Текст,"И ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)","И НЕ ПоступлениеТоваровУслуг.ДоговорКонтрагента.Владелец В ИЕРАРХИИ(&Контра)");
		КонецЕсли;
	КонецЕсли;	
	
	Параметры.Вставить("Запрос",Запрос_Текст);
	
	Запрос = Новый Запрос;
	Запрос.Текст = Запрос_Текст;
	Запрос.УстановитьПараметр("ВыбНачПериода", Параметры.ВыбНачПериода);
	Запрос.УстановитьПараметр("ДатаОплаты", Параметры.ДатаОплаты);
	Если Параметры.СписокКонтрагентов.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Контра",Параметры.СписокКонтрагентов);
	КонецЕсли;
	Если Параметры.ВыбФирма.Количество() > 0 Тогда 
		Запрос.УстановитьПараметр("Оргия",Параметры.ВыбФирма);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ВыгрузитьОстатки(ДБФ,ЗапросОстатки,Параметры)
	
	ДатаОтчетаНач1 = Параметры.ДатаОтчетаНач1;
	ДатаОтчетаНач  = Параметры.ДатаОтчетаНач;
	ДатаОтчетаКон1 = Параметры.ДатаОтчетаКон1;
	ДатаОтчетаКон = Параметры.ДатаОтчетаКон;
	                                           
	ДатаОплаты = Параметры.ДатаОплаты;
	ВыбНачПериода = Параметры.ВыбНачПериода;
	
	Перечисление_ВидыОперацийКоррДолга_Поставщик = "Корректировка долга поставщика";
	Константа_ВалютаБухУчета_Код = "643";
	
	флОферта = ЗапросОстатки.ТекДок_Договор_флОферта;//Параметры.флОферта;
	флVMI = ЗапросОстатки.ТекДок_Договор_флVMI;//Параметры.флVMI;
	
	ВыбФирма = ЗапросОстатки.ВыбФирма;
	ВыбФирма_ЮрЛицо_ИНН = ЗапросОстатки.ВыбФирма_ЮрЛицо_ИНН;
	
	ЗапросОстатки_Контрагент = ЗапросОстатки.ЗапросОстатки_Контрагент;
	ЗапросОстатки_Контрагент_Код = ЗапросОстатки.ЗапросОстатки_Контрагент_Код;
	ЗапросОстатки_Контрагент_ИНН = ЗапросОстатки.ЗапросОстатки_Контрагент_ИНН;
	ЗапросОстатки_Контрагент_ЮрФизЛицо = ЗапросОстатки.ЗапросОстатки_Контрагент_ЮрФизЛицо;
	ЗапросОстатки_Контрагент_УИД = ?(ЗначениеЗаполнено(ЗапросОстатки_Контрагент),ЗапросОстатки_Контрагент.УникальныйИдентификатор(),"");
	ЗапросОстатки_СуммаРубНачОст = ЗапросОстатки.ЗапросОстатки_СуммаРубНачОст;
	ЗапросОстатки_СуммаРубКонОст = ЗапросОстатки.ЗапросОстатки_СуммаРубКонОст;
	
	Если ДатаОтчетаНач1=ДатаОтчетаНач тогда
		ВидКорНач = "КорректировкаДолгаНачало"; 
	Иначе
		ВидКорНач = "Промежуточная";
	КонецЕсли;
	
	//Нач остаток
	ДБФ.Добавить(); 
	ДБФ.VID = ВидКорНач;
	ДБФ.VIDOP = Перечисление_ВидыОперацийКоррДолга_Поставщик;
	ДБФ.DOCacept = 1;
	ДБФ.DOCdelete = 0;
	
	ДБФ.NUMDOC = "//";
	ДБФ.DATEDOC = ДатаОтчетаНач1;      
	ДБФ.DATEPAY = ДатаОплаты;

	ДБФ.DATE1C = 0;	                                                        
	ДБФ.DATE1M = 0;	                                                        
	ДБФ.DATE1S = 0;	
	
	ДБФ.FIRM = СокрЛП(ВыбФирма);
	ДБФ.FIRMINN = ВыбФирма_ЮрЛицо_ИНН;
	
	ДБФ.NAMEK = СокрЛП(ЗапросОстатки_Контрагент);
	ДБФ.CODEK = СокрЛП(ЗапросОстатки_Контрагент_Код);
	ПолноеНаимен = ЗапросОстатки_Контрагент_ЮрФизЛицо;
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = флОферта; 
	ДБФ.VMI = флVMI;  
			
	Если Найти(ЗапросОстатки_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ЗапросОстатки_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Найти(СокрЛП(ЗапросОстатки_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Найти(СокрЛП(ЗапросОстатки_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ЗапросОстатки_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ЗапросОстатки_Контрагент_УИД);//паи160303
	ДБФ.SUMMDOC = -ЗапросОстатки_СуммаРубНачОст;
	ДБФ.Valuta = Константа_ВалютаБухУчета_Код;		
	ДБФ.KOMMENT = "" ;
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ДатаОплаты);
	ДБФ.SUMKOR = -ЗапросОстатки_СуммаРубНачОст;
	//ДБФ.Записать();
	
	//Кон остаток 
	Если ДатаОтчетаКон1=ДатаОтчетаКон тогда
		ВидКорКон = "КорректировкаДолгаДатаОплаты"; 
	Иначе
		ВидКорКон = "Промежуточная";
	КонецЕсли;
	
	ДБФ.Добавить(); 
	ДБФ.VID = ВидКорКон;
	ДБФ.VIDOP = Перечисление_ВидыОперацийКоррДолга_Поставщик;
	ДБФ.DOCacept = 1;
	ДБФ.DOCdelete = 0;
	
	ДБФ.NUMDOC = "//";
	ДБФ.DATEDOC = ДатаОтчетаКон1+1;      
	ДБФ.DATEPAY = ДатаОплаты;

	ДБФ.DATE1C = 0;	                                                        
	ДБФ.DATE1M = 0;	                                                        
	ДБФ.DATE1S = 0;	
	
	ДБФ.FIRM = СокрЛП(ВыбФирма);
	ДБФ.FIRMINN = ВыбФирма_ЮрЛицо_ИНН;
	
	ДБФ.NAMEK = СокрЛП(ЗапросОстатки_Контрагент);
	ДБФ.CODEK = СокрЛП(ЗапросОстатки_Контрагент_Код);
	ПолноеНаимен = ЗапросОстатки_Контрагент_ЮрФизЛицо;
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = флОферта; 
	ДБФ.VMI = флVMI;
	
	Если Найти(ЗапросОстатки_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ЗапросОстатки_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Найти(СокрЛП(ЗапросОстатки_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),Найти(СокрЛП(ЗапросОстатки_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ЗапросОстатки_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ЗапросОстатки_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ЗапросОстатки_Контрагент_УИД);//паи160303
	ДБФ.SUMMDOC = -ЗапросОстатки_СуммаРубКонОст;
	ДБФ.Valuta = Константа_ВалютаБухУчета_Код;		
	ДБФ.KOMMENT = "" ;
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ДатаОплаты);
	ДБФ.SUMKOR = -ЗапросОстатки_СуммаРубКонОст; 
	
	//ДБФ.Записать();
	//СообщитьЛог("Выгружен технический документ "+ДатаОтчетаНач1+" - "+ЗапросОстатки_Контрагент+" "+ ЗапросОстатки_СуммаРубНачОст+" - "+ ЗапросОстатки_СуммаРубКонОст,Параметры);
	
КонецПроцедуры
Процедура ВыгрузитьДокПоступление(ДБФ,ПТУ,Параметры)
	
	ТекДок = ПТУ.ТекДок;
	ТекДок_IDDOC = ?(ЗначениеЗаполнено(ПТУ.ТекДок),ПТУ.ТекДок.УникальныйИдентификатор(),"");
	
	ТекДок_Вид = "ПоступлениеТМЦ";
	ТекДок_КодОперации = "Поступление ТМЦ (купля-продажа)"; // Закупка;
	ВыбНачПериода = Параметры.ВыбНачПериода;
	ВыбКонПериода = Параметры.ВыбКонПериода;
	
	ТекДок_Проведен = ПТУ.ТекДок_Проведен;
	ТекДок_ПометкаУдаления = ПТУ.ТекДок_ПометкаУдаления;
	ТекДок_НомерДок = ПТУ.ТекДок_НомерДок;
	ТекДок_ДатаДок = ПТУ.ТекДок_ДатаДок;
	ТекДок_НомерДокВходящий = ПТУ.ТекДок_НомерДокВходящий;
	ТекДок_ДатаДокВходящий = ПТУ.ТекДок_ДатаДокВходящий;
	ТекДок_Фирма = ПТУ.ТекДок_Фирма;
	ТекДок_Фирма_ЮрЛицо_ИНН = ПТУ.ТекДок_Фирма_ЮрЛицо_ИНН;
	ТекДок_Контрагент = ПТУ.ТекДок_Контрагент;
	ТекДок_Контрагент_Код = ПТУ.ТекДок_Контрагент_Код;
	ТекДок_Контрагент_ЮрФизЛицо = ПТУ.ТекДок_Контрагент_ЮрФизЛицо; 
	ТекДок_Договор_флОферта = ПТУ.ТекДок_Договор_флОферта;
	ТекДок_Договор_флVMI = ПТУ.ТекДок_Договор_флVMI;
	ТекДок_Договор_флОплата_ЛюбойДень = ПТУ.ТекДок_Договор_флОплата_ЛюбойДень;
	ТекДок_Контрагент_ИНН = ПТУ.ТекДок_Контрагент_ИНН;
	ТекДок_Контрагент_УИД = ?(ЗначениеЗаполнено(ТекДок_Контрагент),ПТУ.ТекДок_Контрагент.УникальныйИдентификатор(),"");
	ТекДок_Контрагент_ОсновнойСчет_НомерСчета = ПТУ.ТекДок_Контрагент_ОсновнойСчет_НомерСчета;
	ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет;
	ТекДок_Контрагент_ОсновнойСчет_Банк = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк;
	ТекДок_Контрагент_ОсновнойСчет_Банк_Код = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк_Код;
	ТекДок_СтавкаНДС = ПТУ.ТекДок_СтавкаНДС;
	ТекДок_ДатаОплаты = ПТУ.ТекДок_ДатаОплаты;
	ТекДок_Итог_Сумма= ПТУ.ТекДок_Итог_Сумма;
	ТекДок_Итог_СуммаНДС= ПТУ.ТекДок_Итог_СуммаНДС;
	ТекДок_Валюта_Код= ПТУ.ТекДок_Валюта_Код; 
	ТекДок_Контрагент_Работает_безНДС = ПТУ.ТекДок_Контрагент_Работает_безНДС;
	
	ДБФ.Добавить(); 
	
	ДБФ.VID = СокрлП(ТекДок_Вид);
	
	//РНГ+ 2015-10-21
	//тмпОб = СоздатьОбъект("ToyMetadata"); 
	ДБФ.IDDOC = ТекДок_IDDOC;//тмпОб.ЗначВSQL(ТекДок);
	//РНГ-
	
	ДБФ.DOCacept = ТекДок_Проведен;
	ДБФ.DOCdelete = ТекДок_ПометкаУдаления;
	
	ДБФ.NUMDOC = СокрЛП(ТекДок_НомерДок);
	ДБФ.DATEDOC = ТекДок_ДатаДок;
	
	Ч=0;
	М=0;
	С=0;
	
	//ТекДок.ПолучитьВремя(Ч,М,С);
	
	ДБФ.DATE1C = Час(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1M = Минута(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1S = Секунда(ТекДок_ДатаДок);	                                                        
	
	ДБФ.NUMDOCIN = СокрЛП(ТекДок_НомерДокВходящий);
	ДБФ.DATEDOCIN = ТекДок_ДатаДокВходящий; 
	
	ДБФ.FIRM = СокрЛП(ТекДок_Фирма);
	ДБФ.FIRMINN = ТекДок_Фирма_ЮрЛицо_ИНН;
	
	ДБФ.NAMEK = СокрЛП(ТекДок_Контрагент);
	ДБФ.CODEK = СокрЛП(ТекДок_Контрагент_Код);
	ПолноеНаимен = ТекДок_Контрагент_ЮрФизЛицо;
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = ТекДок_Договор_флОферта; 
	ДБФ.VMI = ТекДок_Договор_флVMI; 
	ДБФ.AnyDay = ТекДок_Договор_флОплата_ЛюбойДень;
	
	// РНГ 2015-05-13
	Если Найти(ТекДок_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ТекДок_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ТекДок_Контрагент_ИНН),Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ТекДок_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	
	ДБФ.UIDK = СокрЛП(ТекДок_Контрагент_УИД);//паи160303
	
	ДБФ.NumSch = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_НомерСчета); 
	ДБФ.Korr = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет);
	ДБФ.BankName = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк);
	ДБФ.BIK = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_Код);		
	///////////			
	
	//ТекДок.ПолучитьСтрокуПоНомеру(1);
	ДБФ.Stavka = ТекДок_СтавкаНДС;
	
	ДБФ.DATEPAY = ТекДок_ДатаОплаты;
	ДБФ.SUMMDOC = ТекДок_Итог_Сумма;
	ДБФ.SUMMNDS = ТекДок_Итог_СуммаНДС; 
	ДБФ.Valuta = ТекДок_Валюта_Код;  
	
	//ПАИ170616+
	Если ТекДок_Контрагент_Работает_безНДС = 1 тогда
		ДБФ.SUMMNDS = 0;
		ДБФ.Stavka = "Без НДС";
	КонецЕсли;
	//ПАИ170616-
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ВыбКонПериода);
	ДБФ.KOMMENT = СокрЛП(ТекДок_КодОперации); 

	ДБФ.KOR = 0; 
	ДБФ.SUMKOR = ТекДок_Итог_Сумма;	
    	
КонецПроцедуры
Процедура ВыгрузитьДокСтрокаБанковскойВыпискиРасход(ДБФ,Выписка,Параметры)
	
	ВыбНачПериода = Параметры.ВыбНачПериода;
	ВыбКонПериода = Параметры.ВыбКонПериода;
	ТекДок_Вид = "СтрокаВыпискиРасход";
	ТекДок_КодОперации = "Оплата поставщику"; //ОплатаПоставщику 
	
	ТекДок = Выписка.ТекДок;
	ТекДок_IDDOC = ?(ЗначениеЗаполнено(Выписка.ТекДок),Выписка.ТекДок.УникальныйИдентификатор(),"");
	
	ТекДок_Проведен = Выписка.ТекДок_Проведен;
	ТекДок_ПометкаУдаления = Выписка.ТекДок_ПометкаУдаления;
	ТекДок_НомерДок = Выписка.ТекДок_НомерДок;
	ТекДок_ДатаДок = Выписка.ТекДок_ДатаДок;
	ТекДок_Фирма = Выписка.ТекДок_Фирма;
	ТекДок_Фирма_ЮрЛицо_ИНН = Выписка.ТекДок_Фирма_ЮрЛицо_ИНН;
	ТекДок_Контрагент = Выписка.ТекДок_Контрагент;
	ТекДок_Контрагент_Наименование = Выписка.ТекДок_Контрагент_Наименование;
	ТекДок_Контрагент_Код = Выписка.ТекДок_Контрагент_Код;
	ТекДок_Контрагент_ЮрФизЛицо = Выписка.ТекДок_Контрагент_ЮрФизЛицо;
	ТекДок_Договор_флОферта = Выписка.ТекДок_Договор_флОферта;
	ТекДок_Договор_флVMI = Выписка.ТекДок_Договор_флVMI;
	ТекДок_Договор_флОплата_ЛюбойДень = Выписка.ТекДок_Договор_флОплата_ЛюбойДень;
	ТекДок_Контрагент_ОсновнойСчет_НомерСчета = Выписка.ТекДок_Контрагент_ОсновнойСчет_НомерСчета;
	ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет;
	ТекДок_Контрагент_ОсновнойСчет_Банк = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк;
	ТекДок_Контрагент_ОсновнойСчет_Банк_Код = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_Код;
	ТекДок_Контрагент_ИНН = Выписка.ТекДок_Контрагент_ИНН;
	ТекДок_Контрагент_УИД = ?(ЗначениеЗаполнено(ТекДок_Контрагент),Выписка.ТекДок_Контрагент.УникальныйИдентификатор(),"");
	ТекДок_Сумма = Выписка.ТекДок_Сумма;
	ТекДок_Валюта_Код = Выписка.ТекДок_Валюта_Код;
	ТекДок_БанковскийСчет_НомерСчета = Выписка.ТекДок_БанковскийСчет_НомерСчета;
	
	ДБФ.Добавить(); 
	
	ДБФ.VID = СокрлП(ТекДок_Вид);
	ДБФ.VIDOP = СокрлП(ТекДок_КодОперации);
	ДБФ.DOCacept = ТекДок_Проведен;
	ДБФ.DOCdelete = ТекДок_ПометкаУдаления;
	
	//тмпОб = СоздатьОбъект("ToyMetadata"); 
	ДБФ.IDDOC = ТекДок_IDDOC;//тмпОб.ЗначВSQL(ТекДок);
	
	ДБФ.NUMDOC = СокрЛП(ТекДок_НомерДок);
	ДБФ.DATEDOC = ТекДок_ДатаДок;
	
	Ч=0;
	М=0;
	С=0;
	
	//ТекДок.ПолучитьВремя(Ч,М,С);
	
	ДБФ.DATE1C = Час(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1M = Минута(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1S = Секунда(ТекДок_ДатаДок);	                                                        
	
	ДБФ.DATEPAY = ТекДок_ДатаДок;
	
	ДБФ.FIRM = СокрЛП(ТекДок_Фирма);
	ДБФ.FIRMINN = ТекДок_Фирма_ЮрЛицо_ИНН;//?(ПустоеЗначение(ТекДок.Фирма) = 1,"",СокрЛП(ТекДок.Фирма.ЮрЛицо.ИНН));
	
	ДБФ.NAMEK = СокрЛП(ТекДок_Контрагент);
	ДБФ.CODEK = СокрЛП(ТекДок_Контрагент_Код);
	ПолноеНаимен = ТекДок_Контрагент_ЮрФизЛицо;//?(ПустоеЗначение(ТекДок.Контрагент) = 1,"",СокрЛП(ТекДок.Контрагент.ЮрФизЛицо));
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = ТекДок_Договор_флОферта; 
	ДБФ.VMI = ТекДок_Договор_флVMI; 
	ДБФ.AnyDay = ТекДок_Договор_флОплата_ЛюбойДень;
	
	ДБФ.NumSch = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_НомерСчета); 
	ДБФ.Korr = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет);
	ДБФ.BankName = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк);
	ДБФ.BIK = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_Код);
	
	Если Найти(ТекДок_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ТекДок_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ТекДок_Контрагент_ИНН),Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ТекДок_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ТекДок_Контрагент_УИД);//паи160303
	ДБФ.SUMMDOC = ТекДок_Сумма;
	ДБФ.Valuta = ТекДок_Валюта_Код;		
	ДБФ.KOMMENT = СокрЛП(ТекДок_БанковскийСчет_НомерСчета);
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ВыбКонПериода);
	ДБФ.SUMKOR = ТекДок_Сумма;
	ДБФ.KOR = 0;
	
КонецПроцедуры
Процедура ВыгрузитьДокСтрокаБанковскойВыпискиПриход(ДБФ,Выписка,Параметры)
	
	ВыбНачПериода = Параметры.ВыбНачПериода;
	ВыбКонПериода = Параметры.ВыбКонПериода;
	ТекДок_Вид = "СтрокаВыпискиПриход";
	ТекДок_КодОперации = "Возврат от поставщика";
	
	ТекДок = Выписка.ТекДок;
	ТекДок_IDDOC = ?(ЗначениеЗаполнено(Выписка.ТекДок),Выписка.ТекДок.УникальныйИдентификатор(),"");
	
	ТекДок_Проведен = Выписка.ТекДок_Проведен;
	ТекДок_ПометкаУдаления = Выписка.ТекДок_ПометкаУдаления;
	ТекДок_НомерДок = Выписка.ТекДок_НомерДок;
	ТекДок_ДатаДок = Выписка.ТекДок_ДатаДок;
	ТекДок_Фирма = Выписка.ТекДок_Фирма;
	ТекДок_Фирма_ЮрЛицо_ИНН = Выписка.ТекДок_Фирма_ЮрЛицо_ИНН;
	ТекДок_Контрагент = Выписка.ТекДок_Контрагент;
	ТекДок_Контрагент_Наименование = Выписка.ТекДок_Контрагент_Наименование;
	ТекДок_Контрагент_Код = Выписка.ТекДок_Контрагент_Код;
	ТекДок_Контрагент_ЮрФизЛицо = Выписка.ТекДок_Контрагент_ЮрФизЛицо;
	ТекДок_Договор_флОферта = Выписка.ТекДок_Договор_флОферта;
	ТекДок_Договор_флVMI = Выписка.ТекДок_Договор_флVMI;
	ТекДок_Договор_флОплата_ЛюбойДень = Выписка.ТекДок_Договор_флОплата_ЛюбойДень;
	ТекДок_Контрагент_ОсновнойСчет_НомерСчета = Выписка.ТекДок_Контрагент_ОсновнойСчет_НомерСчета;
	ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет;
	ТекДок_Контрагент_ОсновнойСчет_Банк = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк;
	ТекДок_Контрагент_ОсновнойСчет_Банк_Код = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_Код;
	ТекДок_Контрагент_ИНН = Выписка.ТекДок_Контрагент_ИНН;
	ТекДок_Контрагент_УИД = ?(ЗначениеЗаполнено(ТекДок_Контрагент),Выписка.ТекДок_Контрагент.УникальныйИдентификатор(),"");
	ТекДок_Сумма = Выписка.ТекДок_Сумма;
	ТекДок_Валюта_Код = Выписка.ТекДок_Валюта_Код;
	ТекДок_БанковскийСчет_НомерСчета = Выписка.ТекДок_БанковскийСчет_НомерСчета;
	
	ДБФ.Добавить(); 
	
	ДБФ.VID = СокрлП(ТекДок_Вид);
	ДБФ.VIDOP = СокрлП(ТекДок_КодОперации);
	ДБФ.DOCacept = ТекДок_Проведен;
	ДБФ.DOCdelete = ТекДок_ПометкаУдаления;
	
	//тмпОб = СоздатьОбъект("ToyMetadata"); 
	ДБФ.IDDOC = ТекДок_IDDOC; //тмпОб.ЗначВSQL(ТекДок);
	
	ДБФ.NUMDOC = СокрЛП(ТекДок_НомерДок);
	ДБФ.DATEDOC = ТекДок_ДатаДок;
	
	Ч=0;
	М=0;
	С=0;
	
	//ТекДок.ПолучитьВремя(Ч,М,С);
	
	ДБФ.DATE1C = Час(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1M = Минута(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1S = Секунда(ТекДок_ДатаДок);	                                                        
	
	ДБФ.DATEPAY = ТекДок_ДатаДок;
	
	ДБФ.FIRM = СокрЛП(ТекДок_Фирма);
	ДБФ.FIRMINN = ТекДок_Фирма_ЮрЛицо_ИНН;
	
	ДБФ.NAMEK = СокрЛП(ТекДок_Контрагент);
	ДБФ.CODEK = СокрЛП(ТекДок_Контрагент_Код);
	ПолноеНаимен = ТекДок_Контрагент_ЮрФизЛицо;//?(ПустоеЗначение(ТекДок.Контрагент) = 1,"",СокрЛП(ТекДок.Контрагент.ЮрФизЛицо));
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = ТекДок_Договор_флОферта; 
	ДБФ.VMI = ТекДок_Договор_флVMI;  
	ДБФ.AnyDay = ТекДок_Договор_флОплата_ЛюбойДень;
	
	ДБФ.NumSch = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_НомерСчета); 
	ДБФ.Korr = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет);
	ДБФ.BankName = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк);
	ДБФ.BIK = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_Код);
	
	Если Найти(ТекДок_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ТекДок_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ТекДок_Контрагент_ИНН),Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ТекДок_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ТекДок_Контрагент_УИД);//паи160303
	ДБФ.SUMMDOC = ТекДок_Сумма;
	ДБФ.Valuta = ТекДок_Валюта_Код;		
	ДБФ.KOMMENT = СокрЛП(ТекДок_БанковскийСчет_НомерСчета);
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ВыбКонПериода);
	ДБФ.SUMKOR = ТекДок_Сумма;
	ДБФ.KOR = 0;
	
КонецПроцедуры
Процедура ВыгрузитьДокКорректировкаДолга(ДБФ,Выписка,Параметры)
	
	ВыбНачПериода = Параметры.ВыбНачПериода;
	ВыбКонПериода = Параметры.ВыбКонПериода;
	ТекДок_Вид = "КорректировкаДолга";      
	ТекДок_КодОперации = "Корректировка долга поставщика"; //ВидОперацииДок = Перечисление.ВидыОперацийКоррДолга.Поставщик;
	
	ТекДок = Выписка.ТекДок;
	ТекДок_IDDOC = ?(ЗначениеЗаполнено(Выписка.ТекДок),Выписка.ТекДок.УникальныйИдентификатор(),"");
	
	ТекДок_Проведен = Выписка.ТекДок_Проведен;
	ТекДок_ПометкаУдаления = Выписка.ТекДок_ПометкаУдаления;
	ТекДок_НомерДок = Выписка.ТекДок_НомерДок;
	ТекДок_ДатаДок = Выписка.ТекДок_ДатаДок;
	ТекДок_Фирма = Выписка.ТекДок_Фирма;
	ТекДок_Фирма_ЮрЛицо_ИНН = Выписка.ТекДок_Фирма_ЮрЛицо_ИНН;
	ТекДок_Контрагент = Выписка.ТекДок_Контрагент;
	ТекДок_Контрагент_Наименование = Выписка.ТекДок_Контрагент_Наименование;
	ТекДок_Контрагент_Код = Выписка.ТекДок_Контрагент_Код;
	ТекДок_Контрагент_ЮрФизЛицо = Выписка.ТекДок_Контрагент_ЮрФизЛицо;
	ТекДок_Договор_флОферта = Выписка.ТекДок_Договор_флОферта;
	ТекДок_Договор_флVMI = Выписка.ТекДок_Договор_флVMI;
	ТекДок_Договор_флОплата_ЛюбойДень = Выписка.ТекДок_Договор_флОплата_ЛюбойДень;
	ТекДок_Контрагент_ОсновнойСчет_НомерСчета = Выписка.ТекДок_Контрагент_ОсновнойСчет_НомерСчета;
	ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет;
	ТекДок_Контрагент_ОсновнойСчет_Банк = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк;
	ТекДок_Контрагент_ОсновнойСчет_Банк_Код = Выписка.ТекДок_Контрагент_ОсновнойСчет_Банк_Код;
	ТекДок_Контрагент_ИНН = Выписка.ТекДок_Контрагент_ИНН;
	ТекДок_Контрагент_УИД = ?(ЗначениеЗаполнено(ТекДок_Контрагент),Выписка.ТекДок_Контрагент.УникальныйИдентификатор(),"");
	ТекДок_Сумма = Выписка.ТекДок_Сумма;
	ТекДок_Валюта_Код = Выписка.ТекДок_Валюта_Код;
	ТекДок_БанковскийСчет_НомерСчета = Выписка.ТекДок_БанковскийСчет_НомерСчета;
	
	ТекДок_ДатаОплаты = ТекДок_ДатаДок;
	ТекДок_Комментарий = ТекДок_Комментарий;
	
	ДБФ.Добавить(); 
	
	ДБФ.VID = СокрлП(ТекДок_Вид);
	ДБФ.VIDOP = СокрлП(ТекДок.ВидОперации);
	ДБФ.DOCacept = ТекДок_Проведен;
	ДБФ.DOCdelete = ТекДок_ПометкаУдаления;
	
	//тмпОб = СоздатьОбъект("ToyMetadata"); 
	ДБФ.IDDOC = ТекДок_IDDOC;//тмпОб.ЗначВSQL(ТекДок);
	
	ДБФ.NUMDOC = СокрЛП(ТекДок_НомерДок);
	ДБФ.DATEDOC = ТекДок_ДатаДок;
	
	Ч=0;
	М=0;
	С=0;
	
	//ТекДок.ПолучитьВремя(Ч,М,С);
	
	ДБФ.DATE1C = Час(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1M = Минута(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1S = Секунда(ТекДок_ДатаДок);	                                                        
	
	ДБФ.DATEPAY = ТекДок_ДатаОплаты;
	
	ДБФ.FIRM = СокрЛП(ТекДок_Фирма);
	ДБФ.FIRMINN = ТекДок_Фирма_ЮрЛицо_ИНН;
	
	ДБФ.NAMEK = СокрЛП(ТекДок_Контрагент);
	ДБФ.CODEK = СокрЛП(ТекДок_Контрагент_Код);
	ПолноеНаимен = СокрЛП(ТекДок_Контрагент_ЮрФизЛицо);
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	ДБФ.Oferta = ТекДок_Договор_флОферта; 
	ДБФ.VMI = ТекДок_Договор_флVMI;
	ДБФ.AnyDay = ТекДок_Договор_флОплата_ЛюбойДень;
	
	ДБФ.NumSch = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_НомерСчета); 
	ДБФ.Korr = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет);
	ДБФ.BankName = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк);
	ДБФ.BIK = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_Код);
	
	Если Найти(ТекДок_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ТекДок_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ТекДок_Контрагент_ИНН),Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ТекДок_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ТекДок_Контрагент_УИД);//паи160303
	ДБФ.SUMMDOC = ТекДок_Сумма;
	ДБФ.Valuta = ТекДок_Валюта_Код;		
	ДБФ.KOMMENT = СокрЛП(ТекДок_Комментарий);
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ВыбКонПериода);
	ДБФ.SUMKOR = ТекДок_Сумма;
	ДБФ.KOR = 0;
	
КонецПроцедуры
Процедура ВыгрузитьДокВозвратПоставщику(ДБФ,ПТУ,Параметры)
	
	ТекДок = ПТУ.ТекДок;
	ТекДок_IDDOC = ?(ЗначениеЗаполнено(ПТУ.ТекДок),ПТУ.ТекДок.УникальныйИдентификатор(),"");
	
	ТекДок_Вид = "ВозвратПоставщику";
	ТекДок_КодОперации = "Возврат поставщику (купля-продажа)"; // ВозвратПоставщику;
	ВыбНачПериода = Параметры.ВыбНачПериода;
	ВыбКонПериода = Параметры.ВыбКонПериода;
	
	ТекДок_Проведен = ПТУ.ТекДок_Проведен;
	ТекДок_ПометкаУдаления = ПТУ.ТекДок_ПометкаУдаления;
	ТекДок_НомерДок = ПТУ.ТекДок_НомерДок;
	ТекДок_ДатаДок = ПТУ.ТекДок_ДатаДок;
	ТекДок_Фирма = ПТУ.ТекДок_Фирма;
	ТекДок_Фирма_ЮрЛицо_ИНН = ПТУ.ТекДок_Фирма_ЮрЛицо_ИНН;
	ТекДок_Контрагент = ПТУ.ТекДок_Контрагент;
	ТекДок_Контрагент_Наименование = ПТУ.ТекДок_Контрагент_Наименование;
	ТекДок_Контрагент_Код = ПТУ.ТекДок_Контрагент_Код;
	ТекДок_Контрагент_ЮрФизЛицо = ПТУ.ТекДок_Контрагент_ЮрФизЛицо; 
	ТекДок_Договор_флОферта = ПТУ.ТекДок_Договор_флОферта;
	ТекДок_Договор_флVMI = ПТУ.ТекДок_Договор_флVMI;
	ТекДок_Договор_флОплата_ЛюбойДень = ПТУ.ТекДок_Договор_флОплата_ЛюбойДень;
	ТекДок_Контрагент_ИНН = ПТУ.ТекДок_Контрагент_ИНН;
	ТекДок_Контрагент_УИД = ?(ЗначениеЗаполнено(ТекДок_Контрагент),ПТУ.ТекДок_Контрагент.УникальныйИдентификатор(),"");
	ТекДок_Контрагент_ОсновнойСчет_НомерСчета = ПТУ.ТекДок_Контрагент_ОсновнойСчет_НомерСчета;
	ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет;
	ТекДок_Контрагент_ОсновнойСчет_Банк = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк;
	ТекДок_Контрагент_ОсновнойСчет_Банк_Код = ПТУ.ТекДок_Контрагент_ОсновнойСчет_Банк_Код;
	ТекДок_СтавкаНДС = ПТУ.ТекДок_СтавкаНДС;
	ТекДок_Итог_Сумма= ПТУ.ТекДок_Итог_Сумма;
	ТекДок_Итог_СуммаНДС= ПТУ.ТекДок_Итог_СуммаНДС;
	ТекДок_Валюта_Код= ПТУ.ТекДок_Валюта_Код; 
	ТекДок_Контрагент_Работает_безНДС = ПТУ.ТекДок_Контрагент_Работает_безНДС;
	ТекДок_ДокОснование = ПТУ.ТекДок_ДокОснование;
	ТекДок_ДокОснование_НомерДок = ПТУ.ТекДок_ДокОснование_НомерДок;
	ТекДок_ДокОснование_ДатаДок = ПТУ.ТекДок_ДокОснование_ДатаДок;
	
	ДБФ.Добавить(); 
	
	ДБФ.VID = СокрлП(ТекДок_Вид);
	ДБФ.DOCacept = ТекДок_Проведен;
	ДБФ.DOCdelete = ТекДок_ПометкаУдаления;
	
	ДБФ.NUMDOC = СокрЛП(ТекДок_НомерДок);
	ДБФ.DATEDOC = ТекДок_ДатаДок;
	
	//тмпОб = СоздатьОбъект("ToyMetadata"); 
	ДБФ.IDDOC = ТекДок_IDDOC;//тмпОб.ЗначВSQL(ТекДок);
	
	Если ЗначениеЗаполнено(ТекДок_ДокОснование)=0 тогда
		ДБФ.NUMPOST = СокрЛП(ТекДок_ДокОснование_НомерДок);
		ДБФ.DATEPOST = ТекДок_ДокОснование_ДатаДок;
	Иначе  
		ДБФ.NUMPOST="";
		ДБФ.DATEPOST ="";   
	КонецЕсли;	
	Ч=0;
	М=0;
	С=0;
	
	//ТекДок.ПолучитьВремя(Ч,М,С);
	
	ДБФ.DATE1C = Час(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1M = Минута(ТекДок_ДатаДок);	                                                        
	ДБФ.DATE1S = Секунда(ТекДок_ДатаДок);	                                                        
	
	ДБФ.DATEPAY = ТекДок_ДатаДок;//ТекДок.ДатаОплаты;      

	ДБФ.FIRM = СокрЛП(ТекДок_Фирма);
	ДБФ.FIRMINN = ТекДок_Фирма_ЮрЛицо_ИНН;//?(ПустоеЗначение(ТекДок.Фирма) = 1,"",СокрЛП(ТекДок.Фирма.ЮрЛицо.ИНН));
	
	ДБФ.NAMEK = СокрЛП(ТекДок_Контрагент);
	ДБФ.CodeK = СокрЛП(ТекДок_Контрагент_Код);
	ДБФ.KONTRNAME = СокрЛП(ТекДок_Контрагент_Наименование);
	ДБФ.KONTRINN = СокрЛП(ТекДок_Контрагент_ИНН); 
	
	//паи160314+
	ПолноеНаимен = СокрЛП(ТекДок_Контрагент_ЮрФизЛицо);
	ПолноеНаимен = СтрЗаменить(ПолноеНаимен, "»", """");
	ДБФ.FULLNAME = СтрЗаменить(ПолноеНаимен, "«", """");
	Если Найти(ТекДок_Контрагент_ИНН, "/")>0 тогда
		Если СтрДлина(ТекДок_Контрагент_ИНН)<>13 тогда
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1);
			ДБФ.KPP = СтрЗаменить(СокрЛП(ТекДок_Контрагент_ИНН),Лев(СокрЛП(ТекДок_Контрагент_ИНН),Найти(СокрЛП(ТекДок_Контрагент_ИНН),"/")-1)+"/","");
			ДБФ.YURFIZ = 1;
		Иначе
			ДБФ.INN = Лев(СокрЛП(ТекДок_Контрагент_ИНН),12);
			ДБФ.YURFIZ = 0;
		КонецЕсли;				
	Иначе
		ДБФ.INN = СокрЛП(ТекДок_Контрагент_ИНН);
		ДБФ.YURFIZ = 0;
	КонецЕсли; 
	ДБФ.UIDK = СокрЛП(ТекДок_Контрагент_УИД);	
	//паи160314
	
	ДБФ.SUMMDOC = ТекДок_Итог_Сумма;
	ДБФ.SUMMNDS = ТекДок_Итог_СуммаНДС; 
	ДБФ.Valuta = ТекДок_Валюта_Код; 
	ДБФ.Oferta = ТекДок_Договор_флОферта;
	ДБФ.VMI = ТекДок_Договор_флVMI;  
	ДБФ.AnyDay = ТекДок_Договор_флОплата_ЛюбойДень; 

	//ПАИ170616+
	Если ТекДок_Контрагент_Работает_безНДС = 1 тогда
		ДБФ.SUMMNDS = 0;
		ДБФ.Stavka = "Без НДС";
	КонецЕсли;
	//ПАИ170616-	
	
	ДБФ.NumSch = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_НомерСчета); 
	ДБФ.Korr = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_КоррСчет);
	ДБФ.BankName = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк);
	ДБФ.BIK = СокрЛП(ТекДок_Контрагент_ОсновнойСчет_Банк_Код);
	
	ДБФ.DATEN = СокрЛП(ВыбНачПериода);  
	ДБФ.DATEK = СокрЛП(ВыбКонПериода);
	ДБФ.KOMMENT = СокрЛП(ТекДок_КодОперации)+ " к док. "+ТекДок_ДокОснование;
	ДБФ.SUMKOR = ТекДок_Итог_Сумма;
	ДБФ.KOR = 0;
	
КонецПроцедуры

Процедура ВыгрузитьТех(ДБФ,Т1,Параметры)
	
		ДБФ.Добавить(); 
		ДБФ.VID = Т1;
		ДБФ.DATEDOC = Параметры.ДатаОтчетаНач;      
		ДБФ.DATEPAY = Параметры.ДатаОплаты;
		ДБФ.Oferta = Параметры.флОферта; 
		ДБФ.VMI = Параметры.флVMI;  
		ДБФ.Записать();
	
КонецПроцедуры	   
Процедура СообщитьЛог(пар_Лог,Параметры)
	
    ТекстовыйДокумент = Новый ТекстовыйДокумент;
    кодировка = "UTF8";
	
	ПравилаИгры_ИмяЛогФайлаПолное = СтрЗаменить(Параметры.ПолноеИмяФайла,"DBF", "TXT");
	
    МассивФайлов = НайтиФайлы(ПравилаИгры_ИмяЛогФайлаПолное);        
	Если МассивФайлов.Количество() > 0 тогда        
		
		Попытка
	        ТекстовыйДокумент.Прочитать(ПравилаИгры_ИмяЛогФайлаПолное,кодировка);            
		Исключение
			Возврат;
		КонецПопытки;
		
		Попытка
			УдалитьФайлы(ПравилаИгры_ИмяЛогФайлаПолное);
		Исключение
			Возврат;
		КонецПопытки;
		
    КонецЕсли;

    строкаВЛог = Символы.ПС + ТекущаяДата() + "	" + пар_Лог; 
	
	Попытка
    	ТекстовыйДокумент.ДобавитьСтроку(строкаВЛог);
    	ТекстовыйДокумент.Записать(ПравилаИгры_ИмяЛогФайлаПолное,кодировка);
	Исключение
	КонецПопытки;

	
КонецПроцедуры

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	
	Параметры = Новый Структура();
	Параметры.Вставить("ВыбНачПериода",р_ВыбНачПериода);
	Параметры.Вставить("ВыбКонПериода",р_ВыбКонПериода);
	Параметры.Вставить("ИмяФайлаВыгрузки",р_ИмяФайлаВыгрузки);
	Параметры.Вставить("флОферта",р_флОферта);
	Параметры.Вставить("флVMI",р_флVMI);
	Параметры.Вставить("ДатаОплаты",р_ДатаОплаты);
	
	Параметры.Вставить("ВыбФирма",Новый СписокЗначений);
	Параметры.Вставить("СписокКонтрагентов",Новый СписокЗначений);
	Параметры.Вставить("ВыборДействия","Выгружать");
	
	Параметры.Вставить("Флажок1",р_Флажок1);
	Параметры.Вставить("Флажок2",р_Флажок2);
	Параметры.Вставить("Флажок3",р_Флажок3);
	Параметры.Вставить("Флажок4",р_Флажок4);
	Параметры.Вставить("Флажок5",р_Флажок5);
	Параметры.Вставить("Флажок6",р_Флажок6);
	
	Выгрузить(Параметры);
	
КонецПроцедуры
