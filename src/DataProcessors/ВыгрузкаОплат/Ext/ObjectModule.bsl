
Процедура ВыполнитьВыгрузкуДанных(ДатаНачалаВыгрузки = Неопределено,ДатаКонцаВыгрузки = Неопределено) экспорт
	Если ДатаНачалаВыгрузки = неопределено тогда 
		ДатаНачалаВыгрузки = Началодня(ТекущаяДата()) - 60*60*24*5;
	КонецЕсли;
	Если ДатаКонцаВыгрузки = неопределено тогда 
		ДатаКонцаВыгрузки = ТекущаяДата();
	КонецЕсли;
		
	МассивФайлов = новый Массив;
	МассивФайлов.Добавить("user_doc_bank");
	МассивФайлов.Добавить("user_doc_kassa");
	МассивФайлов.Добавить("user_opt_plat");
	
	для каждого Элемент из МассивФайлов цикл 
	ТабДокумент = ПолучитьТабличныйДокумент(Элемент,КомпоновщикНастроекВыгрузки(Элемент,ДатаНачалаВыгрузки,ДатаКонцаВыгрузки));
	Имяфайла =КаталогВыгрузки+"\"+Элемент+".txt";
	ВремФайл = 	ПолучитьИмяВременногоФайла();
	ТабДокумент.записать(ВремФайл,ТипФайлаТабличногоДокумента.TXT);
	//не думал что ксв он не переваривает , пришлось парсить 
	 СпарситьФайл(ВремФайл,Имяфайла)
	
КонецЦикла;



КонецПроцедуры	

Процедура СпарситьФайл(ВремФайл,ИмяФайла)
	
  Текст = Новый ЧтениеТекста(ВремФайл, КодировкаТекста.UTF8); 
  Строка = Текст.ПрочитатьСтроку();
      СтрокаГотовая = "" ;
   Пока Строка <> Неопределено   Цикл 
	   Если  ПустаяСтрока(Строка) тогда 
		   прервать;
	   КонецЕсли;
	   Строка = Текст.ПрочитатьСтроку();
	   СтрокаГотовая  = СтрокаГотовая + СтрЗаменить(Строка,"	",";") +Символы.ПС;
		
	КонецЦикла; 	
	Текст.Закрыть();
	
	 РазпарсФайл = новый ТекстовыйДокумент;
	   РазпарсФайл.УстановитьТекст(СтрокаГотовая);
	РазпарсФайл.Записать(ИмяФайла,"windows-1251");
КонецПроцедуры	


Функция ПолучитьТабличныйДокумент(ИмяСхемы,КомпоновщикНастроек)
	
	СхемаВыгрузки = ПолучитьМакет(ИмяСхемы);
	
	ТабДокумент = Новый ТабличныйДокумент;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Попытка
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаВыгрузки, КомпоновщикНастроек.ПолучитьНастройки());
	Исключение
		Возврат ТабДокумент;
	КонецПопытки;
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновкиДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДокумент);
	ПроцессорВывода.НачатьВывод();
	
	Пока Истина Цикл
        ЭлементРезультата = ПроцессорКомпоновки.Следующий();
        Если ЭлементРезультата= Неопределено Тогда
            Прервать;
        Иначе
            ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
        КонецЕсли;
    КонецЦикла;

	ПроцессорВывода.ЗакончитьВывод();
	
	Возврат ТабДокумент;

	
КонецФункции	



Функция КомпоновщикНастроекВыгрузки(ИмяСхемы,ДатаНачала,ДатаКонца)
	
	СхемаВыгрузки = ПолучитьМакет(ИмяСхемы);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаВыгрузки));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаВыгрузки.НастройкиПоУмолчанию);
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	ПараметрСКД.Значение =  ДатаНачала;
	ПараметрСКД.Использование = Истина;
	
	ПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКонца");
	ПараметрСКД.Значение =  ДатаКонца;
	ПараметрСКД.Использование = Истина;
	
	Возврат КомпоновщикНастроек;
КонецФункции

Процедура ВыполнитьРегламентноеЗадание() Экспорт
	Если ОбщегоНазначения.ЭтоРабочаяИнформационнаяБаза() тогда
		ВыполнитьВыгрузкуДанных();
	КонецЕсли;
КонецПроцедуры



Функция ПолучитьТекстЗапроса(ИмяФайла)
	
	Если ИмяФайла =  "user_doc_bank" тогда 
		
		
	КонецЕсли;	
	
	
	
КонецФункции	