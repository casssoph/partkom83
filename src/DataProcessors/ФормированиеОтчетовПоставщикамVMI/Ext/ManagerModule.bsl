Функция ПолучитьСписокПрайсовПоставщиковНаДатуОтчета(вхДата, вхПоставщик = Неопределено, ЛогОшибок) Экспорт
	лТабПрайсов = Новый ТаблицаЗначений;
	лТабПрайсов.Колонки.Добавить("Поставщик");
	лТабПрайсов.Колонки.Добавить("Организация");
	лТабПрайсов.Колонки.Добавить("Договор");
	лТабПрайсов.Колонки.Добавить("Склад");
	лТабПрайсов.Колонки.Добавить("ПрайсПоставщика");
	лТабПрайсов.Колонки.Добавить("ДатаНач");
	лТабПрайсов.Колонки.Добавить("ДатаКон");
	лТабПрайсов.Колонки.Добавить("Разделять");
	лТабПрайсов.Колонки.Добавить("КонецМесяцаОтдельно");
	лТабПрайсов.Колонки.Добавить("СкидкаСумма");
	лТабПрайсов.Колонки.Добавить("СкидкаПроцент");
	лТабПрайсов.Колонки.Добавить("ДатаПоследнегоОтчета");
	лТабПрайсов.Колонки.Добавить("Информация");
	лТабПрайсов.Колонки.Добавить("ДелитьОтчетVMI");

	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика,
	|	Р.Периодичность
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|	{УсловиеКонтрагент}"
	);
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
		Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЛогОшибок = ЛогОшибок + ?(ПустаяСтрока(ЛогОшибок), "", Символы.ПС) 
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности '" + Строка(Выборка.Периодичность) + "'";
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.Частота > 2
	|	{УсловиеКонтрагент}";
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
		Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЛогОшибок = ЛогОшибок + ?(ПустаяСтрока(ЛогОшибок), "", Символы.ПС)
		+ "не сформирован отчет по прайсу " + Строка(Выборка.ПрайсПоставщика) 
		+ " - не описан программный код для периодичности Неделя с частотой больше, чем раз в две недели";
		
	КонецЦикла;
	
	//основной отбор по дню недели 
	//Запрос.УстановитьПараметр("ЭтотДеньНедели", ДеньНедели(вхДата)); //через функцию в запросе
	Запрос.УстановитьПараметр("ДатаОтчета", вхДата);
	
	//предполагается, что отчет делается за прошлую неделю, для недельных расписаний
	ДатаКонКаждаяНеделя = НачалоНедели(вхДата) - 1;
	ДатаНачКаждаяНеделя = НачалоНедели(ДатаКонКаждаяНеделя);
	
	//предполагается, что отчет делается за прошлых две недели, для расписаний по четным, нечетным неделям
	ДатаКонНеделяЧетНечет = НачалоНедели(вхДата) - 1;
	ДатаНачНеделяЧетНечет = НачалоНедели(ДатаКонНеделяЧетНечет - 604800);//7*24*60*60 сек
	
	Запрос.УстановитьПараметр("ДатаНачКаждаяНеделя", ДатаНачКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаКонКаждаяНеделя", ДатаКонКаждаяНеделя);
	Запрос.УстановитьПараметр("ДатаНачНеделяЧетНечет", ДатаНачНеделяЧетНечет);
	Запрос.УстановитьПараметр("ДатаКонНеделяЧетНечет", ДатаКонНеделяЧетНечет);
	
	//определим четная это неделя или нет
	//для каждой недели ЧетНечет = 1
	ЧетнаяНеделя = ?(НеделяГода(вхДата)/2 - Цел(НеделяГода(вхДата)/2) = 0, Истина, Ложь);
	
	Если ЧетнаяНеделя Тогда
		Запрос.УстановитьПараметр("ЧетНечет", 2);
	Иначе
		Запрос.УстановитьПараметр("ЧетНечет", 3);
	КонецЕсли;
	
	//установим параметры для получения расписания месячных отчетов
	ДатаКонцаМесяца = НачалоМесяца(вхДата) - 1;
	ДатаНачалаМесяца = НачалоМесяца(ДатаКонцаМесяца);
	Запрос.УстановитьПараметр("ДатаНачалаМесяца", ДатаНачалаМесяца);
	Запрос.УстановитьПараметр("ДатаКонцаМесяца", ДатаКонцаМесяца);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец КАК Поставщик,
	|	Р.Организация КАК Организация,
	|	Д.Ссылка КАК Договор,
	|	Р.Склад КАК Склад,
	|	Р.ПрайсПоставщика КАК ПрайсПоставщика,
	|	&ДатаНачКаждаяНеделя КАК ДатаНач,
	|	&ДатаКонКаждаяНеделя КАК ДатаКон,
	|	Р.Разделять,
	|	Р.КонецМесяцаОтдельно,
	|	Р.СкидкаСумма,
	//# Kalinin V.A. ( 2018-06-25 )
	|	Р.ДелитьОтчетVMI,
	//
	|	Р.Информация,
	|	Р.ДатаОкончанияПериодаПоследнегоОтчета КАК ДатаПоследнегоОтчета,
	|	ВЫБОР 
	|		КОГДА Р.СкидкаПроцент > 0 ТОГДА Р.СкидкаПроцент
	|		ИНАЧЕ Р.ПрайсПоставщика.Владелец.ПроцентОтклоненияЦенПрихода
	|	КОНЕЦ КАК СкидкаПроцент
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.Частота = 1
	|	И Р.ЧетНечет = 1
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя
	|	И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.ПометкаУдаления
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец,
	|	Р.Организация,
	|	Д.Ссылка,
	|	Р.Склад,
	|	Р.ПрайсПоставщика,
	|	&ДатаНачНеделяЧетНечет,
	|	&ДатаКонНеделяЧетНечет,
	|	Р.Разделять,
	|	Р.КонецМесяцаОтдельно,
	|	Р.СкидкаСумма,
	//# Kalinin V.A. ( 2018-06-25 )
	|	Р.ДелитьОтчетVMI,
	//
	|	Р.Информация,
	|	Р.ДатаОкончанияПериодаПоследнегоОтчета,
	|	ВЫБОР 
	|		КОГДА Р.СкидкаПроцент > 0 ТОГДА Р.СкидкаПроцент
	|		ИНАчЕ Р.ПрайсПоставщика.Владелец.ПроцентОтклоненияЦенПрихода
	|	КОНЕЦ КАК СкидкаПроцент
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|	И Р.Частота = 2
	|	И Р.ЧетНечет = &ЧетНечет
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет
	|	И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.ПометкаУдаления
	|	{УсловиеКонтрагент}
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Р.ПрайсПоставщика.Владелец,
	|	Р.Организация,
	|	Д.Ссылка,
	|	Р.Склад,
	|	Р.ПрайсПоставщика,
	|	&ДатаНачалаМесяца,
	|	&ДатаКонцаМесяца,
	|	Р.Разделять,
	|	Р.КонецМесяцаОтдельно,
	|	Р.СкидкаСумма,
	//# Kalinin V.A. ( 2018-06-25 )
	|	Р.ДелитьОтчетVMI,
	//
	|	Р.Информация,
	|	Р.ДатаОкончанияПериодаПоследнегоОтчета,
	|	ВЫБОР 
	|		КОГДА Р.СкидкаПроцент > 0 ТОГДА Р.СкидкаПроцент
	|		ИНАчЕ Р.ПрайсПоставщика.Владелец.ПроцентОтклоненияЦенПрихода
	|	КОНЕЦ КАК СкидкаПроцент
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
	|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
	|			И Р.Организация = Д.Организация
	|ГДЕ
	|	Р.Используется
	|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|	И Р.Частота = 1
	|	И Р.НачальнаяДата <= &ДатаОтчета
	|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонцаМесяца
	|	И Р.ЧислоМесяца = ДЕНЬ(&ДатаОтчета)
	|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|	И НЕ Д.ПометкаУдаления
	|	{УсловиеКонтрагент}
	|
	|{ВставитьНастройкиЧислоМесяцаРавноНоль}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поставщик,
	|	ПрайсПоставщика,
	|	Склад";
		
	//в базе есть куча настроек для месяца, где число месяца не указано
	//для них будем делать отчет каждого третьего числа
	Если День(вхДата) = 3 Тогда
		ПодзапросЗамены = "
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Р.ПрайсПоставщика.Владелец,
		|	Р.Организация,
		|	Д.Ссылка,
		|	Р.Склад,
		|	Р.ПрайсПоставщика,
		|	&ДатаНачалаМесяца,
		|	&ДатаКонцаМесяца,
		|	Р.Разделять,
		|	Р.КонецМесяцаОтдельно,
		//# Kalinin V.A. ( 2018-06-25 )
		|	Р.ДелитьОтчетVMI,
		//
		|	Р.Информация,
		|	Р.СкидкаСумма,
		|	Р.ДатаОкончанияПериодаПоследнегоОтчета,
		|	ВЫБОР 
		|		КОГДА Р.СкидкаПроцент > 0 ТОГДА Р.СкидкаПроцент
		|		ИНАЧЕ Р.ПрайсПоставщика.Владелец.ПроцентОтклоненияЦенПрихода
		|	КОНЕЦ КАК СкидкаПроцент
		|ИЗ
		|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК Р
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Д
		|		ПО Р.ПрайсПоставщика.Владелец = Д.Владелец
		|			И Р.Организация = Д.Организация
		|ГДЕ
		|	Р.Используется
		|	И Р.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|	И Р.Частота = 1 
		|	И Р.НачальнаяДата <= &ДатаОтчета
		|	И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонцаМесяца
		|	И Р.ЧислоМесяца = 0
		|	И Д.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
		|	И НЕ Д.ПометкаУдаления
		|	{УсловиеКонтрагент}";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ВставитьНастройкиЧислоМесяцаРавноНоль}", ПодзапросЗамены);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ВставитьНастройкиЧислоМесяцаРавноНоль}", "");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(вхПоставщик) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", " И Р.ПрайсПоставщика.Владелец = &Поставщик ");
		//чтобы делалось по всем прайсам поставщикам, несмотря на настройки
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДеньНедели = ДЕНЬНЕДЕЛИ(&ДатаОтчета)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ЧислоМесяца = ДЕНЬ(&ДатаОтчета)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ЧетНечет = &ЧетНечет","");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонКаждаяНеделя","");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р.ДатаОкончанияПериодаПоследнегоОтчета < &ДатаКонНеделяЧетНечет","");
		//--
		Запрос.УстановитьПараметр("Поставщик", вхПоставщик);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{УсловиеКонтрагент}", "");
		
	КонецЕсли;
		
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ЛогОшибок = ЛогОшибок + "не нашлось прайсов для формирования отчета на " + Формат(вхДата, "ДЛФ=DD");
	Иначе
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Результат.Выгрузить(), лТабПрайсов);
	КонецЕсли;
	
	Возврат лТабПрайсов;
	
КонецФункции

Функция ПолучитьСписокПрайсовПоставщиковНаДатуОтчета_бу(вхДата) Экспорт
	ТабПрайсов = Новый ТаблицаЗначений;
	ТабПрайсов.Колонки.Добавить("Поставщик");
	ТабПрайсов.Колонки.Добавить("Договор");
	ТабПрайсов.Колонки.Добавить("ПрайсПоставщика");
	ТабПрайсов.Колонки.Добавить("ДатаНач");//начальная дата периода отчета
	ТабПрайсов.Колонки.Добавить("ДатаКон");
	ТабПрайсов.Колонки.Добавить("Разделять");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сегодня", вхДата);
	Запрос.УстановитьПараметр("ОтветХранение", Перечисления.ВидыДоговоровКонтрагентов.ОтветХранение);
	
	//день
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец КАК Поставщик,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	РасписанияОтчетовПоставщикамVMI.Склад,
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Сегодня, ДЕНЬ, -РасписанияОтчетовПоставщикамVMI.Частота), ДЕНЬ) КАК ДатаНач,
	|	КОНЕЦПЕРИОДА(&Сегодня, ДЕНЬ) КАК ДатаКон,
	|	РасписанияОтчетовПоставщикамVMI.Разделять,
	|	РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК РазницаДат,
	|	ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК ЧИСЛО(15, 0)) КАК РазницаДатЦелое
	|ПОМЕСТИТЬ втРасписание
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК РасписанияОтчетовПоставщикамVMI
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец = ДоговорыКонтрагентов.Владелец
	|			И РасписанияОтчетовПоставщикамVMI.Организация = ДоговорыКонтрагентов.Организация
	|ГДЕ
	|	РасписанияОтчетовПоставщикамVMI.Периодичность = &Периодичность
	|	И РасписанияОтчетовПоставщикамVMI.НачальнаяДата <= &Сегодня
	|	И ДоговорыКонтрагентов.ВидДоговора = &ОтветХранение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписание.Поставщик,
	|	втРасписание.Договор,
	|	втРасписание.ПрайсПоставщика,
	|	втРасписание.ДатаНач,
	|	втРасписание.ДатаКон,
	|	втРасписание.Разделять
	|ИЗ
	|	втРасписание КАК втРасписание
	|ГДЕ
	|	втРасписание.РазницаДат - втРасписание.РазницаДатЦелое = 0";
	
	
	Запрос.УстановитьПараметр("Периодичность", Перечисления.Периодичность.День);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТабПрайсов);
	
	//неделя
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец КАК Поставщик,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	РасписанияОтчетовПоставщикамVMI.Склад,
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Сегодня, НЕДЕЛЯ, -РасписанияОтчетовПоставщикамVMI.Частота), НЕДЕЛЯ) КАК ДатаНач,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Сегодня, НЕДЕЛЯ, -1), НЕДЕЛЯ) КАК ДатаКон,
	|	РасписанияОтчетовПоставщикамVMI.Разделять,
	|	РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК РазницаДат,
	|	ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК ЧИСЛО(15, 0)) КАК РазницаДатЦелое
	|ПОМЕСТИТЬ втРасписание
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК РасписанияОтчетовПоставщикамVMI
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец = ДоговорыКонтрагентов.Владелец
	|			И РасписанияОтчетовПоставщикамVMI.Организация = ДоговорыКонтрагентов.Организация
	|ГДЕ
	|	РасписанияОтчетовПоставщикамVMI.Периодичность = &Периодичность
	|	И РасписанияОтчетовПоставщикамVMI.НачальнаяДата <= &Сегодня
	|	И ДоговорыКонтрагентов.ВидДоговора = &ОтветХранение
	|	И ДЕНЬНЕДЕЛИ(РасписанияОтчетовПоставщикамVMI.НачальнаяДата) = ДЕНЬНЕДЕЛИ(&Сегодня)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписание.Поставщик,
	|	втРасписание.Договор,
	|	втРасписание.ПрайсПоставщика,
	|	втРасписание.ДатаНач,
	|	втРасписание.ДатаКон,
	|	втРасписание.Разделять
	|ИЗ
	|	втРасписание КАК втРасписание
	|ГДЕ
	|	втРасписание.РазницаДат - втРасписание.РазницаДатЦелое = 0";
	
	
	Запрос.УстановитьПараметр("Периодичность", Перечисления.Периодичность.Неделя);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТабПрайсов);
	
	//месяц
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец КАК Поставщик,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	РасписанияОтчетовПоставщикамVMI.Склад,
	|	РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Сегодня, МЕСЯЦ, -РасписанияОтчетовПоставщикамVMI.Частота), МЕСЯЦ) КАК ДатаНач,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Сегодня, МЕСЯЦ, -1), МЕСЯЦ) КАК ДатаКон,
	|	РасписанияОтчетовПоставщикамVMI.Разделять,
	|	РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК РазницаДат,
	|	ВЫРАЗИТЬ(РАЗНОСТЬДАТ(&Сегодня, РасписанияОтчетовПоставщикамVMI.НачальнаяДата, ДЕНЬ) / РасписанияОтчетовПоставщикамVMI.Частота КАК ЧИСЛО(15, 0)) КАК РазницаДатЦелое
	|ПОМЕСТИТЬ втРасписание
	|ИЗ
	|	РегистрСведений.РасписанияОтчетовПоставщикамVMI КАК РасписанияОтчетовПоставщикамVMI
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО РасписанияОтчетовПоставщикамVMI.ПрайсПоставщика.Владелец = ДоговорыКонтрагентов.Владелец
	|			И РасписанияОтчетовПоставщикамVMI.Организация = ДоговорыКонтрагентов.Организация
	|ГДЕ
	|	РасписанияОтчетовПоставщикамVMI.Периодичность = &Периодичность
	|	И РасписанияОтчетовПоставщикамVMI.НачальнаяДата <= &Сегодня
	|	И ДоговорыКонтрагентов.ВидДоговора = &ОтветХранение
	|	И ДЕНЬ(РасписанияОтчетовПоставщикамVMI.НачальнаяДата) = ДЕНЬ(&Сегодня)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРасписание.Поставщик,
	|	втРасписание.Договор,
	|	втРасписание.ПрайсПоставщика,
	|	втРасписание.ДатаНач,
	|	втРасписание.ДатаКон,
	|	втРасписание.Разделять
	|ИЗ
	|	втРасписание КАК втРасписание
	|ГДЕ
	|	втРасписание.РазницаДат - втРасписание.РазницаДатЦелое = 0";
	
	
	Запрос.УстановитьПараметр("Периодичность", Перечисления.Периодичность.Месяц);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить(), ТабПрайсов);
	
	Возврат ТабПрайсов;
	
КонецФункции

Функция ЗаполнитьОстаткамиПоРегиструПартий_СдатойПродажи(ПрайсПоставщика, Договор, Склад, ДатаНач = Неопределено, ДатаКон, ЛогОшибок, СкидкаСумма = 0, СкидкаПроцент = 0) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.СтрокаПрихода
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.Остатки(
	|			&ДатаКон,
	|			ДоговорКонтрагента.Владелец = &Поставщик
	|				И ДоговорКонтрагента = &Договор
	|				И Склад = &Склад) КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Р.Период КАК ДатаПродажи,
	|	&ПрайсПоставщика,
	|	Р.ДоговорКонтрагента КАК Договор,
	|	Р.Склад,
	|	Р.СтрокаПрихода КАК СтрокаПрихода,
	|	Р.Номенклатура.Артикул КАК Артикул,
	|	Р.Номенклатура.Изготовитель КАК Изготовитель,
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	Р.КоличествоПриход КАК Количество,
	|	Р.СуммаРублиПриход КАК Сумма,
	|	Р.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Р.СтрокаПрихода.Приход ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Р.СтрокаПрихода.Приход КАК Документ.ПоступлениеТоваровУслуг).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаПоступления,	
	|	&СкидкаСумма КАК СкидкаСумма,
	|	&СкидкаПроцент КАК СкидкаПроцент
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.ОстаткиИОбороты(
	|			{ДатаНач},
	|			&ДатаКон,
	|			Регистратор,
	|			,
	|			СтрокаПрихода В
	|				(ВЫБРАТЬ
	|					Остатки.СтрокаПрихода
	|				ИЗ
	|					Остатки КАК Остатки) И Склад = &Склад) КАК Р
	|ГДЕ
	|	Р.КоличествоПриход > 0";
	
	Если ЗначениеЗаполнено(ДатаНач) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ДатаНач}", "&ДатаНач" );
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ДатаНач}", "" );
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Поставщик", ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПрайсПоставщика, "Владелец"));
	Запрос.УстановитьПараметр("ПрайсПоставщика", ПрайсПоставщика);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("СкидкаСумма", СкидкаСумма);
	Запрос.УстановитьПараметр("СкидкаПроцент", СкидкаПроцент);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 0 Тогда
		ЛогОшибок = ЛогОшибок + ?(ПустаяСтрока(ЛогОшибок), "", Символы.ПС)
		+ "нет остатков в регистре Партий, отчеты МХ-3 по прайсу: " + Строка(ПрайсПоставщика) + " по складу: " + Склад + " не будут сформированы";
		
	КонецЕсли;
	
	//пересчет НДС в модуле объекта
	//Для Каждого Товар Из Результат Цикл
	//	Товар.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Товар.Сумма, Истина, Истина, Товар.СтавкаНДС);
	//	
	//КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаполнитьОстаткамиПоРегиструПартий_кривая(ПрайсПоставщика, Договор, Склад, ДатаНач = Неопределено, ДатаКон, ЛогОшибок, СкидкаСумма = 0, СкидкаПроцент = 0) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.СтрокаПрихода
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.Остатки(
	|			&ДатаКон,
	|			ДоговорКонтрагента.Владелец = &Поставщик
	|				И ДоговорКонтрагента = &Договор
	|				И Склад = &Склад) КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Р.Период КАК ДатаПродажи,
	|	&ПрайсПоставщика,
	|	Р.ДоговорКонтрагента КАК Договор,
	|	Р.Склад,
	|	Р.СтрокаПрихода КАК СтрокаПрихода,
	|	Р.Номенклатура.Артикул КАК Артикул,
	|	Р.Номенклатура.Изготовитель КАК Изготовитель,
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	Р.КоличествоПриход - Р.КоличествоРасход КАК Количество,
	|	Р.СуммаРублиПриход - Р.СуммаРублиРасход КАК Сумма,
	|	Р.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Р.СтрокаПрихода.Приход ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(Р.СтрокаПрихода.Приход КАК Документ.ПоступлениеТоваровУслуг).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаПоступления,	
	|	&СкидкаСумма КАК СкидкаСумма,
	|	&СкидкаПроцент КАК СкидкаПроцент
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.ОстаткиИОбороты(
	//|			{ДатаНач}
	|,
	|			&ДатаКон,
	|			Регистратор,
	|			,
	|			СтрокаПрихода В
	|				(ВЫБРАТЬ
	|					Остатки.СтрокаПрихода
	|				ИЗ
	|					Остатки КАК Остатки)) КАК Р
	|ГДЕ
	|	Р.КоличествоПриход - Р.КоличествоРасход > 0";
	
	Если ЗначениеЗаполнено(ДатаНач) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ДатаНач}", "&ДатаНач" );
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "{ДатаНач}", "" );
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Поставщик", ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПрайсПоставщика, "Владелец"));
	Запрос.УстановитьПараметр("ПрайсПоставщика", ПрайсПоставщика);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("СкидкаСумма", СкидкаСумма);
	Запрос.УстановитьПараметр("СкидкаПроцент", СкидкаПроцент);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 0 Тогда
		ЛогОшибок = ЛогОшибок + ?(ПустаяСтрока(ЛогОшибок), "", Символы.ПС)
		+ "нет остатков в регистре Партий, отчеты МХ-3 по прайсу: " + Строка(ПрайсПоставщика) + " по складу: " + Склад + " не будут сформированы";
		
	КонецЕсли;
	
	//пересчет НДС в модуле объекта
	//Для Каждого Товар Из Результат Цикл
	//	Товар.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Товар.Сумма, Истина, Истина, Товар.СтавкаНДС);
	//	
	//КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаполнитьОстаткамиПоРегиструПартий(ПрайсПоставщика, ДатаКон, Договор, Склад) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.Период КАК ДатаПродажи,
	|	&ПрайсПоставщика,
	|	Р.Склад,
	|	Р.СтрокаПрихода КАК СтрокаПрихода,
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	СУММА(Р.КоличествоПриход) КАК Количество,
	|	СУММА(Р.СуммаРублиПриход) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.ОстаткиИОбороты(
	|			,
	|			&ДатаКон,
	|			Регистратор,
	|			,
	|			ДоговорКонтрагента.Владелец = &Поставщик
	|				И ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)
	|				И ДоговорКонтрагента = &Договор
	|				И Склад = &Склад) КАК Р
	|ГДЕ
	|	Р.КоличествоКонечныйОстаток > 0
	|	И Р.КоличествоПриход > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Р.Период,
	|	Р.Склад,
	|	Р.СтрокаПрихода,
	|	Р.Номенклатура,
	|	Р.Номенклатура.СтавкаНДС,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент";
	
//	|				И СостояниеПартии = &СостояниеПартии) КАК ПартииТоваровVMIОстатки";
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Поставщик", ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПрайсПоставщика, "Владелец"));
	Запрос.УстановитьПараметр("ПрайсПоставщика", ПрайсПоставщика);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Склад", Склад);
	//Запрос.УстановитьПараметр("СостояниеПартии", Перечисления.СостоянияПартииТовараVMI.Реализован);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗаполнитьОстаткамиПоРегиструПартий_бу(ПрайсПоставщика, ДатаКон) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Р.Период КАК ДатаПродажи,
	|	&ПрайсПоставщика,
	|	Р.Склад,
	|	Р.СтрокаПрихода КАК СтрокаПрихода,
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	СУММА(Р.КоличествоПриход) КАК Количество,
	|	СУММА(Р.СуммаРублиПриход) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПартииТоваровVMI.ОстаткиИОбороты(
	|			,
	|			&ДатаКон,
	|			Регистратор,
	|			,
	|			ДоговорКонтрагента.Владелец = &Поставщик
	|				И ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ОтветХранение)) КАК Р
	|ГДЕ
	|	Р.КоличествоКонечныйОстаток > 0
	|	И Р.КоличествоПриход > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Р.Период,
	|	Р.Склад,
	|	Р.СтрокаПрихода,
	|	Р.Номенклатура,
	|	Р.Номенклатура.СтавкаНДС,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков,
	|	Р.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент";
	
//	|				И СостояниеПартии = &СостояниеПартии) КАК ПартииТоваровVMIОстатки";
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("Поставщик", ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПрайсПоставщика, "Владелец"));
	Запрос.УстановитьПараметр("ПрайсПоставщика", ПрайсПоставщика);
	//Запрос.УстановитьПараметр("СостояниеПартии", Перечисления.СостоянияПартииТовараVMI.Реализован);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

	